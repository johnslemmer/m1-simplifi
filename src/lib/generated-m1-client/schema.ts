// @ts-nocheck
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

export type Scalars = {
    ID: string,
    String: string,
    Boolean: boolean,
    Float: number,
    Int: number,
    BankAccountNumber: any,
    BankRoutingNumber: any,
    SocialSecurityNumber: any,
    FirstName: any,
    MiddleInitial: any,
    LastName: any,
    MailingAddressLineOne: any,
    MailingAddressLineTwo: any,
    MailingAddressCity: any,
    PostalCode: any,
    EmploymentDescription: any,
    DisclosureDescription: any,
    CompanySymbol: any,
    PhoneNumber: any,
    PromotionCampaignKey: any,
}

export interface Mutation {
    /** Updates the account-level dividend settings */
    accountConfigurationDividends: SetAccountConfigurationDividendSettingsPayload
    /** Updates an account's symbol-level dividend settings */
    accountConfigurationDividendsForHoldings: SetAccountConfigurationDividendSettingsForHoldingsPayload
    /** Cancels an existing ACH relationship. */
    cancelAchRelationship: (CancelAchRelationshipPayload | null)
    /** Confirms a pending ACH relationship that was created via deposits. */
    confirmAchRelationshipViaDeposits: (ConfirmAchRelationshipViaDepositsPayload | null)
    /** Creates a new ACH relationship via deposit confirmation. */
    createAchRelationshipViaDeposits: (CreateAchRelationshipViaDepositsPayload | null)
    /** Creates a new ACH relationship via a linked external account. */
    createAchRelationshipViaLink: (CreateAchRelationshipViaLinkPayload | null)
    /** Submits a Credit Card application for a user. */
    submitCreditCardApplication: SubmitCreditCardApplicationPayload
    /** Accepts an approved credit card application offer for a user. Will fail if `CreditCard.activeOffer == null`. */
    acceptCreditCardOffer: AcceptCreditCardOfferPayload
    /** Attempt to progress an application after the user's credit is unfrozen. */
    continueCreditCardApplicationAfterUserCreditIsUnfrozen: ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload
    /** Activates a physcial credit card. Accepts the last 4 digits of a credit card which will be validated against the outstanding card. */
    activateCreditCard: ActivateCreditCardPayload
    /** Set the lock state on a Credit Card. */
    setLockOnCreditCard: SetLockOnCreditCardPayload
    /**
     * @deprecated Waitlist no longer used
     * Adds or removes a user from the Credit Card marketing waitlist.
     */
    setCreditCardWaitlistStatus: SetCreditCardWaitlistStatusPayload
    updateCreditCardRewardPayoutDestination: UpdateCreditCardRewardPayoutDestinationPayload
    /** Returns necessary encrypted data to complete credit card push provisioning to Apple Pay & Google Pay */
    requestMobilePushProvisioningCertificates: RequestMobilePushProvisioningCertificatesPayload
    /** Links new funding sources via a Plaid Link token. */
    linkFundingSources: (LinkFundingSourcesPayload | null)
    /** Links new funding sources via a Plaid Link token. */
    completePlaidIncomeVerification: (CompletePlaidIncomeVerificationPayload | null)
    /** Create ACH relationship with Plaid Link. */
    createAchRelationshipViaFundingSource: (CreateAchRelationshipViaFundingSourcePayload | null)
    /** Confirm micro deposit amounts with Plaid. */
    confirmManualPlaidMicroDeposits: (ConfirmManualPlaidMicroDepositsPayload | null)
    /** Links new funding sources via a Plaid Link token. */
    generatePlaidIncomeLinkToken: (GeneratePlaidIncomeLinkTokenPayload | null)
    /** Links new external accounts via a [Plaid Link](https://github.com/plaid/link) token, then creates an ACH relationship with a single external account based on the specified Plaid account ID. */
    linkAndCreateAchRelationship: (LinkAndCreateAchRelationshipPayload | null)
    /** Reissues new deposits for a pending ACH relationship via deposits. */
    reissueDepositsForAchRelationship: (ReissueDepositsForAchRelationshipPayload | null)
    /** Open a High Yield Savings Account */
    openHighYieldSavingsAccount: (OpenHighYieldSavingsAccountMutationPayload | null)
    /** Creates a relationship between an external account and product via Transfers service. */
    createFundingSourceRelationship: CreateFundingSourceRelationshipPayload
    /** Sets the direct deposit destination (Account). */
    setDirectDepositDestination: SetDirectDepositDestinationPayload
    /** Create a transfer instance to move money imminently. */
    createTransferInstance: CreateTransferInstancePayload
    /** Create a transfer instance to move money imminently to/from an IRA account. */
    createIraTransfer: CreateIraTransferResult
    /**
     * Creates a new, or updates an existing, rule which will create transfer
     * instances on a schedule.
     */
    setScheduledTransferRule: SetScheduledTransferRulePayload
    /** Updates and/or creates an entire pie tree. */
    updatePieTree: (UpdatePieTreePayload | null)
    /** Registers a new user. */
    registerUser: (RegisterUserPayload | null)
    /** Initiates the transfer of personal loan funds for the user. */
    queueLoanDisbursement: (QueueLoanDisbursementPayload | null)
    /** Opens an account. */
    openAccount: (OpenAccountPayload | null)
    /** Opens a custodial account. */
    openCustodialAccount: (OpenCustodialAccountPayload | null)
    /**
     * @deprecated Use `completeDocumentUploadRequest` instead.
     * Verifies completion of document upload process.
     */
    completeDocumentUpload: (CompleteDocumentUploadPayload | null)
    /** Verifies the product agnostic document upload request flow. */
    completeDocumentUploadRequest: (CompleteDocumentUploadRequestPayload | null)
    /** Updates a user's profile information. */
    updateProfile: (UpdateProfilePayload | null)
    /** Links new external accounts via a Plaid Link token. */
    linkExternalAccounts: (LinkExternalAccountsPayload | null)
    /** Refresh the estimated trading infomration with latest data. */
    refreshEstimatedTrading: (RefreshEstimatedTradingPayload | null)
    /** Creates a new, or updates an existing, smart transfer rule. */
    setSmartTransferRule: (SetSmartTransferRulePayload | null)
    /** Set the enabled/disabled status on a transfer rule. */
    setEnabledOnTransferRule: SetEnabledOnTransferRulePayload
    /** Create a temporary link for an account document. */
    createAccountDocumentLink: CreateAccountDocumentLinkPayload
    /** Generate token for initializing Plaid connection. */
    generatePlaidLinkItemAddClientToken: (GeneratePlaidLinkItemAddClientTokenPayload | null)
    /** Generate a token to initialize the payment client. */
    generatePaymentClientToken: (GeneratePaymentClientTokenPayload | null)
    /** Generate a presigned S3 url for document upload requests. */
    generatePresignedDocumentUploadRequestUrl: (GeneratePresignedUrlPayload | null)
    /** Generate a presigned S3 url for generic document uploads. */
    generateGenericPresignedDocumentUrl: (GenerateGenericPresignedDocumentUrlPayload | null)
    /**
     * @deprecated Use `generatePresignedDocumentUploadRequestUrl` instead.
     * Generate a presigned S3 url for document uploads.
     */
    generatePresignedUrl: (GeneratePresignedUrlPayload | null)
    /** Sets notification preferences. */
    setNotificationPreferences: (SetNotificationPreferencesPayload | null)
    /**
     * @deprecated Obsolete, user-entered promo codes are no longer accepted.
     * Obsolete and no longer functional. Always returns null.
     */
    applyPromotionCode: (ApplyPromotionCodePayload | null)
    /** Selects an account to be the payments account. */
    selectPaymentsAccount: (SelectPaymentsAccountPayload | null)
    /**
     * Move a set of unmanaged holdings into a user's portfolio. "Managed"
     * in this context means the holdings will be acted on by the trading
     * pipeline.
     */
    moveUnmanagedHoldings: (MoveUnmanagedHoldingsPayload | null)
    /** Liquidate set of unmanaged holdings by ID's. If successful, this operation will subject the given holdings to our trading pipeline. */
    markUnmanagedHoldingsForLiquidation: (MarkUnmanagedHoldingsForLiquidationPayload | null)
    /** Cancel a set of unmanaged holdings by ID's from liquidation. If successful, the given set of UH's will no longer be subject to our trading pipeline. */
    unmarkUnmanagedHoldingsForLiquidation: (UnmarkUnmanagedHoldingsForLiquidationPayload | null)
    /** Submits an ACAT Transfer Request from an external brokerage to M1 invest account. */
    submitInvestAcatTransfer: (SubmitInvestAcatTransferPayload | null)
    /** Submit a request to setup AutoPay for a Personal Loan during the origination flow. */
    autoPayApplicationSetUp: (AutoPayApplicationSetUpPayload | null)
    /** Moves slices from a User's Allocation Pie elsewhere within their Portfolio. */
    moveSlices: (MoveSlicesPayload | null)
    /**
     * Loops over move slices mutation, then updates the final pie tree at the end.
     * Pie trees in each move must be valid pie trees since they are validated each move.
     */
    moveSlicesBatch: (MoveSlicesBatchPayload | null)
    /** Archives (or unarchives) a pie. */
    archivePie: (ArchivePiePayload | null)
    createPieShareUrl: (CreatePieShareUrlPayload | null)
    setMaxCashThreshold: (SetMaxCashThresholdPayload | null)
    /** Accept the personal loan for a user. */
    acceptPersonalLoan: AcceptPersonalLoanPayload
    /** Accept a personal loan offer. */
    acceptPersonalLoanOffer: AcceptPersonalLoanOfferPayload
    /** Activate a Plus trial, if eligible. */
    activatePlusTrial: (ActivatePlusTrialPayload | null)
    /** Archive a transfer rule. */
    archiveTransferRule: ArchiveTransferRulePayload
    /** Authenticates via credentials and produces an access token. */
    authenticate: (AuthenticatePayload | null)
    /** Cancel a pending transfer instance. */
    cancelTransferInstance: CancelTransferInstancePayload
    /** Changes an authenticated user's password. */
    changePassword: (ChangePasswordPayload | null)
    /** Completes the phone verification process. */
    completePhoneVerification: (CompletePhoneVerificationPayload | null)
    /** Creates a new profile without need for any accounts. */
    createProfile: (CreateProfilePayload | null)
    /** Create a temporary link for a Spend Checking account document. */
    createSpendAccountDocumentLink: CreateSpendAccountDocumentLinkPayload
    /**
     * @deprecated Sunset Checking.
     * Initiate the process of verifying a user's identity, required to use Spend
     * features. Starts an identity verification session and returns verification
     * challenge questions.
     */
    initiateSpendIdentity: InitiateSpendIdentityPayload
    /**
     * @deprecated Sunset Checking.
     * Update a user's Spend identity. Changing values on the Spend account details, including
     * if a user is subject to backup witholding for multiple checking accounts.
     */
    updateSpendIdentity: UpdateSpendIdentityPayload
    /**
     * @deprecated Sunset Checking.
     * Finish the process of verifying a user's identity for Spend Checking. Accepts the
     * verification token and answers to the verification challenge questions
     * returned by `initiateSpendIdentity`.
     */
    verifySpendIdentity: VerifySpendIdentityPayload
    /**
     * @deprecated Sunset Checking.
     * Completes the Spend Checking enrollment process by creating the primary Spend Checking account
     * and reconfiguring internal ACH connections.
     */
    completeSpendEnrollment: CompleteSpendEnrollmentPayload
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Create a Spend Checking external bank account connection with a bank account that has
     * been verified via an instant link.
     */
    createSpendExternalAccountViaLink: CreateSpendExternalAccountViaLinkPayload
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Initiate the process of connecting an external bank account to a Spend
     * account. Verification is accomplished via micro-deposits.
     */
    initiateSpendExternalAccount: InitiateSpendExternalAccountPayload
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Finish the process of connecting an external bank account to a Spend Checking account.
     * Accepts the micro-deposit amounts that were initiated by
     * `initiateSpendExternalAccount`.
     */
    verifySpendExternalAccount: VerifySpendExternalAccountPayload
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Archive a Spend external bank account.
     */
    archiveSpendExternalAccount: ArchiveSpendExternalAccountPayload
    /**
     * @deprecated Sunset Checking.
     * Send a check.
     */
    sendCheck: (SendCheckPayload | null)
    /** Disables two factor authentication for the user account. */
    disableTwoFactorAuth: (DisableTwoFactorAuthPayload | null)
    /** Marks an announcement context as dismissed. */
    dismissAnnouncements: (DismissAnnouncementsPayload | null)
    /** Enables two factor authentication for the user account. */
    enableTwoFactorAuth: (EnableTwoFactorAuthPayload | null)
    /** Generate an Atomic access token */
    generateAtomicToken: (GenerateAtomicTokenPayload | null)
    /** Generates an idempotency token to be used for identifying unique transactions. */
    generateIdempotencyKey: (GenerateIdempotencyKeyPayload | null)
    /** Initializes the secret necessary to enable two factor authentication. */
    initializeTwoFactorAuth: (InitializeTwoFactorAuthPayload | null)
    /** Initialize two factor verification for a user */
    initializeTwoFactorVerification: InitializeTwoFactorVerificationPayload
    /** Initiates the phone verification process. */
    initiatePhoneVerification: (InitiatePhoneVerificationPayload | null)
    /** Initiate the reset password process with a provided email address. */
    initiateResetPassword: (InitiateResetPasswordPayload | null)
    /** Joins the crypto waitlist for the user. */
    joinCryptoWaitlist: (JoinCryptoWaitlistPayload | null)
    /**
     * @deprecated plus is no longer supported.
     * Sets autorenewal preference for a Plus membership.
     */
    setPlusAutoRenewalPreference: (SetPlusAutoRenewalPreferencePayload | null)
    /**
     * @deprecated plus is no longer supported.
     * Create plus membership or update plus membership preferences.
     */
    confirmPlusMembership: (ConfirmPlusMembershipPayload | null)
    /**
     * @deprecated plus is no longer supported.
     * Submit a payment for a Plus membership.
     */
    submitPlusMembershipPayment: (SubmitPlusMembershipPaymentPayload | null)
    /**
     * @deprecated plus is no longer supported.
     * Submit a payment for 1 year of Plus
     */
    submitOneTimePlusPayment: (SubmitOneTimePlusPaymentPayload | null)
    /**
     * @deprecated plus is no longer supported.
     * Set the active Plus membership payment method.
     */
    setActivePlusMembershipPaymentMethod: (SetActivePlusMembershipPaymentMethodPayload | null)
    /** Accepts a promotion campaign. */
    acceptPromotionCampaign: AcceptPromotionCampaignPayload
    /** Accepts a promotion campaign by promocode. */
    acceptPromotionByPromoCode: AcceptPromotionCampaignPayload
    /** Authenticates via a refresh token and produces a new access token. */
    reauthenticate: (ReauthenticatePayload | null)
    /** Marks or unmarks a portfolio slice in the tree for reblance. */
    rebalancePortfolioSlice: (RebalancePortfolioSlicePayload | null)
    /** Renames the account of the given id to a new string value. */
    renameAccount: RenameAccountPayload
    /**
     * @deprecated Endpoint no longer being used by backend
     * Reports information about a mobile device.
     */
    reportMobileDeviceInfo: (ReportMobileDeviceInfoPayload | null)
    /** Submits a request to CS to close the current users accounts and mark for deactivation. */
    requestAccountDeactivation: (RequestAccountDeactivationPayload | null)
    /** Requests instructions to open an account of an offline-only registration type. */
    requestOfflineOpenAccount: (RequestOfflineOpenAccountPayload | null)
    /** Request to participate in the referrals program. */
    requestReferralsParticipation: (RequestReferralsParticipationPayload | null)
    /**
     * Resends the verification email to the authenticated user's primary email
     * address.
     */
    resendEmailVerification: (ResendEmailVerificationPayload | null)
    /** Reset a user's password given a valid reset token. */
    resetPassword: (ResetPasswordPayload | null)
    /** Resubmit a personal loan application after credit freeze */
    resubmitLoanAfterCreditFreeze: (ResubmitLoanAfterCreditFreezePayload | null)
    /** Revokes the given refresh token so that it cannot be used. */
    revokeRefresh: (RevokeRefreshPayload | null)
    /** Sends a test push notification. */
    sendTestPushNotification: (SendTestPushNotificationPayload | null)
    setFullyPaidLendingStatus: (SetFullyPaidLendingStatusPayload | null)
    /**
     * @deprecated No longer asking for introduction source
     * Sets introduction source without need to create a profile.
     */
    setIntroductionSource: (SetIntroductionSourcePayload | null)
    setPortfolioSliceOrder: (SetPortfolioSliceOrderPayload | null)
    /** Set the preferred Platform Billing payment method */
    setPreferredPlatformPaymentMethod: (SetPreferredPlatformPaymentMethodPayload | null)
    /** Sets or unsets a trade order for a portfolio slice. */
    setPreferredTradeWindow: (SetPreferredTradeWindowPayload | null)
    /** Sets the root pie on an investment account. */
    setRootPie: (SetRootPiePayload | null)
    /**
     * @deprecated This mutation is deprecated.
     * Sets users financial goal.
     */
    setUserFinancialGoal: (SetUserFinancialGoalPayload | null)
    /** Updates the agreement status for a user. */
    signAgreementBundle: (SignAgreementBundlePayload | null)
    /** Starts an on demand trade window for Crypto. */
    startCryptoOnDemandTradeWindow: (StartCryptoOnDemandTradeWindowPayload | null)
    startCustomerSupportConversation: (StartCustomerSupportConverstionPayload | null)
    /** Submit a personal loan application. */
    submitPersonalLoanApplication: SubmitPersonalLoanApplicationPayload
    /** Submit user feedback form for a user */
    submitUserFeedback: SubmitUserFeedbackPayload
    /** Updates a custodial account beneficiary's legal address */
    updateCustodialAccountBeneficiaryLegalAddress: (UpdateCustodialAccountBeneficiaryLegalAddressPayload | null)
    /** Update a user's email address */
    updateEmail: UpdateEmailPayload
    updateFullyPaidLendingStatus: (UpdateFullyPaidLendingStatusPayload | null)
    /** Updates the list of user data entries for the authenticated user. */
    updateUserData: (UpdateUserDataPayload | null)
    /** Verifies an email address associated with the provided token, if it is valid. */
    verifyEmail: (VerifyEmailPayload | null)
    /** Withdraw a personal loan */
    withdrawPersonalLoan: (WithdrawPersonalLoanPayload | null)
    /** Withdraw a personal loan application */
    withdrawPersonalLoanApplication: (WithdrawPersonalLoanApplicationPayload | null)
    __typename: 'Mutation'
}


/** Payload for the setDirectDepositDestination mutation. */
export interface SetAccountConfigurationDividendSettingsPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (SetAccountConfigurationDividendSettingError | null)
    errorMessage: (Scalars['String'] | null)
    outcome: (SetAccountConfigurationDividendSettingsOutcome | null)
    __typename: 'SetAccountConfigurationDividendSettingsPayload'
}

export interface SetAccountConfigurationDividendSettingsForHoldingsPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (SetAccountConfigurationDividendSettingError | null)
    errorMessage: (Scalars['String'] | null)
    outcome: (SetAccountConfigurationDividendSettingsOutcome | null)
    __typename: 'SetAccountConfigurationDividendSettingsForHoldingsPayload'
}

export interface SetAccountConfigurationDividendSettingsOutcome {
    configuration: AccountConfiguration
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    successMessage: (Scalars['String'] | null)
    __typename: 'SetAccountConfigurationDividendSettingsOutcome'
}

export type SetAccountConfigurationDividendSettingError = 'GENERIC_ERROR'


/** Possible input errors for the `CancelAchRelationship` mutation. */
export type CancelAchRelationshipInputErrorEnum = 'ACH_RELATIONSHIP_NOT_ACTIVE' | 'ACH_RELATIONSHIP_NOT_FOUND' | 'GENERAL_REJECTION' | 'HAS_PENDING_TRANSFERS' | 'INVALID_ACH_RELATIONSHIP_ID' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'INVALID_EXTERNAL_ACCOUNT_ID'

export interface CancelAchRelationshipPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    clientMutationId: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: CancelAchRelationshipResult
    __typename: 'CancelAchRelationshipPayload'
}


/** Metadata about the result of executing the `CancelAchRelationship` mutation. */
export interface CancelAchRelationshipResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (CancelAchRelationshipInputErrorEnum | null)
    __typename: 'CancelAchRelationshipResult'
}

export interface ConfirmAchRelationshipViaDepositsPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    /** The confirmed ACH relationship. */
    achRelationship: (AchRelationshipViaDeposits | null)
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The confirmed ACH relationship edge.
     */
    achRelationshipEdge: (AchRelationshipEdge | null)
    clientMutationId: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: ConfirmAchRelationshipViaDepositsResult
    __typename: 'ConfirmAchRelationshipViaDepositsPayload'
}


/** Metadata about the result of executing the `ConfirmAchRelationshipViaDeposits` mutation. */
export interface ConfirmAchRelationshipViaDepositsResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (ConfirmAchRelationshipViaDepositsInputErrorEnum | null)
    __typename: 'ConfirmAchRelationshipViaDepositsResult'
}


/** Possible input errors for the `ConfirmAchRelationshipViaDeposits` mutation. */
export type ConfirmAchRelationshipViaDepositsInputErrorEnum = 'ACH_RELATIONSHIP_NOT_FOUND' | 'ACH_RELATIONSHIP_NOT_PENDING' | 'ACH_RELATIONSHIP_NOT_READY' | 'DEPOSITS_EXPIRED' | 'GENERAL_REJECTION' | 'INCORRECT_DEPOSIT_AMOUNTS' | 'INELIGIBLE_ACH_RELATIONSHIP' | 'INVALID_ACH_RELATIONSHIP_ID' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'INVESTMENT_ACCOUNT_NOT_OPEN'

export interface CreateAchRelationshipViaDepositsPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    /** The new ACH relationship. */
    achRelationship: (AchRelationshipViaDeposits | null)
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The new ACH relationship edge.
     */
    achRelationshipEdge: (AchRelationshipEdge | null)
    clientMutationId: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: CreateAchRelationshipViaDepositsResult
    __typename: 'CreateAchRelationshipViaDepositsPayload'
}


/** The type of the bank account with which a relationship is established via deposits. */
export type ViaDepositsBankAcctTypeEnum = 'CHECKING' | 'SAVINGS'


/** Metadata about the result of executing the `CreateAchRelationshipViaDeposits` mutation. */
export interface CreateAchRelationshipViaDepositsResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (CreateAchRelationshipViaDepositsInputErrorEnum | null)
    __typename: 'CreateAchRelationshipViaDepositsResult'
}


/** Possible input errors for the `CreateAchRelationshipViaDeposits` mutation. */
export type CreateAchRelationshipViaDepositsInputErrorEnum = 'ACCOUNT_DISALLOWS_EXTERNAL_FUNDING' | 'GENERAL_REJECTION' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'NO_ADDITIONAL_ACH_RELATIONSHIPS' | 'UNALLOWED_BANK' | 'UNKNOWN_ROUTING_NUMBER'

export interface CreateAchRelationshipViaLinkPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    /** The new ACH relationship. */
    achRelationship: (AchRelationshipViaLink | null)
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The new ACH relationship edge.
     */
    achRelationshipEdge: (AchRelationshipEdge | null)
    clientMutationId: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: CreateAchRelationshipViaLinkResult
    __typename: 'CreateAchRelationshipViaLinkPayload'
}


/** Metadata about the result of executing the `CreateAchRelationshipViaLink` mutation. */
export interface CreateAchRelationshipViaLinkResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (CreateAchRelationshipViaLinkInputErrorEnum | null)
    __typename: 'CreateAchRelationshipViaLinkResult'
}


/** Possible input errors for the `CreateAchRelationshipViaLink` mutation. */
export type CreateAchRelationshipViaLinkInputErrorEnum = 'ACCOUNT_DISALLOWS_EXTERNAL_FUNDING' | 'EXTERNAL_ACCOUNT_NOT_FOUND' | 'GENERAL_REJECTION' | 'INVALID_EXTERNAL_ACCOUNT_ID' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'NO_ADDITIONAL_ACH_RELATIONSHIPS' | 'UNALLOWED_BANK'

export type CreditCardCustomerEmploymentInfoHousingTypeEnum = 'RENT' | 'OWN' | 'OTHER'

export interface SubmitCreditCardApplicationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SubmitCreditCardApplicationOutcome | null)
    error: (SubmitCreditCardApplicationErrorEnum | null)
    __typename: 'SubmitCreditCardApplicationPayload'
}

export interface SubmitCreditCardApplicationOutcome {
    /** The application details for the recently submitted application. */
    applicationDetails: CreditCardApplicationDetails
    /** The analytics event that should be fired by clients upon successful application submission. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SubmitCreditCardApplicationOutcome'
}

export type SubmitCreditCardApplicationErrorEnum = 'USER_NOT_ELIGIBLE' | 'REJECTED_APPLICATION_HOLD_PERIOD_NOT_COMPLETE' | 'CREDIT_CARD_NOT_ENABLED_FOR_USER'

export interface AcceptCreditCardOfferPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (AcceptCreditCardOfferOutcome | null)
    error: (AcceptCreditCardOfferErrorEnum | null)
    __typename: 'AcceptCreditCardOfferPayload'
}

export interface AcceptCreditCardOfferOutcome {
    /** The application details for the recently accepted credit card offer. */
    applicationDetails: CreditCardApplicationDetails
    __typename: 'AcceptCreditCardOfferOutcome'
}

export type AcceptCreditCardOfferErrorEnum = 'USER_NOT_ELIGIBLE' | 'CREDIT_CARD_NOT_ENABLED_FOR_USER' | 'NO_APPLICATIONS_FOR_USER' | 'NO_ACTIVE_CREDIT_CARD_APPLICATION_FOR_USER' | 'NO_ACTIVE_CREDIT_CARD_OFFER_FOR_USER' | 'GENERAL_ACCEPT_OFFER_ERROR'

export interface ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome | null)
    error: (ContinueCreditCardApplicationAfterUserCreditIsUnfrozenErrorEnum | null)
    __typename: 'ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload'
}

export interface ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome {
    /** The application details after the user progresses their application once their credit is unfrozen. */
    applicationDetails: CreditCardApplicationDetails
    __typename: 'ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome'
}

export type ContinueCreditCardApplicationAfterUserCreditIsUnfrozenErrorEnum = 'USER_NOT_ELIGIBLE' | 'CREDIT_CARD_NOT_ENABLED_FOR_USER' | 'NO_CREDIT_CARD_APPLICATIONS_FOR_USER' | 'APPLICATION_NOT_IN_UNFREEZE_CREDIT_BUREAU_STATUS' | 'GENERAL_UNFREEZE_CREDIT_ERROR'

export interface ActivateCreditCardPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ActivateCreditCardOutcome | null)
    error: (ActivateCreditCardErrorEnum | null)
    __typename: 'ActivateCreditCardPayload'
}

export interface ActivateCreditCardOutcome {
    /** The `CreditCard` type for the recently activated credit card. */
    creditCard: (CreditCard | null)
    __typename: 'ActivateCreditCardOutcome'
}

export type ActivateCreditCardErrorEnum = 'USER_NOT_ELIGIBLE' | 'CREDIT_CARD_NOT_ENABLED_FOR_USER' | 'NO_CREDIT_CARD_ACCOUNT_FOR_USER' | 'NO_CREDIT_CARD_ISSUED_FOR_ACCOUNT' | 'LAST_FOUR_MISMATCH' | 'CARD_ALREADY_ACTIVATED' | 'GENERAL_ACTIVATE_CREDIT_CARD_BY_LAST_FOUR_ERROR'

export interface SetLockOnCreditCardPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetLockOnCreditCardOutcome | null)
    error: (SetLockOnCreditCardErrorEnum | null)
    __typename: 'SetLockOnCreditCardPayload'
}

export interface SetLockOnCreditCardOutcome {
    /** The updated `CreditCard` type. */
    creditCard: CreditCard
    __typename: 'SetLockOnCreditCardOutcome'
}

export type SetLockOnCreditCardErrorEnum = 'USER_NOT_ELIGIBLE' | 'CREDIT_CARD_NOT_ENABLED_FOR_USER' | 'GENERAL_LOCK_CREDIT_CARD_ERROR'

export interface SetCreditCardWaitlistStatusPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetCreditCardWaitlistStatusOutcome | null)
    error: (SetCreditCardWaitlistStatusErrorEnum | null)
    __typename: 'SetCreditCardWaitlistStatusPayload'
}

export type SetCreditCardWaitlistStatusEnum = 'ENROLL' | 'UNENROLL'

export type SetCreditCardWaitlistStatusErrorEnum = 'USER_NOT_ELIGIBLE' | 'GENERAL_SET_CREDIT_CARD_WAITLIST_STATUS_ERROR'

export interface SetCreditCardWaitlistStatusOutcome {
    /** The confirmation screen content for after the waitlist signup mutation is sent. */
    confirmationContent: (CreditCardWaitlistConfirmationContent | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    /** Links the user to the current terms and conditions associated with the Credit Card waitlist. */
    waitlistTermsAndConditions: AppLink
    __typename: 'SetCreditCardWaitlistStatusOutcome'
}

export interface UpdateCreditCardRewardPayoutDestinationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (UpdateCreditCardRewardPayoutDestinationOutcome | null)
    error: (UpdateCreditCardRewardPayoutDestinationErrorEnum | null)
    __typename: 'UpdateCreditCardRewardPayoutDestinationPayload'
}

export interface UpdateCreditCardRewardPayoutDestinationOutcome {
    /** The ID of the Smart Transfer that was updated with the new destination. */
    rewardsPortal: (CreditCardRewardsPortalScreen | null)
    __typename: 'UpdateCreditCardRewardPayoutDestinationOutcome'
}

export type UpdateCreditCardRewardPayoutDestinationErrorEnum = 'CREDIT_CARD_NOT_ENABLED_FOR_USER' | 'USER_NOT_ELIGIBLE' | 'GENERAL_UPDATE_CREDIT_CARD_REWARD_PAYOUT_DESTINATION_ERROR'

export interface RequestMobilePushProvisioningCertificatesPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (RequestMobilePushProvisioningCertificatesOutcome | null)
    error: (RequestMobilePushProvisioningCertificatesErrorEnum | null)
    __typename: 'RequestMobilePushProvisioningCertificatesPayload'
}

export type RequestMobilePushProvisioningCertificatesErrorEnum = 'USER_NOT_ELIGIBLE' | 'INVALID_INPUT' | 'GENERAL_PUSH_PROVISIONING_ERROR'

export interface RequestMobilePushProvisioningCertificatesOutcome {
    /** Stringified JSON // iOS should contain: encryptedPassData (as encryptedPayload), activationData, ephemeralPublicKey // Android should contain: opc, userAddress object */
    pushProvisioningCredentials: Scalars['String']
    __typename: 'RequestMobilePushProvisioningCertificatesOutcome'
}


/** Payload for the `linkFundingSources` mutation. */
export interface LinkFundingSourcesPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (LinkFundingSourcesOutcome | null)
    error: (LinkFundingSourcesErrorEnum | null)
    __typename: 'LinkFundingSourcesPayload'
}


/** Outcome for the `linkFundingSources` mutation. */
export interface LinkFundingSourcesOutcome {
    /** The funding sources that were linked with the supplied token. */
    linkedFundingSources: ((FundingSourceAccount | null)[] | null)
    __typename: 'LinkFundingSourcesOutcome'
}


/** Errors for the `linkFundingSources` mutation. */
export type LinkFundingSourcesErrorEnum = 'BLOCKED_LINK_TOKEN'


/** Payload for the `completePlaidIncomeVerification` mutation. */
export interface CompletePlaidIncomeVerificationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CompletePlaidIncomeVerificationOutcome | null)
    error: (CompletePlaidIncomeVerificationErrorEnum | null)
    __typename: 'CompletePlaidIncomeVerificationPayload'
}


/** Outcome for the `completePlaidIncomeVerification` mutation. */
export interface CompletePlaidIncomeVerificationOutcome {
    /** Whether or not the Plaid income verification flow was successfully completed. */
    verificationSubmitted: (Scalars['Boolean'] | null)
    __typename: 'CompletePlaidIncomeVerificationOutcome'
}


/** Errors for the `completePlaidIncomeVerification` mutation. */
export type CompletePlaidIncomeVerificationErrorEnum = 'NO_USER_TOKEN'


/** Payload for the `createAchRelationshipViaFundingSource` mutation. */
export interface CreateAchRelationshipViaFundingSourcePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateAchRelationshipViaFundingSourceOutcome | null)
    error: (CreateAchRelationshipViaFundingSourceErrorEnum | null)
    __typename: 'CreateAchRelationshipViaFundingSourcePayload'
}


/** Outcome for the `createAchRelationshipViaFundingSource` mutation. */
export interface CreateAchRelationshipViaFundingSourceOutcome {
    /** ACH relationship id. */
    achRelationshipId: (Scalars['String'] | null)
    /** Ach Relationship. */
    achRelationship: (AchRelationship | null)
    __typename: 'CreateAchRelationshipViaFundingSourceOutcome'
}


/** Errors for the `createAchRelationshipViaFundingSource` mutation. */
export type CreateAchRelationshipViaFundingSourceErrorEnum = 'INVALID_ACCOUNT_ID' | 'INVALID_FUNDING_SOURCE_ID' | 'ACCOUNT_NOT_FOUND' | 'NO_ADDITIONAL_ACH_RELATIONSHIPS' | 'UNALLOWED_BANK'


/** Payload for the `confirmManualPlaidMicroDesposits` mutation. */
export interface ConfirmManualPlaidMicroDepositsPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    __typename: 'ConfirmManualPlaidMicroDepositsPayload'
}

export type ConfirmManualPlaidMicroDepositsErrorEnum = 'CONFIRMATION_FAILED'


/** Payload for the `generatePlaidIncomeLinkToken` mutation. */
export interface GeneratePlaidIncomeLinkTokenPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (GeneratePlaidIncomeLinkTokenOutcome | null)
    __typename: 'GeneratePlaidIncomeLinkTokenPayload'
}


/** Outcome for the `generatePlaidIncomeLinkToken` mutation. */
export interface GeneratePlaidIncomeLinkTokenOutcome {
    /** Token used to connect with Plaid for Plaid Income Verification. */
    plaidIncomeLinkToken: Scalars['String']
    __typename: 'GeneratePlaidIncomeLinkTokenOutcome'
}

export interface LinkAndCreateAchRelationshipPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    /** The new ACH relationship. */
    achRelationship: (AchRelationshipViaLink | null)
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The new ACH relationship edge.
     */
    achRelationshipEdge: (AchRelationshipEdge | null)
    clientMutationId: (Scalars['String'] | null)
    /**
     * @deprecated Not in use. Will be removed.
     * The new external account edges.
     */
    externalAccountEdges: (ExternalAccountEdge[] | null)
    /** Metadata about the result of executing the mutation. */
    result: LinkAndCreateAchRelationshipResult
    __typename: 'LinkAndCreateAchRelationshipPayload'
}


/** Metadata about the result of executing the `LinkAndCreateAchRelationship` mutation. */
export interface LinkAndCreateAchRelationshipResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (LinkAndCreateAchRelationshipInputErrorEnum | null)
    __typename: 'LinkAndCreateAchRelationshipResult'
}


/** Possible input errors for the `LinkAndCreateAchRelationship` mutation. */
export type LinkAndCreateAchRelationshipInputErrorEnum = 'ACCOUNT_DISALLOWS_EXTERNAL_FUNDING' | 'GENERAL_REJECTION' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'LINK_FORBIDDEN' | 'NO_ADDITIONAL_ACH_RELATIONSHIPS' | 'TRANSIENT_LINK_FAILURE' | 'UNALLOWED_BANK' | 'UNKNOWN_LINK_FAILURE'

export interface ReissueDepositsForAchRelationshipPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    /** The ACH relationship for which deposits were reissued. */
    achRelationship: (AchRelationshipViaDeposits | null)
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The ACH relationship edge for which deposits were reissued.
     */
    achRelationshipEdge: (AchRelationshipEdge | null)
    clientMutationId: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: ReissueDepositsForAchRelationshipResult
    __typename: 'ReissueDepositsForAchRelationshipPayload'
}


/** Metadata about the result of executing the `ReissueDepositsForAchRelationship` mutation. */
export interface ReissueDepositsForAchRelationshipResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (ReissueDepositsForAchRelationshipInputErrorEnum | null)
    __typename: 'ReissueDepositsForAchRelationshipResult'
}


/** Possible input errors for the `ReissueDepositsForAchRelationship` mutation. */
export type ReissueDepositsForAchRelationshipInputErrorEnum = 'ACH_RELATIONSHIP_NOT_FOUND' | 'ACH_RELATIONSHIP_NOT_PENDING' | 'ACH_RELATIONSHIP_NOT_READY' | 'GENERAL_REJECTION' | 'INELIGIBLE_ACH_RELATIONSHIP' | 'INVALID_ACH_RELATIONSHIP_ID' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'INVESTMENT_ACCOUNT_NOT_OPEN' | 'MAX_DEPOSIT_REISSUES_EXCEEDED' | 'UNEXPIRED_EXISTING_DEPOSITS'


/** Payload for the `openHighYieldSavingsAccount` mutation */
export interface OpenHighYieldSavingsAccountMutationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (OpenHighYieldSavingsAccountOutcome | null)
    error: (OpenHighYieldSavingsAccountErrorEnum | null)
    __typename: 'OpenHighYieldSavingsAccountMutationPayload'
}


/** Errors for the `openHighYieldSavingsAccount` mutation */
export type OpenHighYieldSavingsAccountErrorEnum = 'BLOCKED_BY_PENDING_TRANSFER' | 'USER_NOT_ELIGIBLE' | 'UNVERIFIED_EMAIL' | 'USER_REJECTED' | 'TOO_MANY_INVITES'


/** Outcome for the `openHighYieldSavingsAccount` mutation */
export interface OpenHighYieldSavingsAccountOutcome {
    /** The account id for the B2 savings account */
    accountId: (Scalars['String'] | null)
    /** The account opened by the mutation */
    account: (SavingsAccount | null)
    /** A boolean indicating whether the user has external funding source linked to their Savings Account */
    hasExternalFundingSource: Scalars['Boolean']
    /** A boolean indicating whether the user has available funding sources they can connect to their new Savings Account */
    hasAvailableFundingSources: Scalars['Boolean']
    /** The initial funding source for the Savings account, this should populate the `from` field for the initial deposit flow */
    initialTransferParticipant: (TransferParticipant | null)
    /** The Savings account transfer participant, this should populate the `to` field for the initial deposit flow */
    savingsTransferParticipant: (TransferParticipant | null)
    /** The analytics event for when the mutation successfully creates a savings account */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OpenHighYieldSavingsAccountOutcome'
}


/** Payload for the setDirectDepositDestination mutation. */
export interface SetDirectDepositDestinationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (SetDirectDepositDestinationErrorEnum | null)
    outcome: (SetDirectDepositDestinationOutcome | null)
    __typename: 'SetDirectDepositDestinationPayload'
}

export type SetDirectDepositDestinationErrorEnum = 'GENERIC_ERROR'

export interface SetDirectDepositDestinationOutcome {
    /** success message for setting direct deposit destination */
    successMessage: (Scalars['String'] | null)
    __typename: 'SetDirectDepositDestinationOutcome'
}


/** Payload for the createFundingSourceRelationship mutation. */
export interface CreateFundingSourceRelationshipPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (CreateFundingSourceRelationshipErrorEnum | null)
    outcome: (CreateFundingSourceRelationshipOutcome | null)
    __typename: 'CreateFundingSourceRelationshipPayload'
}

export type CreateFundingSourceRelationshipErrorEnum = 'INVALID_TRANSFER_PARTICIPANT' | 'INVALID_FUNDING_SOURCE' | 'ACCOUNT_SWITCH_LIMIT_EXCEEDED' | 'BLOCKED_BY_PENDING_TRANSFER' | 'BLOCKED_ROUTING_NUMBER' | 'UNABLE_TO_CHANGE_LINKED_BANK'


/** Outcome for the `createFundingSourceRelationship` mutation */
export interface CreateFundingSourceRelationshipOutcome {
    /** The M1 product transfer participant - this can be null if due to product specific logic resolving the transfer participant. */
    internalTransferParticipant: (TransferParticipant | null)
    /** The funding source transfer participant - this represents the external account. */
    fundingSourceTransferParticipant: (TransferParticipant | null)
    __typename: 'CreateFundingSourceRelationshipOutcome'
}


/** Payload for the `createTransferInstance` mutation. */
export interface CreateTransferInstancePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateTransferInstanceOutcome | null)
    error: (CreateTransferInstanceErrorEnum | null)
    __typename: 'CreateTransferInstancePayload'
}


/** Container type for handling auto-invest implications on the destination account for this particular transfer */
export interface ToCreateTransferInstancePayloadAutoInvestImplications {
    /**
     * The threshold dollar amount over which any cash will be automatically invested
     * into destination account. When non-null, value will be greater than or equal to
     * zero. When null, the max cash threshold is disabled.
     */
    maxCashThresholdOnDestinationAccount: (Scalars['Int'] | null)
    /** The number of pending buy trades estimated as a result of the transfer. If null, estimated trades were unable to be calculated. */
    estimatedBuyTradesDestinationAmount: (Scalars['Int'] | null)
    __typename: 'ToCreateTransferInstancePayloadAutoInvestImplications'
}


/** Outcome for the `createTransferInstance` mutation. */
export interface CreateTransferInstanceOutcome {
    /** The newly-created transfer instance. */
    instance: (TransferInstance | null)
    /**
     * When the source participant is an Invest account, estimated trading
     * information for that account, if applicable and available.
     */
    fromInvestEstimatedTrading: (EstimatedTrading | null)
    /**
     * When the destination participant is an Invest account, estimated trading
     * information for that account, if applicable and available.
     */
    toInvestEstimatedTrading: (EstimatedTrading | null)
    /** Details of the transfer instance created */
    details: (Details | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    /** Container type for handling auto-invest data for this particular transfer */
    autoInvestImplications: (ToCreateTransferInstancePayloadAutoInvestImplications | null)
    __typename: 'CreateTransferInstanceOutcome'
}

export interface Details {
    /** The title for the confirmation page for the transfer instance */
    title: Scalars['String']
    /** The illustration for the confirmation page for the transfer instance */
    illustration: (AppImage | null)
    /** Transfer instance created description */
    description: (Scalars['String'] | null)
    /** Transfer instance link to details */
    detailsLink: (AppLink | null)
    __typename: 'Details'
}


/** Errors for the `createTransferInstance` mutation. */
export type CreateTransferInstanceErrorEnum = 'PARTICIPANTS_INVALID' | 'PARTICIPANTS_FROZEN' | 'PARTICIPANTS_DAILY_LIMIT_EXCEEDED' | 'AMOUNT_EXCEEDS_IRA_CONTRIBUTION_LIMIT' | 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' | 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' | 'AMOUNT_GREATER_THAN_AVAILABLE_BALANCE' | 'AMOUNT_LESS_THAN_INVEST_INITIAL_DEPOSIT' | 'AMOUNT_REQUIRES_MARGIN_PAY_BACK' | 'AMOUNT_REQUIRES_INVEST_LIQUIDATION' | 'IRA_CONTRIBUTION_YEAR_REQUIRED' | 'IRA_CONTRIBUTION_DISALLOWED_BY_AGE' | 'IRA_DISTRIBUTION_REASON_REQUIRED' | 'IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE' | 'INVALID_IRA_DISTRIBUTION_REASON' | 'INSUFFICIENT_MARGIN_BALANCE' | 'TOO_MANY_TRANSFERS' | 'DUPLICATE_AUTOMATED_TRANSFER'


/** Errors for the `createIraTransfer` mutation. */
export type CreateIraTransferErrorEnum = 'PARTICIPANTS_INVALID' | 'PARTICIPANTS_FROZEN' | 'PARTICIPANTS_DAILY_LIMIT_EXCEEDED' | 'AMOUNT_EXCEEDS_IRA_CONTRIBUTION_LIMIT' | 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' | 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' | 'AMOUNT_GREATER_THAN_AVAILABLE_BALANCE' | 'AMOUNT_LESS_THAN_INVEST_INITIAL_DEPOSIT' | 'AMOUNT_REQUIRES_MARGIN_PAY_BACK' | 'AMOUNT_REQUIRES_INVEST_LIQUIDATION' | 'IRA_CONTRIBUTION_YEAR_REQUIRED' | 'IRA_CONTRIBUTION_DISALLOWED_BY_AGE' | 'IRA_DISTRIBUTION_REASON_REQUIRED' | 'IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE' | 'INVALID_IRA_DISTRIBUTION_REASON' | 'INSUFFICIENT_MARGIN_BALANCE' | 'TOO_MANY_TRANSFERS' | 'DUPLICATE_AUTOMATED_TRANSFER' | 'IRA_WITHHOLDING_PERCENTAGE_CANNOT_EXCEED_100' | 'IRA_WITHHOLDING_MANDATORY_REQUIREMENTS_UNMET' | 'IRA_WITHHOLDING_MANDATORY_OPT_OUT_REQUIREMENTS_UNMET' | 'IRA_WITHHOLDING_VOLUNTARY_REQUIREMENTS_UNMET' | 'IRA_WITHHOLDING_MATCH_FEDERAL_REQUIREMENT_UNMET' | 'IRA_WITHHOLDING_MATCH_STATE_REQUIREMENT_UNMET' | 'IRA_WITHHOLDING_NOT_ALLOWED_REQUIREMENTS_UNMET' | 'IRA_WITHHOLDING_VALIDATION_ERROR' | 'IRA_WITHHOLDING_REQUIREMENT_NOT_FOUND' | 'IRA_ACCOUNT_NOT_FOUND' | 'NOT_ENOUGH_FUNDS_TO_RECHARACTERIZE'


/** Result for the `createIraTransfer` mutation. */
export interface CreateIraTransferResult {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateTransferInstanceOutcome | null)
    error: (CreateIraTransferErrorEnum | null)
    errorMessage: (Scalars['String'] | null)
    __typename: 'CreateIraTransferResult'
}


/** Payload for the `setScheduledTransferRule` mutation. */
export interface SetScheduledTransferRulePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetScheduledTransferRuleOutcome | null)
    error: (SetScheduledTransferRuleErrorEnum | null)
    __typename: 'SetScheduledTransferRulePayload'
}


/** Outcome for the `setScheduledTransferRule` mutation. */
export interface SetScheduledTransferRuleOutcome {
    /** The newly-created or now-updated scheduled transfer rule. */
    rule: (ScheduledTransferRule | null)
    /** Details of the transfer schedule created */
    details: (Details | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SetScheduledTransferRuleOutcome'
}


/** Errors for the `setScheduledTransferRule` mutation. */
export type SetScheduledTransferRuleErrorEnum = 'PARTICIPANTS_INVALID' | 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' | 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' | 'AMOUNT_REQUIRES_INVEST_INITIAL_DEPOSIT' | 'IRA_CONTRIBUTION_YEAR_REQUIRED' | 'IRA_CONTRIBUTION_DISALLOWED_BY_AGE' | 'IRA_DISTRIBUTION_REASON_REQUIRED' | 'IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE' | 'INVALID_IRA_DISTRIBUTION_REASON' | 'CONFLICTS_WITH_EXISTING_RULE' | 'TOO_MANY_SCHEDULED_TRANSFER_RULES'


/** A pie label. */
export type PieLabelEnum = 'SHARED_PIE'

export interface UpdatePieTreePayload {
    clientMutationId: (Scalars['String'] | null)
    /** The updated or created pie node at the root of the tree. */
    pie: (UserPie | null)
    /** Metadata about the result of executing the mutation. */
    result: UpdatePieTreeResult
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    __typename: 'UpdatePieTreePayload'
}


/** Metadata about the result of executing the `UpdatePieTree` mutation. */
export interface UpdatePieTreeResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (UpdatePieTreeInputErrorEnum | null)
    __typename: 'UpdatePieTreeResult'
}


/** Possible input errors for the `UpdatePieTree` mutation. */
export type UpdatePieTreeInputErrorEnum = 'EXCEEDS_MAX_EDIT_OPS' | 'EXCEEDS_MAX_USER_PIES' | 'EXCEEDS_PIE_TREE_MAX_SLICES' | 'INVALID_PERCENTAGE' | 'INVALID_PIE_DESCRIPTION' | 'INVALID_PIE_ID' | 'INVALID_PIE_NAME' | 'INVALID_PIE_TREE' | 'INVALID_SLICEABLE_ID' | 'INVALID_SLICE_COUNT' | 'INVALID_TOTAL_PERCENTAGE' | 'NO_DUPLICATE_SLICES' | 'NO_SLICE_SELF_REFERENCE' | 'PIE_NOT_EDITABLE' | 'PIE_NOT_FOUND' | 'SLICEABLE_NOT_ACTIVE' | 'SLICEABLE_NOT_FOUND'

export interface Account {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** The account category. */
    accountCategory: AccountCategoryEnum
    /** The account configuration */
    configuration: (AccountConfiguration | null)
    /**
     * @deprecated Use BorrowAccount instead.
     * Legacy signal for if an account is marginable.
     */
    canBorrow: (Scalars['Boolean'] | null)
    /** The name of the account. */
    name: Scalars['String']
    /** A descriptor for the account, for help identifying in a list. */
    descriptor: (Scalars['String'] | null)
    /** The account origination */
    originator: (AccountOriginatorEnum | null)
    /** The registration type of the account. */
    registration: AccountRegistrationEnum
    /** The current status for the account. */
    status: AccountStatusEnum
    /** True if the account is active: either NEW or OPENED status. */
    isActive: Scalars['Boolean']
    /** True if the account is rejected. */
    isRejected: Scalars['Boolean']
    /** The document upload content and requirements */
    documentUpload: (DocumentUpload | null)
    /** True when trading is paused for the account for some reason. */
    isTradingPaused: (Scalars['Boolean'] | null)
    /** True when trading is paused because of incoming ACAT */
    isTradingPausedWithAcat: (Scalars['Boolean'] | null)
    /** True when the account is a Custodial Account and the beneficiary has reached the age of majority. */
    hasBeneficiaryReachedAgeOfMaturity: (Scalars['Boolean'] | null)
    /** The trading window preference of the account. */
    preferredTradeWindow: (PreferredTradeWindowEnum | null)
    /** The feature flag for preferredTradeWindow. */
    hasPreferredTradeWindowAccess: (Scalars['Boolean'] | null)
    /** The current trading status of the account. */
    trading: (AccountTradingStatus | null)
    /** If trading for the account is paused, information about the pause. */
    tradingPause: (AccountTradingPause | null)
    /**
     * @deprecated Use `name` instead.
     * A nickname for the account.
     */
    nickname: Scalars['String']
    /** The account number. */
    number: Scalars['String']
    /** True if the account is a crypto account, false otherwise. */
    isCryptoAccount: (Scalars['Boolean'] | null)
    /** True if the account is considered a custodial account, false otherwise. */
    isCustodialAccount: (Scalars['Boolean'] | null)
    /** True if the account is current direct deposit destination */
    directDepositDestinationPill: (AppPill | null)
    /** When the account is a custodial account, this description will provide the UGMA or UTMA designation for the account. */
    custodialAccountDescription: (Scalars['String'] | null)
    /** True if the account is considered a retirement account, false otherwise. */
    isRetirement: Scalars['Boolean']
    /**
     * True if the account is currently marked for liquidation. While liquidating,
     * some funding functions are not available.
     */
    isLiquidating: Scalars['Boolean']
    /** True if the account currently holds cash or investments. */
    isFunded: (Scalars['Boolean'] | null)
    /**
     * @deprecated Replaced by `setupChecklist`.
     * True if the user should be prompted to connect an external bank.
     */
    shouldPromptForExternalBankConnection: (Scalars['Boolean'] | null)
    /** True if the user should be prompted to create a transfer or schedule. */
    shouldPromptForTransfer: (Scalars['Boolean'] | null)
    /**
     * @deprecated Replaced by `hasPendingTransferInstances`.
     * True if the account currently has a pending transfer. Only one transfer may be
     * pending at a time.
     */
    hasPendingTransfer: Scalars['Boolean']
    /**
     * @deprecated Replaced by `pendingTransferInstances`.
     * The current pending ACH transfer, if there is one. Value is null when there is
     * currently no pending transfer.
     */
    pendingTransfer: (AchTransfer | null)
    /**
     * A signed dollar amount that will be imminently transfered to or from the
     * account at the next trading opportunity. Positive amounts are deposits into
     * the account; negative amounts are withdrawals.
     */
    imminentPendingCashFlowForOrders: (Scalars['Float'] | null)
    /** The account balance. */
    balance: AccountBalance
    /** Borrow information for this account, if applicable and eligible. */
    borrowAccount: (BorrowAccount | null)
    /** If applicable, a setup checklist to display for this account. */
    setupChecklist: (SetupChecklist | null)
    /**
     * True when a portfolio has been set for this account. Use this field to
     * determine if a null value for `rootPortfolioSlice` is because a portfolio has
     * not been set vs it has been set, but there was an error resolving that field.
     */
    hasPortfolio: Scalars['Boolean']
    /** If the account has no portfolio set, options for creating one. */
    setPortfolioOptions: (SetPortfolioOptions | null)
    /**
     * The root portfolio slice that defines the investment composition for the
     * account. Value is null when a root pie has not yet been set for the account.
     */
    rootPortfolioSlice: (RootPortfolioSlice | null)
    /** A list of portfolio slices that currently have buy orders set. */
    portfolioSlicesWithBuyOrders: ((PortfolioSlice | null)[] | null)
    /** A list of portfolio slices that currently have sell orders set. */
    portfolioSlicesWithSellOrders: ((PortfolioSlice | null)[] | null)
    /** A list of portfolio slices that currently have rebalances set. */
    portfolioSlicesWithRebalances: ((PortfolioSlice | null)[] | null)
    /**
     * Estimated information about trading that will occur during the next trading
     * window for this account. Estimated trades are based on portfolio activity and
     * are based on current prices. The most recently generated estimated trading
     * information will be returned. Value is null if the estimated trades feature is
     * unavailable or disabled.
     */
    estimatedTrading: (EstimatedTrading | null)
    /** A history of activities for the account. */
    investActivity: (InvestActivity | null)
    /**
     * The threshold dollar amount over which any cash will be automatically invested
     * into the portfolio. When non-null, value will be greater than or equal to
     * zero. When null, the max cash threshold is disabled.
     */
    maxCashThreshold: (Scalars['Int'] | null)
    /**
     * The minimum dollar amount required to activate auto-invest. Cash balances must
     * exceed the `maxCashThreshold` by this amount in order for auto-invest to
     * trigger.
     */
    autoInvestTriggerMinimum: Scalars['Int']
    /** The minimum dollar amount required for buy trades to execute. */
    minimumBuyTradeAmount: Scalars['Float']
    /** The minimum deposit amount for the initial deposit into this Invest account. */
    minimumInitialDeposit: Scalars['Float']
    /** The maximum deposit amount for the initial deposit into this Invest account. */
    maximumInitialDeposit: Scalars['Float']
    /**
     * A summary of account funding over time. Value is null if data is currently
     * unavailable.
     */
    fundingTotals: (AccountFundingTotals | null)
    /**
     * A summary of IRA contributions over time. Value is null if the account is not
     * a retirement account, or if the data is currently unavailable.
     */
    iraContributionTotals: (IraContributionTotals | null)
    /**
     * A summary of IRA contributions limits. Value is null if the account is not
     * a retirement account, or if the data is currently unavailable.
     */
    iraContributionLimits: (IraContributionLimits | null)
    /** List of applicable distribution reasons for an IRA account */
    iraDistributionReasons: (IraDistributionReasonEnum[] | null)
    /** Whether the account allows an external funding relationship to be configured. */
    allowsExternalFunding: Scalars['Boolean']
    /** Retrieve all external accounts linked to this investment account. */
    externalAccounts: ExternalAccountConnection
    /**
     * The most recent ACH relationship. Value is `null` when there have been no ACH
     * relationships.
     */
    lastAchRelationship: (AchRelationship | null)
    /** MOFO Account open tax lots */
    taxLots: (AccountTaxLotsConnection | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    /** If the account is a Custodial Account, this field contains the custodial account beneficiary information. */
    custodialAccountBeneficiary: (CustodialAccountBeneficiary | null)
    /** Received Securities entry point for an Account. Returns null if this is not an Invest Account. */
    receivedSecurities: (ReceivedSecurities | null)
    /** @deprecated Use `iraWithholding field on TransferParticipantDetails` instead. */
    iraWithholding: (IraWithholding | null)
    /** Entry point for Move Slices. The given Account must be of type Invest and have a Portfolio set. Null otherwise. */
    moveSlices: (MoveSlices | null)
    /** Banner used to display information about the account to the user */
    informationalBanner: (InformationBanner | null)
    /** A string that should display the account type along with the account number. */
    accountTypeWithNumberDescriptor: (Scalars['String'] | null)
    /** Ira actions - conversion & recharacterization entry point */
    fundingActions: (FundingActions | null)
    __typename: 'Account'
}

export type LotTypeEnum = 'OPEN' | 'CLOSED'


/** An account status. */
export type AccountStatusEnum = 'CLOSED' | 'NEW' | 'OPENED' | 'REJECTED'


/** An account originator. */
export type AccountOriginatorEnum = 'APEX' | 'M1'

export interface FundingActions {
    title: RichTextContent
    cards: (AppCard | null)[]
    __typename: 'FundingActions'
}


/** Employment status/where applicant is sourcing funds from. */
export type LoanIncomeSourcesEnum = 'EMPLOYED_FULL_TIME' | 'EMPLOYED_PART_TIME' | 'SELF_EMPLOYED' | 'RETIRED' | 'UNEMPLOYED'


/** ie pre-Approved, declined, in progress */
export interface LoanApplicationStatus {
    /** Status for the loan application. */
    status: (LoanApplicationStatusEnum | null)
    /**
     * @deprecated Field never implemented and not necessary.
     * Description for the loan application status.
     */
    statusDescription: (Scalars['String'] | null)
    __typename: 'LoanApplicationStatus'
}

export type LoanApplicationStatusEnum = 'QUEUED' | 'SUBMITTED' | 'OFFERS_PROVIDED' | 'OFFER_SELECTION_QUEUED' | 'OFFER_ACCEPTED' | 'APPROVED' | 'EXPIRED' | 'REJECTED' | 'REJECTED_CREDIT_FROZEN' | 'ERROR_SUBMITTING_APPLICATION' | 'ERROR_ACCEPTING_OFFER' | 'INCOME_VERIFICATION_REQUIRED' | 'WITHDRAWN' | 'MANUAL_REVIEW_REQUIRED'

export interface BorrowDashboard {
    /** The ID of this node. */
    id: Scalars['ID']
    __typename: 'BorrowDashboard'
}

export interface BorrowMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** An array of the content cards for the primary Borrow overview marketing screen. */
    marketingCards: ((MarketingCard | null)[] | null)
    /** An array of the footnotes for the primary Borrow overview marketing screen. */
    footnotes: ((Scalars['String'] | null)[] | null)
    /** Link to a reference informational page for content comparing Margin and Personal loans. */
    marginPersonalLoanInfoLink: (AppLink | null)
    /** M1 Bank disclosure content for the Borrow marketing screen. */
    bankDisclosure: (Scalars['String'] | null)
    /** Design & marketing assets. */
    assets: (BorrowMarketingDesignAssets | null)
    __typename: 'BorrowMarketingScreen'
}

export interface BorrowMarketingScreenV2 {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The header for the borrow marketing screen. */
    header: (Scalars['String'] | null)
    /** The bank disclosure for the borrow marketing screen. */
    bankDisclosure: (BorrowBankDisclosure | null)
    /** Link to a reference informational page for content comparing Margin and Personal loans. */
    marginPersonalLoanInfoLink: (AppLink | null)
    /** An array of the content cards for the borrow marketing screen. */
    productMarketingCards: ((ProductMarketingCard | null)[] | null)
    /** An array of the disclosures for the borrow marketing screen. */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    /** A nullable modal for users with more than one eligible invest account to select which one they want used for a margin loan */
    marginLoanModal: (MarginLoanModal | null)
    __typename: 'BorrowMarketingScreenV2'
}

export interface BorrowBankDisclosure {
    /** The text for the borrow bank disclosure */
    text: (Scalars['String'] | null)
    /** The icon for the borrow bank disclosure */
    icon: (AppImage | null)
    __typename: 'BorrowBankDisclosure'
}

export interface MarginLoanModal {
    /** A title for the margin loan modal */
    title: (Scalars['String'] | null)
    /** A subtitle for the margin loan modal */
    subtitle: (Scalars['String'] | null)
    /** An array of eligible invest accounts a margin loan */
    marginLoanAccounts: ((MarginLoanAccount | null)[] | null)
    /** The CTA label for the margin loan modal */
    ctaLabel: (Scalars['String'] | null)
    __typename: 'MarginLoanModal'
}

export interface MarginLoanAccount {
    /** The transferParticipantId of a transferParticipant for the margin loan modal */
    transferParticipantId: Scalars['String']
    /** The transferParticipantName of a transferParticipant for the margin loan modal */
    transferParticipantName: Scalars['String']
    __typename: 'MarginLoanAccount'
}

export interface BorrowMarketingDesignAssets {
    equalHousingIcon: (AppImage | null)
    __typename: 'BorrowMarketingDesignAssets'
}

export interface PersonalLoans {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Umbrella type for application flow */
    applicationFlow: (PersonalLoanApplicationFlow | null)
    /** Entry point for the Personal Loans Direct flow. */
    applicationFlowDirect: (PersonalLoanDirect | null)
    /** Information about the active application for the user. */
    activeApplication: (PersonalLoanApplicationDetails | null)
    /** A personal loan application. */
    application: (PersonalLoanApplicationDetails | null)
    /** Umbrella type for application flow */
    disbursementFlow: (PersonalLoanDisbursementFlow | null)
    /** A connection of loans for the user. */
    loans: (PersonalLoanConnection | null)
    /** Returns true if the user has the feature flag for AutoPay enabled. */
    isPersonalLoansAutoPayEnabled: (Scalars['Boolean'] | null)
    /** Applink to drive navigation to Personal Loans */
    applyForPersonalLoanCta: (AppLink | null)
    __typename: 'PersonalLoans'
}

export interface PersonalLoanApplicationFlow {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Information for the landing page */
    landingPage: (PersonalLoanLandingPage | null)
    /** The optional documents for the view terms and conditions landing page. */
    optionalDocuments: (RequiredDocumentsBundle | null)
    /** The required documents for the view terms and conditions landing page. */
    requiredDocuments: (RequiredDocumentsBundle | null)
    /** The required disclosures for the profile review page. */
    requiredDisclosures: (RequiredDocumentsBundle | null)
    /** What the user is requesting the loan for. */
    loanPurposeOptions: (LoanPurposeConnection | null)
    /** Details about the restrictions around a loan amount. */
    loanMinAndMaxDetails: (LoanMinAndMaxDetails | null)
    /** Options for the duration of the loan term. */
    loanTermOptions: ((LoanTermOption | null)[] | null)
    /** Content for the view loan terms screen after choosing an offer. */
    viewLoanTerms: (PersonalLoanViewTerms | null)
    /** Viewed pill for the personal loan application flow. */
    viewedPill: (AppPill | null)
    /** Not viewed pill for the personal loan application flow. */
    notViewedPill: (AppPill | null)
    /** Loan declined error screens for post-submission application states . */
    loanDeclinedErrorScreen: (PersonalLoanDeclinedErrorScreen | null)
    /** Loan ineligibility screen for ineligible applicants. */
    loanIneligibilityScreen: (PersonalLoanIneligibilityScreen | null)
    /** Loan application manual review screen for applicants requiring further manual review. */
    loanManualReviewScreen: (PersonalLoanApplicationManualReviewScreen | null)
    /** Information about how the user's income sources. */
    loanIncomeSources: (LoanIncomeSourcesEnum | null)
    /** True if additional questions should be included in origination */
    hasAdditionalOriginationQuestions: (Scalars['Boolean'] | null)
    /** Required flag to determine if the user should be asked for annual income within the PL application flow. */
    shouldAskForAnnualIncome: Scalars['Boolean']
    /**
     * Questions used to drive the Personal Loan in-app flow.
     * Clients should poll this field to retrieve up-to-date questions to surface to the user within this flow.
     */
    questions: ((PersonalLoanQuestion | null)[] | null)
    __typename: 'PersonalLoanApplicationFlow'
}

export interface PersonalLoanDeclinedErrorScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The title for the loan decline error screen. */
    title: (Scalars['String'] | null)
    /** The subtitle for the loan decline error screen. */
    subtitle: (Scalars['String'] | null)
    /** List of credit bureaus the user will need to contact to unfreeze their credit report. */
    bureaus: (Scalars['String'][] | null)
    /** The text for the optional check box on the loan decline error screen. */
    checkBoxText: (Scalars['String'] | null)
    /** An analytics event for following the step into the re-submit application flow. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** The destination AppLink for the loan decline error screen. */
    ctaLink: (AppLink | null)
    __typename: 'PersonalLoanDeclinedErrorScreen'
}

export interface PersonalLoanIneligibilityScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The title for the loan ineligibility screen. */
    title: (Scalars['String'] | null)
    /** The subtitle for the loan ineligibility screen. */
    subtitle: (Scalars['String'] | null)
    /**
     * @deprecated Use eligibilityCriteriaLink instead.
     * The reasons for ineligibility.
     */
    reasons: ((Scalars['String'] | null)[] | null)
    /** The link for eligibility criteria */
    eligibilityCriteriaLink: (AppLink | null)
    __typename: 'PersonalLoanIneligibilityScreen'
}

export interface PersonalLoanApplicationManualReviewScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The title for the manual review screen. */
    title: Scalars['String']
    /** The content for the manual review screen. */
    content: ((Scalars['String'] | null)[] | null)
    /** The cta link for the manual review screen */
    ctaLink: (AppLink | null)
    /** The illustration for the manual review screen */
    illustration: (AppImage | null)
    __typename: 'PersonalLoanApplicationManualReviewScreen'
}

export interface PersonalLoanDisbursementFlow {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Flag to determine if the given loan has any valid external accounts to disburse to. */
    hasDisbursementOption: (Scalars['Boolean'] | null)
    /** Content to drive the view for prompting the user to connect their bank. */
    promptForBankConnection: (PersonalLoansPromptForBankConnection | null)
    /** Information to be displayed on the Review Loan Screen. */
    reviewLoanScreen: (ReviewLoanScreen | null)
    /** Content for the loan disbursement of funds. */
    loanDisbursement: (PersonalLoanDisbursement | null)
    /** An analytics event to be fired upon loan acceptance completion before disbursement. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** Content for the post-disbursement AutoPay setup screen. */
    autoPaySetup: (PersonalLoansAutoPaySetup | null)
    __typename: 'PersonalLoanDisbursementFlow'
}

export interface PersonalLoansAutoPaySetup {
    /** Title for the set up AutoPay screen. */
    title: (Scalars['String'] | null)
    /** Subtitle for the set up AutoPay screen. */
    subtitle: (Scalars['String'] | null)
    /** List of valid transfer participants for setting up AutoPay for a personal loan. */
    autoPayAccountList: ((TransferParticipant | null)[] | null)
    /** App informational card with AutoPay details. */
    autoPayInformationalCard: (AppInformationalMessageCard | null)
    /**
     * @deprecated Field was a part of older designs but is no longer used`.
     * Payment schedule table values for the set up AutoPay screen.
     */
    paymentSchedule: ((PersonalLoanPaymentScheduleEntry | null)[] | null)
    __typename: 'PersonalLoansAutoPaySetup'
}

export interface PersonalLoanLandingPage {
    /** Information for the bullet points to display on the screen */
    bulletPoints: ((PersonalLoanBulletPoint | null)[] | null)
    /** A required disclaimer for the loan application. */
    loanDisclaimer: Scalars['String']
    /** An analytics event for opening the `Terms of Use` document on the personal loans application landing page. */
    analyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'PersonalLoanLandingPage'
}

export interface PersonalLoanBulletPoint {
    /**
     * @deprecated No longer included in designs. Clients should omit
     * The icon to display as the bullet point.
     */
    icon: (AppImage | null)
    /** The copy to display for the bullet point. */
    copy: (Scalars['String'] | null)
    __typename: 'PersonalLoanBulletPoint'
}

export interface LoanTermOption {
    /** Length of the loan term in months. */
    value: (Scalars['Float'] | null)
    /** String description of the value, formatted in years and months. */
    description: (Scalars['String'] | null)
    __typename: 'LoanTermOption'
}

export interface PersonalLoanDisbursement {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Title for the loan funds disbursement screen. */
    title: (Scalars['String'] | null)
    /** Subtitle for the loan funds disbursement screen. */
    subtitle: (Scalars['String'] | null)
    /** List of valid transfer destination participants for the loan funds disbursement. */
    destinationList: ((TransferParticipant | null)[] | null)
    /**
     * @deprecated Removing, no longer displaying to user.
     * Disclaimer text for time limit rescinding.
     */
    disclaimerText: (Scalars['String'] | null)
    /** Continue button CTA for the loan funds disbursement screen. */
    continueCta: (Scalars['String'] | null)
    __typename: 'PersonalLoanDisbursement'
}

export interface PersonalLoansPromptForBankConnection {
    /** AppImage for this screen. */
    image: (AppImage | null)
    /** Header content for this screen. */
    header: (Scalars['String'] | null)
    /** Subheader content for this screen. */
    subheader: (Scalars['String'] | null)
    /** Image associated with the subheader. */
    subheaderImage: (AppImage | null)
    /** AppLink for the main CTA. If null, render a generic error. */
    primaryContinueLink: AppLink
    /** AppLink for the secondary CTA. If null, render a generic error. */
    secondaryContinueLink: AppLink
    __typename: 'PersonalLoansPromptForBankConnection'
}

export interface PersonalLoanViewTerms {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Title for the view loan terms screen. */
    title: (Scalars['String'] | null)
    /** Subtitle for the view loan terms screen. */
    subtitle: (Scalars['String'] | null)
    /** The text for the cta on the view loan terms screen. */
    continueCta: (Scalars['String'] | null)
    /**
     * @deprecated The UI this field supported has been removed.
     * The checkbox agreement text for the cta on the view loan terms screen.
     */
    checkBoxText: (Scalars['String'] | null)
    /** The header for all loan documents on the view loan terms screen */
    viewLoanDocumentsHeader: (Scalars['String'] | null)
    /**
     * @deprecated Use `viewLoanDocumentsHeader` instead.
     * The header for the loan agreement on the view loan terms screen
     */
    viewLoanAgreementHeader: (Scalars['String'] | null)
    /**
     * @deprecated Use `viewLoanDocumentsHeader` instead.
     * The header for the additional documents on the view loan terms screen
     */
    viewAdditionalTermsHeader: (Scalars['String'] | null)
    /** Chart entry values for the view loan terms screen. */
    loanDetails: ((PersonalLoanViewTermsTableEntry | null)[] | null)
    /** An error message to display if the user has not viewed the T&Cs. */
    notViewedErrorMessage: (PersonalLoanViewTermsDocumentsError | null)
    /** Viewed pill for the document set. */
    viewedPill: (AppPill | null)
    /** Not viewed pill for the document set. */
    notViewedPill: (AppPill | null)
    /** Loan agreement document for the view loan terms screen. */
    loanAgreement: (RequiredDocumentsBundle | null)
    /** Loan agreement document for the view loan terms screen. */
    dynamicLoanAgreementPresignedUrl: (AppLink | null)
    /** Additional loan terms documents for the view loan terms screen. */
    additionalTerms: (RequiredDocumentsBundle | null)
    /** Payment schedule table values for the view loans term screen. */
    paymentSchedule: ((PersonalLoanPaymentScheduleEntry | null)[] | null)
    /**
     * @deprecated Field is no longer used, all details returned in `paymentSchedule`.
     * Final payment table values for the view loans term screen.
     */
    finalPayment: ((PersonalLoanPaymentScheduleEntry | null)[] | null)
    __typename: 'PersonalLoanViewTerms'
}

export interface PersonalLoanViewTermsTableEntry {
    /** Title for the view loan terms table entry */
    title: (Scalars['String'] | null)
    /** Subtitle for the view loan terms table entry */
    subtitle: (Scalars['String'] | null)
    /** Loan value for the view loan terms table entry */
    value: (Scalars['String'] | null)
    __typename: 'PersonalLoanViewTermsTableEntry'
}

export interface PersonalLoanViewTermsDocumentsError {
    /** Copy to display. */
    copy: (Scalars['String'] | null)
    /** Icon to display. */
    icon: (AppImage | null)
    __typename: 'PersonalLoanViewTermsDocumentsError'
}

export interface PersonalLoanPaymentScheduleEntry {
    /** Label for the payment schedule table entry. */
    label: (Scalars['String'] | null)
    /** Value for the payment schedule table entry. */
    value: (Scalars['String'] | null)
    __typename: 'PersonalLoanPaymentScheduleEntry'
}

export interface LoanPurposeConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((LoanPurposeEdge | null)[] | null)
    __typename: 'LoanPurposeConnection'
}

export interface LoanPurposeEdge {
    /** The item at the end of the edge */
    node: (LoanPurpose | null)
    __typename: 'LoanPurposeEdge'
}


/** What the loan will be utilized for. */
export interface LoanPurpose {
    /** The title for the option. */
    title: (Scalars['String'] | null)
    /** The icon for the option. */
    icon: (AppImage | null)
    /** The subtitle for the option. */
    subtitle: (Scalars['String'] | null)
    /** The corresponding enum for the loan purpose. */
    value: (LoanPurposeEnum | null)
    __typename: 'LoanPurpose'
}

export type LoanPurposeEnum = 'DEBT_CONSOLIDATION' | 'HOME_IMPROVEMENT' | 'MEDICAL_EXPENSES' | 'MOVING_OR_RELOCATING' | 'VACATION' | 'SPECIAL_OCCASION' | 'MAJOR_PURCHASE'

export interface LoanMinAndMaxDetails {
    /** The minimum amount that can be requested for a personal loan. */
    minAmount: (Scalars['Float'] | null)
    /** The maximum amount that can be requested for a personal loan. */
    maxAmount: (Scalars['Float'] | null)
    /** A description of the minimum and maximum amounts that can be requested for a personal loan. */
    rangeDescription: (Scalars['String'] | null)
    __typename: 'LoanMinAndMaxDetails'
}

export interface PersonalLoanApplicationDetails {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The application id for the application */
    applicationId: Scalars['String']
    /** The loan application status. */
    status: (LoanApplicationStatus | null)
    /** Credit check disclaimer */
    creditCheckDisclaimer: Scalars['String']
    /** Information about the loan offers for the application. */
    applicationOffers: (PreApprovalLoanApplicationOfferConnection | null)
    /** Analytics event to be logged upon application submission completion. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** The loan associated with the active application. */
    loan: (PersonalLoan | null)
    /**
     * @deprecated Should be replaced with loanDisclosure for updated PL origination flows.
     * The disclosure text to be displayed on the loan application offers page.
     */
    disclosureFooter: (Scalars['String'] | null)
    /**
     * The title for the select offer screen
     * ex: Fantastic! Here are your pre-approved offers:
     */
    loanTitle: Scalars['String']
    /**
     * The subtitle for the select offer screen
     * ex: Offers are good for 30 days, or you can withdraw your application now.
     */
    loanSubtitle: RichTextContent[]
    /**
     * The dislosure to show to the user on the re-designed select offer screen
     * ex: Offers from B2 Bank, NA, Member FDIC, Equal Opportunity Lender. Offers aren't guaranteed and are subject to verification through M1's credit model and hard credit check.\n\nM1 is not a bank.
     */
    loanDisclosure: (Scalars['String'][] | null)
    __typename: 'PersonalLoanApplicationDetails'
}

export interface PreApprovalLoanApplicationOfferConnection {
    pageInfo: PageInfo
    edges: ((PreApprovalLoanApplicationOfferEdge | null)[] | null)
    __typename: 'PreApprovalLoanApplicationOfferConnection'
}

export interface PreApprovalLoanApplicationOfferEdge {
    node: (PreApprovalLoanApplicationOffer | null)
    __typename: 'PreApprovalLoanApplicationOfferEdge'
}

export interface PreApprovalLoanApplicationOffer {
    /** The ID of this node. */
    id: Scalars['ID']
    /** An id for the application associated with the offer. */
    applicationId: Scalars['String']
    /** The loan offer amount. */
    amount: Scalars['Float']
    /** The loan offer amount formatted. */
    formattedAmount: Scalars['String']
    /** The APR for the loan offer. */
    annualPercentageRate: Scalars['Float']
    /** The monthly payment for the loan offer. */
    monthlyPayment: Scalars['Float']
    /** The monthly payment for the loan offer, formatted in USD. */
    formattedMonthlyPayment: Scalars['String']
    /** The duration of the loan in months. */
    monthlyDuration: Scalars['Int']
    /** The duration of the loan in years and months. */
    formattedMonthlyDuration: Scalars['String']
    /** The short description of the loan details. */
    shortLoanDetailDescription: Scalars['String']
    /**
     * Returns the loan amount, percentage, and duration in a formatted string
     * ex: $XX,XXX / XX% APR / X years and Y months
     */
    offerTitle: Scalars['String']
    /**
     * Returns the number of monthly payments and payment amount in a formatted string
     * ex: That's XX monthly payments of $XXX.
     */
    offerSubtitle: Scalars['String']
    /**
     * The amount and description of the loan
     * ex: formattedValue: $24,000, formattedSubtitle: Loan amount
     */
    formattedAmountInfo: PersonalLoanOfferValue
    /**
     * The formatted monthly payment and description
     * ex: formattedValue: $609, formattedSubtitle: monthly payment
     */
    formattedMonthlyPaymentInfo: PersonalLoanOfferValue
    /**
     * The formatted APR and description
     * ex: formattedValue: 18%, formattedSubtitle: APR
     */
    formattedAnnualPercentageInfo: PersonalLoanOfferValue
    /**
     * The formatted term length and description
     * ex: formattedValue: 5 yrs, formattedSubtitle: Term
     */
    formattedDurationInfo: PersonalLoanOfferValue
    /**
     * An optional app pill that adds extra marketing flavor to the offer
     * ex: Lowest monthly payment
     */
    marketingPill: (AppPill | null)
    __typename: 'PreApprovalLoanApplicationOffer'
}

export interface PersonalLoanOfferValue {
    /**
     * Formatted value
     * ex: $24,000
     */
    formattedValue: Scalars['String']
    /**
     * The description text that goes along with the formatted value
     * ex: Loan amount
     */
    formattedSubtitle: Scalars['String']
    __typename: 'PersonalLoanOfferValue'
}

export interface PersonalLoanConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((PersonalLoanEdge | null)[] | null)
    __typename: 'PersonalLoanConnection'
}

export interface PersonalLoanEdge {
    /** The item at the end of the edge */
    node: (PersonalLoan | null)
    __typename: 'PersonalLoanEdge'
}

export interface PersonalLoan {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Status for the loan application. */
    status: (PersonalLoanStatusEnum | null)
    /** The formatted principal balance. */
    formattedPrincipalBalance: (LoanDetailValue | null)
    /**
     * @deprecated Clients should use the loan `status` to determine routing
     * Check whether the user has accepted the loan
     */
    hasAcceptedLoan: (Scalars['Boolean'] | null)
    /** Loan details to be displayed. */
    subHeaderDetails: ((LoanDetailValue | null)[] | null)
    /** Check whether the loan is active */
    isActive: (Scalars['Boolean'] | null)
    /** Returns the instance of AutoPay for the specific loan, if it exists. */
    autoPayInstance: (ScheduledTransferRule | null)
    /** Loan details to be displayed. */
    additionalDetails: ((LoanDetailValue | null)[] | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    /** Late payment warning message if the loan is past due. */
    paymentWarningMessage: (Scalars['String'] | null)
    /** (Mobile only) Loan quick actions. */
    quickActions: ((QuickActionLink | null)[] | null)
    /** AppLinks to be displayed on the manage loan and overview pages. */
    links: (PersonalLoanAdditionalLinks | null)
    /** Manage Loan Actions */
    manageLoanActions: ((ManageLoanActionSection | null)[] | null)
    /** Personal loan transactions to be displayed on the overview screen. */
    transactions: (LoanTransactionEntryConnection | null)
    /** The account category. */
    accountCategory: AccountCategoryEnum
    /** Boolean for mobile clients to use on the overview Borrow menu to indicate a late personal loan. */
    isLatePersonalLoan: (Scalars['Boolean'] | null)
    /** Boolean for mobile clients to use on the overview Borrow menu to indicate a personal loan that has failed disbursement. */
    isFailedDisbursementPersonalLoan: (Scalars['Boolean'] | null)
    /** The name of the account. */
    name: Scalars['String']
    /** A descriptor for the account, for help identifying in a list. */
    descriptor: (Scalars['String'] | null)
    /** A message to be displayed on the loan overview screen. */
    autoPayMessage: (BorrowPromotionalMessage | null)
    /** Design assets. */
    assets: (PersonalLoanDesignAssets | null)
    /** Details for the Personal Loan Product Landing Page */
    personalLoanProductLandingPage: (PersonalLoanProductLandingPage | null)
    __typename: 'PersonalLoan'
}

export interface PersonalLoanProductLandingPage {
    /** The title for the Personal Loan Product Landing Page */
    title: (Scalars['String'] | null)
    /** The header for the Personal Loan Product Landing Page */
    header: (ProductAccountLandingPageHeader | null)
    /** The account details for the Personal Loan Product Landing Page */
    accountDetails: ((TabularDataItem | null)[] | null)
    /** An array of informational banners for the Personal Loan Product Landing Page */
    banners: ((InformationBanner | null)[] | null)
    /** The graph details for the Personal Loan Product Landing Page */
    graphDetails: (PersonalLoanLandingPageGraphDetails | null)
    /** The details for the Loan Details card on the Personal Loan Product Landing Page (Web only) */
    loanDetails: (TabularDataSection | null)
    /** An array of the disclosures for the Personal Loan Product Landing Page */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    /** The mobile floating action button details for the Personal Loan Product Landing Page */
    floatingActionButton: (AppNavigationItem | null)
    /** Common transactions to be displayed on the Personal Loan Product Landing Page */
    transactions: (CommonTransactionEntryConnection | null)
    /** Copy to be displayed when there are no transactions on the Personal Loan Product Landing Page */
    transactionsEmptyState: (CommonTransactionsEmptyState | null)
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards: (AppCard[] | null)
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards: (AppCard[] | null)
    __typename: 'PersonalLoanProductLandingPage'
}

export interface PersonalLoanLandingPageGraphDetails {
    /** The title for the Product Account Graph Details */
    title: (Scalars['String'] | null)
    /** The percentage for the Product Account Graph */
    percentage: (Scalars['Float'] | null)
    /** The upperLimit for the Product Account Graph */
    upperLimitAmount: (Scalars['Float'] | null)
    /** The currentAmount for the Product Account Graph */
    currentAmount: (Scalars['Float'] | null)
    /** The description for the Product Account Graph Details */
    description: (Scalars['String'] | null)
    /** The tooltip for the Product Account Graph Details */
    tooltip: (AppTooltip | null)
    __typename: 'PersonalLoanLandingPageGraphDetails'
}

export interface PersonalLoanCommonTransactionMetadata {
    /** The ID on Personal Common Transaction Metadata */
    id: Scalars['ID']
    /** The amount paid to principal on Personal Loan Common Transaction Metadata */
    toPrincipal: (Scalars['String'] | null)
    /** The amount paid to interest on Personal Loan Common Transaction Metadata */
    toInterest: (Scalars['String'] | null)
    __typename: 'PersonalLoanCommonTransactionMetadata'
}

export type PersonalLoanStatusEnum = 'ACTIVE' | 'CLOSED' | 'FROZEN' | 'EXPIRED' | 'CREATED' | 'CREATION_PENDING' | 'LOAN_ACCEPTANCE_QUEUED' | 'LOAN_ACCEPTED' | 'DISBURSEMENT_READY' | 'DISBURSEMENT_QUEUED' | 'WITHDRAWN'

export interface PersonalLoanDesignAssets {
    equalHousingIcon: (AppImage | null)
    __typename: 'PersonalLoanDesignAssets'
}

export interface PersonalLoanAdditionalLinks {
    /** AppLink to be displayed on the manage loan details screen. */
    viewDocuments: (AppLink | null)
    /** AppLink to be displayed on the SCRA contact support screen. */
    scraContactSupport: (AppLink | null)
    __typename: 'PersonalLoanAdditionalLinks'
}

export interface LoanTransactionEntryConnection {
    total: (Scalars['Int'] | null)
    pageInfo: PageInfo
    edges: ((LoanTransactionEntryEdge | null)[] | null)
    __typename: 'LoanTransactionEntryConnection'
}

export interface LoanTransactionEntryEdge {
    cursor: Scalars['String']
    node: (LoanTransactionEntry | null)
    __typename: 'LoanTransactionEntryEdge'
}

export interface LoanTransactionEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The title of this loan transaction activity entry. */
    title: (Scalars['String'] | null)
    /** The type of this loan transaction activity entry. */
    paymentType: (PersonalLoanPaymentTypeEnum | null)
    /** The status of this loan transaction activity entry. */
    status: (AppPill | null)
    /** The formatted date for this loan transaction activity entry. */
    activityDate: (Scalars['String'] | null)
    /** The AppImage icon for this loan transaction activity entry. */
    icon: (AppImage | null)
    /** Principal paid for this loan transaction activity entry. */
    principalPaid: (Scalars['Float'] | null)
    /** Interest paid for this loan transaction activity entry. */
    interestPaid: (Scalars['Float'] | null)
    /** Total amount paid for this loan transaction activity entry. */
    totalPaid: (Scalars['Float'] | null)
    /** Information for the loan transaction activity entry details view. */
    details: (LoanTransactionEntryDetails | null)
    __typename: 'LoanTransactionEntry'
}


/** Type of payment or disbursement transaction. */
export type PersonalLoanPaymentTypeEnum = 'LOAN_DISBURSEMENT' | 'USER_PAYMENT' | 'CHECK_PAYMENT' | 'AUTO_PAYMENT'

export interface LoanTransactionEntryDetails {
    /** Amount for the transaction entry details screen. */
    amount: (Scalars['Float'] | null)
    /** Transaction status pill for the details screen. */
    statusPill: (AppPill | null)
    /** Indicator if the given payment has failed. */
    isFailed: (Scalars['Boolean'] | null)
    /** Array of optional additional details for the loan transaction entry details screen. */
    additionalDetails: ((LoanTransactionEntryDetailsItem | null)[] | null)
    __typename: 'LoanTransactionEntryDetails'
}


/** Information and message for a Borrow account. */
export interface BorrowPromotionalMessage {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Title for the Borrow promotional message. */
    title: (Scalars['String'] | null)
    /** Body text for the Borrow promotional message. */
    body: (Scalars['String'] | null)
    /** Link for the Borrow promotional message. */
    link: (AppLink | null)
    __typename: 'BorrowPromotionalMessage'
}

export interface LoanTransactionEntryDetailsItem {
    /** Label for the loan transaction entry details item. */
    label: (Scalars['String'] | null)
    /** Value for the loan transaction entry details item. */
    value: (Scalars['String'] | null)
    __typename: 'LoanTransactionEntryDetailsItem'
}

export interface ManageLoanActionSection {
    /** Title for the manage loan category */
    title: Scalars['String']
    /** Array of loan actions for a specific category */
    loanActions: ((ManageLoanAction | null)[] | null)
    __typename: 'ManageLoanActionSection'
}

export interface ManageLoanAction {
    /** Icon for the action. */
    icon: (AppImage | null)
    /** Title for the action. */
    title: (Scalars['String'] | null)
    /** Subtitle for the action. */
    subtitle: (Scalars['String'] | null)
    /** Link for the action. */
    link: (AppLink | null)
    __typename: 'ManageLoanAction'
}

export interface LoanDetailValue {
    /** Value formatted as a string. */
    value: (Scalars['String'] | null)
    /** The title for the loan detail. */
    title: (Scalars['String'] | null)
    /** The icon for the loan detail. */
    icon: (AppImage | null)
    /** The tooltip for the loan detail, if required. */
    tooltip: (LoanTooltip | null)
    __typename: 'LoanDetailValue'
}

export interface QuickActionLink {
    /** The icon for the quick action link. */
    icon: (AppImage | null)
    /** The deeplink for the quick action. */
    link: (AppLink | null)
    __typename: 'QuickActionLink'
}


/** Tooltip to be used for loan detail information. */
export interface LoanTooltip {
    icon: (AppImage | null)
    copy: ((Scalars['String'] | null)[] | null)
    __typename: 'LoanTooltip'
}


/** Information to be displayed on the Review Loan Screen */
export interface ReviewLoanScreen {
    /** Information about the loan terms to display. */
    details: ((ReviewLoanDetail | null)[] | null)
    /** Congratulatory copy to display. */
    customizedMessage: ((Scalars['String'] | null)[] | null)
    /** Returns an app link to the document center. */
    loanAgreementDocLink: (AppLink | null)
    /** Information about the AutoPay details for the user, if applicable. */
    autoPayDetails: ((ReviewLoanDetail | null)[] | null)
    __typename: 'ReviewLoanScreen'
}

export interface ReviewLoanDetail {
    /** Label for the loan detail. */
    label: (Scalars['String'] | null)
    /** Value for the loan detail. */
    value: (Scalars['String'] | null)
    __typename: 'ReviewLoanDetail'
}

export type PersonalLoanDirectQuestionEnum = 'NAME_EMAIL_PASSWORD' | 'LOAN_USE_AMOUNT_AND_DURATION' | 'HOME_ADDRESS' | 'PHONE_NUMBER' | 'PHONE_NUMBER_VERIFICATION' | 'DATE_OF_BIRTH_CITIZENSHIP' | 'ANNUAL_INCOME_MONTHLY_RENT_MORTGAGE' | 'SOCIAL_SECURITY_NUMBER' | 'PRE_APPROVED_OFFERS' | 'EMPLOYMENT_STATUS_AND_INFO' | 'AVAILABLE_CASH' | 'FINANCIAL_DISCLOSURES' | 'HARD_PULL_CONSENT' | 'BANK_CONNECTION' | 'BANK_DEPOSIT' | 'AUTOPAY' | 'ACCEPT_LOAN_OFFER' | 'RECEIPT'

export interface PersonalLoanDirect {
    /** Status for a user's active application. Null if no application currently exists. */
    activeApplicationStatus: (LoanApplicationStatusEnum | null)
    /**
     * Questions used to drive the PersonalLoanDirect flow.
     * Clients should poll this field to retrieve up-to-date questions to surface to the user within this flow.
     */
    questions: ((PersonalLoanDirectQuestion | null)[] | null)
    __typename: 'PersonalLoanDirect'
}

export interface PersonalLoanDirectQuestion {
    /**
     * An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis.
     * This field serves as the ID for the given question which is why it is required.
     */
    questionType: PersonalLoanDirectQuestionEnum
    /** Title screen for the question. */
    title: (Scalars['String'] | null)
    /** Subtitle copy of the given question. */
    subtitle: (Scalars['String'] | null)
    /** Footer copy of the given question. */
    footer: (Scalars['String'] | null)
    /** Links required for CTAs if outside of the app */
    link: (AppLink | null)
    /** Image to display on personal loan direct question page if there is one */
    image: (AppImage | null)
    /** Copy to be rendered for the continue CTA. */
    continueLabel: (Scalars['String'] | null)
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel: (Scalars['String'] | null)
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType: (PersonalLoanDirectQuestionEnum | null)
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType: (PersonalLoanDirectQuestionEnum | null)
    __typename: 'PersonalLoanDirectQuestion'
}

export type PersonalLoanQuestionEnum = 'LOAN_DISCLOSURES' | 'LOAN_USE' | 'LOAN_AMOUNT_AND_DURATION' | 'ANNUAL_INCOME' | 'MONTHLY_RENT_MORTGAGE' | 'LOAN_REVIEW' | 'PRE_APPROVED_OFFERS' | 'EMPLOYMENT_STATUS' | 'EMPLOYMENT_INFO' | 'FINANCIAL_DISCLOSURES' | 'HARD_PULL_CONSENT' | 'BANK_CONNECTION' | 'BANK_DEPOSIT' | 'AUTOPAY' | 'ACCEPT_LOAN_OFFER' | 'RECEIPT'

export interface PersonalLoanQuestion {
    /**
     * An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis.
     * This field serves as the ID for the given question which is why it is required.
     */
    questionType: PersonalLoanQuestionEnum
    /** Title screen for the question. */
    title: (Scalars['String'] | null)
    /** Subtitle copy of the given question. */
    subtitle: (Scalars['String'] | null)
    /** Footer copy of the given question. */
    footer: (Scalars['String'] | null)
    /** Copy to be rendered for the continue CTA. */
    continueLabel: (Scalars['String'] | null)
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel: (Scalars['String'] | null)
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType: (PersonalLoanQuestionEnum | null)
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType: (PersonalLoanQuestionEnum | null)
    __typename: 'PersonalLoanQuestion'
}

export interface CommonTransactionDetails {
    /** The transaction ID */
    id: Scalars['ID']
    /** The header for a Common Transaction Details instance */
    header: (Scalars['String'] | null)
    /** The description for a Common Transaction Details instance */
    description: ((RichTextContent | null)[] | null)
    /** The status on a Common Transaction */
    status: (CommonTransactionStatusEnum | null)
    /** The primary details information for a Common Transaction instance */
    primaryDetails: (CommonTransactionPrimaryInfo | null)
    /** The array of detail sections for a Common Transaction Details instance */
    detailSections: ((CommonTransactionDetailSection | null)[] | null)
    /** The link for a Common Transaction Details instance (ex: 'Report an issue with this transaction') */
    link: (AppNavigationItem | null)
    __typename: 'CommonTransactionDetails'
}

export interface CommonTransactionPrimaryInfo {
    /** The amount details for a Common Transaction Primary Info section */
    amount: (CommonTransactionPrimaryInfoAmount | null)
    /** The status details for a Common Transaction Primary Info section */
    status: (CommonTransactionPrimaryInfoStatus | null)
    __typename: 'CommonTransactionPrimaryInfo'
}

export interface CommonTransactionPrimaryInfoAmount {
    /** The label for a Common Transaction Primary Info Amount section */
    label: (Scalars['String'] | null)
    /** The value for a Common Transaction Primary Info Amount section */
    value: (CommonTransactionAmount | null)
    __typename: 'CommonTransactionPrimaryInfoAmount'
}

export interface CommonTransactionPrimaryInfoStatus {
    /** The label for a Common Transaction Primary Info Status section */
    label: (Scalars['String'] | null)
    /** The pill for a Common Transaction Primary Info Status section */
    pill: (AppPill | null)
    __typename: 'CommonTransactionPrimaryInfoStatus'
}

export interface CommonTransactionDetailSection {
    /** The header for a Common Transaction Detail Section (ex: 'Payment Breakdown') */
    header: (Scalars['String'] | null)
    /** The details array for a Common Transaction Detail Section */
    details: ((CommonTransactionDetail | null)[] | null)
    __typename: 'CommonTransactionDetailSection'
}

export interface CommonTransactionDetail {
    /** The label for a Common Transaction Detail (ex: 'To principal') */
    label: (Scalars['String'] | null)
    /** The value for a Common Transaction Detail */
    value: (CommonTransactionDetailValue | null)
    /** The metadata for a Common Transaction Detail as an array of strings (ex: for address, phone number, and website) */
    metadata: ((Scalars['String'] | null)[] | null)
    /** The pill for a Common Transaction Detail (ex: Rewards tier pill) */
    pill: (AppPill | null)
    /** The reward tier pill for a Credit Card Common Transaction Detail */
    rewardTierPill: (CreditCardRewardsAppPill | null)
    /** The disclaimers for a Common Transaction Detail (ex: Rewards tier pill) */
    disclaimers: ((RichTextContent | null)[] | null)
    __typename: 'CommonTransactionDetail'
}

export interface CommonTransactionDetailValue {
    /** The icon for a Common Transaction Detail Value */
    icon: (AppImage | null)
    /** The text for a Common Transaction Detail Value */
    text: (Scalars['String'] | null)
    __typename: 'CommonTransactionDetailValue'
}

export interface CommonTransactionEntryConnection {
    /** Information to aid in pagination */
    pageInfo: PageInfo
    /** The table headers for a Common Transactions table */
    tableHeaders: ((CommonTransactionHeader | null)[] | null)
    /** The transaction edges of a Common Transaction Connection */
    edges: ((CommonTransactionEntryEdge | null)[] | null)
    __typename: 'CommonTransactionEntryConnection'
}

export interface CommonTransactionHeader {
    /** The title of a Common Transaction table header */
    title: (Scalars['String'] | null)
    /** The alignment of a Common Transaction table header/cells in the column */
    align: (CommonTransactionHeaderAlignEnum | null)
    __typename: 'CommonTransactionHeader'
}

export interface CommonTransactionEntryEdge {
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    /** The transaction node of a Common Transaction */
    node: (CommonTransactionEntry | null)
    __typename: 'CommonTransactionEntryEdge'
}

export type CommonTransactionEntry = (CommonTransaction) & { __isUnion?: true }

export type CommonTransactionHeaderAlignEnum = 'LEFT' | 'CENTER' | 'RIGHT'

export interface CommonTransactionAmount {
    /** The color for a Common Transaction Amount */
    color: (Scalars['String'] | null)
    /** The text for a Common Transaction Amount */
    text: (Scalars['String'] | null)
    __typename: 'CommonTransactionAmount'
}

export type CommonTransactionMetadata = (PersonalLoanCommonTransactionMetadata | CreditCardCommonTransactionMetadata) & { __isUnion?: true }

export type CommonTransactionStatusEnum = 'CREATED' | 'PENDING' | 'CANCELED' | 'FAILED' | 'COMPLETE'

export interface CommonTransaction {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The icon for a Common Transaction */
    icon: (AppImage | null)
    /** The title for a Common Transaction */
    title: (Scalars['String'] | null)
    /** The subtitle for a Common Transaction */
    subtitle: (Scalars['String'] | null)
    /** The amount for a Common Transaction */
    amount: (CommonTransactionAmount | null)
    /** The status for a Common Transaction */
    status: (CommonTransactionStatusEnum | null)
    /** The pill for a Common Transaction */
    pill: (AppPill | null)
    /** The metadata for a Common Transaction */
    metadata: (CommonTransactionMetadata | null)
    /** The additional details for a Common Transaction */
    details: (CommonTransactionDetails | null)
    /** The group the Common Transaction belongs to (will help clients with grouping logic) */
    groupBy: Scalars['String']
    /** If available, a URL to a logo image that represents the Common Transaction */
    logoUrl: (Scalars['String'] | null)
    __typename: 'CommonTransaction'
}

export interface CommonTransactionsEmptyState {
    /** The title of the transactions empty state */
    title: ((RichTextContent | null)[] | null)
    /** The subtitle of the transactions empty state */
    subtitle: ((RichTextContent | null)[] | null)
    __typename: 'CommonTransactionsEmptyState'
}

export interface Credit {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Credit Card feature flag. If `true`, show credit card related features. If `false`, hide them from UI. */
    isEnabled: Scalars['Boolean']
    /** Returns information pertinent to a user's eligibility to apply for a Credit Card. */
    isEligible: Scalars['Boolean']
    /**
     * @deprecated Waitlist no longer used
     * Returns true if the user is already enrolled and on the Credit Card marketing waitlist.
     */
    isOnCreditCardWaitlist: Scalars['Boolean']
    /** Returns true if the virtual cards feature flag is enabled. */
    isVirtualCardsAvailable: Scalars['Boolean']
    /** True if there is at least one active Credit Card account. */
    hasActiveAccount: Scalars['Boolean']
    /** True if there is at least one suspended Credit Card account. */
    hasSuspendedAccount: Scalars['Boolean']
    /** True if there is at least one terminated Credit Card account. */
    hasClosedAccount: Scalars['Boolean']
    /** True if the user has AutoPay enabled. */
    isAutoPayEnabled: (Scalars['Boolean'] | null)
    /** True if the user meets the criteria to engage in push provisioning. */
    isEligibleForPushProvisioning: Scalars['Boolean']
    /** Returns the user's current AutoPay instance, if it exists. */
    autoPayInstance: (ScheduledTransferRule | null)
    /** Applicant's information that will be used when submitting the Credit Card application. */
    applicantInformation: (CreditCardApplicantInformation | null)
    /** Returns the documents and agreements that a user must accept to in order to apply for a credit card. */
    termsAndConditions: RequiredDocumentsBundle
    /**
     * @deprecated Waitlist no longer used
     * Links the user to the current terms and conditions associated with the Credit Card waitlist.
     */
    waitlistTermsAndConditions: AppLink
    /**
     * @deprecated Use `activeApplication` instead.
     * An array of credit card application ID's for the user.
     */
    applicationsForUser: (CreditCardApplicationDetailsConnection | null)
    /** Will return an instance of `CreditCardApplicationDetails` if the user has an active credit card application. */
    activeApplication: (CreditCardApplicationDetails | null)
    /** Will return an instance of `CreditCardActiveOffer` if a user has an active credit card offer available to them. */
    activeOffer: (CreditCardActiveOffer | null)
    /**
     * @deprecated Use `activeAccount` instead.
     * Will return a list of `CreditCardAccount`s, or `null` if a user does not have any accounts.
     */
    accounts: (CreditCardAccountConnection | null)
    /** Will return an instance of `CreditCardAccount` if the user has an active or suspended credit card account. */
    activeAccount: (CreditCardAccount | null)
    /**
     * @deprecated Waitlist confirmation screen no longer used
     * All copy relating to the Credit Card waitlist confirmation screen.
     */
    creditCardWaitlistConfirmation: (CreditCardWaitlistConfirmationContent | null)
    /**
     * @deprecated Waitlist marketing screen no longer used
     * All copy relating to the initial Credit Card waitlist screen.
     */
    creditCardWaitlistMarketingScreen: (CreditCardWaitlistMarketingScreen | null)
    /** Content for the Credit Card Onboarding flow. */
    onboardingContent: (CreditCardOnboardingContent | null)
    /** Content for the terminated Credit Card account screen when a user's account has been deleted. */
    closedAccountContent: (CreditCardClosedAccountContent | null)
    /** Content for the suspended or closed Credit Card account banner when a user's account still exists but is in one of these two suspended states. */
    suspendedAccountContent: (CreditCardSuspendedAccountContent | null)
    /** Content for the Manage Card screen. */
    manageCard: (CreditCardManageCardScreen | null)
    /** Content for the Manage Card Details screen. */
    manageCardDetails: (CreditCardManageCardDetailsScreen | null)
    /** Content for the Rewards Portal screen. */
    rewardsPortal: (CreditCardRewardsPortalScreen | null)
    /** A breakdown of rewards programs for a user by owned or unowned securities. */
    rewardsProgramBreakdownByOwnedOrUnowned: (CreditCardRewardsProgramBreakdown | null)
    /**
     * @deprecated Marketing banner abandoned
     * Content for the Credit Card marketing banner.
     */
    creditCardWaitlistMarketingBanner: (CreditCardWaitlistMarketingBanner | null)
    /**
     * @deprecated No longer used by clients. Will be removed.
     * All copy related to just the Credit Card apply now screen.
     */
    creditCardApplyNowMarketingScreen: (CreditCardApplyNowMarketingScreen | null)
    /** Agreements that the user signed up for during Credit Card onboarding. */
    userAcceptedCreditCardAgreements: (UserAcceptedCreditCardAgreements | null)
    /**
     * @deprecated Early access banner content no longer used
     * Content for the Early Access disclosure for early Credit Card users.
     */
    earlyAccessContent: (CreditCardEarlyAccessContent | null)
    /**
     * @deprecated Autopay is live for users
     * Content for the banner that announces that Credit Card AutoPay is coming soon.
     */
    autoPayComingSoonBannerContent: (Scalars['String'] | null)
    /** Content for the Select Reward Destination screen. */
    selectRewardDestinationContent: (CreditCardSelectRewardDestinationContent | null)
    __typename: 'Credit'
}

export interface UserAcceptedCreditCardAgreements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Onboarding documents the user agreed to upon signing up for the Credit Card. */
    onboardingCreditCardAgreements: (AgreementBundle | null)
    __typename: 'UserAcceptedCreditCardAgreements'
}

export interface CreditCardApplicantInformation {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Applicant's full name. */
    fullName: Scalars['String']
    /** Applicant's date of birth. */
    dateOfBirth: Scalars['String']
    /** Last four of applicant's SSN. */
    ssnLastFour: Scalars['String']
    /** Applicant's email address. */
    email: Scalars['String']
    /** Applicant's phone number. */
    phoneNumber: Scalars['String']
    /** Applicant's formatted mailing address. */
    legalResidence: Scalars['String']
    __typename: 'CreditCardApplicantInformation'
}

export interface CreditCardApplicationDetailsConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CreditCardApplicationDetailsEdge | null)[] | null)
    __typename: 'CreditCardApplicationDetailsConnection'
}

export interface CreditCardApplicationDetailsEdge {
    /** The item at the end of the edge */
    node: (CreditCardApplicationDetails | null)
    __typename: 'CreditCardApplicationDetailsEdge'
}

export interface CreditCardApplicationDetails {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The status of a user's credit card application. */
    status: CreditCardApplicationStatusEnum
    /** For approved or accepted applicants, this will be the APR for the given credit card application. */
    annualPercentageRate: (Scalars['Float'] | null)
    /** For approved or accepted applicants, this will be the Credit Limit for the given credit card application. */
    creditLimit: (Scalars['Float'] | null)
    /** For approved applicants, this will be the date in which the Credit Card offer expires. */
    expirationDate: (Scalars['String'] | null)
    /** For rejected applicants, this will be the date in which the user can submit another Credit Card application. */
    nextApplicationEligibilityDate: (Scalars['String'] | null)
    /** Cardholder Agreement specific to the user, available when the user has an offer. */
    cardholderAgreement: (RequiredDocument | null)
    __typename: 'CreditCardApplicationDetails'
}

export type CreditCardApplicationStatusEnum = 'SUBMITTED' | 'APPROVED' | 'ACCEPTED_PENDING_FINAL_APPROVAL' | 'ACCEPTED' | 'REJECTED' | 'EXPIRED' | 'ERROR_SUBMITTING_APPLICATION' | 'ERROR_ACCEPTING_OFFER' | 'IN_REVIEW' | 'UPLOAD_DOCUMENTS_REQUESTED' | 'UNFREEZE_BUREAU_REQUESTED'

export interface CreditCardActiveOffer {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Credit limit for the active offer. */
    creditLimit: (Scalars['Float'] | null)
    /** APR for the active offer. */
    annualPercentageRate: (Scalars['Float'] | null)
    /** For approved applicants, this will be the date in which the Credit Card offer expires. */
    expirationDate: (Scalars['String'] | null)
    /** Cardholder Agreement specific to the user, available when the user has an offer. */
    cardholderAgreement: (RequiredDocument | null)
    __typename: 'CreditCardActiveOffer'
}

export interface CreditCardAccountConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CreditCardAccountEdge | null)[] | null)
    __typename: 'CreditCardAccountConnection'
}

export interface CreditCardAccountEdge {
    /** The item at the end of the edge */
    node: (CreditCardAccount | null)
    __typename: 'CreditCardAccountEdge'
}

export interface CreditCardAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The status of the Credit Card account. */
    status: (CreditCardAccountStatusEnum | null)
    /** Will return `true` if the user's active account has had a credit card issued and the credit card has not yet been activated. */
    hasUnactivatedCard: Scalars['Boolean']
    /** The Credit Card account's APR. */
    annualPercentageRate: (Scalars['Float'] | null)
    /** The Credit Card account's credit limit. */
    creditLimit: (Scalars['Float'] | null)
    /** The account's current balance. */
    currentBalance: (Scalars['Float'] | null)
    /** The account's available credit. */
    availableCredit: (Scalars['Float'] | null)
    /** The minimum payment amount due for the current statement period. */
    minimumPaymentAmount: (Scalars['Float'] | null)
    /** The due date for the account's current statement period. */
    paymentDueDate: (Scalars['String'] | null)
    /**
     * Will return a list of `CreditCard`s or `null` if there are no cards associated to the account. Optional input
     * to filter based on card type (physical or virtual), default will return both.
     */
    cards: (CreditCardConnection | null)
    /** Will return the user's last issued `CreditCard` or `null` if there isn't one. */
    activeCard: (CreditCard | null)
    /**
     * @deprecated Use creditCardProductLandingPage.transactions instead.
     * Will return a list of settled `SpendActivityEntry`s or `null` if there are no settled transactions associated ot the account.
     */
    pendingTransactions: (CreditCardTransactionConnection | null)
    /**
     * @deprecated Use creditCardProductLandingPage.transactions instead.
     * Will return a list of settled `SpendActivityEntry`s or `null` if there are no settled transactions associated ot the account.
     */
    settledTransactions: (CreditCardTransactionConnection | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    /** The remaining statement balance for the active Credit Card account. */
    remainingStatementBalance: (Scalars['String'] | null)
    /**
     * @deprecated Checking account marketing card is no longer used.
     * The Spend promotional message for checking accounts to be displayed on the Credit Card screen.
     */
    checkingMarketingCard: (SpendPromotionalMessage | null)
    /** Details for the Credit Card Product Landing Page */
    creditCardProductLandingPage: (CreditCardProductLandingPage | null)
    __typename: 'CreditCardAccount'
}

export type CreditCardAccountStatusEnum = 'ACTIVE' | 'SUSPENDED' | 'CLOSED'

export interface CreditCardOnboardingContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Content for the Start Application Screen */
    startApplicationScreen: CreditCardOnboardingStartApplicationScreen
    /** Content for the Application Status Screen */
    applicationStatusScreen: CreditCardOnboardingApplicationStatusScreen
    /** AppLink for Document Upload Status */
    uploadDocumentLink: (AppLink | null)
    __typename: 'CreditCardOnboardingContent'
}

export interface CreditCardOnboardingStartApplicationScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Page title. */
    title: Scalars['String']
    /** Page header. */
    header: Scalars['String']
    /** Label for onboarding overview conent. */
    label: Scalars['String']
    /** Onboarding overview content. */
    content: Scalars['String'][]
    /** Disclaimer for onboarding overview content. */
    disclaimer: Scalars['String']
    /** Copy for the CTA. */
    buttonLabel: Scalars['String']
    __typename: 'CreditCardOnboardingStartApplicationScreen'
}

export interface CreditCardOnboardingApplicationStatusScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Page title. */
    title: (Scalars['String'] | null)
    /** Page header. */
    header: (Scalars['String'] | null)
    /** Content for step 1 (of 3). */
    stepOne: (CreditCardOnboardingApplicationStatusStepOne | null)
    /** Content for step 2 (of 3). */
    stepTwo: (CreditCardOnboardingApplicationStatusStepTwo | null)
    /** Content for step 3 (of 3). */
    stepThree: (CreditCardOnboardingApplicationStatusStepThree | null)
    /** Copy for the additional content. */
    additionalContent: (Scalars['String'] | null)
    /** Copy for the footer content. */
    footer: Scalars['String']
    /** Copy for the CTA. */
    buttonLabel: Scalars['String']
    __typename: 'CreditCardOnboardingApplicationStatusScreen'
}

export interface CreditCardOnboardingApplicationStatusStepOne {
    /** The icon for this section */
    icon: (AppImage | null)
    /** The title for this section */
    title: (Scalars['String'] | null)
    /** The content for the body of this section */
    body: (Scalars['String'] | null)
    /** The content for the body of this section */
    details: (CreditCardActiveOffer | null)
    __typename: 'CreditCardOnboardingApplicationStatusStepOne'
}

export interface CreditCardOnboardingApplicationStatusStepTwo {
    /** The icon for this section */
    icon: (AppImage | null)
    /** The title for this section */
    title: (Scalars['String'] | null)
    /** The content for the body of this section */
    cardholderAgreement: (RequiredDocument | null)
    /** The pill to indicate a document has been viewed */
    viewedPill: (AppPill | null)
    /** The pill to indicate a document has NOT been viewed */
    notViewedPill: (AppPill | null)
    /** The icon for this section error */
    errorIcon: (AppImage | null)
    /** The copy for this section error */
    errorMessage: (Scalars['String'] | null)
    __typename: 'CreditCardOnboardingApplicationStatusStepTwo'
}

export interface CreditCardOnboardingApplicationStatusStepThree {
    /** The icon for this section */
    icon: (AppImage | null)
    /** The title for this section */
    title: (Scalars['String'] | null)
    /** The content for the body of this section */
    termsAndConditions: (RequiredDocumentsBundle | null)
    __typename: 'CreditCardOnboardingApplicationStatusStepThree'
}

export interface CreditCardManageCardDetailsScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Will return `true` if a the queried card is currently locked. */
    isCardLocked: Scalars['Boolean']
    /** Mange Card Screen title. */
    pageTitle: (Scalars['String'] | null)
    /** Details pertaining to the user's Credit Card */
    manageCardDetailsSection: (ManageCardDetailsSection | null)
    /** Manage Card Actions */
    manageCardActionsSection: ((ManageCardActionSection | null)[] | null)
    /** Credit Card details for digital wallet push provisioning */
    digitalWalletPushProvisioningCredentials: (DigitalWalletPushProvisioningCredentials | null)
    /** Page content for manage card digital wallet (mobile only) */
    digitalWalletPageContent: (DigitalWalletPageContent | null)
    __typename: 'CreditCardManageCardDetailsScreen'
}

export interface CreditCardManageCardScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Will return `true` if a user has activated their card. */
    hasCardBeenActivated: Scalars['Boolean']
    /** Will return an optional `AppPill` to be displayed on the card image. */
    cardPill: (AppPill | null)
    /** Mange Card Screen title. */
    pageTitle: (Scalars['String'] | null)
    /** Details pertaining to the user's Credit Card */
    primaryCardDetails: (Scalars['String'][] | null)
    /** A list of credit card details. */
    cardDetails: ((CreditCardDetail | null)[] | null)
    /** Manage Card Actions */
    manageCardActions: ((ManageCardActionSection | null)[] | null)
    /**
     * @deprecated Pattern retired in favor of new design with section headers, see manageCardActions (type ManageCardActionSection) instead
     * Card Actions
     */
    cardActions: ((CreditCardManageCardAction | null)[] | null)
    /** Credit Card details for digital wallet push provisioning */
    digitalWalletPushProvisioningCredentials: (DigitalWalletPushProvisioningCredentials | null)
    /** Page content for manage card digital wallet (mobile only) */
    digitalWalletPageContent: (DigitalWalletPageContent | null)
    __typename: 'CreditCardManageCardScreen'
}

export interface DigitalWalletPageContent {
    /** Digital wallet page title */
    title: Scalars['String']
    /** Digital wallet content header */
    header: (Scalars['String'] | null)
    /** Digital wallet content subHeader */
    subheader: (Scalars['String'] | null)
    __typename: 'DigitalWalletPageContent'
}

export interface CreditCardDetail {
    /** Card Detail label. */
    label: Scalars['String']
    /** Card Detail value. */
    value: Scalars['String']
    __typename: 'CreditCardDetail'
}

export interface CreditCardManageCardAction {
    /** Icon for the action. */
    icon: (AppImage | null)
    /** Title for the action. */
    title: Scalars['String']
    /** Subtitle for the action. */
    subtitle: (Scalars['String'] | null)
    /** Link for the action. */
    destination: (CreditCardManageCardActionDestinationEnum | null)
    /** Label for web button. */
    buttonLabel: (Scalars['String'] | null)
    __typename: 'CreditCardManageCardAction'
}

export interface ManageCardActionSection {
    /** Title for the manage card section */
    title: Scalars['String']
    /** Array of card actions for a specific section */
    cardActions: ((CreditCardManageCardAction | null)[] | null)
    __typename: 'ManageCardActionSection'
}

export interface ManageCardDetailsSection {
    /** Title for the manage card details section */
    title: Scalars['String']
    /** Array of card details */
    cardDetails: ((Scalars['String'] | null)[] | null)
    /** Preview image for card */
    cardImage: (AppImage | null)
    __typename: 'ManageCardDetailsSection'
}

export interface DigitalWalletPushProvisioningCredentials {
    /** The ID of this node */
    id: Scalars['ID']
    /** The internal key of this node */
    key: (Scalars['String'] | null)
    /** The relevant card ID */
    cardId: (Scalars['String'] | null)
    /** The name on the user's card */
    cardholderName: (Scalars['String'] | null)
    /** The last four numbers of the relevant card */
    lastFour: (Scalars['String'] | null)
    /** The name of the payment network (i.e. VISA) */
    paymentNetworkName: (Scalars['String'] | null)
    __typename: 'DigitalWalletPushProvisioningCredentials'
}

export type CreditCardManageCardActionDestinationEnum = 'ACTIVATE_CARD' | 'STATEMENTS' | 'TOGGLE_LOCK_CARD' | 'CONTACT_SUPPORT' | 'ADD_DIGITAL_WALLET'

export interface CreditCardRewardsPortalScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Content for the Rewards Portal Summary component. */
    summary: (CreditCardRewardsSummary | null)
    /** Standard Rewards overview section. */
    standardRewardsOverview: (CreditCardStandardRewardsProgramOverview | null)
    /** Owners Rewards overview section. */
    ownersRewardsOverview: (CreditCardOwnersRewardsProgramOverview | null)
    /** An array of AppLinks for documents to display on the Rewards Portal. */
    documents: ((AppLink | null)[] | null)
    /** Temporary way of querying for the Rewards Details scren content by `programId`. */
    rewardsDetails: (CreditCardRewardsDetailsScreen | null)
    /**
     * @deprecated Lens built details screen before overview screen. Once overview screen is constructed, each Program will have a unique Node ID to use when navigating to the Rewards Details page.
     * Temporary Node ID to use when querying for Owners Rewards on the Rewards Details screen.
     */
    ownersRewardsDetailsNodeId: Scalars['ID']
    __typename: 'CreditCardRewardsPortalScreen'
}

export interface CreditCardRewardsSummary {
    /** Estimated rewards payout information for the current rewards cycle. */
    currentCycleRewardsEstimate: (CreditCardRewardsOverview | null)
    /** Rewards payout information for the lifetime of the user's credit card account. */
    lifetimeRewardsOverview: (CreditCardRewardsOverview | null)
    /** Information pertaining to the payout location for credit card rewards. */
    rewardsPayoutLocation: (CreditCardRewardsPayoutLocationOverview | null)
    __typename: 'CreditCardRewardsSummary'
}

export interface CreditCardRewardsOverview {
    /** Rewards overview label. */
    label: Scalars['String']
    /** Optional tooltip copy for a rewards overview section. */
    tooltipContent: (CreditCardRewardsOverviewTooltipContent | null)
    /** Optional `AppPill` for display when a user has reached the maximum reward amount for a given reward cycle. */
    pill: (AppPill | null)
    /** Rewards overview value. */
    value: Scalars['String']
    /** Optional subtitle. */
    subtitle: (Scalars['String'] | null)
    __typename: 'CreditCardRewardsOverview'
}

export interface CreditCardClosedAccountContent {
    /** Title for the terminated Credit Card account screen. */
    title: (Scalars['String'] | null)
    /** Subtitle for the terminated Credit Card account screen. */
    subtitle: (Scalars['String'] | null)
    /** Phone number to contact Deserve on the terminated Credit Card account screen. */
    phoneNumber: (Scalars['String'] | null)
    __typename: 'CreditCardClosedAccountContent'
}

export interface CreditCardSuspendedAccountContent {
    /** Content for the suspended Credit Card account banner. */
    content: (Scalars['String'] | null)
    /** Phone number to contact Deserve on the suspended Credit Card account screen. */
    phoneNumber: (Scalars['String'] | null)
    __typename: 'CreditCardSuspendedAccountContent'
}

export interface CreditCardRewardsOverviewTooltipContent {
    /** Tooltip title. Should be `null` on web. */
    title: (Scalars['String'] | null)
    /** Tooltip content. */
    content: Scalars['String']
    /** Tooltip `AppLink`. Should be `null` on web. */
    link: (AppLink | null)
    /** Tooltip icon. */
    icon: AppImage
    __typename: 'CreditCardRewardsOverviewTooltipContent'
}

export interface CreditCardRewardsPayoutLocationOverview {
    /** Rewards payout location label. */
    label: Scalars['String']
    /** Icon for rewards payout location. */
    icon: (AppImage | null)
    /** Description of the payout account. */
    value: Scalars['String']
    __typename: 'CreditCardRewardsPayoutLocationOverview'
}

export interface CreditCardStandardRewardsProgramOverview {
    /** Standard Rewards title. */
    title: Scalars['String']
    /** Standard Rewards program highlights. */
    highlights: (CreditCardStandardRewardsProgramHighlights | null)
    __typename: 'CreditCardStandardRewardsProgramOverview'
}

export interface CreditCardStandardRewardsProgramHighlights {
    /** Standard Rewards program icon. */
    icon: (AppImage | null)
    /** Standard Rewards program description. */
    description: Scalars['String']
    /** ID to use when navigating to the Rewards Details screen. If ID is `null`, do not allow users to navigate. */
    creditCardRewardsDetailsScreenId: (Scalars['ID'] | null)
    __typename: 'CreditCardStandardRewardsProgramHighlights'
}

export interface CreditCardOwnersRewardsProgramOverview {
    /** Rewards Program Title */
    title: Scalars['String']
    /** Tooltip icon and content for the Owners Rewards Program Overview. */
    tooltip: (CreditCardOwnersRewardsProgramOverviewTooltipContent | null)
    /** Highlights related to the given rewards program used to display a general overview to the user. */
    highlights: ((CreditCardOwnersRewardsProgramHighlights | null)[] | null)
    __typename: 'CreditCardOwnersRewardsProgramOverview'
}

export interface CreditCardOwnersRewardsProgramOverviewTooltipContent {
    /** Owners Rewards Program Overview tooltip icon. */
    icon: AppImage
    /** Owners Rewards Program Overview tooltip copy. */
    copy: Scalars['String']
    /** Owners Rewards Program Overview tooltip link. */
    link: (AppLink | null)
    __typename: 'CreditCardOwnersRewardsProgramOverviewTooltipContent'
}

export interface CreditCardOwnersRewardsProgramHighlights {
    /** Optional title for the Rewards Program Highlight section. */
    title: (Scalars['String'] | null)
    /** Navigation link for the Rewards Program Highlight section. */
    link: (CreditCardOwnersRewardsProgramHighlightLink | null)
    /** Array of programs in the owners rewards highlight list. */
    programs: ((CreditCardRewardsProgramOverview | null)[] | null)
    __typename: 'CreditCardOwnersRewardsProgramHighlights'
}

export interface CreditCardOwnersRewardsProgramHighlightLink {
    /** String to be displayed to clients. */
    title: (Scalars['String'] | null)
    /** Enum used for navigation. */
    destination: (CreditCardOwnersRewardsProgramHighlightLinkEnum | null)
    __typename: 'CreditCardOwnersRewardsProgramHighlightLink'
}

export type CreditCardOwnersRewardsProgramHighlightLinkEnum = 'OWNED_STOCKS' | 'UNOWNED_STOCKS'

export interface CreditCardRewardsDetailsScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Page title. */
    title: (Scalars['String'] | null)
    /** Overview item for the Current Rewards Cycle Details Screen. */
    programOverview: (CreditCardRewardsProgramOverview | null)
    /** Header for display above the transaction list. */
    header: (Scalars['String'] | null)
    /** Optional content for display above the transaction list. */
    content: (Scalars['String'] | null)
    /** Transactions for the given reward cycle for the reward program. */
    relatedTransactions: (CreditCardTransactionConnection | null)
    __typename: 'CreditCardRewardsDetailsScreen'
}

export interface CreditCardRewardsProgramOverview {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The URL for the Security's Logo, if available. */
    securityLogoUrl: (Scalars['String'] | null)
    /** An optional `AppImage`, to be used in place of the `securityLogoUrl` to support Dark Mode on mobile clients for non-security logo reward program overviews (i.e. standard rewards). */
    logoAppImage: (AppImage | null)
    /** Rewards Item title. */
    title: Scalars['String']
    /** Rewards Item value. */
    value: Scalars['String']
    /** Optional ID that, when present, should be used when navigating to the Credit Card Rewards Details Screen. */
    creditCardRewardsDetailsScreenId: (Scalars['ID'] | null)
    __typename: 'CreditCardRewardsProgramOverview'
}

export interface CreditCardTransactionConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CreditCardTransactionEdge | null)[] | null)
    __typename: 'CreditCardTransactionConnection'
}

export interface CreditCardTransactionEdge {
    cursor: Scalars['String']
    /** The item at the end of the edge */
    node: (SpendActivityEntry | null)
    __typename: 'CreditCardTransactionEdge'
}

export interface CreditCardTransaction {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The status of this activity entry. */
    status: (AppPill | null)
    /** The legacy date for this activity entry. */
    date: Scalars['String']
    /** The formatted date for this activity entry. */
    activityDate: Scalars['String']
    /** The AppImage icon for this activity entry. */
    icon: (AppImage | null)
    /** A short summary description for this transaction. */
    summary: Scalars['String']
    /** A friendly description for this activity entry which must be displayed to users. */
    description: Scalars['String']
    /** The merchant name where the activity entry occured. */
    merchant: (Scalars['String'] | null)
    /** A short description of the activity entry category. */
    categoryLabel: Scalars['String']
    /** A boolean value for whether or not the transaction is void. */
    isVoided: (Scalars['Boolean'] | null)
    /** A signed dollar amount associated with this activity, if applicable. */
    amount: (Scalars['Float'] | null)
    /** Further details for this activity entry. */
    details: (SpendActivityEntryDetails | null)
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was made.
     */
    transactionDate: Scalars['String']
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was settled.
     */
    settledDate: (Scalars['String'] | null)
    __typename: 'CreditCardTransaction'
}

export interface CreditCardWaitlistConfirmationContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The main title of the Credit Card waitlist confirmation screen. */
    title: Scalars['String']
    /** The subtitle of the Credit Card waitlist confirmation screen. */
    subtitle: (Scalars['String'] | null)[]
    /** The Plus marketing section title of the Credit Card waitlist confirmation screen. */
    plusMarketingTitle: (Scalars['String'] | null)
    /** The Plus marketing section copy of the Credit Card waitlist confirmation screen. */
    plusMarketingCopy: (Scalars['String'] | null)
    /** The Plus trial section copy of the Credit Card waitlist confirmation screen. */
    plusTrialCopy: (Scalars['String'] | null)
    /** The Plus-related button copy, if applicable, on the Credit Card waitlist confirmation screen. */
    plusCtaCopy: (Scalars['String'] | null)
    /** A link to the informational content page for Credit Card. */
    learnMoreLink: (AppLink | null)
    __typename: 'CreditCardWaitlistConfirmationContent'
}

export interface CreditCardRewardsProgramBreakdown {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Rewards Program Breakdown title. */
    title: (Scalars['String'] | null)
    /** Rewards Program Breakdown subtitle. */
    subtitle: (Scalars['String'] | null)
    /** Array of programs in the owners rewards highlight list. */
    programs: (CreditCardRewardsProgramOverviewConnection | null)
    __typename: 'CreditCardRewardsProgramBreakdown'
}

export interface CreditCardRewardsProgramOverviewConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CreditCardRewardsProgramOverviewEdge | null)[] | null)
    __typename: 'CreditCardRewardsProgramOverviewConnection'
}

export interface CreditCardRewardsProgramOverviewEdge {
    /** The item at the end of the edge */
    node: (CreditCardRewardsProgramOverview | null)
    __typename: 'CreditCardRewardsProgramOverviewEdge'
}

export interface CreditCardWaitlistMarketingBanner {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Marketing banner abandoned.
     * The headline for the Credit Card marketing banner.
     */
    bannerHeadline: (Scalars['String'] | null)
    /**
     * @deprecated Marketing banner abandoned.
     * The copy for the Credit Card marketing banner.
     */
    bannerCopy: (Scalars['String'] | null)
    /**
     * @deprecated Marketing banner abandoned.
     * The AppLink for the Credit Card marketing banner.
     */
    bannerLink: (AppLink | null)
    __typename: 'CreditCardWaitlistMarketingBanner'
}

export interface CreditCardEarlyAccessContent {
    /** Credit Card Early Access Banner icon. */
    icon: (AppImage | null)
    /** Credit Card Early Access Banner title. */
    title: (Scalars['String'] | null)
    /** Credit Card Early Access Banner content. */
    content: Scalars['String']
    /** Credit Card Early Access Banner link. */
    link: (AppLink | null)
    __typename: 'CreditCardEarlyAccessContent'
}

export interface CreditCardSelectRewardDestinationContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Title. */
    title: (Scalars['String'] | null)
    /** Description. */
    description: (Scalars['String'] | null)
    /** Dropdown placeholder. */
    placeholder: (Scalars['String'] | null)
    /** A list of valid reward payout locations. */
    destinationOptions: ((CreditCardRewardDestinationOption | null)[] | null)
    /** Button Label. */
    buttonLabel: Scalars['String']
    __typename: 'CreditCardSelectRewardDestinationContent'
}

export interface CreditCardRewardDestinationOption {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Transfer Participant display name. */
    name: Scalars['String']
    __typename: 'CreditCardRewardDestinationOption'
}

export interface CreditCardWaitlistMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The main title of the Credit Card marketing screen. */
    title: (Scalars['String'] | null)
    /** The subtitle of the Credit Card marketing screen. */
    subtitle: (Scalars['String'] | null)
    /** The main copy for the Credit Card marketing screen. */
    mainCopy: (Scalars['String'] | null)[]
    /** The title for the Plus marketing section of the Credit Card marketing screen. */
    plusCopyTitle: (Scalars['String'] | null)
    /** The body copy for the Plus marketing section of the Credit Card marketing screen. */
    plusCopyBody: (Scalars['String'] | null)
    /** The waitlist message copy for the Credit Card marketing screen. */
    waitlistCopy: (Scalars['String'] | null)
    /** Button copy relating to the Credit Card marketing screen. */
    confirmationCtaCopy: Scalars['String']
    /** Primary Credit Card marketing CTA label, typically "Apply Now". */
    primaryCta: (ConfirmationCtaLabelDestination | null)
    /** The first tool tip copy for the Credit Card marketing screen. */
    firstTooltipCopy: (Scalars['String'] | null)
    /** The second tool tip copy for the Credit Card marketing screen. */
    secondTooltipCopy: (Scalars['String'] | null)
    /** The third tool tip copy for the Credit Card marketing screen. */
    thirdTooltipCopy: (Scalars['String'] | null)
    /** The final marketing header text for the Credit Card marketing screen. */
    finalMarketingHeader: (Scalars['String'] | null)
    /** The final marketing subheader text for the Credit Card marketing screen. */
    finalMarketingSubHeader: (Scalars['String'] | null)
    /** The additional links to be added on to the Credit Card apply now marketing screen. */
    additionalInfoLinks: ((AppLink | null)[] | null)
    /** A link to the informational content page for Credit Card. */
    learnMoreLink: (AppLink | null)
    __typename: 'CreditCardWaitlistMarketingScreen'
}

export interface CreditCardMarketingPerk {
    /** The title that summarizes a perk of the Credit Card. */
    title: Scalars['String']
    /** The description of a perk of the Credit Card. */
    description: Scalars['String']
    /** The tooltip with more details about a perk of the Credit Card. */
    tooltip: (Scalars['String'] | null)
    __typename: 'CreditCardMarketingPerk'
}

export interface CreditCardApplyNowMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The primary title for the Credit Card apply now screen as an array of strings. */
    title: Scalars['String'][]
    /** The tooltip for the primary title of the Credit Card apply now screen. */
    titleTooltip: Scalars['String']
    /** The subtitle for the Credit Card apply now screen. */
    subtitle: Scalars['String']
    /** An array of perks that describe the features of the Credit Card. */
    perks: CreditCardMarketingPerk[]
    /** The label for the primary CTA button to allow users to apply now. */
    primaryCtaLabel: Scalars['String']
    /** The additional links to be added on to the Credit Card apply now marketing screen. */
    additionalInfoLinks: ((AppLink | null)[] | null)
    /** A link to the informational content page for Credit Card. */
    learnMoreLink: (AppLink | null)
    __typename: 'CreditCardApplyNowMarketingScreen'
}

export interface ConfirmationCtaLabelDestination {
    /** The label to display for the Credit Card marketing CTA button. */
    buttonLabel: Scalars['String']
    /** The associated destination enum value to send users when they click the Credit Card marketing CTA button. */
    destination: (ConfirmationCtaDestinationEnum | null)
    __typename: 'ConfirmationCtaLabelDestination'
}

export type CreditCardWaitlistConfirmationContentPhase = 'DEEPLINK_ONLY_PHASE' | 'ON_SPEND_TAB_PHASE'

export type ConfirmationCtaDestinationEnum = 'CREDIT_CARD_APPLICATION' | 'PLUS_ENROLLMENT' | 'OPEN_INVEST_ACCOUNT'

export interface CreditCardProductLandingPage {
    /** The title for the Credit Card Product Landing Page */
    title: (Scalars['String'] | null)
    /** The header for the Credit Card Product Landing Page */
    header: (ProductAccountLandingPageHeader | null)
    /** The account details for the Credit Card Product Landing Page */
    accountDetails: ((TabularDataItem | null)[] | null)
    /** An array of informational banners for the Credit Card Product Landing Page */
    banners: ((InformationBanner | null)[] | null)
    /** The graph details for the Credit Card Product Landing Page */
    graphDetails: (CreditCardLandingPageGraphDetails | null)
    /** A card with a value prop display and related details for the Credit Card Product Landing Page */
    valuePropCard: (ValuePropCard | null)
    /** A card with credit card details and actions */
    detailsCard: (CreditCardLandingPageDetailsCard | null)
    /** An array of the disclosures for the Credit Card Product Landing Page */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    /** The mobile floating action button details for the Credit Card Product Landing Page */
    floatingActionButton: (AppNavigationItem | null)
    /** Credit card transactions for the Credit Card Product Landing Page */
    transactions: (CommonTransactionEntryConnection | null)
    /** Copy to be displayed when there are no transactions on the Credit Card Product Landing Page */
    transactionsEmptyState: (CommonTransactionsEmptyState | null)
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards: (AppCard[] | null)
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards: (AppCard[] | null)
    __typename: 'CreditCardProductLandingPage'
}

export interface CreditCardLandingPageGraphDetails {
    /** (Web only) The title for the Credit Card Graph Details */
    title: (Scalars['String'] | null)
    /** (Mobile only) The tooltip for the Credit Card Graph Details */
    tooltip: (AppTooltip | null)
    /** The credit limit for the Credit Card Graph */
    creditLimit: (Scalars['String'] | null)
    /** The current balance for the Credit Card Graph */
    currentBalance: (Scalars['String'] | null)
    /** The percentage for the Credit Card Graph */
    percentage: (Scalars['Float'] | null)
    /** The description for the Credit Card Graph Details */
    description: (Scalars['String'] | null)
    __typename: 'CreditCardLandingPageGraphDetails'
}

export interface CreditCardLandingPageDetailsCard {
    /** The title for the Credit Card Details Card */
    title: (Scalars['String'] | null)
    /** Returns copy when the user's card is activated and the user can lock or unlock their card; Clients should not show the label OR switch if this is null */
    lockCardLabel: (Scalars['String'] | null)
    /** The details about the Credit Card */
    details: ((TabularDataItem | null)[] | null)
    __typename: 'CreditCardLandingPageDetailsCard'
}

export interface CreditCardCommonTransactionMetadata {
    /** The ID on Credit Card Common Transaction Metadata */
    id: Scalars['ID']
    /** The reward tier pill on Credit Card Common Transaction Metadata */
    rewardTierPill: (CreditCardRewardsAppPill | null)
    __typename: 'CreditCardCommonTransactionMetadata'
}

export interface Crypto {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Crypto feature flag. If true, show crypto related features. If false, hide them from UI. */
    isEnabled: Scalars['Boolean']
    /** Boolean for checking if the user is eligible to use crypto or create a crypto account. */
    isEligible: Scalars['Boolean']
    /**
     * @deprecated Crypto waitlist is deprecated.
     * Whether the waitlist phase has started or not.
     */
    isWaitlistEligible: Scalars['Boolean']
    /**
     * @deprecated Crypto waitlist is deprecated.
     * Whether the user is in the crypto waitlist or not.
     */
    isOnCryptoWaitlist: Scalars['Boolean']
    /** Returns a list of Crypto Assets for the Crypto research tab. */
    screenCrypto: CryptoScreenerConnection
    /** Returns a list of Crypto System Pies. */
    screenCryptoSystemPies: CryptoSystemPiesConnection
    /** Boolean for if the user has a crypto account. */
    hasCryptoAccount: Scalars['Boolean']
    __typename: 'Crypto'
}

export interface CryptoSystemPiesConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CryptoSystemPiesConnectionEdge | null)[] | null)
    /** Total number of crypto system pies. */
    total: (Scalars['Int'] | null)
    __typename: 'CryptoSystemPiesConnection'
}

export interface CryptoSystemPiesConnectionEdge {
    /** The item at the end of the edge. */
    node: (CryptoSystemPie | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'CryptoSystemPiesConnectionEdge'
}

export interface CryptoSystemPie {
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** An identifier for this system pie that is stable across development environments. */
    key: Scalars['String']
    /** A boolean flag that is true if the pie contains crypto slices. */
    containsCrypto: Scalars['Boolean']
    /** A disclosure statement for this pie. */
    disclosure: (Scalars['String'] | null)
    /** The time that this node was created in ISO 8601 format. */
    created: (Scalars['String'] | null)
    /** The time that this node was last modified in ISO 8601 format. */
    modified: (Scalars['String'] | null)
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive: Scalars['Boolean']
    /** The name of this pie. */
    name: Scalars['String']
    /** The description of this pie. */
    description: (Scalars['String'] | null)
    /** The list of slices that belong to this pie. */
    slices: Slice[]
    /** A summary description of the slices in this pie. */
    summary: (Scalars['String'] | null)
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /** The chart data for the crypto system pie. Intraday is ignored for pies */
    chartData: ChartableSliceData
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis: (PieAnalysis | null)
    /** True if the pie belongs to the viewing user. */
    isOwnPie: Scalars['Boolean']
    /** The current status of the system pie. */
    status: SystemPieStatusEnum
    /** A list of methodology details used to create this pie. Value will be null when no information is available. */
    methodology: (Scalars['String'][] | null)
    /** A description of the frequency at which the composition of this pie is updated. Value will be null when no information is available. */
    updateFrequency: (Scalars['String'] | null)
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl: (Scalars['String'] | null)
    /** If available, a URL to a feature image that represents the pie. The best-fitting image to the requested width/height constraints will be returned, but specific dimensions are not guaranteed. */
    featureUrl: (Scalars['String'] | null)
    /** Performance information for the system pie. */
    performance: (PiePerformance | null)
    /**
     * A list of states that where this pie is restricted and shouldn't be allowed.
     * Ex. NY restricts trading of certain coins so if NY was in the restrictions array
     * we shouldn't display this pie to user in the state of NY
     */
    restrictions: (CryptoAssetRestrictionEnum[] | null)
    /** An array of AppPills that match any restrictions the pie might have. */
    restrictionPills: (AppPill[] | null)
    /** Experimental. Generates an edit model representation of the pie. */
    editModel: Scalars['String']
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals: (PieFundamentals | null)
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance: (BacktestedPiePerformance[] | null)
    __typename: 'CryptoSystemPie'
}

export type CryptoSortTypeEnum = 'NAME' | 'PRICE' | 'MARKET_CAP' | 'VOLUME' | 'SUPPLY' | 'PRICE_CHANGE_1Y' | 'PRICE_CHANGE_2Y' | 'PRICE_CHANGE_5Y'

export interface CryptoScreenerConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CryptoScreenerEdge | null)[] | null)
    /** Total number of cryptocurrencies */
    total: (Scalars['Int'] | null)
    __typename: 'CryptoScreenerConnection'
}

export interface CryptoScreenerEdge {
    /** The item at the end of the edge. */
    node: (CryptoAsset | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'CryptoScreenerEdge'
}

export interface CryptoAsset {
    /** Legacy ID which, when decoded, resolves to `CRYPTO:ID`. Used for legacy Pie functionality. */
    legacyId: Scalars['String']
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    /** Indicates if this crypto asset is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive: Scalars['Boolean']
    /** The current status of the crypto asset. */
    status: SecurityStatusEnum
    /** The ticker symbol for this crypto asset. */
    symbol: Scalars['String']
    /** The name of the crypto asset. */
    name: Scalars['String']
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /** The category path for this secuirty in the category hierarchy. An empty list means that the crypto asset is currently uncategorized. */
    category: Scalars['String'][]
    /** The name of the market or exchange on which the crypto asset is listed. Value is null when data is unavailable. */
    market: (Scalars['String'] | null)
    /** Profile information for the crypto asset. Value is null when data is unavailable. */
    profile: (SecurityProfile | null)
    /**
     * @deprecated Not used for Crypto
     * Fundamentals data for the crypto asset. Value is null when data is unavailable.
     */
    fundamentals: (Fundamentals | null)
    /** Latest-available delayed market quote data for the crypto asset. Value is null when data is unavailable. */
    quote: (Quote | null)
    /** Latest-available delayed market quote data for the crypto asset. Value is null when data is unavailable. */
    latestQuote: (Quote | null)
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange: (PriceChange | null)
    /** The chart data for the crypto asset */
    chartData: ChartableSliceData
    /** A time-series of historical quote data for the crypto asset. Value is null when market data is unavailable. */
    historicalQuotes: (HistoricalQuote[] | null)
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes: (IntradayQuoteTimeSeries | null)
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this crypto asset, sorted in reverse chronological order.
     */
    news: NewsConnection
    /** A list of news stories related to this crypto asset, sorted in reverse chronological order. */
    securityNews: (NewsConnection | null)
    /** True IF the crypto asset is marginable. Always false for crypto assets. */
    isMarginable: Scalars['Boolean']
    /** The maintenance margin requirement for a given crypto asset */
    maintenanceMargin: (Scalars['Float'] | null)
    /** Icon representing mergin eligibility */
    marginEligibleIcon: (AppImage | null)
    /** tooltip to display margin requirement content */
    marginRequirementTooltip: SecurityMarginTooltip
    /** tooltip to display margin requirement content */
    marginEligibileTooltip: SecurityMarginTooltip
    /** App Pill to be displayed for the crypto asset */
    securityPill: (AppPill | null)
    /** The market capitalization, calculated using a recent share price. */
    marketCap: (Scalars['Float'] | null)
    /** Measures how many times a coin changes hands over a given time frame */
    volume: (Scalars['Float'] | null)
    /** The total number of coins or tokens that are actively available for trade and are being used in the market and in general public. */
    circulatingSupply: (Scalars['Float'] | null)
    /** The maximum number of coins that will ever be created. */
    maxSupply: (Scalars['Float'] | null)
    /** Rate of return for the given time period. */
    performanceSummary: (Scalars['Float'] | null)
    /** Date cryptocurrency was created */
    createdDate: (Scalars['String'] | null)
    /** The type of the cryptocurrency coin */
    coinType: (Scalars['String'] | null)
    /** Status of the cryptocurrency's development */
    developmentStatus: (Scalars['String'] | null)
    /** String that describes if the coin is open source or not */
    openSource: (Scalars['String'] | null)
    /** How the cryptocurrency is structured */
    orgStructure: (Scalars['String'] | null)
    /** The hash algorithm for the cryptocurrency */
    hashAlgorithm: (Scalars['String'] | null)
    /** The link to the whitepaper for the cryptocurrency */
    whitepaperLink: (AppLink | null)
    /** The icon to display for the whitepaper link */
    whitepaperIcon: (AppImage | null)
    /** The high value in the last 52 weeks */
    week52High: (Scalars['Float'] | null)
    /** The low value in the last 52 weeks */
    week52Low: (Scalars['Float'] | null)
    /** The average volume in the last 10 days */
    avgVolumeLast10Days: (Scalars['Float'] | null)
    /** The average volume in the last 30 days */
    avgVolumeLast30Days: (Scalars['Float'] | null)
    /** The average volume in the last 90 days */
    avgVolumeLast90Days: (Scalars['Float'] | null)
    /** The annualized percent change over the past year */
    percentChangeAnnualized1Year: (Scalars['Float'] | null)
    /** The list of restrictions that the coin may have for the user. If null, there are no restrictions. */
    restrictions: (CryptoAssetRestrictionEnum[] | null)
    /** A pill representing the restrictions that the coin may have for the user. If null, there are no restrictions. Region eligibility trumps plus restrictions. */
    restrictionPill: (AppPill | null)
    __typename: 'CryptoAsset'
}

export type CryptoAssetRestrictionEnum = 'NY_REGION' | 'PLUS'

export type CryptoPerformanceSummaryTimePeriodEnum = 'ONE_YEAR' | 'TWO_YEARS' | 'FIVE_YEARS'

export interface FundScreenerConnection {
    /** The current hierarchical category level. */
    currentCategory: FundSubCategory
    /** A list of edges. */
    edges: ((FundScreenerEdge | null)[] | null)
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The next hierarchical level of sub-categories. */
    subCategories: FundSubCategory[]
    /** The approximate total number of edges in the connection. */
    total: Scalars['Int']
    __typename: 'FundScreenerConnection'
}


/** A connection sub-category. */
export interface FundSubCategory {
    /** The category path in the category hierarchy. */
    category: Scalars['String'][]
    /** The approximate total number of edges within the sub-category. */
    count: Scalars['Int']
    __typename: 'FundSubCategory'
}


/** An edge in a connection. */
export interface FundScreenerEdge {
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    /** The item at the end of the edge */
    node: (Fund | null)
    __typename: 'FundScreenerEdge'
}


/** A fund limit type. */
export type FundLimitTypeEnum = 'FUND_DIVIDEND_YIELD' | 'FUND_NET_EXPENSE_RATIO' | 'FUND_PERFORMANCE_1Y' | 'FUND_PERFORMANCE_3Y' | 'FUND_PERFORMANCE_5Y' | 'FUND_PERFORMANCE_10Y' | 'FUND_PERFORMANCE_SI' | 'FUND_TOTAL_ASSETS'


/** A fund sort type. */
export type FundSortTypeEnum = 'FUND_CATEGORY' | 'FUND_DIVIDEND_YIELD' | 'FUND_NET_EXPENSE_RATIO' | 'FUND_PERFORMANCE_1Y' | 'FUND_PERFORMANCE_3Y' | 'FUND_PERFORMANCE_5Y' | 'FUND_PERFORMANCE_10Y' | 'FUND_PERFORMANCE_SI' | 'FUND_TOTAL_ASSETS' | 'NAME' | 'PRICE_CHANGE_1M' | 'PRICE_CHANGE_1W' | 'PRICE_CHANGE_1Y' | 'PRICE_CHANGE_2Y' | 'PRICE_CHANGE_3M' | 'PRICE_CHANGE_3Y' | 'PRICE_CHANGE_5Y' | 'PRICE_CHANGE_6M' | 'PRICE_CHANGE_ANNUALIZED_1Y' | 'PRICE_CHANGE_ANNUALIZED_2Y' | 'PRICE_CHANGE_ANNUALIZED_3Y' | 'PRICE_CHANGE_ANNUALIZED_5Y' | 'PRICE_CHANGE_YTD' | 'SYMBOL'

export interface FundingSources {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Flag to determine if account has any funding sources. */
    hasFundingSources: (Scalars['Boolean'] | null)
    /** Retrieve all funding sources linked to this investment account. */
    fundingSourcesGroup: (FundingSourceConnection | null)
    __typename: 'FundingSources'
}


/** A connection to a list of funding sources group. */
export interface FundingSourceConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((FundingSourceEdge | null)[] | null)
    __typename: 'FundingSourceConnection'
}

export interface FundingSourceEdge {
    /** The item at the end of the edge. */
    node: (FundingSourceAccount | null)
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    __typename: 'FundingSourceEdge'
}

export interface FundingSourceAccount {
    /** The id of this node. */
    id: Scalars['ID']
    /** Funding source status. */
    status: (FundingSourceStatusEnum | null)
    /** Funding source routing number. */
    routingNumber: (Scalars['String'] | null)
    /** Funding source external name. */
    externalName: (Scalars['String'] | null)
    /** Funding source account number. */
    accountNumber: (Scalars['String'] | null)
    /** Funding source creation date. */
    createdAt: (Scalars['String'] | null)
    /** Funding source last updated date. */
    updatedAt: (Scalars['String'] | null)
    /** Funding source verification type - used to differentiate how the funding source was verified. */
    verificationType: (FundingSourceVerificationTypeEnum | null)
    /** Logo URL for the funding source. */
    logoUrl: (Scalars['String'] | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    __typename: 'FundingSourceAccount'
}

export type FundingSourceVerificationTypeEnum = 'PLAID_SAME_DAY_MICRODEPOSIT' | 'PLAID_AUTOMATIC_MICRODEPOSIT' | 'PLAID_INSTANT' | 'ADMIN' | 'APEX_MICRODEPOSIT' | 'LSB_MICRODEPOSIT'

export type FundingSourceStatusEnum = 'PENDING' | 'ACTIVE' | 'LOCKED' | 'ARCHIVED' | 'EXPIRING' | 'REAUTHENTICATION_REQUIRED'

export interface OverviewPromotions {
    /** The header for the home overview promotions section */
    header: (RichTextContent | null)
    /** Promotional cards to be shown in a carousel */
    cards: (AppCard[] | null)
    __typename: 'OverviewPromotions'
}

export type DividendTrackerDataPeriod = 'LAST_YEAR' | 'LAST_12_MONTHS' | 'THIS_YEAR' | 'NEXT_12_MONTHS'

export interface Dividends {
    /**
     * The cacheId is a composite key of the accountId and period and helps
     * cache the data on the FE.
     */
    cacheId: Scalars['String']
    /** A type containing summary information about a PortfolioSlice's dividends. */
    dividendSummary: DividendSummary
    /** Contains performance data for the PortfolioSlice's dividends. */
    dividendPerformance: DividendDataPoint[]
    /** A connection of DividendPositions that are currently in the user account. */
    currentPositions: (PositionConnection | null)
    /** A connection of upcoming dividends. */
    upcomingDividends: (UpcomingDividendsConnection | null)
    /** Disclosure for portfolio dividends page. */
    disclosure: AppRichTextDisclosureLink
    __typename: 'Dividends'
}

export interface UpcomingDividendsConnection {
    pageInfo: PageInfo
    edges: ((UpcomingDividendEdge | null)[] | null)
    total: (Scalars['Int'] | null)
    __typename: 'UpcomingDividendsConnection'
}

export interface UpcomingDividendEdge {
    /** The node at the end edge. */
    node: (UpcomingDividend | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'UpcomingDividendEdge'
}

export interface UpcomingDividend {
    /** The ex date for the upcoming dividend formatted as Jan 1st, 2024 or Jan, 2024 depending on the status. */
    exDividendDate: Scalars['String']
    /** The payment date for the upcoming dividend formatted as Jan 1st 2024, or Jan, 2024 depending on the status. */
    payDate: (Scalars['String'] | null)
    /** The security that is paying the dividend. */
    security: (Security | null)
    /** The number of shares the user owns of the security. */
    numOfShares: (Scalars['Float'] | null)
    /** The amount per share the user will receive. */
    dividendPerShare: (Scalars['Float'] | null)
    /** The total amount the user will receive. */
    paymentAmount: Scalars['String']
    /** An AppPill representing the status of the dividend. */
    dividendStatus: (AppPill | null)
    __typename: 'UpcomingDividend'
}

export interface DividendSummary {
    /** The total amount of dividend income earned for the user's account */
    totalIncomeEarned: Scalars['String']
    /** The total amount of dividends credited to the user's account for the time range */
    totalPaidForTimeRange: Scalars['String']
    /** The total amount of dividends expected to be credited to the user's account for the time range */
    totalUpcomingForTimeRange: Scalars['String']
    /** The total amount of confirmed upcoming dividends, basically upcoming dividends with a status of 'pending'. */
    totalConfirmedForTimeRange: Scalars['String']
    /** The average amount of dividend income per month. */
    averageMonthlyIncome: Scalars['String']
    __typename: 'DividendSummary'
}

export interface DividendTopEarner {
    /**
     * @deprecated Utilize `securityRef` instead.
     * The security that is paying the dividend.
     */
    security: (Position | null)
    /** A reference to the security that paid out the dividends. */
    securityRef: SecurityReference
    /** The amount of dividend income earned for the user's account in the data point's time period. */
    amount: Scalars['Float']
    __typename: 'DividendTopEarner'
}

export interface DividendDataPoint {
    groupedBy: DividendGroupedByEnum
    label: Scalars['String']
    paid: Scalars['Float']
    total: Scalars['Float']
    pending: Scalars['Float']
    upcoming: Scalars['Float']
    topEarners: (DividendTopEarner | null)[]
    __typename: 'DividendDataPoint'
}

export type DividendGroupedByEnum = 'YEAR' | 'MONTH'


/** Dividend Frequency Enum */
export type DividendFrequencyEnum = 'BIMONTHLY' | 'MONTHLY' | 'QUARTERLY' | 'SEMI_ANNUAL' | 'ANNUAL' | 'TRIMESTERLY' | 'WEEKLY' | 'IRREGULAR' | 'NEVER_ISSUED' | 'OTHER'


/** Dividend Yield Level Enum */
export type PeRatioLevelEnum = 'HIGH' | 'MEDIUM_HIGH' | 'MEDIUM' | 'MEDIUM_LOW' | 'LOW'

export interface FundFundamentals {
    /** A description of the relative asset allocations within the fund. */
    assetAllocations: (FundAllocationInfo[] | null)
    /**
     * @deprecated Obsolete. Use `category` on `Fund` instead.
     * The fund category.
     */
    category: (Scalars['String'] | null)
    /** A description of the fund. */
    description: (Scalars['String'] | null)
    /** The inception date of the fund. */
    inceptionDate: (Scalars['String'] | null)
    /** True if the fund is an index fund; false otherwise. Value is null when unknown. */
    isIndexFund: (Scalars['Boolean'] | null)
    /** The net expense ratio, expressed as a percentage. */
    netExpenseRatio: (Scalars['Float'] | null)
    /** A numeric grading of the net expense ratio, from 1-5 (from low to high). */
    netExpenseRatioGrade: (Scalars['Float'] | null)
    /** The net expense ratio bucketized into five levels, from low to high. */
    netExpenseRatioLevel: (NetExpenseRatioLevelEnum | null)
    /** The fund performance for the most recent one year. Value is null when the time period predates the fund. */
    performance1y: (FundPerformanceInfo | null)
    /** The fund performance for the most recent three years. Value is null when the time period predates the fund. */
    performance3y: (FundPerformanceInfo | null)
    /** The fund performance for the most recent five years. Value is null when the time period predates the fund. */
    performance5y: (FundPerformanceInfo | null)
    /** The fund performance for the most recent ten years. Value is null when the time period predates the fund. */
    performance10y: (FundPerformanceInfo | null)
    /** The fund performance since inception. Value is null when data is not available. */
    performanceSinceInception: (FundPerformanceInfo | null)
    /** Information about the top two fund holdings. */
    topHoldings: (FundHoldingInfo[] | null)
    /** The total amount of assets managed in the fund. */
    totalAssets: (Scalars['Float'] | null)
    /** The total number of holdings. */
    totalNumberOfHoldings: (Scalars['Int'] | null)
    __typename: 'FundFundamentals'
}


/** Information about an asset allocation within a fund. */
export interface FundAllocationInfo {
    /** The name of the asset type. */
    name: (Scalars['String'] | null)
    /** The asset allocation, expressed as a percentage. */
    percentage: (Scalars['Float'] | null)
    __typename: 'FundAllocationInfo'
}


/** A net expense ratio level. */
export type NetExpenseRatioLevelEnum = 'HIGH' | 'LOW' | 'MEDIUM' | 'MEDIUM_HIGH' | 'MEDIUM_LOW'


/** Information about a fund's performance over a period of time. */
export interface FundPerformanceInfo {
    /** The net-asset-value annual return. */
    annualReturnNav: Scalars['Float']
    /** The as-of date for the performance figure. */
    asOfDate: Scalars['String']
    __typename: 'FundPerformanceInfo'
}


/** Information about a specific fund holding. */
export interface FundHoldingInfo {
    /** The name of the holding. */
    name: (Scalars['String'] | null)
    /** The number of shares held. */
    quantity: (Scalars['Float'] | null)
    /** The stock symbol of the holding. */
    symbol: (Scalars['String'] | null)
    /** The portion of the fund designated to the holding, expressed as a percentage. */
    weighting: (Scalars['Float'] | null)
    /** The URL of the holding's logo. */
    logoUrl: (Scalars['String'] | null)
    __typename: 'FundHoldingInfo'
}


/** Represents a fund security. */
export interface Fund {
    /** The category path for this secuirty in the category hierarchy. An empty list means that the security is currently uncategorized. */
    category: Scalars['String'][]
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** The category path for this fund in the category hierarchy. An empty list means that the fund is currently uncategorized. */
    fundCategory: Scalars['String'][]
    /** Information about fund document filings. Value is null when data is not available. */
    fundFilings: (FundFilings | null)
    /** Fund fundamentals data. Value is null when data is not available. */
    fundFundamentals: (FundFundamentals | null)
    /** Fundamentals data for the security. Value is null when data is unavailable. */
    fundamentals: (Fundamentals | null)
    /** A time-series of historical quote data for the security. Value is null when market data is unavailable. */
    historicalQuotes: (HistoricalQuote[] | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes: (IntradayQuoteTimeSeries | null)
    /** Indicates if this security is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive: Scalars['Boolean']
    /** True IF the security is marginable */
    isMarginable: Scalars['Boolean']
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    latestQuote: (Quote | null)
    /** The maintenance margin requirement for a given security */
    maintenanceMargin: (Scalars['Float'] | null)
    /** tooltip to display margin requirement content */
    marginEligibileTooltip: SecurityMarginTooltip
    /** Icon representing mergin eligibility */
    marginEligibleIcon: (AppImage | null)
    /** tooltip to display margin requirement content */
    marginRequirementTooltip: SecurityMarginTooltip
    /** The name of the market or exchange on which the security is listed. Value is null when data is unavailable. */
    market: (Scalars['String'] | null)
    /** The name of the security. */
    name: Scalars['String']
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this security, sorted in reverse chronological order.
     */
    news: NewsConnection
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange: (PriceChange | null)
    /** Profile information for the security. Value is null when data is unavailable. */
    profile: (SecurityProfile | null)
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    quote: (Quote | null)
    /** A list of news stories related to this security, sorted in reverse chronological order. */
    securityNews: (NewsConnection | null)
    /** App Pill to be displayed for the security */
    securityPill: (AppPill | null)
    /** The current status of the security. */
    status: SecurityStatusEnum
    /** The ticker symbol for this security. */
    symbol: Scalars['String']
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    __typename: 'Fund'
}


/** Filings information specific to funds. */
export interface FundFilings {
    /** The most recent available document filed for Rule 485(b). Value is null when unavailable. */
    last485b: (SecurityFiling | null)
    __typename: 'FundFilings'
}


/** A security document filed with the SEC. */
export interface SecurityFiling {
    /** A description of the document. Value is null when unavailable. */
    description: (Scalars['String'] | null)
    /** The filing date of the document. Value is null when unavailable. */
    filingDate: (Scalars['String'] | null)
    /** The document group associated with the document type. Value is null when unavailable. */
    group: (Scalars['String'] | null)
    /** A URL to an HTML version of the document. */
    htmlUrl: Scalars['String']
    /** The number of pages in the document. Value is null when unavailable. */
    pages: (Scalars['Int'] | null)
    /** A URL to a PDF version of the document. */
    pdfUrl: Scalars['String']
    /** The document type. */
    type: Scalars['String']
    __typename: 'SecurityFiling'
}

export interface Fundamentals {
    /** The unique identifier of the Node. */
    id: Scalars['ID']
    /** The date and time that the fundamentals were retrieved. */
    asOfTime: (Scalars['String'] | null)
    /** The market capitalization, calculated using a recent share price. */
    marketCap: (Scalars['Float'] | null)
    /** Display shortened market capitalization, calculated using a recent share price. */
    marketCapShort: (Scalars['String'] | null)
    /** The number of shares outstanding. */
    sharesOutstanding: (Scalars['Float'] | null)
    /** Shortened number of shares outstanding. */
    sharesOutstandingShort: (Scalars['String'] | null)
    /** The earnings per share for the latest fiscal period earnings. */
    eps: (Scalars['Float'] | null)
    /** The current price divided by the latest earnings per share. */
    peRatio: (Scalars['Float'] | null)
    /** A numeric grading of the P/E ratio, from 1-5 (from low to high). */
    peRatioGrade: (Scalars['Float'] | null)
    /** The P/E ratio bucketized into five levels, from low to high. */
    peRatioLevel: (PeRatioLevelEnum | null)
    /** The date on which the 52-week high price occurred. */
    week52HighDate: (Scalars['String'] | null)
    /** The 52-week high price. */
    week52HighPrice: (Scalars['Float'] | null)
    /** The date on which the 52-week low price occurred. */
    week52LowDate: (Scalars['String'] | null)
    /** The 52-week low price. */
    week52LowPrice: (Scalars['Float'] | null)
    /** The 52-week range */
    week52range: (Scalars['Float'] | null)
    /** The forward annual dividend rate amount. */
    dividendRate: (Scalars['Float'] | null)
    /** The dividend yield, expressed as a percentage. */
    dividendYield: (Scalars['Float'] | null)
    /** The dividend frequency. */
    dividendFrequency: (DividendFrequencyEnum | null)
    /** The price to sales ratio. */
    priceToSales: (Scalars['Float'] | null)
    /** The 5 year beta - the security risk vs market risk */
    beta: (Scalars['Float'] | null)
    /** Display shortened average daily volume */
    averageDailyVolumeShort: (Scalars['String'] | null)
    __typename: 'Fundamentals'
}


/** A historical quote time period. */
export type HistoricalQuotePeriodEnum = 'FIVE_YEARS' | 'ONE_MONTH' | 'ONE_WEEK' | 'ONE_YEAR' | 'SIX_MONTHS' | 'THREE_MONTHS' | 'THREE_YEARS' | 'TWO_YEARS' | 'YEAR_TO_DATE' | 'ALL'


/** An intraday quote period. */
export type IntradayQuotePeriodEnum = 'LATEST_DAY' | 'LATEST_WEEK' | 'ONE_WEEK' | 'TODAY'


/** An intraday quote interval. */
export type IntradayQuoteIntervalEnum = 'FIVE_MINUTE' | 'ONE_HOUR' | 'ONE_MINUTE' | 'TEN_MINUTE' | 'THIRTY_MINUTE' | 'TWO_MINUTE'


/** Represents an equity security. */
export interface Equity {
    /** The category path for this secuirty in the category hierarchy. An empty list means that the security is currently uncategorized. */
    category: Scalars['String'][]
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** Fundamentals data for the security. Value is null when data is unavailable. */
    fundamentals: (Fundamentals | null)
    /** A time-series of historical quote data for the security. Value is null when market data is unavailable. */
    historicalQuotes: (HistoricalQuote[] | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes: (IntradayQuoteTimeSeries | null)
    /** Indicates if this security is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive: Scalars['Boolean']
    /** True IF the security is marginable */
    isMarginable: Scalars['Boolean']
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    latestQuote: (Quote | null)
    /** The maintenance margin requirement for a given security */
    maintenanceMargin: (Scalars['Float'] | null)
    /** tooltip to display margin requirement content */
    marginEligibileTooltip: SecurityMarginTooltip
    /** Icon representing mergin eligibility */
    marginEligibleIcon: (AppImage | null)
    /** tooltip to display margin requirement content */
    marginRequirementTooltip: SecurityMarginTooltip
    /** The name of the market or exchange on which the security is listed. Value is null when data is unavailable. */
    market: (Scalars['String'] | null)
    /** The name of the security. */
    name: Scalars['String']
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this security, sorted in reverse chronological order.
     */
    news: NewsConnection
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange: (PriceChange | null)
    /** Profile information for the security. Value is null when data is unavailable. */
    profile: (SecurityProfile | null)
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    quote: (Quote | null)
    /** A list of news stories related to this security, sorted in reverse chronological order. */
    securityNews: (NewsConnection | null)
    /** App Pill to be displayed for the security */
    securityPill: (AppPill | null)
    /** The current status of the security. */
    status: SecurityStatusEnum
    /** The ticker symbol for this security. */
    symbol: Scalars['String']
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    __typename: 'Equity'
}


/** Information about invest product */
export interface InvestMarketing {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Header content */
    headerContent: (InvestMarketingContent | null)
    /** invest marketing disclaimer */
    disclaimer: (InvestMarketingContent | null)
    /** A collection of disclosures to display on the screen. */
    disclosures: InvestMarketingDisclosures
    /** invest account checklist */
    checklist: (InvestMarketingChecklist | null)
    /** invest account details */
    details: (InvestMarketingDetails | null)
    /**
     * @deprecated This is the old deprecated open account cta. Clients should use the new openAccountCtaLinks instead.
     * call to action for invest marketing content
     */
    openAccountCta: (AppLink | null)
    /** A collection of open account cta links to be displayed on the invest marketing page. */
    openAccountCtaLinks: AppLink[]
    /** Set of available product options for onboarding to invest. */
    products: OnboardingProduct[]
    __typename: 'InvestMarketing'
}


/** Invest account marketing details */
export interface InvestMarketingDetails {
    /** how invest works */
    howItWorks: (InvestMarketingContent | null)
    /** invest account benefits */
    benefits: ((InvestMarketingContent | null)[] | null)
    __typename: 'InvestMarketingDetails'
}


/** Invest marketing content */
export interface InvestMarketingContent {
    /** invest marketing content title */
    title: (Scalars['String'] | null)
    /** invest marketing image */
    image: (AppImage | null)
    /** invest marketing description */
    description: (Scalars['String'] | null)
    /**
     * @deprecated use `marketingTooltipCopy` that supports an array of strings
     * invest marketing tooltip
     */
    tooltipCopy: (Scalars['String'] | null)
    /** Invest marketing tooltip as an array of strings rendered as paragraphs in the tooltip */
    marketingTooltipCopy: ((Scalars['String'] | null)[] | null)
    __typename: 'InvestMarketingContent'
}


/** Invest account access */
export interface InvestMarketingChecklist {
    /** checklist title */
    title: (Scalars['String'] | null)
    /** invest checklist content */
    checklistContent: ((InvestMarketingContent | null)[] | null)
    __typename: 'InvestMarketingChecklist'
}


/** Contains information for the Disclosures Link and modal content for invest marketing. */
export interface InvestMarketingDisclosures {
    /** The title for the disclosures Link */
    title: Scalars['String']
    /** The contents for the disclosures modal that the link opens. */
    contents: Scalars['String'][]
    __typename: 'InvestMarketingDisclosures'
}


/** New Invest Marketing Screen content. Will replace the above types once clients are using it. */
export interface InvestMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The header for the invest marketing screen. */
    header: (Scalars['String'] | null)
    /** The footer for the invest marketing screen. */
    footer: ((Scalars['String'] | null)[] | null)
    /** An array of the content cards for the invest marketing screen. */
    productMarketingCards: ((ProductMarketingCard | null)[] | null)
    /** An array of the disclosures for the invest marketing screen. */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    __typename: 'InvestMarketingScreen'
}

export interface InvestProductLandingPage {
    /** Unimplemented */
    title: (Scalars['String'] | null)
    /** Unimplemented */
    header: (ProductAccountLandingPageHeader | null)
    /** Unimplemented */
    accountDetails: ((TabularDataItem | null)[] | null)
    /** Unimplemented */
    banners: ((InformationBanner | null)[] | null)
    /** Unimplemented */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    /** Unimplemented */
    floatingActionButton: (AppNavigationItem | null)
    /** Unimplemented */
    transactions: (CommonTransactionEntryConnection | null)
    /** Unimplemented */
    transactionsEmptyState: (CommonTransactionsEmptyState | null)
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards: (AppCard[] | null)
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards: (AppCard[] | null)
    __typename: 'InvestProductLandingPage'
}

export interface InvestFullyPaidLendingDisclosure {
    /** Security lending disclosure introduction */
    introduction: (Scalars['String'] | null)[]
    /** Security lending disclosure review title */
    reviewTitle: Scalars['String']
    /** Security lending disclosure review body */
    reviewBody: (Scalars['String'] | null)[]
    /** Security lending disclosure body */
    disclosureBody: (Scalars['String'] | null)[]
    /** Security lending disclosure title */
    disclosureTitle: Scalars['String']
    /** Security lending disclosure opt in text */
    optInText: Scalars['String']
    /** Security lending disclosure opt in default value */
    optInDefault: Scalars['Boolean']
    __typename: 'InvestFullyPaidLendingDisclosure'
}

export interface PortfolioSlicePendingCashFlow {
    /** The time when the pending cash flow estimate was calculated. */
    asOfTime: Scalars['String']
    /**
     * The cash flow dollar amount. Negative values indicate outflows, positive
     * values indicate inflows.
     */
    cashFlow: Scalars['Float']
    /**
     * When true, the estimated amount is uncertain, and the value indicates
     * direction only.
     */
    directionOnly: Scalars['Boolean']
    __typename: 'PortfolioSlicePendingCashFlow'
}

export interface PortfolioSliceInvestments {
    /** List of positions allocated to a portfolio slice. */
    allocatedPositions: AllocatedPositionConnection
    /**
     * @deprecated This is a temporary workaround for Relay. It will be removed when it is no longer needed. Clients should use `allocatedPositions` instead if possible.
     * This is a temporary workaround for Relay. Returns the same data as the
     * `allocatedPositions` connection, but as a plain list.
     */
    allocatedPositionsList: AllocatedPosition[]
    /**
     * The summarized total cost basis of the investment assets. Value is null if
     * cost information is unavailable.
     */
    totalCost: (TotalInvestmentsCost | null)
    /**
     * The summarized total value of the investment assets. Value is null if price
     * information is temporarily unavailable.
     */
    totalValue: (TotalInvestmentsValue | null)
    /**
     * The summarized total unrealized gain of the investment assets. Value is null
     * if total cost or total value information is unavailable.
     */
    totalUnrealizedGain: (TotalInvestmentsGain | null)
    __typename: 'PortfolioSliceInvestments'
}

export interface AllocatedPositionConnection {
    pageInfo: PageInfo
    edges: ((AllocatedPositionEdge | null)[] | null)
    total: Scalars['Int']
    __typename: 'AllocatedPositionConnection'
}

export interface AllocatedPositionEdge {
    cursor: Scalars['String']
    node: (AllocatedPosition | null)
    __typename: 'AllocatedPositionEdge'
}


/** A position with a fraction that is allocated to a portfolio slice. */
export interface AllocatedPosition {
    /** The portion of the full position that is allocated to a portfolio slice. */
    allocation: Scalars['Float']
    /**
     * The portion of the full position that is allocated to a portfolio slice,
     * represented as a percentage. Rounded to two decimal places. Zero indicates
     * that the allocation portion is less than 0.01%.
     */
    allocationPercent: Scalars['Float']
    /** The full position. */
    position: Position
    __typename: 'AllocatedPosition'
}

export interface PortfolioSliceOrderStatus {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * True when the current order status is locked, and changes are not permitted.
     * If and only if the value is true, the `lockReason` will be `UNLOCKED`.
     */
    isLocked: Scalars['Boolean']
    /** The specific order status lock reason. */
    lockReason: PortfolioSliceOrderLockReasonEnum
    /** True when this portfolio slice has an order set. */
    isSetOnSelf: Scalars['Boolean']
    /** True when a descendant of this portfolio slice has an order set. */
    isSetInDescendants: Scalars['Boolean']
    /** Equal to `isSetOnSelf || isSetInDescendants`. */
    isSetOnSelfOrInDescendants: Scalars['Boolean']
    /**
     * The signed total of all buy orders existing in descendants. Value will always
     * be either zero or positive. Does not include any order set on this slice.
     */
    netDescendantBuyOrderAmount: Scalars['Float']
    /**
     * The signed total of all sell orders existing in descendants. Value will always
     * be either zero or negative. Does not include any order set on this slice.
     */
    netDescendantSellOrderAmount: Scalars['Float']
    /**
     * The sum of the signed values `netDescendantBuyOrderAmount` and
     * `netDescendantSellOrderAmount`.
     */
    netDescendantOrderAmount: Scalars['Float']
    /**
     * Details about the portfolio slice order set on this slice, when present. Value
     * is null when there is no portfolio slice order set on this slice.
     */
    order: (PortfolioSliceOrder | null)
    __typename: 'PortfolioSliceOrderStatus'
}


/** Information about a trading order for a portfolio slice. */
export interface PortfolioSliceOrder {
    /**
     * The signed cash flow requested by this order. Positive values indicate buys
     * and negative values indicate sells. Value will not be zero.
     */
    cashFlow: Scalars['Float']
    __typename: 'PortfolioSliceOrder'
}


/** A portfolio slice order lock reason. */
export type PortfolioSliceOrderLockReasonEnum = 'UNLOCKED' | 'LOCKED_BY_REBALANCE' | 'LOCKED_BY_TRADING' | 'LOCKED_BY_LIQUIDATION'

export interface PortfolioSlicePerformance {
    /**
     * @deprecated Now redundant. Use the dates associated with `startValue` and `endValue` instead.
     * The time span over which the performance data is calculated.
     */
    timeSpan: PerformanceTimeSpan
    /**
     * The value at the start of the time period over which performance is
     * calculated.
     */
    startValue: PerformancePointValue
    /** The value at the end of the time period over which performance is calculated. */
    endValue: PerformancePointValue
    /**
     * The money-weighted rate of return for this portfolio slice for the time
     * period, as a percentage.
     */
    moneyWeightedRateOfReturn: (Scalars['Float'] | null)
    /**
     * The total gain for the portfolio slice, caluclated by summing the capital gain
     * and the earned dividends.
     */
    totalGain: (Scalars['Float'] | null)
    /** The capital gain for this portfolio slice over the time period. */
    capitalGain: (Scalars['Float'] | null)
    /**
     * @deprecated Renamed for clarity. Use `earnedDividends` instead.
     * The total amount of dividends earned by this portfolio slice over the time
     * period. Dividends are earned on the ex-date.
     */
    cumulativeDividends: (Scalars['Float'] | null)
    /**
     * The total amount of dividends earned by this portfolio slice over the time
     * period. Dividends are earned on the ex-date.
     */
    earnedDividends: (Scalars['Float'] | null)
    /**
     * The net total cash flow into or out-of this portfolio slice over the time
     * period.
     */
    netCashFlow: (Scalars['Float'] | null)
    /**
     * The number of earned dividends associated with this portfolio slice over the
     * time period.
     */
    earnedDividendCount: (Scalars['Int'] | null)
    /**
     * The number of cash flows associated with this portfolio slice over the time
     * period.
     */
    cashFlowCount: (Scalars['Int'] | null)
    __typename: 'PortfolioSlicePerformance'
}


/** Information about the time span over which performance is calculated. */
export interface PerformanceTimeSpan {
    /** The start time of the span. */
    start: Scalars['String']
    /** The end time of the span. */
    end: Scalars['String']
    __typename: 'PerformanceTimeSpan'
}


/** The value of a portfolio slice at a specific point in time. */
export interface PerformancePointValue {
    /** The date associated with the value. */
    date: Scalars['String']
    /** The value. Value is null when unavailable. */
    value: (Scalars['Float'] | null)
    __typename: 'PerformancePointValue'
}

export interface PortfolioSliceRebalanceStatus {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * True when the current rebalance status is locked, and changes are not
     * permitted. If and only if the value is true, the `lockReason` will be
     * `UNLOCKED`.
     */
    isLocked: Scalars['Boolean']
    /** The specific rebalance status lock reason. */
    lockReason: PortfolioSliceRebalanceLockReasonEnum
    /** True when this portfolio slice has a rebalance set. */
    isSetOnSelf: Scalars['Boolean']
    /** True when a descendant of this portfolio slice has a rebalance set. */
    isSetInDescendants: Scalars['Boolean']
    /** Equal to `isSetOnSelf || isSetInDescendants`. */
    isSetOnSelfOrInDescendants: Scalars['Boolean']
    __typename: 'PortfolioSliceRebalanceStatus'
}


/** A portfolio slice rebalance lock reason. */
export type PortfolioSliceRebalanceLockReasonEnum = 'UNLOCKED' | 'LOCKED_BY_ALLOCATION' | 'LOCKED_BY_ORDER' | 'LOCKED_BY_TRADING' | 'LOCKED_BY_LIQUIDATION'


/** A connection of brokarage account positions. */
export interface PositionConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((PositionEdge | null)[] | null)
    /** The total number of positions in the connection. */
    total: Scalars['Int']
    __typename: 'PositionConnection'
}


/** The position edge. */
export interface PositionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The node at the end of the edge. */
    node: (Position | null)
    __typename: 'PositionEdge'
}


/** An investment in a single security. */
export interface Position {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Dividend Information for the position. */
    dividends: PositionDividends
    /** The Invest account that owns this position. */
    investAccount: (Account | null)
    /**
     * @deprecated Use `investAccount` instead.
     * The account that owns this position.
     */
    account: Account
    /** The security that is held. */
    positionSecurity: PositionSecurityReference
    /** Fully paid lending program entry from the position ledger. */
    fullyPaidLending: (PositionFullyPaidLending | null)
    /**
     * @deprecated Use `positionSecurity` instead.
     * The security that is held.
     */
    security: (Security | null)
    /** The share quantity currently held. */
    quantity: Scalars['Float']
    /** The cost basis of this position, if available. */
    cost: (PositionCost | null)
    /**
     * The value of this postion. Value is null when price information is
     * unavailable.
     */
    value: (PositionValue | null)
    /**
     * The unrealized gain from this position. Value is null when cost or value are
     * unavailable.
     */
    unrealizedGain: (PositionGain | null)
    /** Marginability information for this position. */
    marginability: (PositionMarginability | null)
    __typename: 'Position'
}


/** An estimated trade amount sort type. */
export type PositionSortTypeEnum = 'SYMBOL' | 'VALUE' | 'COST' | 'UNREALIZED_GAIN_PERCENT' | 'MAINTENANCE_EQUITY_REQUIREMENT_PERCENT' | 'QUANTITY' | 'AVERAGE_SHARE_PRICE'

export interface PositionDividends {
    /** The amount earned from dividends in the last 12 months returned as a formatted string. */
    lastTwelveMonthsPaid: Scalars['String']
    /** The average cost per share returned as a formatted string. */
    averageCost: Scalars['String']
    /** The dividend yield of the position. */
    dividendYield: (Scalars['Float'] | null)
    /** The frequency with which dividends are disbursed. */
    dividendFrequency: (DividendFrequencyEnum | null)
    /** The yield on cost for the dividend position. */
    yieldOnCost: (Scalars['Float'] | null)
    __typename: 'PositionDividends'
}


/** The possible actions a user can perform on a Position. */
export type UserActionOnPositionEnum = 'MOVE' | 'LIQUIDATE' | 'CONTACT'


/** Information about a security that may or may not be supported. */
export interface PositionSecurityReference {
    /** The best-available descriptor for the security. */
    descriptor: Scalars['String']
    /** The symbol of the security, if known. */
    symbol: (Scalars['String'] | null)
    /** The security, if available. */
    security: (Security | null)
    __typename: 'PositionSecurityReference'
}


/** Fully paid lending program from position ledger. */
export interface PositionFullyPaidLending {
    /** The quantity of the stock loan. */
    quantity: (Scalars['Float'] | null)
    __typename: 'PositionFullyPaidLending'
}


/** The cost basis of a position. */
export interface PositionCost {
    /** The cost basis. */
    cost: Scalars['Float']
    /** The cost divided by the total quanity. */
    averageSharePrice: Scalars['Float']
    /**
     * @deprecated Defunct, always returns false.
     * Indicates if this cost basis is currently an estimation due to recent trades.
     */
    isEstimated: Scalars['Boolean']
    __typename: 'PositionCost'
}


/** The value of a position. */
export interface PositionValue {
    /** The value. */
    value: Scalars['Float']
    /** The timestamp of the price used to calculate the position value. */
    priceDate: Scalars['String']
    /**
     * The portion of overall investment asset value that this position represents,
     * as a percentage. Value is null when the total investment value is unavailable.
     */
    percentOfTotal: (Scalars['Float'] | null)
    __typename: 'PositionValue'
}


/** The unrealized gain from a position. */
export interface PositionGain {
    /** The difference between the current value and the cost basis. */
    gain: Scalars['Float']
    /** The percent difference between the current value and the cost basis. */
    gainPercent: Scalars['Float']
    __typename: 'PositionGain'
}


/** Marginability information for a postion. */
export interface PositionMarginability {
    /** True if the position is marginable. */
    isMarginable: Scalars['Boolean']
    /** The maintenance equity percentage that this position requires. */
    maintenanceEquityRequirementPercent: Scalars['Float']
    /** The dollar amount this position contributes to total required equity. */
    maintenanceEquityRequirement: (Scalars['Float'] | null)
    /**
     * If the indicated dollar amount were sold, the amount by which the maintenance
     * equity requirement would be reduced.
     */
    maintenanceEquityRequirementReductionBySelling: (Scalars['Float'] | null)
    /** The valuation as-of date for the equity requirement amount. */
    asOfDate: (Scalars['String'] | null)
    __typename: 'PositionMarginability'
}


/** Information about a security. */
export interface SecurityReference {
    /** The ID of the node. */
    id: Scalars['ID']
    /** The best-available descriptor for the security. */
    descriptor: Scalars['String']
    /** The symbol of the security, if known. */
    symbol: (Scalars['String'] | null)
    /** The security, if available. */
    security: (Security | null)
    __typename: 'SecurityReference'
}

export interface MarginHealth {
    id: Scalars['ID']
    /** Margin health title. */
    title: (Scalars['String'] | null)
    /** The information banner for the margin health */
    banner: (InformationBanner | null)
    /** Current health score. */
    currentScore: (MarginDetail | null)
    /** An array of health thresholds. */
    thresholds: (MarginHealthThreshold[] | null)
    /** Button to take users to view account holdings. Intended for use by web clients. */
    viewHoldingsButton: (AppButton | null)
    /** Link to take users to view account holdings. Intended for use by mobile clients. */
    viewHoldingsLink: (AppLink | null)
    /** Link to help center article with more information about health score. */
    learnMoreLink: (AppLink | null)
    /** Breakdown of margin balance and distance to margin call. */
    breakdown: (RichTextContent[] | null)
    __typename: 'MarginHealth'
}

export interface MarginAvailableToBorrow {
    /** Available to borrow title. */
    title: (Scalars['String'] | null)
    /** Details of available to borrow - withdrawal and reinvest. */
    additionalDetails: (AvailableToBorrowDetails | null)
    /** Current margin loan balance detail. */
    currentBalanceDetail: (MarginDetail | null)
    /** Withdrawable limit details */
    withdrawableMaxDetail: (MarginDetail | null)
    /** Reinvest limit details */
    investableMaxDetail: (MarginDetail | null)
    /** Breakdown of margin balance and impact of available to borrow. */
    breakdown: (RichTextContent[] | null)
    __typename: 'MarginAvailableToBorrow'
}

export interface MarginHealthThreshold {
    /** Maximum threshold for the health score band. */
    thresholdMax: Scalars['Float']
    /** Minimum threshold for the health score band. Clients may only need thresholdMax to create bands. */
    thresholdMin: Scalars['Float']
    /** Health score text color - liquid semantic color naming used. */
    color: Scalars['String']
    __typename: 'MarginHealthThreshold'
}

export interface MarginProductLandingPage {
    /** The title for the Margin Product Landing Page */
    title: (Scalars['String'] | null)
    /** The header for the Margin Product Landing Page */
    header: (ProductAccountLandingPageHeader | null)
    /** The account details for the Margin Product Landing Page */
    accountDetails: ((TabularDataItem | null)[] | null)
    /** An array of informational banners for the Margin Product Landing Page */
    banners: ((InformationBanner | null)[] | null)
    /** An array of the disclosures for the Margin Product Landing Page */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    /** The floating action button details for the Margin Product Landing Page (mobile only) */
    floatingActionButton: (AppNavigationItem | null)
    /** Margin transactions for the Margin Product Landing Page */
    transactions: (CommonTransactionEntryConnection | null)
    /** Copy to be displayed when there are no transactions on the Margin Product Landing Page */
    transactionsEmptyState: (CommonTransactionsEmptyState | null)
    /** Margin landing page primary CTA (web only) */
    primaryCta: (AppNavigationItem | null)
    /** Margin landing page secondary CTA */
    secondaryCta: (AppLink | null)
    /** Margin Health section. */
    health: (MarginHealth | null)
    /** Available to borrow section. */
    availableToBorrow: (MarginAvailableToBorrow | null)
    /** Margin loan interest. */
    loanInterest: (MarginLoanInterest | null)
    /** Text for how billing works. */
    howBillingWorks: (MarginDetail | null)
    /** CTA to view activity. (web only) */
    activityCta: (AppButton | null)
    /** CTA to view statements. (web only) */
    statementsCta: (AppButton | null)
    /** A list of Borrow bills. Sorted in reverse chronological order. */
    statements: (BorrowBillConnection | null)
    /** A history of Borrow activity. Sorted in reverse chronological order. */
    activity: (BorrowActivityEntryConnection | null)
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards: (AppCard[] | null)
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards: (AppCard[] | null)
    __typename: 'MarginProductLandingPage'
}

export interface MarginDetail {
    /** Label for the value. */
    label: Scalars['String']
    /** Formatted value of the label. */
    labelValue: Scalars['String']
    /** Numeric value of the label. */
    numericValue: (Scalars['Float'] | null)
    /** Primary or background color of the label, if applicable - liquid semantic color naming used. */
    backgroundColor: (Scalars['String'] | null)
    /** Secondary or foreground color of the label, if applicable - liquid semantic color naming used. */
    foregroundColor: (Scalars['String'] | null)
    /** Tooltip to include additional context. */
    tooltip: (AppTooltip | null)
    __typename: 'MarginDetail'
}

export interface MarginLoanInterest {
    /** Title of the interest rate section. */
    title: (Scalars['String'] | null)
    /** A list of interest rate and billing details. */
    listItems: (ListItem[] | null)
    __typename: 'MarginLoanInterest'
}

export interface AvailableToBorrowDetails {
    /** Title of available to borrow details. */
    title: (Scalars['String'] | null)
    /** Description of available to borrow details. */
    description: (RichTextContent[] | null)
    /** Reinvest limit detail. */
    investableMaxDetail: (MarginDetail | null)
    /** Withdrawable limit as a detail. */
    withdrawableMaxDetail: (MarginDetail | null)
    __typename: 'AvailableToBorrowDetails'
}

export interface NetWorth {
    /** The ID of this node */
    id: Scalars['ID']
    /** Chartable data for the net worth over time */
    chartData: ChartableSliceData
    /** Chartable data for the live, most up-to-date, net worth */
    liveNetWorth: (ChartableSliceDatum | null)
    /** Tooltip for more info about net worth */
    disclosuresTooltip: (AppTooltip | null)
    __typename: 'NetWorth'
}


/** Represents a sliceable or portfolio slice that has chartable data. */
export type ChartableSlice = (CryptoSystemPie | CryptoAsset | Fund | Equity | NetWorth | ChildPortfolioSlice | RootPortfolioSlice | SharedPie | SystemPie | UserPie) & { __isUnion?: true }

export interface ChildPortfolioSlice {
    /** The account that owns this portfolio slice. */
    account: Account
    /** Child portfolio slice landing page content */
    investProductLandingPage: (InvestProductLandingPage | null)
    /** Information about manual orders for this slice - buying power, slice value and trade window. Value is null when manual order information is unavailable. */
    manualOrderBreakdown: (ManualOrderBreakdown | null)
    /** The buying power for this portfolio slice - cash, margin & total. Value is null when the balance breakdown is temporarily unavailable. */
    buyingPower: PortfolioSliceBuyingPower
    /** The portfolio slices in the ancestry path for this slice. */
    ancestors: (PortfolioSlice | null)[]
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** Children slices of this slice. */
    children: (ChildPortfolioSlice | null)[]
    /** Former children slices of this slice. Upon next trading window, the holdings allocated to each former slice will be reallocated. */
    deallocatedChildren: DeallocatedChild[]
    /** The estimated change in value that will occur at the next trading window, due to deposits, withdrawals, rebalances, or allocation changes. Postive value indicates buy, negative value indicates sell, and zero indicates no trades. Value is null when no estimate is available. */
    estimatedValueChange: (Scalars['Float'] | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /** Information about the investments allocated to this portfolio slice. Value is null when allocated position information is unavailable. */
    investments: (PortfolioSliceInvestments | null)
    /** True if this is the root portfolio slice for an account. */
    isRootSlice: Scalars['Boolean']
    /** A historical time-series of market value snapshots for this portfolio slice. */
    netCashFlows: ((ValueSnapshot | null)[] | null)
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    orderStatus: (PortfolioSliceOrderStatus | null)
    /**
     * @deprecated Functionality has been removed. Will be removed in the future.
     * Information about a pending cash flow for this slice, if there is one. Value is null when there are no pending cash flows.
     */
    pendingCashFlow: (PortfolioSlicePendingCashFlow | null)
    /** The percent allocation of this slice, as an integer between 0-100 inclusive. */
    percentage: Scalars['Int']
    /** Performance information for this portfolio slice. Value is null when performance information is unavailable. The period must be large enough to accomodate the start and end dates provided, any range ending over a year ago will require a period of MAX. */
    performance: (PortfolioSlicePerformance | null)
    /** The percent portion of value this slice represents relative to all investment holdings. Value is null when market data is unavailable. */
    portionOfAllValuePercent: (Scalars['Float'] | null)
    /** The percent portion of value this slice represents relative to the parent pie value. Value is null when the parent pie value is zero, the parent pie is unallocated, or when market data is unavailable. */
    portionOfParentValuePercent: (Scalars['Float'] | null)
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    rebalanceStatus: (PortfolioSliceRebalanceStatus | null)
    /** The root portfolio slice at the top of the ancestry path for this slice. */
    rootAncestor: RootPortfolioSlice
    /** The target percent portion of value this slice represents relative to all investment holdings. Value is null when market data is unavailable. */
    targetPortionOfAllValuePercent: (Scalars['Float'] | null)
    /** The target value for this slice, equal to the total parent pie value times the slice percentage. Value is null when the parent pie is unallocated, or when market data is unavailable. */
    targetValue: (Scalars['Float'] | null)
    /** The difference between the current value and the target value. Positive numbers are overweight, and negative numbers are underweight. Value is null when the parent pie is unallocated, or when market data is unavailable. */
    targetValueDiff: (Scalars['Float'] | null)
    /** The actual value of this slice divided by its target value. Value is null when the parent pie is unallocated, or when market data is unavailable. */
    targetValuePercent: (Scalars['Float'] | null)
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to: Sliceable
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value: (PortfolioSliceValue | null)
    /**
     * @deprecated Use `chartData` instead
     * A historical time-series of market value snapshots for this portfolio slice.
     */
    valueHistory: ValueSnapshot[]
    /**
     * @deprecated Superceded by `rebalanceStatus`, use that field instead.
     * If true, this slice is currently marked for rebalancing at the next trade window.
     */
    willRebalance: Scalars['Boolean']
    __typename: 'ChildPortfolioSlice'
}


/** Represents a former child of a portfolio slice. */
export interface DeallocatedChild {
    /** The percent portion of value this slice represents relative to all investment holdings. Value is null when market data is unavailable. */
    portionOfAllValuePercent: (Scalars['Float'] | null)
    /** The percent portion of value this slice represents relative to the parent pie value. Value is null when the parent pie value is zero, or when market data is unavailable. */
    portionOfParentValuePercent: (Scalars['Float'] | null)
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to: Sliceable
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value: (PortfolioSliceValue | null)
    __typename: 'DeallocatedChild'
}


/** cash flow types */
export type NetCashFlowFilterEnum = 'ALL' | 'CORPORATE_ACTION' | 'CRYPTO_TRADE' | 'DIVIDEND' | 'SLICE_MOVEMENT' | 'TRADE' | 'TRANSFER'

export type Pie = (CryptoSystemPie | SharedPie | SystemPie | UserPie) & { __isUnion?: true }

export type PieEditModelModeEnum = 'CLONE_ALL' | 'CLONE_OWN' | 'NO_CLONE' | 'NO_CLONE_FULL_DEPTH'


/** A historical pie performance time period. */
export type PieHistoricalPeriodEnum = 'FIVE_YEARS' | 'ONE_MONTH' | 'ONE_YEAR' | 'THREE_YEARS' | 'YEAR_TO_DATE'


/** A portfolio slice performance period. */
export type PortfolioSlicePerformancePeriodEnum = 'MAX' | 'ONE_DAY' | 'ONE_WEEK' | 'ONE_MONTH' | 'ONE_QUARTER' | 'ONE_YEAR' | 'YTD'

export interface RootPortfolioSlice {
    /** The account that owns this portfolio slice. */
    account: Account
    /** Root portfolio slice landing page content */
    investProductLandingPage: (InvestProductLandingPage | null)
    /** Information about manual orders for this slice - buying power, slice value and trade window. Value is null when manual order information is unavailable. */
    manualOrderBreakdown: (ManualOrderBreakdown | null)
    /** The buying power for this portfolio slice - cash, margin & total. Value is null when the balance breakdown is temporarily unavailable. */
    buyingPower: PortfolioSliceBuyingPower
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** Children slices of this slice. */
    children: (ChildPortfolioSlice | null)[]
    /** Former children slices of this slice. Upon next trading window, the holdings allocated to each former slice will be reallocated. */
    deallocatedChildren: DeallocatedChild[]
    /** The ID of this node. */
    id: Scalars['ID']
    /** Information about the investments allocated to this portfolio slice. Value is null when allocated position information is unavailable. */
    investments: (PortfolioSliceInvestments | null)
    /** True if this is the root portfolio slice for an account. */
    isRootSlice: Scalars['Boolean']
    /** A historical time-series of portfolio slice cash flows */
    netCashFlows: ((ValueSnapshot | null)[] | null)
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    orderStatus: (PortfolioSliceOrderStatus | null)
    /**
     * @deprecated Functionality has been removed. Will be removed in the future.
     * Information about a pending cash flow for this slice, if there is one. Value is null when there are no pending cash flows.
     */
    pendingCashFlow: (PortfolioSlicePendingCashFlow | null)
    /** Performance information for this portfolio slice. Value is null when performance information is unavailable. The period must be large enough to accomodate the start and end dates provided, any range ending over a year ago will require a period of MAX. */
    performance: (PortfolioSlicePerformance | null)
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    rebalanceStatus: (PortfolioSliceRebalanceStatus | null)
    /** Points to the pie that composes this slice. */
    to: UserPie
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value: (PortfolioSliceValue | null)
    /**
     * @deprecated Use `chartData` instead
     * A historical time-series of market value snapshots for this portfolio slice.
     */
    valueHistory: ValueSnapshot[]
    /**
     * @deprecated Superceded by `rebalanceStatus`, use that field instead.
     * If true, this slice is currently marked for rebalancing at the next trade window.
     */
    willRebalance: Scalars['Boolean']
    /** The stringified model for the slice */
    stringifiedModel: Scalars['String']
    __typename: 'RootPortfolioSlice'
}

export interface SharedPie {
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis: (PieAnalysis | null)
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance: (BacktestedPiePerformance[] | null)
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** Indicates if this pie contains crypto. */
    containsCrypto: Scalars['Boolean']
    /** The time that this node was created in ISO 8601 format. */
    created: (Scalars['String'] | null)
    /** The description of this pie. */
    description: (Scalars['String'] | null)
    /** A disclosure statement for this pie. */
    disclosure: (Scalars['String'] | null)
    /** Experimental. Generates an edit model representation of the pie. */
    editModel: Scalars['String']
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals: (PieFundamentals | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** Indicates if the sliceable is currently active and available to be added to pies, and does not contain any delisted or inactive securities. */
    isActive: Scalars['Boolean']
    /** True if the pie belongs to the viewing user. */
    isOwnPie: Scalars['Boolean']
    /** The time that this node was last modified in ISO 8601 format. */
    modified: (Scalars['String'] | null)
    /** The name of the sliceable. */
    name: Scalars['String']
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    /** The list of slices that belong to this pie. */
    slices: Slice[]
    /** A summary description of the slices in this pie. */
    summary: (Scalars['String'] | null)
    __typename: 'SharedPie'
}

export interface Slice {
    /** The percent allocation of this slice, as an integer between 0-100 inclusive. */
    percentage: Scalars['Int']
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to: Sliceable
    __typename: 'Slice'
}

export type Sliceable = (CryptoSystemPie | CryptoAsset | Fund | Equity | SharedPie | SystemPie | UserPie) & { __isUnion?: true }


/** A sliceable status. */
export type SliceableStatusEnum = 'ACTIVE' | 'INACTIVE' | 'DELISTED'


/** A sliceable type. */
export type SliceableTypeEnum = 'CRYPTO' | 'CRYPTO_SYSTEM_PIE' | 'EQUITY_SECURITY' | 'FUND_SECURITY' | 'SYSTEM_PIE' | 'USER_PIE' | 'SHARED_PIE'

export interface SliceableConnection {
    /** A list of edges. */
    edges: ((SliceableEdge | null)[] | null)
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The approximate total number of edges in the connection. */
    total: Scalars['Int']
    __typename: 'SliceableConnection'
}


/** An edge in a connection. */
export interface SliceableEdge {
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    /** A list of search match highlights. */
    highlights: SliceableSearchHighlight[]
    /** The item at the end of the edge */
    node: (Sliceable | null)
    __typename: 'SliceableEdge'
}

export interface SystemPie {
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis: (PieAnalysis | null)
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance: (BacktestedPiePerformance[] | null)
    /** The category path for this system pie in the category hierarchy. An empty list means that the system pie is currently uncategorized. */
    categorization: Scalars['String'][]
    /** Details about each category in the category path. */
    categorizationDetails: SystemPieCategoryDetails[]
    /**
     * @deprecated Obsolete and will eventually be removed. Use the hierarchical `categorization` field instead.
     * The categorization of this pie.
     */
    category: PieCategoryEnumType
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** Indicates if this pie contains crypto. */
    containsCrypto: Scalars['Boolean']
    /** The time that this node was created in ISO 8601 format. */
    created: (Scalars['String'] | null)
    /** The description of this pie. */
    description: (Scalars['String'] | null)
    /** A disclosure statement for this pie. */
    disclosure: (Scalars['String'] | null)
    /** Experimental. Generates an edit model representation of the pie. */
    editModel: Scalars['String']
    /** If available, a URL to a feature image that represents the pie. The best-fitting image to the requested width/height constraints will be returned, but specific dimensions are not guaranteed. */
    featureUrl: (Scalars['String'] | null)
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals: (PieFundamentals | null)
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of historical performance for the system pie.
     */
    historicalPerformance: (HistoricalPiePerformance[] | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive: Scalars['Boolean']
    /** True if the pie belongs to the viewing user. */
    isOwnPie: Scalars['Boolean']
    /** An identifier for this system pie that is stable across development environments. */
    key: Scalars['String']
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl: (Scalars['String'] | null)
    /** A list of methodology details used to create this pie. Value will be null when no information is available. */
    methodology: (Scalars['String'][] | null)
    /** The time that this node was last modified in ISO 8601 format. */
    modified: (Scalars['String'] | null)
    /** The name of this pie. */
    name: Scalars['String']
    /** Performance information for the system pie. */
    performance: (PiePerformance | null)
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /**
     * @deprecated Superceded by the `riskGrade` field on `PiePerformance`. This value will always be null.
     * A numeric risk grading for this pie, from 1-5 (from least to most risky). Value will be null if unavailble.
     */
    riskGrade: (Scalars['Float'] | null)
    /** The list of slices that belong to this pie. */
    slices: Slice[]
    /** The current status of the system pie. */
    status: SystemPieStatusEnum
    /** A summary description of the slices in this pie. */
    summary: (Scalars['String'] | null)
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    /** A description of the frequency at which the composition of this pie is updated. Value will be null when no information is available. */
    updateFrequency: (Scalars['String'] | null)
    __typename: 'SystemPie'
}


/** A pie categorization. */
export type PieCategoryEnumType = 'FIXED_INCOME' | 'HEDGE_FUND_REPLICATION' | 'INDEX' | 'INDUSTRIES' | 'SIMPLE' | 'TARGET_DATE' | 'TOTAL_PORTFOLIOS' | 'UNCATEGORIZED'

export interface SystemPieScreenerConnection {
    /** The current hierarchical category level. */
    currentCategory: SystemPieSubCategory
    /** A list of edges. */
    edges: ((SystemPieScreenerEdge | null)[] | null)
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The next hierarchical level of sub-categories. */
    subCategories: SystemPieSubCategory[]
    /** The approximate total number of edges in the connection. */
    total: Scalars['Int']
    __typename: 'SystemPieScreenerConnection'
}


/** An edge in a connection. */
export interface SystemPieScreenerEdge {
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    /** The item at the end of the edge */
    node: (SystemPie | null)
    __typename: 'SystemPieScreenerEdge'
}


/** A connection sub-category. */
export interface SystemPieSubCategory {
    /** The category path in the category hierarchy. */
    category: Scalars['String'][]
    /** Details about the system pie sub-category. */
    categoryDetails: SystemPieCategoryDetails[]
    /** The approximate total number of edges within the sub-category. */
    count: Scalars['Int']
    __typename: 'SystemPieSubCategory'
}


/** A system pie status. */
export type SystemPieStatusEnum = 'ACTIVE' | 'INACTIVE'


/** A system pie sort type. */
export type SystemPieLimitTypeEnum = 'PERFORMANCE_1M' | 'PERFORMANCE_1Y' | 'PERFORMANCE_3Y' | 'PERFORMANCE_5Y' | 'PERFORMANCE_YTD' | 'RISK_GRADE' | 'VOLATILITY'


/** A system pie sort type. */
export type SystemPieSortTypeEnum = 'CATEGORY' | 'NAME' | 'PERFORMANCE_1M' | 'PERFORMANCE_1Y' | 'PERFORMANCE_3Y' | 'PERFORMANCE_5Y' | 'PERFORMANCE_YTD' | 'RISK_GRADE' | 'VOLATILITY'


/** A time length unit. */
export type TimeLengthUnitEnum = 'DAYS' | 'MONTHS' | 'WEEKS' | 'YEARS'

export interface UserPie {
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis: (PieAnalysis | null)
    /** A list of ancestry paths for this pie. */
    ancestors: UserPie[][]
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance: (BacktestedPiePerformance[] | null)
    /** A time-series of chart data for the security. */
    chartData: ChartableSliceData
    /** Indicates if this pie contains crypto. */
    containsCrypto: Scalars['Boolean']
    /** The time that this node was created in ISO 8601 format. */
    created: (Scalars['String'] | null)
    /** The description of this pie. */
    description: (Scalars['String'] | null)
    /** A disclosure statement for this pie. */
    disclosure: (Scalars['String'] | null)
    /** Experimental. Generates an edit model representation of the pie. */
    editModel: Scalars['String']
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals: (PieFundamentals | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive: Scalars['Boolean']
    /**
     * @deprecated Deprecated in favor of `isActive`. Use that field instead.
     * True if the pie is currently archived.
     */
    isArchived: Scalars['Boolean']
    /** True if the pie belongs to the viewing user. */
    isOwnPie: Scalars['Boolean']
    /** The time that this node was last modified in ISO 8601 format. */
    modified: (Scalars['String'] | null)
    /** The name of this pie. */
    name: Scalars['String']
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks: PortfolioSlice[]
    /** Experimental. Generates an share token to be used for cloning this pie to another user. Descriptions are not included. Value is null when the pie is not eligable for tokenization. */
    shareToken: (Scalars['String'] | null)
    /** The list of slices that belong to this pie. */
    slices: Slice[]
    /** A summary description of the slices in this pie. */
    summary: (Scalars['String'] | null)
    /** The type of the sliceable. */
    type: SliceableTypeEnum
    __typename: 'UserPie'
}

export interface UserPieConnection {
    /** A list of edges. */
    edges: ((UserPieEdge | null)[] | null)
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'UserPieConnection'
}

export interface UserPieEdge {
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    /** The item at the end of the edge */
    node: (UserPie | null)
    __typename: 'UserPieEdge'
}


/** A value history time period. */
export type ValueHistoryPeriodEnum = 'MAX' | 'ONE_DAY' | 'ONE_MONTH' | 'ONE_QUARTER' | 'ONE_WEEK' | 'ONE_YEAR' | 'YTD'

export interface PiePerformance {
    /** The date on which the performance figures were calculated. */
    asOfDate: Scalars['String']
    /** The five-year total return. */
    returnFiveYearPercent: (Scalars['Float'] | null)
    /** The one-month total return. */
    returnOneMonthPercent: (Scalars['Float'] | null)
    /** The one-year total return. */
    returnOneYearPercent: (Scalars['Float'] | null)
    /** The three-year total return. */
    returnThreeYearPercent: (Scalars['Float'] | null)
    /** The year-to-date total return. */
    returnYearToDatePercent: (Scalars['Float'] | null)
    /** A numeric risk grading for this pie, from 1-5 (from least to most risky). Value will be null if unavailble. */
    riskGrade: (Scalars['Float'] | null)
    /** A risk level value for this pie, which corresponds to the numeric risk grade. Value will be null if unavailble. */
    riskLevel: (PieRiskLevelEnum | null)
    /** The volatility of the pie. */
    volatility: (Scalars['Float'] | null)
    __typename: 'PiePerformance'
}


/** A pie risk level. */
export type PieRiskLevelEnum = 'HIGH' | 'LOW' | 'MEDIUM' | 'MEDIUM_HIGH' | 'MEDIUM_LOW'

export interface Plus {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** UI Information for Plus specific pages */
    pages: (PlusPages | null)
    /** True if a user is eligible to activate a Plus trial membership. */
    isEligibleForPlusTrial: (Scalars['Boolean'] | null)
    /** When `hasPlus` is true, information about the user's membership. */
    membershipStatus: (PlusMembershipStatus | null)
    /** The Plus benefits that the user has taken advantage of */
    benefitsUsed: (PlusBenefitsUsed | null)
    /** The plus benefits that the user has taken advantage of. To be displayed on renewal intercept page. */
    benefitsUsedIntercept: (PlusBenefitsUsedForIntercept | null)
    /** The current list of all plus benefits. */
    benefitsAll: (PlusBenefitsAll | null)
    /** A list of highlighted plus benefits. */
    highlightedBenefits: ((PlusBenefitStandard | null)[] | null)
    /** Details about the user's Plus billing information. */
    billing: (PlusBilling | null)
    /** Plus information for use during onboarding. */
    onboarding: (PlusOnboarding | null)
    /** Borrow rate discount percent. Difference between Plus and Basic borrow rate percents */
    borrowRateDiscountPercent: (Scalars['Float'] | null)
    /** Spend Checking interest rate percent description. */
    spendInterestRatePercentShortDescription: (Scalars['String'] | null)
    /** Spend Checking cash back rate percent. */
    spendCashBackRatePercent: (Scalars['Float'] | null)
    /** Information about pricing for new Plus members. */
    newMembershipPricing: (PlusNewMembershipPricing | null)
    /** Information about renewal pricing for exisiting Plus members. */
    renewalMembershipPricing: (PlusMembershipRenewalPricing | null)
    /** True if the user has M1 Plus benefits. Value is null when unknown. */
    hasPlus: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use `PlusPages.upsellPage` instead
     * The content for the upsell page
     */
    upsellPage: (PlusUpsellPage | null)
    /**
     * @deprecated Not used in clients
     * True if the user has previously had M1 Plus benefits.
     */
    hasExpiredPlusSubscription: (Scalars['Boolean'] | null)
    /**
     * @deprecated Not used in clients
     * True if the user has an active Plus membership or has previously had M1 Plus benefits.
     */
    hasActiveOrExpiredPlusSubscription: (Scalars['Boolean'] | null)
    /**
     * @deprecated Grace Period is being removed
     * True if the user is currently in the grace period after Plus membership has expired.
     */
    isInPlusRenewalGracePeriod: (Scalars['Boolean'] | null)
    /**
     * @deprecated Should not be used in clients - may have been used for 5/23/23 Plus Pricing Changes release
     * The current list of all plus benefits.
     */
    basicBenefitsAll: (BasicBenefitsAll | null)
    /**
     * @deprecated Not used in clients
     * The minimum account value required for trading in multiple windows.
     */
    investMinAccountValueForMultipleDailyWindows: (Scalars['Float'] | null)
    /**
     * @deprecated Not used in clients
     * Spend Checking interest rate percent disclaimer.
     */
    spendInterestRatePercentDisclaimer: (Scalars['String'] | null)
    /**
     * @deprecated Not used in clients (kinda hard to tell but it's not actually used in web, just the description)
     * Spend Checking interest rate percent.
     */
    spendInterestRatePercent: (Scalars['Float'] | null)
    /**
     * @deprecated Not used in clients
     * Spend Checking interest rate percent disclaimer tooltip.
     */
    spendInterestRatePercentDisclaimerTooltipCopy: ((Scalars['String'] | null)[] | null)
    /**
     * @deprecated Not used in clients
     * Spend Checking cash back rate percent description.
     */
    spendCashBackRatePercentShortDescription: (Scalars['String'] | null)
    /**
     * @deprecated Not used in clients
     * Spend Checking cash back rate percent disclaimer.
     */
    spendCashBackRatePercentDisclaimer: (Scalars['String'] | null)
    /**
     * @deprecated Not used in clients
     * Multiplier for our Spend Checking interest rate vs national average.
     */
    spendInterestRateNationalAverageMultiplier: (Scalars['Float'] | null)
    /**
     * @deprecated Not used in clients
     * Initial state for the Plus benefit calculator.
     */
    benefitCalculatorInitialState: (PlusBenefitCalculatorInitialState | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for Plus Marketing screen placement.
     */
    plusPromotionForScreen: (PlusPromotionalMessage | null)
    /**
     * @deprecated Not used in clients
     * An optional Plus promotional message for Plus Billing screen.
     */
    plusPromotionForBillingScreen: (PlusPromotionalMessage | null)
    /**
     * @deprecated Not used in clients
     * An optional Plus promotional message for Plus Membershipscreen.
     */
    plusPromotionForMembershipScreen: (PlusPromotionalMessage | null)
    __typename: 'Plus'
}

export interface PlusPages {
    /** Plus information for the edit payment method screen */
    editPaymentMethodPage: (PlusEditPaymentMethodPage | null)
    /**
     * @deprecated Plus has been sunsetted and upsells removed
     * The content for the upsell page
     */
    upsellPage: (PlusUpsellPage | null)
    /** The main plus membership page with information about Plus */
    plusMembershipPage: (PlusMembershipPage | null)
    /** The confirmation page for joining Plus */
    trialConfirmationPage: (PlusTrialConfirmationPage | null)
    /** The view all benefits screen */
    viewAllBenefitsScreen: (PlusViewAllBenefitsScreen | null)
    __typename: 'PlusPages'
}

export interface PlusTrialConfirmationPage {
    /** The page title of the join Plus page */
    pageTitle: Scalars['String']
    /** The icon to be displayed at top of the join confirmation */
    icon: (AppImage | null)
    /** The title of subscription amount */
    title: Scalars['String']
    /** The subtitle of renewal duration */
    subtitle: (Scalars['String'] | null)
    /** The disclaimer explaining plus billing */
    disclaimer: Scalars['String']
    /** The cta for confirming the Plus memebership */
    cta: Scalars['String']
    __typename: 'PlusTrialConfirmationPage'
}

export interface PlusMembershipPage {
    /** The header of the membership page for non-plus users */
    marketingHeader: (PlusMembershipPageMarketingHeader | null)
    /** The header of the membership page for plus users */
    header: (PlusMembershipPageHeader | null)
    /** The section with the options for payment for plus */
    paymentOptionsSection: PlusMembershipPagePaymentOptionsSection
    /** The section of the Plus Membership Page with membership details */
    membershipDetailsSection: PlusMembershipPageMembershipDetailsSection
    /** The section of Plus Membership that lists the plus billing activity */
    billingHistorySection: (PlusMembershipPageBillingHistorySection | null)
    /** The section of the plus membership page that lists benefits */
    benefitsSection: (PlusMembershipPageBenefitsSection | null)
    /** A testimonial about plus */
    testimonial: (Testimonial | null)
    /** View referrals terms link */
    termsLink: (AppLink | null)
    __typename: 'PlusMembershipPage'
}

export interface Testimonial {
    /** A quote by the person giving the testimonial */
    quote: (Scalars['String'][] | null)
    /** The name or description of the person giving the testimonial */
    witness: (Scalars['String'] | null)
    /** An optional disclaimer to accompany the testimonial */
    disclaimer: (Scalars['String'] | null)
    __typename: 'Testimonial'
}

export interface PlusMembershipPageMarketingHeader {
    /** The title for the marketing header */
    title: Scalars['String']
    /** The illustration to be displayed in the header */
    illustration: (AppImage | null)
    /** cta button text */
    ctaLabel: Scalars['String']
    /** Disclosure text for the m1 plus terms */
    disclosureText: RichTextContent
    /** The upsell for why the user should sign up for plus */
    membershipUpsell: (PlusMembershipDetailsUpsell | null)
    __typename: 'PlusMembershipPageMarketingHeader'
}

export interface PlusMembershipPageHeader {
    /** Title copy */
    title: Scalars['String']
    /** Header icon */
    icon: (AppImage | null)
    /** Header subtitles */
    subtitle: ((Scalars['String'] | null)[] | null)
    __typename: 'PlusMembershipPageHeader'
}

export interface PlusMembershipPagePaymentOptionsSection {
    /** Header for flexible payment options */
    header: Scalars['String']
    /** Options for plus payment on the plus membership page */
    options: (PlusMembershipPagePaymentOption[] | null)
    __typename: 'PlusMembershipPagePaymentOptionsSection'
}

export interface PlusMembershipPagePaymentOption {
    /** primary string of the payment option */
    primary: Scalars['String']
    /** optional additional string of payment option */
    secondary: (Scalars['String'] | null)
    __typename: 'PlusMembershipPagePaymentOption'
}

export interface PlusMembershipPageMembershipDetailsSection {
    /** The header of the Plus Membership Details Section */
    header: Scalars['String']
    /** An array of details about the user's plus membership */
    details: (PlusMembershipPageMembershipDetail[] | null)
    /** A link to the edit payment method page */
    editLink: (AppLink | null)
    /** The icon for the edit link */
    editLinkIcon: (AppImage | null)
    /** The label for the auto-renew toggle - clients should not show the label OR switch if this is null */
    autoRenewLabel: (Scalars['String'] | null)
    /** A paragraph of content that can provide context to the user's plus membership */
    content: (Scalars['String'] | null)
    /** A list of disclosures for Plus */
    disclosures: (AppDisclosureLink[] | null)
    /** A list of links for Plus */
    links: ((AppLink | null)[] | null)
    __typename: 'PlusMembershipPageMembershipDetailsSection'
}

export interface PlusMembershipPageMembershipDetail {
    /** The label for the detail */
    label: Scalars['String']
    /** The value for the detail */
    value: Scalars['String']
    __typename: 'PlusMembershipPageMembershipDetail'
}

export interface PlusMembershipPageBillingHistorySection {
    /** Billing history table title */
    title: Scalars['String']
    /** Information about the user's Plus membership billing activity. */
    billingActivity: (PlusBillHistoryEntryConnection | null)
    __typename: 'PlusMembershipPageBillingHistorySection'
}

export interface PlusMembershipPageBenefitsSection {
    /** The optional icon for the benefits section */
    icon: (AppImage | null)
    /** The title of the benefits section */
    title: Scalars['String']
    /** The optional subtitle of the benefits section */
    subtitle: (Scalars['String'] | null)
    /** Copy for the button that routes to view all benefits screen */
    buttonCopy: Scalars['String']
    /** The list of benefits for plus depending on the plus status of the user and what benefits they've used */
    benefitsList: (PlusMembershipPageBenefit[] | null)
    __typename: 'PlusMembershipPageBenefitsSection'
}

export interface PlusViewAllBenefitsScreen {
    /** The title of the view all benefits screen */
    title: Scalars['String']
    /** An array of subtitles */
    subtitle: ((Scalars['String'] | null)[] | null)
    /** Icon shown above the subtitles */
    icon: (AppImage | null)
    /** Copy for the button that routes back to plus details page */
    buttonCopy: (Scalars['String'] | null)
    /** The list of the 4 standard/core plus benefits */
    benefitsList: (PlusMembershipPageBenefit[] | null)
    __typename: 'PlusViewAllBenefitsScreen'
}

export interface PlusMembershipPageBenefit {
    /** The title of the benefit */
    title: (Scalars['String'] | null)
    /** The optional subtitle of the benefit */
    subtitle: (Scalars['String'] | null)
    /** The optional icon for the benefit */
    icon: (AppImage | null)
    /** The description of the benefit */
    description: (Scalars['String'] | null)
    /** The optional tooltip of the benefit shown beside the title */
    tooltip: (AppTooltip | null)
    __typename: 'PlusMembershipPageBenefit'
}

export interface PlusEditPaymentMethodPage {
    /** The header at top of edit payment method screen */
    header: (Scalars['String'] | null)
    /** The title for the edit payment method screen */
    title: (Scalars['String'] | null)
    /** The subtitle of the edit payment method screen */
    subtitle: (Scalars['String'] | null)
    /** The available billing cycles for the user */
    billingCycles: (PlusEditPaymentMethodPageBillingCycles | null)
    /** The payment methods section with content describing the payment methods available to the user */
    paymentMethods: (PlusEditPaymentMethodPagePaymentMethods | null)
    /** The pill next to the default payment method on the edit payment method screen */
    selectedPaymentMethodPill: (AppPill | null)
    /** The disclosures for the edit payment method screen */
    disclosures: AppDisclosureLink[]
    /** The confimation cta on the submit button for edit payment method screen */
    confirmationCta: Scalars['String']
    __typename: 'PlusEditPaymentMethodPage'
}

export interface PlusEditPaymentMethodPageBillingCycles {
    /** The header of the billing cycle options */
    header: Scalars['String']
    /** The options of the billing cycle */
    cycles: (PlusEditPaymentMethodPageBillingCycle[] | null)
    __typename: 'PlusEditPaymentMethodPageBillingCycles'
}

export interface PlusEditPaymentMethodPageBillingCycle {
    /** The title of the billing cycle */
    title: Scalars['String']
    /** The subtitle of the billing cycle */
    subtitle: Scalars['String']
    /** The pill text for the billing cycle */
    pill: (AppPill | null)
    /** Whether the billing cycle is default or not */
    isDefault: Scalars['Boolean']
    /** The enum type for the billing cycle */
    type: PlusBillingCycleSubscriptionType
    __typename: 'PlusEditPaymentMethodPageBillingCycle'
}


/** Plus billing cycle subscription types. */
export type PlusBillingCycleSubscriptionType = 'ANNUAL' | 'MONTHLY'

export interface PlusEditPaymentMethodPagePaymentMethods {
    /** The header for the payment methods section */
    header: Scalars['String']
    /** The payment methods for the user */
    methods: (PlusEditPaymentMethodPagePaymentMethod[] | null)
    __typename: 'PlusEditPaymentMethodPagePaymentMethods'
}

export interface PlusEditPaymentMethodPagePaymentMethod {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The title of the payment method */
    title: Scalars['String']
    /** The subtitle of the payment method */
    subtitle: (Scalars['String'] | null)
    /** The icon for the payment method */
    icon: (AppImage | null)
    /** Whether the payment method is default or not */
    isDefault: Scalars['Boolean']
    /** The enum type for the payment method */
    type: PlusPaymentMethodType
    __typename: 'PlusEditPaymentMethodPagePaymentMethod'
}


/** Plus membership payment method types. */
export type PlusPaymentMethodType = 'SPEND' | 'CARD' | 'INVEST' | 'SAVE'

export interface PlusUpsellPage {
    /** The title of the upsell page */
    title: Scalars['String']
    /** Terms for plus */
    terms: RichTextContent[]
    /** The experience choices for plus */
    experiences: PlusUpsellExperience[]
    /** The label for the CTA button */
    ctaLabel: Scalars['String']
    /** The illustration for the page */
    illustration: (AppImage | null)
    __typename: 'PlusUpsellPage'
}

export interface PlusUpsellExperience {
    /** An enum indicating the type of experience */
    type: PlusUpsellExperienceTypeEnum
    /** The name that describes the plus experience */
    title: Scalars['String']
    /** The icon for the title of the plus experience */
    titleIcon: (AppImage | null)
    /** The subtitle for the plus experience */
    subtitle: (Scalars['String'] | null)
    /**
     * @deprecated use `subtitleTooltipV2` instead
     * The tooltip for the subtitle
     */
    subtitleTooltip: (Scalars['String'] | null)
    /** The tooltip for the subtitle - uses the new tooltip component */
    subtitleTooltipV2: (AppTooltip | null)
    /** The title for the list of benefits for the plus experience */
    benefitsTitle: (Scalars['String'] | null)
    /** The list of benefits for the plus experience */
    benefits: (PlusBenefitStandard[] | null)
    /** A link to more information about the plus benefits */
    benefitsLink: (AppLink | null)
    __typename: 'PlusUpsellExperience'
}

export type PlusUpsellExperienceTypeEnum = 'STANDARD' | 'PLUS'


/** Information about billing for Plus memberships. */
export interface PlusBilling {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Information about the user's Plus membership billing activity. */
    billingActivity: (PlusBillHistoryEntryConnection | null)
    /** Information about all payment methods for on platform billing. */
    paymentMethodOptionsOnPlatform: (PlusBillingPaymentMethodOptions | null)
    /** The disclaimer for plus payment option to auto-renew. */
    disclaimer: (PlusBillingDisclaimer | null)
    /** An array of AppLinks with links for support articles. */
    supportLinks: ((AppLink | null)[] | null)
    /** A string to display auto renewal disclaimer text on clients */
    autoRenewalDisclaimerSubHeader: (Scalars['String'] | null)
    /** A string to display one time payment disclaimer text on clients */
    oneTimePaymentDisclaimer: (Scalars['String'] | null)
    /** a string to display one time payment cta text on clients */
    oneTimePaymentCTAText: (Scalars['String'] | null)
    /**
     * @deprecated This is from before we could handle on platform billing. Use `PlusBilling.paymentMethodOptionsOnPlatform` instead
     * Information about all payment methods.
     */
    paymentMethodOptions: (PlusPaymentMethodOptions | null)
    __typename: 'PlusBilling'
}


/** Information about Plus for use during the onboarding funnel. */
export interface PlusOnboarding {
    /**
     * @deprecated Not used in clients, use `Plus.benefitsAll` instead
     * A list of Plus only benefits.
     */
    plusBenefitsList: ((PlusBenefitForOnboarding | null)[] | null)
    /** Invest product plus upsell */
    investPlusUpsell: (PlusOnboardingUpsell | null)
    /**
     * @deprecated Spend is being deprecated
     * Invest product plus upsell
     */
    spendPlusUpsell: (PlusOnboardingUpsell | null)
    __typename: 'PlusOnboarding'
}

export interface PlusOnboardingUpsell {
    /** Plus Upsell Header */
    plusUpsellHeader: (PlusUpsellHeader | null)
    /** Plus Upsell Title */
    plusUpsellTitle: (PlusUpsellTitle | null)
    /** List of Plus product benefits */
    plusUpsellBenefits: ((PlusUpsellBenefit | null)[] | null)
    /** Upsell disclaimer */
    plusUpsellDisclaimer: (Scalars['String'] | null)
    /** Plus Trial Disclaimer */
    plusUpsellTrialDisclaimer: (PlusUpsellTrialDisclaimer | null)
    /** Plus Trial link */
    plusTrialEnrollmentText: (Scalars['String'] | null)
    /** Plus skip trial link */
    skipPlusTrialEnrollmentText: (Scalars['String'] | null)
    __typename: 'PlusOnboardingUpsell'
}


/** Plus Upsell Header text and tooltip */
export interface PlusUpsellHeader {
    header: (Scalars['String'] | null)
    tooltip: (PlusBenefitTooltip | null)
    __typename: 'PlusUpsellHeader'
}


/** Plus Upsell title and icon */
export interface PlusUpsellTitle {
    title: (Scalars['String'] | null)
    icon: (AppImage | null)
    __typename: 'PlusUpsellTitle'
}


/** A list of product benefits to be shown during Plus onboarding. */
export interface PlusUpsellBenefit {
    /** A description of product plus benenfit */
    description: (Scalars['String'] | null)
    /** Benefit available without M1 Plus */
    standardBenefit: (Scalars['String'] | null)
    /** Benefit available with M1 Plus */
    plusBenefit: (Scalars['String'] | null)
    /** Benefit accessibility text available without M1 Plus */
    standardBenefitLabel: (Scalars['String'] | null)
    /** Benefit accessibility text available with M1 Plus */
    plusBenefitLabel: (Scalars['String'] | null)
    /** Benefit Tooltip */
    tooltip: (PlusBenefitTooltip | null)
    __typename: 'PlusUpsellBenefit'
}


/** Trial disclaimer with link */
export interface PlusUpsellTrialDisclaimer {
    /** Trial disclaimer text */
    text: (Scalars['String'] | null)
    /** Trial disclaimer link */
    link: (AppLink | null)
    __typename: 'PlusUpsellTrialDisclaimer'
}


/** Payment method for new on platform billing. */
export interface PlusBillingPaymentMethod {
    /** The id for this node. */
    id: Scalars['ID']
    /** Label describing the payment method. */
    label: Scalars['String']
    /** Account value or account information depending on the type. */
    description: (Scalars['String'] | null)
    /** AppPill that displays for user to easily see the account's status. */
    status: (AppPill | null)
    /** The icon that will be rendered on the clients. */
    icon: (AppImage | null)
    /**
     * @deprecated Credit Card payments are no longer supported. Will return false
     * value for clients to check if payment method is Braintree
     */
    isBraintreePayment: (Scalars['Boolean'] | null)
    /** A warning message that shows up on the confirm payment screen. */
    warning: (AppInformationalMessageCard | null)
    /**
     * @deprecated One Time payments are no longer supported. Will return false
     * When false, the account balance / cash balance are below the price to renew Plus
     */
    isOneTimePaymentMethodValid: Scalars['Boolean']
    __typename: 'PlusBillingPaymentMethod'
}


/** Information about the various on platform billing options */
export interface PlusBillingPaymentMethodOptions {
    /** Returns the current payment method for the plus subscription. */
    currentPaymentMethod: (PlusBillingPaymentMethod | null)
    /** Returns all available payment methods for plus subscription. */
    allPaymentOptions: ((PlusBillingPaymentMethod | null)[] | null)
    /** Message to show if the user has no available payment methods */
    paymentOptionsUnavailableMessage: (AppInformationalMessageCard | null)
    __typename: 'PlusBillingPaymentMethodOptions'
}


/** The disclaimer and tooltip for auto-renew plus payment. */
export interface PlusBillingDisclaimer {
    /** The message shown to the user for the disclaimer. */
    text: Scalars['String']
    /** The tooltip for the disclaimer to display. */
    tooltip: (PlusBillingDisclaimerTooltip | null)
    __typename: 'PlusBillingDisclaimer'
}

export interface PlusBillingDisclaimerTooltip {
    /** The icon entry point to the disclaimer tooltip. */
    icon: AppImage
    /** An array of strings to be parsed by the client */
    text: (Scalars['String'] | null)[]
    __typename: 'PlusBillingDisclaimerTooltip'
}

export interface PlusBillHistoryEntryConnection {
    pageInfo: PageInfo
    edges: ((PlusBillHistoryEntryEdge | null)[] | null)
    __typename: 'PlusBillHistoryEntryConnection'
}

export interface PlusBillHistoryEntryEdge {
    cursor: Scalars['String']
    node: (PlusBillHistoryEntry | null)
    __typename: 'PlusBillHistoryEntryEdge'
}


/** Information about a Plus billing period that has ended. */
export interface PlusBillHistoryEntry {
    /** A description about the bill. */
    title: (Scalars['String'] | null)
    /** Information about the payment method that was charged. */
    subTitle: (Scalars['String'] | null)
    /** A "pill" communicating payment status for this entry. */
    statusPill: (AppPill | null)
    /** The date on which the transaction was executed. */
    chargeDate: (Scalars['String'] | null)
    /** The total amount charged. */
    amountDescription: (Scalars['String'] | null)
    __typename: 'PlusBillHistoryEntry'
}


/** A set of copy and tooltip explaining the free trial period and membership details. */
export interface PlusMembershipDetailsUpsell {
    /** Copy for the title. */
    title: (Scalars['String'] | null)
    /**
     * @deprecated use `tooltipV2` instead
     * A tooltip description of plus membership.
     */
    tooltip: (PlusBenefitTooltip | null)
    /** The tooltip description of plus membership - uses the new AppTooltip component */
    tooltipV2: (AppTooltip | null)
    /** Copy for the subtitle. */
    subtitle: (Scalars['String'] | null)
    __typename: 'PlusMembershipDetailsUpsell'
}


/** An Array to render a list of all plus benefits */
export interface PlusBenefitsAll {
    /** An Array of PlusBenefitStandard objects. */
    benefits: ((PlusBenefitStandard | null)[] | null)
    /** One plus benefit to be highlighted in designs. */
    highlightedBenefit: (PlusBenefitStandard | null)
    __typename: 'PlusBenefitsAll'
}


/** An object to render a list of the plus benefits used by the user */
export interface PlusBenefitsUsed {
    /** The title text for container showing benefits. */
    title: Scalars['String']
    /** The text for the button to view all plus benefits. */
    viewAllButton: (Scalars['String'] | null)
    /** An Array of PlusBenefit objects. */
    benefits: ((PlusBenefit | null)[] | null)
    __typename: 'PlusBenefitsUsed'
}


/** An object showing plus benefits used to be displayed when a user is turning off auto-renew. */
export interface PlusBenefitsUsedForIntercept {
    /** The title for the modal showing the benefits. */
    title: Scalars['String']
    /** The text for the modal showing all benefits. */
    ctaText: Scalars['String']
    /**
     * @deprecated Use `ctaText` instead.
     * The subtitle with a link for the modal showing the benefits.
     */
    subtitle: (AppLink | null)
    /** An array of PlusBenefits that the user has taken advantage of. */
    benefits: ((PlusBenefit | null)[] | null)
    /** The text to be rendered on the primary action button. */
    primaryButton: (Scalars['String'] | null)
    /** The text to be rendered on the secondary action button. */
    secondaryButton: (Scalars['String'] | null)
    __typename: 'PlusBenefitsUsedForIntercept'
}


/** Benefits of plus membership to display on renewals page */
export interface PlusBenefit {
    /** The plus benefit title */
    title: Scalars['String']
    /** The benefit offered */
    benefit: (Scalars['String'] | null)
    /** The name of the benefit being used */
    icon: (AppImage | null)
    /** The subtext displayed for this PlusBenefit */
    subtext: (Scalars['String'] | null)
    __typename: 'PlusBenefit'
}


/** Standard Benefits of plus membership to display */
export interface PlusBenefitStandard {
    /** The plus benefit title */
    title: Scalars['String']
    /** The benefit offered */
    benefit: Scalars['String']
    /** The icon of the standard benefit */
    icon: (AppImage | null)
    /**
     * @deprecated use `tooltipV2` instead
     * The tooltip of the standard benefit
     */
    tooltip: (PlusBenefitTooltip | null)
    /** The tooltip of the standard benefit - uses the new AppTooltip component */
    tooltipV2: (AppTooltip | null)
    __typename: 'PlusBenefitStandard'
}


/** A reference to a tooltip for display on a plus benefit. */
export interface PlusBenefitTooltip {
    /** The icon entry point to the plus benefit tooltip */
    icon: AppImage
    /** An array of strings to be parsed by the client */
    text: (Scalars['String'] | null)[]
    /** An link to display as the tooltip CTA */
    appLink: (AppLink | null)
    __typename: 'PlusBenefitTooltip'
}


/** Information about pricing for Plus renewals. */
export interface PlusMembershipRenewalPricing {
    /**
     * @deprecated Credit card payments are deprecated.
     * A description of the membership price billing agreement.
     */
    priceAgreement: (Scalars['String'] | null)
    /** A description of the membership price. */
    priceTeaser: (Scalars['String'] | null)
    /** A long description of the membership price. */
    priceDescription: (Scalars['String'] | null)
    /** A long description of the renewal date/price. */
    renewalDescription: (Scalars['String'] | null)
    /**
     * @deprecated Should not be used by clients (for credit card payments which are deprecated)
     * An itemized summary for payment confirmation. Required for iOS.
     */
    paymentSummary: (PlusMembershipPaymentSummary | null)
    /**
     * @deprecated Not used in clients
     * A "pill" communicating promotional pricing for plus renewal pricing.
     */
    priceHighlightPill: (AppPill | null)
    /** A boolean that lets the client know if this is promotional renewal pricing. */
    isPromotional: Scalars['Boolean']
    /** The default price without promotional discounts. */
    defaultPricingText: Scalars['String']
    __typename: 'PlusMembershipRenewalPricing'
}


/** Information about Plus membership pricing. */
export interface PlusNewMembershipPricing {
    /**
     * @deprecated Leftover from 5/23 release by Plus Pricing project, clients should not use this anymore
     * A short description for the standard, full-cost membership price.
     */
    standardPriceShortDescription: (Scalars['String'] | null)
    /** A short description for the standard free trial duration. */
    standardFreeTrialDurationDescription: (Scalars['String'] | null)
    /**
     * @deprecated Only used for Braintree, which is deprecated
     * A description of the membership price billing agreement.
     */
    priceAgreement: (Scalars['String'] | null)
    /** A short summary of the membership price. */
    priceTeaser: (Scalars['String'] | null)
    /**
     * @deprecated Not used in clients
     * A long description of the membership price.
     */
    priceDescription: (Scalars['String'] | null)
    /**
     * @deprecated Not used in clients
     * A short summary of the renewal date/price.
     */
    renewalTeaser: (Scalars['String'] | null)
    /** A long description of the renewal date/price. */
    renewalDescription: (Scalars['String'] | null)
    /** Copy describing additional details about renewals and managing membership. */
    renewalAdditionalDetailsCopy: (Scalars['String'] | null)
    /**
     * @deprecated Should not be used by clients (for credit card payments which are deprecated)
     * An itemized summary for payment confirmation.
     */
    paymentSummary: (PlusMembershipPaymentSummary | null)
    /** A set of copy + tooltip to explain plus membership details. */
    membershipDetailsUpsell: (PlusMembershipDetailsUpsell | null)
    __typename: 'PlusNewMembershipPricing'
}


/** Status infomration about a Plus membership. */
export interface PlusMembershipStatus {
    /** The date the membership started. */
    memberSince: (Scalars['String'] | null)
    /** The next renewal date. */
    nextRenewal: (Scalars['String'] | null)
    /** The next bill date, which may be the same as the renewal date, or 7 days after if the user is in the grace period after Plus membership expiration. */
    nextBillDate: (Scalars['String'] | null)
    /** True when the user has autorenewal turned on for their Plus membership. */
    hasAutoRenewalEnabled: (Scalars['Boolean'] | null)
    /** The next plus year from current plus expiration */
    nextPlusYear: (Scalars['String'] | null)
    /** True when user auto renew is off and if date is within 14 days of renewal date. Or within 30 of lapsed plus subscription. */
    showRenewPlusNowCta: Scalars['Boolean']
    __typename: 'PlusMembershipStatus'
}


/** Deprecated. Information about the various payment types. */
export interface PlusPaymentMethodOptions {
    /**
     * @deprecated Credit card as a payment option is deprecated. This will return null.
     * Information about the card payment method option.
     */
    cardPaymentOption: (PlusPaymentMethod | null)
    /**
     * @deprecated This is from before we could handle on platform billing. Moving forward use paymentMethodOptionsOnPlatform
     * Information about Spend Checking as a payment method option.
     */
    spendPaymentOption: (PlusPaymentMethod | null)
    /**
     * @deprecated This is from before we could handle on platform billing. Moving forward use paymentMethodOptionsOnPlatform
     * Information about the currently active payment method.
     */
    activePaymentMethod: (PlusPaymentMethod | null)
    __typename: 'PlusPaymentMethodOptions'
}


/** Deprecated. Information about the Plus payment method. */
export interface PlusPaymentMethod {
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * The payment type.
     */
    paymentMethodType: PlusPaymentMethodType
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Label describing the payment method.
     */
    label: Scalars['String']
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Extended version of the label describing the payment method.
     */
    extendedLabel: Scalars['String']
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Label describing the payment method.
     */
    description: (Scalars['String'] | null)
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * If Spend Checking is unavailable, a message about why.
     */
    spendUnavailableMessage: (PlusSpendPaymentUnavailableMessage | null)
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Information about whether or not this payment option is eligible as a payment option.
     */
    isAvailablePaymentOption: Scalars['Boolean']
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Information about whether or not this payment option is available as a new payment method.
     */
    isNewPaymentOption: Scalars['Boolean']
    __typename: 'PlusPaymentMethod'
}


/** Deprecated. A list of Plus benefits to be shown during onboarding. */
export interface PlusBenefitForOnboarding {
    /** An icon that corresponds with the benefit. */
    icon: AppImage
    /** A description of the Plus benefit. */
    description: Scalars['String']
    /** The tooltip for the Plus benefit. */
    tooltip: PlusBenefitTooltip
    __typename: 'PlusBenefitForOnboarding'
}


/** Deprecated. Initial state for the Plus benefit calculator. */
export interface PlusBenefitCalculatorInitialState {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Initial value for average yearly checking balance. */
    avgYearlyCheckingBalance: (Scalars['Float'] | null)
    /** Initial value for average monthly card purchases. */
    avgMonthlyCardPurchases: (Scalars['Float'] | null)
    /** Initial value for average yearly borrow balance. */
    avgYearlyBorrowBalance: (Scalars['Float'] | null)
    /** True when the initial values are based on current user balances. */
    isBasedOnViewingUserUsage: (Scalars['Boolean'] | null)
    /** True when the initial values are based on common user balances. */
    isBasedOnCommonUserUsage: (Scalars['Boolean'] | null)
    __typename: 'PlusBenefitCalculatorInitialState'
}


/** Deprecated. Messaging to display if Spend Checking is ineligible as a Plus Membership payment. */
export interface PlusSpendPaymentUnavailableMessage {
    /** An optional message description. */
    description: (Scalars['String'] | null)
    /** Optional title. */
    title: (Scalars['String'] | null)
    /** Optional link. */
    link: (AppLink | null)
    __typename: 'PlusSpendPaymentUnavailableMessage'
}


/** Deprecated. An itemized summary for Plus membership payments. */
export interface PlusMembershipPaymentSummary {
    /** A list of payment items. */
    items: PlusMembershipPaymentSummaryItem[]
    /** The total payment dollar amount: a sum of all payment item amounts. */
    total: Scalars['Float']
    /** The name of the payee. */
    payeeName: Scalars['String']
    __typename: 'PlusMembershipPaymentSummary'
}


/** Deprecated. A Plus membership payment summary item. */
export interface PlusMembershipPaymentSummaryItem {
    /** The title of the payment item. */
    title: Scalars['String']
    /** The signed dollar amount of the payment item. */
    amount: Scalars['Float']
    __typename: 'PlusMembershipPaymentSummaryItem'
}


/** Deprecated. An array to render a list of all basic benefits */
export interface BasicBenefitsAll {
    /** An Array of PlusBenefit objects. */
    benefits: ((BasicBenefitStandard | null)[] | null)
    __typename: 'BasicBenefitsAll'
}


/** Deprecated. A benefit for basic memberships */
export interface BasicBenefitStandard {
    /** The benefit title */
    title: Scalars['String']
    /** A description of the benefit */
    description: (Scalars['String'] | null)
    /** A link for the benefit */
    appLink: (AppLink | null)
    __typename: 'BasicBenefitStandard'
}

export type ProductAccountLandingPage = (PersonalLoanProductLandingPage | CreditCardProductLandingPage | InvestProductLandingPage | MarginProductLandingPage | EarnProductLandingPage) & { __isUnion?: true }

export interface ProductAccountLandingPageHeader {
    /** The value for a Product Account Landing Page Header */
    value: (Scalars['String'] | null)
    /** The title for a Product Account Landing Page Header */
    title: (Scalars['String'] | null)
    /** The icon for a Product Account Landing Page Header */
    icon: (AppImage | null)
    /** The tooltip for a Product Account Landing Page Header */
    tooltip: (AppTooltip | null)
    __typename: 'ProductAccountLandingPageHeader'
}

export interface Promotions {
    campaign: (PromotionCampaign | null)
    /** Returns a promotional document bundle specific to the user and the documents they have agreed to. */
    promotionsAgreements: (RequiredDocumentsBundle | null)
    /** Sign up page content */
    signUpPage: (PromotionSignUpPage | null)
    __typename: 'Promotions'
}

export interface PromotionCampaign {
    /** Promotion acceptance screen */
    acceptanceScreen: (AppInfoPage | null)
    /** Promotion campaign ID - if the promotion key doesn't include the campaign ID, lens will fetch from promotions service. */
    campaignId: (Scalars['String'] | null)
    /** Document bundle associated with the campaign */
    documentBundle: (RequiredDocumentsBundle | null)
    __typename: 'PromotionCampaign'
}

export interface SecurityDetails {
    /** Current Qoute */
    currentQuote: (CurrentQuote | null)
    /** M1 value prop Card */
    marketingCard: (ProductMarketingCard | null)
    /** A time-series of historical quote chart data. */
    historicalQuotes: (ChartableSliceDatum[] | null)
    /** A time-series of chart data for the security. */
    intradayQuotes: (ChartableSliceDatum[] | null)
    /** Key Data */
    keyData: (TabularDataSection | null)
    /** Popular comparisons for the security. Based on security type, industry & sector. */
    popularSecurities: (PopularSecurities | null)
    /** Price */
    price: (TabularDataSection | null)
    /** Profile */
    profile: (SecurityDetailsProfile | null)
    /** Related categories */
    relatedCategories: (TabularDataSection | null)
    /** Market News */
    marketNews: (SecurityMarketNews | null)
    /** Fund Allocation - breakdown of fund's asset allocation */
    allocation: (TabularDataSection | null)
    /** Top holdings */
    topHoldings: (SecurityTopHoldings | null)
    __typename: 'SecurityDetails'
}

export interface CurrentQuote {
    /** Current quote price change in dollars, percentage & timestamp */
    changeText: (Text | null)
    /** Delayed Quote Text */
    delayedQuoteText: (Scalars['String'] | null)
    /** Logo URL */
    logoUrl: (Scalars['String'] | null)
    /** Security name */
    name: (Scalars['String'] | null)
    /** Current Price */
    price: (Scalars['String'] | null)
    __typename: 'CurrentQuote'
}

export interface PopularSecurities {
    /** Popular securities section title */
    title: (Scalars['String'] | null)
    /** Popular securities */
    securities: ((PopularSecurity | null)[] | null)
    __typename: 'PopularSecurities'
}

export interface PopularSecurity {
    /** Logo URL */
    logoUrl: (Scalars['String'] | null)
    /** Security name */
    name: (Scalars['String'] | null)
    /** Security symbol */
    symbol: (Scalars['String'] | null)
    __typename: 'PopularSecurity'
}

export interface SecurityDetailsProfile {
    /** Security profile Description */
    description: (Scalars['String'] | null)
    /** Security tabular data */
    tabularData: (TabularDataSection | null)
    /** Security profile sec website link */
    secLink: (AppLink | null)
    /** Security profile website url - each is different and unable to use AppLinkUrl type */
    websiteUrl: (Scalars['String'] | null)
    __typename: 'SecurityDetailsProfile'
}

export interface SecurityTopHoldings {
    /** Top holdings title */
    title: (Scalars['String'] | null)
    /** Top holdings information */
    topHoldings: ((FundHoldingInfo | null)[] | null)
    __typename: 'SecurityTopHoldings'
}

export interface SecurityMarketNews {
    /** Security news section title */
    title: (Scalars['String'] | null)
    /** Security news articles */
    articles: (NewsConnection | null)
    __typename: 'SecurityMarketNews'
}

export interface Save {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Returns true if the user has the feature flag for savings enabled. */
    isSavingsEnabled: (Scalars['Boolean'] | null)
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasDirectToHYSA: (Scalars['Boolean'] | null)
    /** B2 Savings Accounts */
    savings: (Savings | null)
    /** Whether the user is eligible to open more than one individual high-yield savings accounts */
    isMultipleAccountsEligible: Scalars['Boolean']
    /** Whether the user is eligible to open a joint high-yield savings account */
    isJointAccountsEligible: Scalars['Boolean']
    /** Whether the user is eligible to open an individual cash account */
    isCashAccountsEligible: Scalars['Boolean']
    /** Whether the user is eligible to open a joint high-yield cash account */
    isJointCashAccountsEligible: Scalars['Boolean']
    /**
     * Whether the user is eligible to onboard to any type of Save account; This field checks a combination
     * of feature flags and eligibility fields to determine if a user should have access to Save onboarding
     */
    isEligibleToOnboard: Scalars['Boolean']
    /**
     * The CTA displayed when a user is eligible to onboard to any type of Save account; A `null` response
     * indicates that the user is not eligible to add any Save products
     */
    addSaveAccountCta: (AppNavigationItem | null)
    __typename: 'Save'
}

export interface Savings {
    /** The ID of this node. */
    id: Scalars['ID']
    /** A list of available Savings accounts */
    savingsAccounts: (SavingsAccountConnection | null)
    /** Whether the user has a Savings account or not */
    hasSavingsAccounts: (Scalars['Boolean'] | null)
    /** Whether the user currently has a funded savings account */
    hasFundedSavingsAccount: Scalars['Boolean']
    /** Whether the user has a Joint HYSA Invitation or not, i.e. is an invitee/recipient */
    hasJointAccountInvitation: Scalars['Boolean']
    /**
     * @deprecated use SavingsAccount.hasExternalFundingSourceLink instead
     * Whether the user has external funding source links to use for a Savings account
     */
    hasExternalFundingSourceLink: Scalars['Boolean']
    /** Returns content for savings onboarding. */
    onboarding: (SavingsOnboarding | null)
    /** The plus APY for plus users */
    plusAnnualPercentageYield: Scalars['String']
    /** The standard APY for non-plus users */
    annualPercentageYield: Scalars['String']
    /** Agreements for all `Save` products; agreements will default to HYSA unless otherwise specified */
    savingsAgreements: (SavingsAgreements | null)
    /** Disclosure for the Savings account */
    disclosure: SavingsDisclosure
    /**
     * @deprecated no fixed value for all accounts.
     * FDIC Insurance Amount
     */
    fdicInsuranceAmount: (Scalars['Float'] | null)
    /** The Joint HYSA Invitations for the user, if applicable. If no invitations, this returns null */
    jointAccountInvitationsList: (SavingsJointAccountInvitationConnection | null)
    __typename: 'Savings'
}

export interface SavingsJointAccountInvitationConnection {
    pageInfo: PageInfo
    edges: ((SavingsJointAccountInvitationEdge | null)[] | null)
    __typename: 'SavingsJointAccountInvitationConnection'
}

export interface SavingsJointAccountInvitationEdge {
    cursor: Scalars['String']
    node: (SavingsJointAccountInvitation | null)
    __typename: 'SavingsJointAccountInvitationEdge'
}

export interface SavingsJointAccountInvitation {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The first name of the user who sent the invitation */
    firstName: Scalars['String']
    /** The last name of the user who sent the invitation */
    lastName: Scalars['String']
    /** The email of the user who sent the invitation */
    email: Scalars['String']
    /** The phone number of the user who sent the invitation */
    phoneNumber: Scalars['String']
    /** The name of the account that the user was invited to join */
    accountName: Scalars['String']
    /** The expiration date of the invitation as an ISO String */
    expirationDate: Scalars['String']
    __typename: 'SavingsJointAccountInvitation'
}

export interface SavingsAgreements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Savings e-sign agreement to be shown to users. */
    eSignAgreement: AgreementDocument
    /** The bundle of agreements for Savings. */
    agreements: AgreementBundle
    /** The required agreements for a savings account. */
    requiredAgreements: RequiredDocumentsBundle
    __typename: 'SavingsAgreements'
}

export interface SavingsAccountConnection {
    pageInfo: PageInfo
    edges: ((SavingsAccountEdge | null)[] | null)
    __typename: 'SavingsAccountConnection'
}

export interface SavingsAccountEdge {
    cursor: Scalars['String']
    node: (SavingsAccount | null)
    __typename: 'SavingsAccountEdge'
}

export interface SavingsAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The account category. */
    accountCategory: AccountCategoryEnum
    /** The name of the account. */
    name: Scalars['String']
    /** A descriptor for the account, for help identifying in a list. */
    descriptor: (Scalars['String'] | null)
    /** The status of the Savings account */
    status: (SavingsAccountStatus | null)
    /** The type of account (i.e. "SAVE") */
    accountType: SaveAccountTypeEnum
    /** The account number of the Savings account */
    accountNumber: (Scalars['String'] | null)
    /** The routing number of the Savings account */
    routingNumber: (Scalars['String'] | null)
    /** The annual percentage yield of this specific Savings account */
    annualPercentageYield: (Scalars['String'] | null)
    /** Whether the account is funded or not */
    isFunded: Scalars['Boolean']
    /** The balances of the Savings account */
    balances: (SavingsAccountBalances | null)
    /** The interest values of the Savings account */
    interest: (SavingsAccountInterest | null)
    /** The transfer values of the Savings account */
    transfers: (SavingsAccountTransfers | null)
    /** The minimum deposit amount for the initial deposit into this Savings account */
    minimumInitialDeposit: (Scalars['Float'] | null)
    /** The maximum deposit amount for the initial deposit into this Savings account */
    maximumInitialDeposit: (Scalars['Float'] | null)
    /** The funding source from which the Savings account should transfer money for the first time */
    initialTransferParticipant: (TransferParticipant | null)
    /** The transactions for the Savings account */
    transactions: (SavingsTransactionConnection | null)
    /** Returns true if the user has an external funding source linked to their Savings account */
    hasExternalFundingSourceLink: Scalars['Boolean']
    /** Returns the account ownership type - JOINT or INDIVIDUAL */
    ownershipType: Scalars['String']
    /** The expiration date for an account in a pending state, the owner(s) must complete the necessary steps to activate the account or the account will expire */
    expirationDate: (Scalars['String'] | null)
    /** Details for the Earn Product Landing Page */
    earnProductLandingPage: (EarnProductLandingPage | null)
    /** The header information of the account for client UI */
    header: (SavingsAccountHeader | null)
    /** The details of the account for client UI */
    accountDetails: (SavingsAccountDetails | null)
    /** If applicable, a checklist of steps for the user to complete for product onboarding. */
    setupChecklist: (SetupChecklist | null)
    /** The link for funding the Savings account - null if already funded */
    fundAccountLink: (AppLink | null)
    /**
     * @deprecated Field consolidated, use pendingActionsBanners instead
     * A banner for identity verification information
     */
    docUploadBanner: (InformationBanner | null)
    /**
     * @deprecated Field consolidated, use pendingActionsBanners instead
     * A banner for transfer status information, such as a pending transfer that is not showing from Bank Teller yet
     */
    transferStatusBanner: (InformationBanner | null)
    /** An array of informational banners notifying the user of pending actions (i.e. identity verification, pending joint account, transfer status) */
    banners: (InformationBanner[] | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    /** The Spend promotional message to be displayed on the Savings transactions screen. */
    marketingCard: (SpendPromotionalMessage | null)
    /** Copy to be displayed when there are no transactions. */
    transactionsEmptyState: TransactionsEmptyState
    __typename: 'SavingsAccount'
}

export interface TransactionsEmptyState {
    /** The title of the empty state */
    title: Scalars['String']
    /** The subtitle of the empty state */
    subtitle: (Scalars['String'] | null)
    __typename: 'TransactionsEmptyState'
}

export type SavingsTransactionModeEnum = 'ONLY_PENDING' | 'ONLY_FINAL' | 'ALL'

export type SaveAccountTypeEnum = 'SAVE' | 'CASH'

export type SavingsAccountStatusEnum = 'PENDING' | 'ACTIVE'

export interface SavingsAccountStatus {
    /** The status code. */
    code: SavingsAccountStatusEnum
    /** A friendly description of the account status. */
    description: Scalars['String']
    __typename: 'SavingsAccountStatus'
}

export interface SavingsAccountBalances {
    /** The pending balance for the Savings account */
    pendingBalance: Scalars['String']
    /** The available balance for the Savings account */
    availableBalance: Scalars['String']
    /** The sum value of the available and pending balances */
    currentBalance: Scalars['String']
    __typename: 'SavingsAccountBalances'
}

export interface SavingsAccountInterest {
    /** The year to date interest earned for the Savings account */
    yearToDateEarned: Scalars['String']
    /** The total interest earned for the Savings account */
    totalEarned: Scalars['String']
    __typename: 'SavingsAccountInterest'
}

export interface SavingsAccountTransfers {
    /** The transfer limits for the Savings account */
    limits: SavingsAccountTransferLimits
    __typename: 'SavingsAccountTransfers'
}

export interface SavingsAccountTransferLimits {
    /** The monthly transfer limit for the Savings account */
    monthlyLimit: Scalars['String']
    /** The daily incoming cash transfer limit for the Savings account */
    dailyIncomingCashLimit: Scalars['String']
    /** The daily outgoing cash transfer limit for the Savings account */
    dailyOutgoingCashLimit: Scalars['String']
    __typename: 'SavingsAccountTransferLimits'
}

export interface SavingsAccountHeader {
    /** The name of the Savings account */
    name: (Scalars['String'] | null)
    /** The balance information for the balance section in the UI */
    balanceSection: SavingsBalanceSection
    /** The interest information for the interest section in the UI */
    interestSection: (SavingsInterestSection | null)
    __typename: 'SavingsAccountHeader'
}

export interface SavingsBalanceSection {
    /** The label of the available Savings balance */
    label: Scalars['String']
    /** The label of the current Savings balance */
    currentBalanceLabel: Scalars['String']
    /** The value of the available Savings balance */
    balance: Scalars['String']
    /** The sum value of the available and pending balances */
    currentBalance: Scalars['String']
    /** An explainer tooltop for the available balance value */
    balanceTooltip: (Scalars['String'][] | null)
    /** An explainer tooltip for the current balance value */
    currentBalanceTooltip: (Scalars['String'][] | null)
    __typename: 'SavingsBalanceSection'
}

export interface SavingsInterestSection {
    /** The total interest earned for the Savings account */
    interestEarned: Scalars['String']
    /** The associated icon with the interest earned copy */
    interestEarnedIcon: (AppImage | null)
    /** The plus upsell link for non-plus users */
    plusLink: (AppLink | null)
    /** The plus upsell icon for non-plus users */
    plusLinkIcon: (AppImage | null)
    __typename: 'SavingsInterestSection'
}

export interface SavingsAccountDetails {
    /** The UI sections of the account details for the Savings account */
    sections: (SavingsAccountDetailSection[] | null)
    /** Additional information for the savings account */
    additionalInfo: (Scalars['String'][] | null)
    /** Disclosure for the Savings account */
    disclosure: (SavingsDisclosure | null)
    __typename: 'SavingsAccountDetails'
}

export interface SavingsAccountDetailSection {
    /** The header text for the account detail section */
    header: Scalars['String']
    /** The optional AppLink for the account detail section */
    link: (AppLink | null)
    /** The optional icon for the link in the account detail section */
    linkIcon: (AppImage | null)
    /** The rows of details for the account detail section */
    details: (SavingsAccountDetail[] | null)
    __typename: 'SavingsAccountDetailSection'
}

export interface SavingsAccountDetail {
    /** The label of the account detail */
    label: Scalars['String']
    /** The value of the account detail */
    value: Scalars['String']
    /** A boolean denoting if the value is copyable. If this is true, the clients should render a copy button. */
    copyable: Scalars['Boolean']
    __typename: 'SavingsAccountDetail'
}

export interface SavingsDisclosure {
    /**
     * @deprecated Use `SavingsDisclosure.paragraphs` instead
     * The text for the disclosure link modal/dialogue
     */
    text: (Scalars['String'] | null)
    /** The link text for the disclosure link */
    linkText: (Scalars['String'] | null)
    /** The text for the disclosure link modal/dialogue as an array of paragraphs */
    paragraphs: Scalars['String'][]
    __typename: 'SavingsDisclosure'
}

export interface SavingsOnboarding {
    /** The joint account invitation page */
    accountInvitationPage: (JointAccountInvitationPage | null)
    /** The account naming page */
    nameAccountPage: (SavingsNameAccountPage | null)
    /** Returns Customer Due Diligence questions and answers. */
    customerDueDiligenceQuestions: (SavingsCustomerDueDiligenceQuestions | null)
    /** The page for selecting the type of HYSA to open */
    accountTypePage: (SavingsAccountTypePage | null)
    /** The page that informs the user they've been invited to a joint HYSA */
    jointInvitedPage: (AppInfoPage | null)
    /** A field that returns the joint invitation onboarding value, JointSaveCoOwner or JointCashCoOwner, depending on whether the account type is Cash or Save */
    jointInvitedPageOnboardingValue: (Scalars['String'] | null)
    /**
     * @deprecated Deprecated due to changes in design
     * The page that informs the user they've almost completed creating joint HYSA pending other user acceptance
     */
    jointInitiatorSuccessPage: (AppInfoPage | null)
    /**
     * @deprecated Deprecated due to changes in design
     * The page that informs the user they've completed creating joint HYSA
     */
    jointInvitedSuccessPage: (AppInfoPage | null)
    /** The page shown after the confirmation screen when a user needs to connect a bank. If no accountId is passed, this default to HYSA-centric copy, disclosures etc. */
    connectBankPage: (AppInfoPage | null)
    /** The page that informs the user they've completed funding or skipped funding for individual or joint accounts */
    fundingCompletePage: (AppInfoPage | null)
    /** Security lending disclosures */
    fullyPaidLendingDisclosure: (InvestFullyPaidLendingDisclosure | null)
    __typename: 'SavingsOnboarding'
}

export interface SavingsAccountTypePage {
    /** The title of the Savings account type page */
    title: (Scalars['String'] | null)
    /** The list of account types from which to choose */
    accountTypes: (ListItem[] | null)
    __typename: 'SavingsAccountTypePage'
}

export interface JointAccountInvitationPage {
    /** Title text for the joint account invitation screen */
    title: (Scalars['String'] | null)
    /** Subtitle text for the joint account invitation screen */
    subtitle: (Scalars['String'] | null)
    /**
     * @deprecated Use primaryCtaButton
     * CTA label copy for the joint account invitation screen
     */
    primaryCtaLabel: (Scalars['String'] | null)
    /** CTA button for joint account invitation screen */
    primaryCtaButton: (AppButton | null)
    __typename: 'JointAccountInvitationPage'
}

export interface SavingsNameAccountPage {
    /** Title text of the account naming screen */
    title: (Scalars['String'] | null)
    /** Subtitle text of the account naming screen */
    subtitle: (Scalars['String'] | null)
    /**
     * @deprecated Use primaryCtaButton instead
     * Primary cta label text of the account naming screen
     */
    primaryCtaLabel: (Scalars['String'] | null)
    /**
     * @deprecated Use secondaryCtaButton instead
     * Secondary cta label text of the account naming screen
     */
    secondaryCtaLabel: (Scalars['String'] | null)
    /** Primary CTA Button with label text and analytics */
    primaryCtaButton: (AppButton | null)
    /** Secondary CTA Button with label text and analytics */
    secondaryCtaButton: (AppButton | null)
    /** Placeholder text for name account input */
    inputPlaceholder: (Scalars['String'] | null)
    /** Name of the input field for name account input */
    inputFieldName: (Scalars['String'] | null)
    __typename: 'SavingsNameAccountPage'
}

export interface SavingsCustomerDueDiligenceQuestions {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Returns CDD questions and answers required by B2 for user onboarding. */
    questions: ((SavingsDueDiligenceQuestion | null)[] | null)
    __typename: 'SavingsCustomerDueDiligenceQuestions'
}

export interface SavingsDueDiligenceQuestion {
    /** The question id for an instance of a CDD question. */
    questionId: (Scalars['String'] | null)
    /** The question label for an instance of a CDD question. */
    questionLabel: (Scalars['String'] | null)
    /** The answer type for an instance of a CDD question. */
    answerType: (SavingsCustomerDueDiligenceQuestionType | null)
    /** The acceptable answers for an instance of a CDD question. */
    answers: ((SavingsCustomerDueDiligenceAnswer | null)[] | null)
    __typename: 'SavingsDueDiligenceQuestion'
}

export type SavingsCustomerDueDiligenceQuestionType = 'SINGLE_SELECT'

export interface SavingsCustomerDueDiligenceAnswer {
    /** The answer id for an answer of a CDD question. */
    answerId: (Scalars['String'] | null)
    /** The answer label for an answer of a CDD question. */
    answerLabel: (Scalars['String'] | null)
    __typename: 'SavingsCustomerDueDiligenceAnswer'
}

export interface SavingsTransactionConnection {
    pageInfo: PageInfo
    edges: ((SavingsTransactionEdge | null)[] | null)
    __typename: 'SavingsTransactionConnection'
}

export interface SavingsTransactionEdge {
    cursor: Scalars['String']
    node: (SavingsTransaction | null)
    __typename: 'SavingsTransactionEdge'
}

export interface SavingsTransaction {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A status AppPill for this transaction. */
    status: (AppPill | null)
    /** The date this transaction was created. */
    date: Scalars['String']
    /** The activity date for this transaction. */
    activityDate: Scalars['String']
    /** The Savings icon for this transaction. */
    icon: (AppImage | null)
    /** A short summary description for this transaction. */
    summary: Scalars['String']
    /** A friendly description for this transaction which must be displayed to users. */
    description: Scalars['String']
    /** The merchant name where the activity entry occured. */
    merchant: (Scalars['String'] | null)
    /** The category label for this transaction. */
    categoryLabel: Scalars['String']
    /** A boolean to indicate whether this transaction is voided or not. */
    isVoided: (Scalars['Boolean'] | null)
    /**
     * The signed dollar amount associated with this transaction. Postive amounts are
     * cash flows into a Savings account, and negative amounts are cash flows out.
     */
    amount: (Scalars['Float'] | null)
    /** Further details for this activity entry. */
    details: (SpendActivityEntryDetails | null)
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date this transaction was settled, if applicable.
     */
    settledDate: (Scalars['String'] | null)
    /** @deprecated Utilize appropriate field from `SpendActivityEntry` type. */
    transactionDate: Scalars['String']
    __typename: 'SavingsTransaction'
}

export interface EarnProductLandingPage {
    /** The title for the Earn Product Landing Page */
    title: (Scalars['String'] | null)
    /** The header for the Earn Product Landing Page */
    header: (ProductAccountLandingPageHeader | null)
    /** The account details for the Earn Product Landing Page */
    accountDetails: ((TabularDataItem | null)[] | null)
    /** An array of informational banners for the Earn Product Landing Page */
    banners: ((InformationBanner | null)[] | null)
    /** A card with a value prop display and related details for the Earn Product Landing Page */
    valuePropCard: (ValuePropCard | null)
    /** A card with details about the user's Earn account for the Earn Product Landing Page */
    accountDetailsCard: (EarnAccountDetailsCard | null)
    /** Disclaimers to be displayed below the value prop card for the Earn Product Landing Page */
    disclaimers: ((Scalars['String'] | null)[] | null)
    /** An array of the disclosures for the Earn Product Landing Page */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    /** The mobile floating action button details for a Product Account Landing Page */
    floatingActionButton: (AppNavigationItem | null)
    /** Account transactions for the Earn Product Landing Page */
    transactions: (CommonTransactionEntryConnection | null)
    /** Copy to be displayed when there are no transactions on the Earn Product Landing Page */
    transactionsEmptyState: (CommonTransactionsEmptyState | null)
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards: (AppCard[] | null)
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards: (AppCard[] | null)
    __typename: 'EarnProductLandingPage'
}

export interface EarnAccountDetailsCard {
    /** Title for the card */
    title: (Scalars['String'] | null)
    /** Details for the card */
    details: (DetailsGroup[] | null)
    __typename: 'EarnAccountDetailsCard'
}

export interface DetailsGroup {
    /** Header for the group of details */
    header: (Scalars['String'] | null)
    /** Rows of details for the group */
    rows: (DetailRow[] | null)
    __typename: 'DetailsGroup'
}

export interface DetailRow {
    /** The label that defines the row */
    label: (Scalars['String'] | null)
    /** The tooltip for the label */
    tooltip: (AppTooltip | null)
    /** A static string value to provide detail for the row */
    value: (Scalars['String'] | null)
    /** Option to provide a masked value */
    valueMasked: (Scalars['String'] | null)
    /** An icon for the row */
    icon: (AppImage | null)
    /** Option to provide a clicked state icon, option to provide a clicked value */
    iconClicked: (AppImage | null)
    __typename: 'DetailRow'
}

export type Security = (CryptoAsset | Fund | Equity) & { __isUnion?: true }


/** A time interval. */
export type TimeIntervalEnum = 'DAY' | 'MONTH' | 'QUARTER' | 'WEEK' | 'YEAR'


/** A security status. */
export type SecurityStatusEnum = 'ACTIVE' | 'DELISTED' | 'INACTIVE'


/** A security type. */
export type SecurityTypeEnum = 'EQUITY' | 'FUND'

export interface SecurityScreenerConnection {
    /** The current hierarchical category level. */
    currentCategory: SecuritySubCategory
    /** A list of edges. */
    edges: ((SecurityScreenerEdge | null)[] | null)
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The next hierarchical level of sub-categories. */
    subCategories: SecuritySubCategory[]
    /** The approximate total number of edges in the connection. */
    total: Scalars['Int']
    __typename: 'SecurityScreenerConnection'
}


/** An edge in a connection. */
export interface SecurityScreenerEdge {
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    /** The item at the end of the edge */
    node: (Security | null)
    __typename: 'SecurityScreenerEdge'
}


/** A connection sub-category. */
export interface SecuritySubCategory {
    /** The category path in the category hierarchy. */
    category: Scalars['String'][]
    /** The approximate total number of edges within the sub-category. */
    count: Scalars['Int']
    __typename: 'SecuritySubCategory'
}


/** A security sort type. */
export type SecuritySortTypeEnum = 'CATEGORY' | 'DIVIDEND_YIELD' | 'MARKET_CAP' | 'NAME' | 'PE_RATIO' | 'PRICE_CHANGE_1M' | 'PRICE_CHANGE_1W' | 'PRICE_CHANGE_1Y' | 'PRICE_CHANGE_2Y' | 'PRICE_CHANGE_3M' | 'PRICE_CHANGE_3Y' | 'PRICE_CHANGE_5Y' | 'PRICE_CHANGE_6M' | 'PRICE_CHANGE_ANNUALIZED_1Y' | 'PRICE_CHANGE_ANNUALIZED_2Y' | 'PRICE_CHANGE_ANNUALIZED_3Y' | 'PRICE_CHANGE_ANNUALIZED_5Y' | 'PRICE_CHANGE_YTD' | 'SYMBOL'


/** A security limit type. */
export type SecurityLimitTypeEnum = 'DIVIDEND_YIELD' | 'MARKET_CAP' | 'PE_RATIO'

export interface SliceableSearchHighlight {
    /** The type of highlight match. */
    match: SliceableMatchTypeEnum
    /** The full text of the matching field, with the highlight locations indicated. The highlights will be delimeted by the starting token `<em>` and the ending token `</em>`. There will be at least one highlight. */
    snippet: Scalars['String']
    /** A list of highlight locations specified as substring indices within the full text of the matching field. (Note that these are NOT indices within the `snippet` string.) */
    substrings: SearchHighlightSubstring[]
    __typename: 'SliceableSearchHighlight'
}


/** A sliceable search match type. */
export type SliceableMatchTypeEnum = 'NAME' | 'SYMBOL'


/** A highlight substring location. */
export interface SearchHighlightSubstring {
    /** The zero-based beginning index of the highlight within the full text. */
    beginIndex: Scalars['Int']
    /** The zero-based index BEFORE which the highlight ends within the full text. */
    endIndex: Scalars['Int']
    __typename: 'SearchHighlightSubstring'
}


/** A sort direction. */
export type SortDirectionEnum = 'ASC' | 'DESC'

export interface SpendMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The header for the Spend marketing screen. */
    header: (Scalars['String'] | null)
    /** An array of the content cards for the Spend marketing screen. */
    productMarketingCards: ((ProductMarketingCard | null)[] | null)
    /**
     * @deprecated Use the `disclosureLinks` field instead.
     * The link to the cardholder terms page for the Spend marketing screen.
     */
    cardholderTermsLink: (AppLink | null)
    /** An array of disclosure links for Spend marketing screen footer. */
    disclosureLinks: ((AppLink | null)[] | null)
    /** An array of the disclosures for the Spend marketing screen. */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    __typename: 'SpendMarketingScreen'
}

export interface HistoricalPiePerformance {
    /** The date for the historical value. */
    date: Scalars['String']
    /** The return at that point in the chosen period. */
    value: Scalars['Float']
    __typename: 'HistoricalPiePerformance'
}

export interface BacktestedPiePerformance {
    /** The date for the historical value. */
    date: Scalars['String']
    /** The return at that point in the chosen period. */
    value: Scalars['Float']
    __typename: 'BacktestedPiePerformance'
}

export interface SystemPieCategoryDetails {
    /** A description of the category. */
    description: Scalars['String']
    /** A disclosure for the category. */
    disclosure: Scalars['String']
    /** If available, a URL to a feature image that represents the category. The best-fitting image to the requested width/height constraints will be returned, but specific dimensions are not guaranteed. */
    featureUrl: (Scalars['String'] | null)
    /** The key for the category. */
    key: Scalars['String']
    /** If available, a URL to a logo image that represents the category. */
    logoUrl: (Scalars['String'] | null)
    /** The name for the category. */
    name: Scalars['String']
    /** A list of suitability suggestions for this category. Value will be null when no information is available. */
    suitability: (Scalars['String'][] | null)
    __typename: 'SystemPieCategoryDetails'
}

export interface Transfers {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** True if the user is eligible to use smart transfers. */
    isEligibleForSmartTransfers: (Scalars['Boolean'] | null)
    /** True if the onboarding material for Smart Transfers is available to the user. */
    isOnboardingForSmartTransfersAvailable: (Scalars['Boolean'] | null)
    /**
     * True if the user is both eligible and ready to use smart transfers.
     * To be ready, users must have Plus and either a Checking or Savings account.
     */
    isReadyForSmartTransfers: (Scalars['Boolean'] | null)
    /** A set of options for choosing the focal point of a new smart transfer. */
    newSmartTransferFocusOptionSet: (NewSmartTransferFocusOptionSet | null)
    /** Returns information about available transfer participants. */
    participants: (TransferParticipantList | null)
    /** Valid transfer participant groups for a user. */
    participantGroups: (TransferParticipantGroups | null)
    /** Fetch transfer details for the user to review before confirming. */
    transferValidation: (TransferValidation | null)
    /**
     * @deprecated Use defaultAmountPills instead
     * An array of default amounts to use for transfers.
     */
    defaultAmounts: (Scalars['Int'][] | null)
    /**
     * @deprecated Use defaultAmountPills instead
     * The default amounts for the initial funding screen for an Invest account.
     */
    investInitialDepositDefaultAmounts: (Scalars['Int'][] | null)
    /**
     * @deprecated Use defaultAmountPills instead
     * The default amounts for the initial funding screen for a Save account.
     */
    saveInitialDepositDefaultAmounts: (Scalars['Int'][] | null)
    /** The default amount pills for the various create transfer and initial deposit screens. */
    defaultAmountPills: (AppPill | null)[]
    /** The promotional text for the initial deposit screen. */
    investInitialDepositPromotionalText: InvestInitialDepositPromotionalText
    /** A set of requirements specific to some specified transfer information. */
    requirements: (TransferRequirements | null)
    /** Details about a proposed recurrence schedule. */
    scheduleDetails: (RecurrenceSchedule | null)
    /** The list of all ACAT transfer instances matching the given arguments. */
    acatInstances: ((AcatTransferInstance | null)[] | null)
    /** The list of all transfer instances. */
    allInstances: (TransferInstanceConnection | null)
    /** The list of past, non-pending transfer instances. */
    pastInstances: (TransferInstanceConnection | null)
    /** The list of currently-pending transfer instances. */
    pendingInstances: ((TransferInstance | null)[] | null)
    /**
     * @deprecated Use `smartTransferRules` and `scheduledTransferRules` instead.
     * The list of transfer rules.
     */
    rules: ((TransferRule | null)[] | null)
    /** A list of smart transfer rules. */
    smartTransferRules: ((SmartTransferRule | null)[] | null)
    /** A list of scheduled transfer rules. */
    scheduledTransferRules: ((ScheduledTransferRule | null)[] | null)
    /**
     * Given an ISO 8601 timestamp, returns whether it occurs in an even week or an
     * odd week. If a timezone offset is not specified, it is assumed to be UTC. For
     * assistance in creating biweekly scheduled transfer rules.
     */
    isEvenWeek: (Scalars['Boolean'] | null)
    /** Information about rollovers into Invest accounts. */
    rollovers: (InvestRollovers | null)
    /**
     * @deprecated Use `MoveMoney.plusPromotion` instead
     * An optional Plus promotional message for the Move Money screen.
     */
    plusPromotionForMoveMoneyScreen: (PlusPromotionalMessage | null)
    /** Transfers form links - takes two optional arguments - source participant id & transfer scenario */
    formLinks: ((AppLink | null)[] | null)
    /**
     * An AppLink that directs the user to more information about which distribution
     * reasons they can choose. TODO - deprecate once payment work is complete.
     */
    iraDistributionReasonFAQ: (AppLink | null)
    /**
     * An AppLink that directs the user to more information about what an overcontribution
     * means. TODO - deprecate once payment work is complete.
     */
    iraOvercontributionFAQ: (AppLink | null)
    /** An AppLink that directs the user to learn more about Net Income Attributable. TODO - deprecate once payment work is complete. */
    niaLearnMore: (AppLink | null)
    /**
     * A disclaimer shown to users explaining what nia (Net Income Attributable) is
     * and how to calculate it.
     */
    niaDisclaimer: (TransfersDisclaimer | null)
    /** A disclaimer shown to users explaining what nia withholding is and how it */
    niaWithholdingDisclaimer: (TransfersDisclaimer | null)
    /** Feature flag for enhanced IRA distributions */
    enhancedIraDistribution: Scalars['Boolean']
    /** Active funding source - "one to rule them all" connected external bank account */
    activeFundingSource: (FundingSourceAccount | null)
    /** Returns true if the user is eligible to update their funding source connection */
    isEligibleForFundingSourceUpdate: Scalars['Boolean']
    /** Returns data associated with the initial funding onboarding flow for an account. */
    initialFunding: InitialFunding
    /**
     * @deprecated Use `MoveMoneyV2` instead.
     * The contents of the Move Money screen
     * 
     * `previousRouteName` is a web construct that is used for a few pieces of logic
     * * Appended to the link in the MoveMoneyOption so web knows where to return the user
     * * `previousRouteName`s that include `borrow` OR `transfers` with an active Personal Loan will include a MoveMoneyOption for loan payments
     * * `backButtonLabel` has some logic to determine what to display based on the `previousRouteName`
     *   * For now, this is only needed on web
     */
    moveMoney: (MoveMoney | null)
    moveMoneyV2: (MoveMoneyV2 | null)
    __typename: 'Transfers'
}

export type TransferScenarioTypeEnum = 'INVEST_INITIAL_DEPOSIT' | 'SAVINGS_INITIAL_DEPOSIT' | 'SCHEDULED_TRANSFER_FOR_REBALANCE' | 'MOVE_MONEY_TRANSFER' | 'PAYMENT' | 'IRA_CONVERSION' | 'IRA_RECHARACTERIZATION'

export type MoveMoneyType = 'SAVE' | 'SPEND' | 'TRANSFERS' | 'DIRECT_DEPOSIT'


/**
 * A disclaimer shown on the transfers page. Includes disclaimer text and an
 * optional tooltip.
 */
export interface TransfersDisclaimer {
    /** The message shown to the user for the disclaimer. */
    text: Scalars['String']
    /** The tooltip for the disclaimer to display. */
    tooltip: (TransfersDisclaimerTooltip | null)
    __typename: 'TransfersDisclaimer'
}


/**
 * The tooltip displayed on the TransfersDisclaimer object. Adds context to the
 * disclaimer text.
 */
export interface TransfersDisclaimerTooltip {
    /** The icon entry point to the disclaimer tooltip. */
    icon: AppImage
    /** An array of strings to be parsed by the client */
    text: (Scalars['String'] | null)[]
    __typename: 'TransfersDisclaimerTooltip'
}

export interface MoveMoneyV2 {
    /** The ID of this node */
    id: Scalars['ID']
    /** Participants eligible to receive a wire transfer. */
    wireTransferParticipants: (TransferParticipantList | null)
    /** Wire instructions for a user to follow for a given account. */
    wireInstructions: (MoveMoneyWireInstructions | null)
    /** Simple options for moving money */
    listItems: (MoveMoneyListItems | null)
    /** Call to action for moving money */
    callToAction: (MoveMoneyCallToAction | null)
    __typename: 'MoveMoneyV2'
}

export interface MoveMoneyCallToAction {
    /** Call to action title */
    title: (Scalars['String'] | null)
    /** Call to action icon */
    icon: (AppImage | null)
    /** Call to action link */
    link: (AppLink | null)
    /** Call to action - action type */
    action: (AppAction | null)
    __typename: 'MoveMoneyCallToAction'
}

export interface MoveMoney {
    /** The ID of this node */
    id: Scalars['ID']
    /** The internal key of this node */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: Scalars['String']
    /** Subtitle for the Move Money screen */
    subtitle: (Scalars['String'] | null)
    /** The label for the back button if the client requires it */
    backButtonLabel: Scalars['String']
    /** Categories of options for moving money */
    categories: MoveMoneyCategory[]
    /** An optional Plus promotional message for the Move Money screen */
    plusPromotion: (PlusPromotionalMessage | null)
    /**
     * @deprecated Use `MoveMoneyV2` field instead.
     * Participants eligible to receive a wire transfer.
     */
    wireTransferParticipants: (TransferParticipantList | null)
    /**
     * @deprecated Use `MoveMoneyV2` field instead.
     * Wire instructions for a user to follow for a given account.
     */
    wireInstructions: (MoveMoneyWireInstructions | null)
    __typename: 'MoveMoney'
}

export interface MoveMoneyListItems {
    /** Primary options for moving money */
    primaryOptions: ListItem[]
    /** Secondary options for moving money */
    secondaryOptions: ListItem[]
    /** Direct Deposit options */
    directDepositOptions: ListItem[]
    __typename: 'MoveMoneyListItems'
}

export interface MoveMoneyCategory {
    /** Category label */
    label: Scalars['String']
    /** List of options for a Move Money category */
    options: MoveMoneyOption[]
    __typename: 'MoveMoneyCategory'
}

export interface MoveMoneyOption {
    /** Move Money Option icon */
    icon: AppImage
    /** Move Money Option title */
    title: Scalars['String']
    /** Optional `AppPill` to display for the move money option */
    pill: (AppPill | null)
    /** Move Money Option subtitle */
    subtitle: Scalars['String']
    /** The link to go to when clicking the option */
    link: (AppLink | null)
    /** The user data to be saved for the user on click */
    userDataEntries: (UserDataEntry[] | null)
    __typename: 'MoveMoneyOption'
}

export interface MoveMoneyWireInstructions {
    /** Title for the Move Money wire instructions screen. */
    title: Scalars['String']
    /** Subtitle for the Move Money wire instructions screen. */
    subtitle: Scalars['String']
    /** Header for the account info. */
    accountHeader: (Scalars['String'] | null)
    /** Label for the user's account. */
    accountLabel: (Scalars['String'] | null)
    /** Illustration to display on the page. */
    illustration: (AppImage | null)
    /** Informational values for the Move Money wire instructions screen. */
    wireInstructionValues: WireInstructionField[]
    /** Helpful tips for the Move Money wire instructions screen. */
    helpfulTips: Scalars['String'][]
    /** Contact us link for the Move Money wire instructions screen. */
    contactUsLink: (AppLink | null)
    /** Wire Transfer FAQ link for the Move Money wire instructions screen. */
    wireTransferFAQLink: (AppLink | null)
    __typename: 'MoveMoneyWireInstructions'
}

export interface WireInstructionField {
    /** Title for the wire instruction field. */
    title: (Scalars['String'] | null)
    /** Value for the wire instruction field. */
    value: (Scalars['String'] | null)
    /** Optional array of values for line formatting on mobile clients. */
    optionalValues: (Scalars['String'][] | null)
    __typename: 'WireInstructionField'
}


/** A set of requirements for transfers between a particular participant pair. */
export interface TransferRequirements {
    /** True when the transfer destination requires a special initial deposit. */
    requiresInitialDeposit: (Scalars['Boolean'] | null)
    /** The minimum transfer amount. When there is no minimum, value is null. */
    minTransferAmount: (Scalars['Float'] | null)
    /** The minimum transfer error message to be displayed when the transfer amount is less than the minimum. */
    minTransferAmountErrorMessage: Scalars['String']
    /** The maximum transfer amount. When there is no maximum, value is null. */
    maxTransferAmount: (Scalars['Float'] | null)
    /** The maximum transfer error message to be displayed when the transfer amount is greater than the maximum. */
    maxTransferAmountErrorMessage: Scalars['String']
    /** A link that accompanies maximum transfer error messaging, if applicable for the transfer participant(s). Clients should show this if the maximum transfer amount is exceeded and it is not null. */
    maxTransferAmountErrorLink: (AppLink | null)
    /** Message to display for the AutoPay view if the user's statement date is today. */
    autoPayDueDateMessage: (Scalars['String'] | null)
    /** True when the prior-year IRA contribution option should be presented. */
    isIraContributionYearRequired: Scalars['Boolean']
    /** True when an IRA distribution reason must be specified. */
    isIraDistributionReasonRequired: Scalars['Boolean']
    /** True when an IRA contribution year must be specified. */
    isIraRolloverOptionRequired: Scalars['Boolean']
    /** True when an IRS contribution limit must be specified. */
    isIraContributionLimitRequired: Scalars['Boolean']
    /** True when the transfer will depend on sells completing first. */
    dependsOnSells: (Scalars['Boolean'] | null)
    /** True when the transfer amount is greater than cash available for withdrawal (CAFW). */
    amountIsGreaterThanCashAvailable: (Scalars['Boolean'] | null)
    /** True when the transfer will depend on holds expiring first. */
    dependsOnHolds: (Scalars['Boolean'] | null)
    /** A description of the projected timing for the transfer, if available. */
    timingDescription: (Scalars['String'] | null)
    /** A link to be displayed on the transfer overview screen before submission. */
    transferOverviewLink: (AppLink | null)
    /** A short summary message regarding the proposed transfer. */
    summaryMessage: (Scalars['String'] | null)
    /** A flexible message regarding the details of the proposed transfer. */
    detailsMessage: (TransferDetailsMessage | null)
    /** True if the transfer can be set as a scheduled rule. */
    canBeScheduledRule: (Scalars['Boolean'] | null)
    /** The due date for the payment account, if applicable. */
    transferDueDateLabel: (Scalars['String'] | null)
    /** A list of potential amounts to be selected for a payment transfer. */
    transferAmountPresets: ((TransferAmountPresetOption | null)[] | null)
    /** Returns true if the destination for the transfer is a loan. */
    isLoanPaymentTransfer: (Scalars['Boolean'] | null)
    /** Returns true if the destination account for the transfer is a Credit Card account. */
    isCreditCardPaymentTransfer: (Scalars['Boolean'] | null)
    /** Informational content relating to AutoPay for Credit Card. */
    autoPayInformationContent: (Scalars['String'] | null)
    /** Returns if the user current has AutoPay enabled for Credit Card. */
    hasAutoPayEnabled: (Scalars['Boolean'] | null)
    /** Amount preset options available for scheduled transfers. */
    scheduledTransferAmountPresets: ((ScheduledTransferPresetOption | null)[] | null)
    __typename: 'TransferRequirements'
}

export interface TransferAmountPresetOption {
    /** A label for the transfer amount preset option. */
    label: (Scalars['String'] | null)
    /** A value for the transfer amount preset option. */
    value: (Scalars['Float'] | null)
    /** A description of the transfer amount preset option. */
    description: (Scalars['String'] | null)
    __typename: 'TransferAmountPresetOption'
}

export interface ScheduledTransferPresetOption {
    /** A label for the scheduled transfer preset option. */
    label: (Scalars['String'] | null)
    /** A value for the scheduled transfer preset option. */
    value: (Scalars['String'] | null)
    /** A payment indicator for the scheduled transfer preset option. */
    indicator: (ScheduledTransferIndicatorEnum | null)
    /** A description of the scheduled transfer preset option. */
    description: (Scalars['String'] | null)
    __typename: 'ScheduledTransferPresetOption'
}

export type ScheduledTransferIndicatorEnum = 'MINIMUM_PAYMENT' | 'STATEMENT_BALANCE' | 'MONTHLY_PAYMENT' | 'FIXED_AMOUNT'


/** A transfer details message. */
export interface TransferDetailsMessage {
    /** An optional icon for the message. */
    icon: (AppImage | null)
    /** An optional title for the message. */
    title: (Scalars['String'] | null)
    /** An optional tag for the title. */
    titleTag: (Scalars['String'] | null)
    /** An optional description tooltip relevant to the transfer. */
    descriptionTooltip: (TransferDetailsMessageTooltip | null)
    /** An optional list of named value items. */
    items: (TransferDetailsMessageItem[] | null)
    /** An optional message description. */
    description: (Scalars['String'] | null)
    /** An optional link related to the message. */
    link: (AppLink | null)
    /** An analytics event to be recorded upon viewing the message. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    /** A transfer suggestion link related to the message. */
    transferSuggestionLink: (TransferSuggestionLink | null)
    /** True if the message relates to Plus. */
    isPlusRelated: (Scalars['Boolean'] | null)
    __typename: 'TransferDetailsMessage'
}


/** Represents a link to a suggested set of transfer inputs. */
export interface TransferSuggestionLink {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The suggested set of transfer inputs. */
    suggestion: TransferSuggestion
    /** An analytics event for following the link. */
    analyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'TransferSuggestionLink'
}


/** A suggested set of transfer inputs. */
export interface TransferSuggestion {
    /** The type of transfer. */
    transferType: (TransferTypeEnum | null)
    /** The participant money is flowing from. */
    fromParticipant: (TransferParticipant | null)
    /** The participant money is flowing to. */
    toParticipant: (TransferParticipant | null)
    /** The transfer amount. */
    amount: (Scalars['Float'] | null)
    __typename: 'TransferSuggestion'
}


/** A transfer details message item. */
export interface TransferDetailsMessageItem {
    /** A title for the value. */
    title: Scalars['String']
    /** The value. */
    value: Scalars['String']
    /** An optional description of the item. */
    description: (Scalars['String'] | null)
    __typename: 'TransferDetailsMessageItem'
}

export interface TransferDetailsMessageTooltip {
    /** Tooltip trigger. */
    icon: (AppImage | null)
    /** Content body for the tooltip. */
    tooltipBody: ((TransferDetailsMessageTooltipBody | null)[] | null)
    __typename: 'TransferDetailsMessageTooltip'
}

export interface TransferDetailsMessageTooltipBody {
    /** A title for the tooltip content. */
    title: (Scalars['String'] | null)
    /** A subtitle for the tooltip content. */
    subtitle: (Scalars['String'] | null)
    /** A numbered list for the tooltip content. */
    numberedList: ((Scalars['String'] | null)[] | null)
    __typename: 'TransferDetailsMessageTooltipBody'
}

export interface TransferInstanceConnection {
    pageInfo: PageInfo
    edges: ((TransferInstanceEdge | null)[] | null)
    __typename: 'TransferInstanceConnection'
}

export interface TransferInstanceEdge {
    cursor: Scalars['String']
    node: (TransferInstance | null)
    __typename: 'TransferInstanceEdge'
}

export interface TransferInstanceDetails {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Transfer Instance Details Screen title. */
    title: Scalars['String']
    /** Transfer Instance amount label. */
    amountLabel: Scalars['String']
    /** Formatted transfer instance amount. */
    amount: Scalars['String']
    /** Transfer Instance Details Screen pill. */
    pill: (AppPill | null)
    /**
     * @deprecated Use `additionalDetails` instead.
     * Timestamps corresponding to the active transfer instance. Can be one or many. Typically correspond to date and time of transfer events.
     */
    timeStamps: ((TransferInstanceDetailAdditionalDetail | null)[] | null)
    /** Additional details are any combination of label and content that provides additional context for the active transfer instance. */
    additionalDetails: ((TransferInstanceDetailAdditionalDetail | null)[] | null)
    /** Steps for the Transfer Instance. */
    steps: (TransferInstanceSteps | null)
    /** Transfer Instance Details Screen special message. Appears at the bottom of the Transfer Details Screen and typically provides color on timing, cancelation status, lack of email verification, etc. */
    transferSpecificMessage: (TransferInstanceDetailsMessage | null)
    /** Transfer Instance Details Screen messaging and link that direct a user to a support article that answers some common transfers questions. */
    transferTimingMessage: (TransferInstanceTimingMessage | null)
    /** When returned, this indicates that the transfer instance is cancelable and provides the copy and additional details needed for the Cancel Transfer CTA. */
    ifCancelable: (TransferInstanceDetailsCancelTransfer | null)
    /** When returned, this is a disclaimer to display below the trasnfer instance details. */
    disclaimer: (TransferInstanceDetailsDisclaimer | null)
    /**
     * An array of objects containing information on partially applied transfer credits. This
     * comes up for transfers where we don't credit the user 100% of the transfer.
     */
    outstandingTransferCredits: ((OutstandingTransferCredits | null)[] | null)
    __typename: 'TransferInstanceDetails'
}

export interface TransferInstanceDetailAdditionalDetail {
    /** Label for a transfer instance additional detail. */
    label: Scalars['String']
    /** Additional detail related to the transfer instance. */
    value1: Scalars['String']
    /** Additional detail related to the transfer instance. */
    value2: (Scalars['String'] | null)
    /** Additional detail related to the transfer instance. */
    value3: (Scalars['String'] | null)
    /** Additional detail related to the transfer instance. */
    value4: (Scalars['String'] | null)
    __typename: 'TransferInstanceDetailAdditionalDetail'
}

export interface TransferInstanceSteps {
    /** Label to display above Transfer Instance Steps. */
    label: Scalars['String']
    /** Source of the transfer, to be shown as the first step. */
    from: (TransferParticipant | null)
    /** Chronological steps for the given transfer. */
    steps: (TransferInstanceStep[] | null)
    __typename: 'TransferInstanceSteps'
}

export interface TransferInstanceDetailsMessage {
    /** Icon to display for the transfer detail message. */
    icon: (AppImage | null)
    /** Transfer detail message title. */
    title: (Scalars['String'] | null)
    /** Transfer detail message description. */
    description: (Scalars['String'] | null)
    /** Link for the transfer detail message. */
    link: (AppLink | null)
    /** Link copy for verify email CTA. */
    verifyEmailCta: (Scalars['String'] | null)
    __typename: 'TransferInstanceDetailsMessage'
}

export interface TransferInstanceTimingMessage {
    /** Icon to display for the transfer detail message. */
    icon: (AppImage | null)
    /** Link for the transfer timing CTA. */
    link: (AppLink | null)
    __typename: 'TransferInstanceTimingMessage'
}

export interface TransferInstanceDetailsCancelTransfer {
    /** Copy for the Cancel Transfer CTA. */
    cancelCtaCopy: Scalars['String']
    /** Copy for the Confirm Cancel Transfer dialog. */
    cancelDialogCopy: Scalars['String']
    /** Copy for the Confirm option on the Confirm Cancel Transfer dialog. */
    cancelDialogConfirmCtaCopy: Scalars['String']
    /** Copy for the Cancel option on the Confirm Cancel Transfer dialog. */
    cancelDialogCancelCtaCopy: Scalars['String']
    __typename: 'TransferInstanceDetailsCancelTransfer'
}

export interface TransferInstanceDetailsDisclaimer {
    /** Copy to display for the disclaimer. */
    disclaimerCopy: Scalars['String']
    /** Phone number to be linked to in disclaimerCopy */
    phoneNumber: (Scalars['String'] | null)
    /** Optional `AppLink` to be included with the disclaimer. */
    link: (AppLink | null)
    __typename: 'TransferInstanceDetailsDisclaimer'
}


/** A set of options for choosing the focal point of a new smart transfer. */
export interface NewSmartTransferFocusOptionSet {
    /** The list of options. */
    options: (NewSmartTransferFocusOption | null)[]
    /** The options footer. */
    optionsFooter: (Scalars['String'] | null)
    __typename: 'NewSmartTransferFocusOptionSet'
}


/** An option for choosing the focal point and trigger of a smart transfer. */
export interface NewSmartTransferFocusOption {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The name of the option. */
    name: Scalars['String']
    /** An optional description of the option. */
    description: (Scalars['String'] | null)
    /** True if the option is enabled for the user. */
    isEnabled: Scalars['Boolean']
    /** When `isEnabled` is false, an optional reason description. */
    disabledReasonDescription: (Scalars['String'] | null)
    /** A summary of how many available participants remain. */
    utilizationSummary: (Scalars['String'] | null)
    /** A list of available focus participants for this option. */
    focusParticipants: (TransferParticipantList | null)
    /** Requirements for editing a smart transfer created with this option. */
    editRequirements: (SmartTransferRuleEditRequirements | null)
    __typename: 'NewSmartTransferFocusOption'
}


/** Requirements for editing a smart transfer. */
export interface SmartTransferRuleEditRequirements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The focus option informing these edit requirements. */
    focusOption: (NewSmartTransferFocusOption | null)
    /** The focus participant informing these edit requirements. */
    focusParticipant: (TransferParticipant | null)
    /** Descriptive preamble text setting up the trigger threshold input. */
    balanceThresholdPreamble: Scalars['String']
    /** A short, descriptive label describing the "add new contra participant entry" action. */
    contraParticipantEntryAdditionLabel: Scalars['String']
    /** Descriptive preamble text setting up the contra participant list input. */
    contraParticipantListPreamble: Scalars['String']
    /** Requirements for editing the trigger applied to this smart transfer. */
    balanceTriggerEditRequirements: SmartTransferBalanceTriggerEditRequirements
    /** Indicate whether the option to add an entry should be shown. */
    shouldShowContraParticipantEntryAddition: (Scalars['Boolean'] | null)
    /** Indicate whether the option to reorder entries should be shown. */
    shouldShowContraParticipantEntryReordering: (Scalars['Boolean'] | null)
    /** Options for choosing an additional contra participant entry. */
    newContraParticipantEntryOptionSet: (NewSmartTransferContraParticipantEntryOptionSet | null)
    __typename: 'SmartTransferRuleEditRequirements'
}


/** Requirements for editing a smart transfer balance trigger. */
export interface SmartTransferBalanceTriggerEditRequirements {
    /** The type of balance trigger. */
    balanceTriggerType: SmartTransferBalanceTriggerTypeEnum
    /** The lowest option for trigger balance threshold, if any. */
    minBalanceTriggerThreshold: (Scalars['Float'] | null)
    /** The highest option for trigger balance threshold, if any. */
    maxBalanceTriggerThreshold: (Scalars['Float'] | null)
    /** An optional description about when the trigger will take action. */
    timingMessage: (SmartTransferTriggerTimingMessage | null)
    __typename: 'SmartTransferBalanceTriggerEditRequirements'
}


/** A message about when a smart transfer will trigger. */
export interface SmartTransferTriggerTimingMessage {
    /** The message description. */
    description: Scalars['String']
    /** An optional link related to the message. */
    link: (AppLink | null)
    /** The type of the message. */
    messageType: (SmartTransferTriggerTimingMessageTypeEnum | null)
    __typename: 'SmartTransferTriggerTimingMessage'
}


/** A smart transfer trigger timing message type. */
export type SmartTransferTriggerTimingMessageTypeEnum = 'INFO' | 'ALERT'


/** A set of options for choosing an additional contra participant entry. */
export interface NewSmartTransferContraParticipantEntryOptionSet {
    /** The list of options. */
    options: (NewSmartTransferContraParticipantEntryOption | null)[]
    /** A specific singular option. Temporary for Phase 1. */
    singularOption: (NewSmartTransferContraParticipantEntryOption | null)
    __typename: 'NewSmartTransferContraParticipantEntryOptionSet'
}


/** A contra participant option. */
export interface NewSmartTransferContraParticipantEntryOption {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The name of the option. */
    name: Scalars['String']
    /** An optional description of the option. */
    description: (Scalars['String'] | null)
    /** A list of available contra participants for this option. */
    contraParticipants: (TransferParticipantList | null)
    /** Requirements for editing the contra participant entry. While "contraParticipantId" is optional to allow for easier query patterns, resolving the field requires passing an ID. */
    editRequirements: (SmartTransferContraParticipantEntryEditRequirements | null)
    /** The title of the option. */
    title: Scalars['String']
    __typename: 'NewSmartTransferContraParticipantEntryOption'
}


/** Requirements for editing a contra participant entry. */
export interface SmartTransferContraParticipantEntryEditRequirements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The TransferParticipant for this contra participant entry. */
    contraParticipant: TransferParticipant
    /** A short label describing the direction of funds through on the contra participant. */
    contraParticipantLabel: Scalars['String']
    /** A flexible message regarding the details of the potential transfer. */
    detailsMessage: (TransferDetailsMessage | null)
    /** Descriptive preamble text setting up the fulfillment condition input. */
    fulfillmentConditionOptionSetPreamble: Scalars['String']
    /** The option title text for display when none is selected. */
    fulfillmentConditionOptionEmptyTitle: Scalars['String']
    /** The option description text for display when none is selected. */
    fulfillmentConditionOptionEmptyDescription: Scalars['String']
    /** Descriptive preamble text setting up the fulfillment condition list. */
    fulfillmentConditionOptionSetListingPreamble: Scalars['String']
    /** Options for choosing a fulfillment condition for this entry. */
    fulfillmentConditionOptionSet: (SmartTransferFulfillmentConditionOptionSet | null)
    /** A short title describing the edit requirements. */
    title: Scalars['String']
    __typename: 'SmartTransferContraParticipantEntryEditRequirements'
}


/** A set of fulfillment condition options. */
export interface SmartTransferFulfillmentConditionOptionSet {
    /** The list of options. */
    options: (SmartTransferFulfillmentConditionOption | null)[]
    __typename: 'SmartTransferFulfillmentConditionOptionSet'
}


/** A fulfillment condition option. */
export interface SmartTransferFulfillmentConditionOption {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The title of the option. */
    title: Scalars['String']
    /** An optional description of the option. */
    description: (Scalars['String'] | null)
    /** Requirements for editing the fulfillment condition with this option. */
    fulfillmentConditionRequirements: (SmartTransferFulfillmentConditionEditRequirements | null)
    __typename: 'SmartTransferFulfillmentConditionOption'
}

export type SmartTransferFulfillmentConditionTypeEnum = 'INDEFINITE' | 'CASH_BALANCE_CAP' | 'FUNDING_PER_PERIOD' | 'IRA_YEARLY_FUNDING' | 'IRA_WEEKLY_FUNDING_PER_PERIOD' | 'IRA_MONTHLY_FUNDING_PER_PERIOD' | 'IRA_QUARTERLY_FUNDING_PER_PERIOD' | 'CREDIT_BORROWED_CAP' | 'CREDIT_UTILIZATION_CAP'


/** Requirements for editing a smart transfer fulfillment condition. */
export type SmartTransferFulfillmentConditionEditRequirements = (SmartTransferIndefiniteFulfillmentConditionEditRequirements | SmartTransferCashBalanceCapFulfillmentConditionEditRequirements | SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements | SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements | SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements | SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements | SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements) & { __isUnion?: true }


/** Configurator for an indefinite fulfillment condition. */
export interface SmartTransferIndefiniteFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    __typename: 'SmartTransferIndefiniteFulfillmentConditionEditRequirements'
}


/** Configurator for a cash balance cap fulfillment condition. */
export interface SmartTransferCashBalanceCapFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    /** The lowest option for cap amount, if any. */
    minCapAmount: (Scalars['Float'] | null)
    /** The highest option for cap amount, if any. */
    maxCapAmount: (Scalars['Float'] | null)
    __typename: 'SmartTransferCashBalanceCapFulfillmentConditionEditRequirements'
}


/** Configurator for a funding per period fulfillment condition. */
export interface SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    /** List of funding period options for this fulfillment condition. */
    fundingPeriods: SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption[]
    /** The lowest option for balance threshold, if any. */
    minFundingAmount: (Scalars['Float'] | null)
    /** The highest option for balance threshold, if any. */
    maxFundingAmount: (Scalars['Float'] | null)
    __typename: 'SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements'
}

export interface SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption {
    /** User-facing label for the option. */
    label: Scalars['String']
    /** API-facing value for the option. */
    value: SmartTransferFundingTimePeriodEnum
    __typename: 'SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption'
}


/** Configurator for an IRA yearly contribution max fulfillment condition. */
export interface SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    __typename: 'SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements'
}


/** Configurator for an IRA funding per period max fulfillment condition. */
export interface SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    /** The lowest option for balance threshold, if any. */
    minFundingAmount: (Scalars['Float'] | null)
    /** The highest option for balance threshold, if any. */
    maxFundingAmount: (Scalars['Float'] | null)
    __typename: 'SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements'
}


/** Configurator for an credit borrowed fulfillment condition. */
export interface SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    /** Minimum Borrow account amount condition should run to. */
    minBorrowedAmount: (Scalars['Int'] | null)
    /** Maximum Borrow account amount condition should run to. */
    maxBorrowedAmount: (Scalars['Int'] | null)
    __typename: 'SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements'
}


/** Configurator for a credit utilization cap fulfillment condition. */
export interface SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription: Scalars['String']
    /** Minimum Borrow account utilization condition should run to. */
    minUtilization: (Scalars['Int'] | null)
    /** Maximum Borrow account utilization condition should run to. */
    maxUtilization: (Scalars['Int'] | null)
    __typename: 'SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements'
}

export type TransferTypeEnum = 'TRANSFER_INSTANCE' | 'SCHEDULED_TRANSFER_RULE'


/** A transfer participant side. */
export type TransferParticipantSideEnum = 'FROM' | 'TO'


/** Information about a list of transfer participants. */
export interface TransferParticipantList {
    /** True if the list has zero participants. */
    isEmpty: Scalars['Boolean']
    /** True if the list has exactly one participant. */
    isSingle: Scalars['Boolean']
    /** The list of transfer participants. */
    list: (TransferParticipant[] | null)
    __typename: 'TransferParticipantList'
}


/**
 * Transfer groups are separated by transfer type.
 * ie: one-time or scheduled (AKA recurring)
 */
export interface TransferParticipantGroups {
    /** Eligible transfer participant pairs for one-time transfers. */
    oneTime: (TransferParticipantGroup | null)
    /** Eligible transfer participant pairs for scheduled (AKA recurring) transfers. */
    scheduled: (TransferParticipantGroup | null)
    __typename: 'TransferParticipantGroups'
}


/** A transfer participant group contains eligible transfer pairs. */
export interface TransferParticipantGroup {
    /** The list of eligible source transfer participants + pairs. */
    sourceParticipants: (TransferParticipantDetails[] | null)
    /** The list of eligible destination transfer participants + pairs. */
    destinationParticipants: (TransferParticipantDetails[] | null)
    __typename: 'TransferParticipantGroup'
}

export interface TransferParticipantDetails {
    /**
     * The account that is fetched by a composite key of
     * participantType and transferParticipantId.
     */
    account: (TransferParticipant | null)
    /**
     * @deprecated Access the registration from the above account sibling resolver instead.
     * The registration account type
     */
    registration: (OnlineAccountRegistrationEnum | null)
    /** The list of eligible relationship pairs. */
    relationships: (TransferParticipantRelationship[] | null)
    iraWithholding: (IraWithholding | null)
    __typename: 'TransferParticipantDetails'
}


/**
 * An eligible transfer participant pair and details relevant to that pair
 * (ie: min/max, timing message, etc)
 */
export interface TransferParticipantRelationship {
    /** Minimum amount required for transfer */
    min: (Scalars['Float'] | null)
    /** Minimum amount error message */
    minErrorMessage: Scalars['String']
    /** Maximum amount required for transfer */
    max: (Scalars['Float'] | null)
    /** Maximum amount error message */
    maxErrorMessage: Scalars['String']
    /** The default amount pills for the various create transfer screens. */
    amountPills: (AppPill | null)[]
    /** The source transfer participant. */
    source: (TransferParticipant | null)
    /** The list of eligible relationship pairs. */
    destination: (TransferParticipant | null)
    /** Whether the relationship is eligible for a scheduled transfer */
    isScheduledTransferSupported: (Scalars['Boolean'] | null)
    __typename: 'TransferParticipantRelationship'
}


/** A participant in a transfer of money. */
export type TransferParticipant = (Account | PersonalLoan | CreditCardAccount | FundingSourceAccount | SavingsAccount | AchRelationshipViaDeposits | AchRelationshipViaLink | BorrowAccount | SpendAccount | PhysicalCheck | SpendExternalAccount) & { __isUnion?: true }


/** A type categorization of transfer participants. */
export type TransferParticipantTypeEnum = 'INVEST' | 'SPEND' | 'BORROW' | 'LOAN' | 'EXTERNAL' | 'PHYSICAL_CHECK' | 'CREDIT_CARD' | 'REWARDS' | 'CRYPTO' | 'CRYPTO_EXTERNAL' | 'SAVE' | 'FUNDING_SOURCE'

export type AcatTransferInstanceTypeEnum = 'INCOMPLETE' | 'COMPLETED' | 'ALL'

export interface AcatTransferInstanceDetailsMessage {
    /** Icon to display for the transfer detail message. */
    icon: (AppImage | null)
    /** Transfer detail message title. */
    title: (Scalars['String'] | null)
    /** Transfer detail message description. */
    description: (Scalars['String'] | null)
    /** Link for the transfer detail message. */
    link: (AppLink | null)
    __typename: 'AcatTransferInstanceDetailsMessage'
}

export interface AcatTransferInstanceDetails {
    /** The title for the ACAT transfer instance details screen. */
    title: (Scalars['String'] | null)
    /** The status AppPill for the ACAT transfer instance details. */
    pill: (AppPill | null)
    /** The account steps for the user's specific ACAT transfer. */
    steps: ((AcatTransferInstanceStep | null)[] | null)
    /** The optional transfer specific message for an ACAT transfer. */
    transferSpecificMessage: (AcatTransferInstanceDetailsMessage | null)
    /**
     * @deprecated Use `supportTicketNumber` instead.
     * The ticket number for the ACAT transfer.
     */
    zendeskTicketNumber: (Scalars['String'] | null)
    /** The ticket number for the ACAT transfer. */
    supportTicketNumber: (Scalars['String'] | null)
    /** An explainer for what happens next for the ACAT transfer. */
    nextSteps: (AcatTransferInstanceDetailsExplainer | null)
    __typename: 'AcatTransferInstanceDetails'
}

export interface AcatTransferInstanceDetailsExplainer {
    /** The title for the ACAT transfer instance details explainer. */
    title: (Scalars['String'] | null)
    /** The next steps for the ACAT transfer instance details explainer. */
    steps: (Scalars['String'][] | null)
    __typename: 'AcatTransferInstanceDetailsExplainer'
}

export interface AcatTransferInstanceStep {
    /** The title for the ACAT transfer instance step. */
    title: (Scalars['String'] | null)
    /** The subtitle for the ACAT transfer instance step. */
    subtitle: (Scalars['String'] | null)
    __typename: 'AcatTransferInstanceStep'
}

export type AcatTransferInstanceStatusCodeEnum = 'INITIATE_REQUEST' | 'REQUEST' | 'MATURING' | 'NEW' | 'SUBMITTED' | 'REQUEST_ADJUST' | 'REQUEST_PAST' | 'REQUEST_REJECT' | 'INTERNAL_REVIEW' | 'INTERNAL_REJECT_ADJUST' | 'INTERNAL_REJECT' | 'INTERNAL_ACCEPT' | 'INTERNAL_AWAITING_NSCC_SUBMISSION' | 'REVIEW' | 'REVIEW_ADJUST_DELIVERER' | 'REVIEW_ERROR' | 'REVIEW_ACCELERATE' | 'REVIEW_AS_JUST_RECEIVER_ACCELERATE' | 'SETTLE_PREP' | 'SETTLE_CLOSE' | 'MEMO_PURGE_PARTIAL_TRANSFER_REQUEST_RECEIVER' | 'REJECT' | 'SYSTEM_PURGE' | 'ERROR' | 'INTERNAL_ERROR' | 'UNKNOWN' | 'CLOSE_PURGE' | 'TRANSFER_COMPLETE'

export interface AcatTransferInstanceStatus {
    /** The code for this status. */
    code: (AcatTransferInstanceStatusCodeEnum | null)
    /** Whether the transfer instance is pending or not. */
    isPending: (Scalars['Boolean'] | null)
    /** Whether the transfer instance is completed or not. */
    isCompleted: (Scalars['Boolean'] | null)
    /** Whether the transfer instance is failed or not. */
    isFailed: (Scalars['Boolean'] | null)
    /** Whether the transfer instance needs more information or not. */
    isNeedingInformation: (Scalars['Boolean'] | null)
    __typename: 'AcatTransferInstanceStatus'
}


/** A discrete instance of an internal ACAT transfer. */
export interface AcatTransferInstance {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The formatted start date for this ACAT transfer. */
    startDate: (Scalars['String'] | null)
    /** The formatted end date for this ACAT transfer. */
    endDate: (Scalars['String'] | null)
    /** The source account for this ACAT transfer. */
    source: (Scalars['String'] | null)
    /** The destination account for this ACAT transfer. */
    destination: (Account | null)
    /** Designation of either full or partial for this ACAT transfer. */
    type: (Scalars['String'] | null)
    /** The total amount value for this ACAT transfer. */
    amount: (Scalars['Float'] | null)
    /** Additional details for this ACAT transfer. */
    details: (AcatTransferInstanceDetails | null)
    /** The status of this ACAT transfer. */
    status: (AcatTransferInstanceStatus | null)
    __typename: 'AcatTransferInstance'
}


/** A discrete instance of a transfer of money between two participants. */
export interface TransferInstance {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The transfer instance status. */
    status: TransferInstanceStatus
    /** The title for this transfer instance. */
    title: Scalars['String']
    /** An optional description for this transfer instance. */
    description: (Scalars['String'] | null)
    /** The time when the transfer instance was started. */
    startDate: Scalars['String']
    /**
     * The time when the transfer instance ended. When the instance has not yet
     * ended, the value is null.
     */
    endDate: (Scalars['String'] | null)
    /**
     * The amount of money being transferred. When the exact amount is currently
     * unknown, the value is null.
     */
    amount: (Scalars['Float'] | null)
    /**
     * True when the origin of the money being transferred is the liquidation of an
     * Invest account.
     */
    isLiquidation: (Scalars['Boolean'] | null)
    /** True when the transfer is a sent check from Spend Checking. */
    isCheck: Scalars['Boolean']
    /** True when the transfer is a Credit Card payment. */
    isCreditCardPayment: Scalars['Boolean']
    /** True when the transfer is a Personal Loan payment. */
    isPersonalLoanPayment: Scalars['Boolean']
    /** True when the transfer is a Credit Card AutoPay payment. */
    isCreditCardAutoPayInstance: Scalars['Boolean']
    /** A card with additional important transfer information, if available. */
    additionalInfoCard: (AppInformationalMessageCard | null)
    /** True when the transfer is a Personal Loan AutoPay payment. */
    isPersonalLoanAutoPayInstance: Scalars['Boolean']
    /**
     * When the destination participant is an Invest IRA, the contribution year
     * option that was specified for the transfer by the user. Value could be null
     * when the transfer is an IRA contribution but the year option is unknown.
     */
    iraContributionYear: (IraContributionYearEnum | null)
    /**
     * When the source participant is an Invest IRA, the distribution reason that was
     * was specified for the transfer by the user. Value could be null when the
     * transfer is an IRA distribution but the distribution reason is unknown.
     */
    iraDistributionReason: (IraDistributionReasonEnum | null)
    /**
     * True when the IRA distribution reason requires verification to be completed
     * before the transfer can be completed.
     */
    iraDistributionReasonRequiresVerification: (Scalars['Boolean'] | null)
    /** True when the transfer currently depends on sells completing first. */
    dependsOnSells: (Scalars['Boolean'] | null)
    /** True when the transfer amount is greater than cash available for withdrawal (CAFW). */
    amountIsGreaterThanCashAvailable: (Scalars['Boolean'] | null)
    /** True when the transfer currently depends on holds expiring first. */
    dependsOnHolds: (Scalars['Boolean'] | null)
    /** A description of the projected timing for the transfer, if available. */
    timingDescription: (Scalars['String'] | null)
    /** The location that money is being transferred from. */
    from: (TransferParticipant | null)
    /** The location that money is being transferred to. */
    to: (TransferParticipant | null)
    /**
     * @deprecated Deprecated on `TransferInstance` and now lives on `TransferInstanceDetails`.
     * In some cases, the movement of money from one participant to another involves
     * moving the money through other intermediary accounts first. This is an ordered
     * list of steps that comprise the overall transfer. Only available when the
     * instance is loaded independently, outside of a list.
     */
    steps: (TransferInstanceStep[] | null)
    /** Content and necessary variables for the Transfer Details screen. */
    details: (TransferInstanceDetails | null)
    __typename: 'TransferInstance'
}


/** A transfer instance status. */
export interface TransferInstanceStatus {
    /** The status code. */
    code: (TransferInstanceStatusCodeEnum | null)
    /** True when it is possible to cancel the transfer. */
    isCancelable: Scalars['Boolean']
    /** True when the transfer is pending (not in any terminal state). */
    isPending: Scalars['Boolean']
    /** True when the transfer has completed successfully. */
    isComplete: Scalars['Boolean']
    /** True when the transfer has been canceled. */
    isCanceled: Scalars['Boolean']
    /** True when the transfer has failed. */
    isFailed: Scalars['Boolean']
    /** True when the transfer is in any terminal state. */
    isEnded: Scalars['Boolean']
    __typename: 'TransferInstanceStatus'
}


/** A transfer instance status code. */
export type TransferInstanceStatusCodeEnum = 'INITIATED' | 'STARTED' | 'COMPLETED' | 'PENDING_CANCELLATION' | 'CANCELED' | 'CANCELED_PARTIALLY_COMPLETED' | 'FAILED' | 'FAILED_PARTIALLY_COMPLETED'


/** An IRA contribution year option. */
export type IraContributionYearEnum = 'CURRENT_YEAR' | 'PRIOR_YEAR'


/** An IRA distribution reason. */
export type IraDistributionReasonEnum = 'PREMATURE' | 'NORMAL' | 'DISABILITY' | 'DEATH' | 'ROLLOVER_TO_QUALIFIED_PLAN' | 'NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS' | 'EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE' | 'EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE' | 'CONVERSION' | 'RECHARACTERIZATION'


/** A transfer instance step. */
export interface TransferInstanceStep {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The transfer instance step staus. */
    status: TransferInstanceStepStatus
    /** The title for this transfer instance step. */
    title: Scalars['String']
    /** The time when the transfer instance step was started. */
    startDate: Scalars['String']
    /**
     * The time when the transfer instance step ended. When the step has not yet
     * ended, the value is null.
     */
    endDate: (Scalars['String'] | null)
    /** The intermediary destination location. */
    to: (TransferParticipant | null)
    /** Enum that determines the UI of the arrow to display between steps. */
    arrow: (TransferInstanceStepArrowEnum | null)
    __typename: 'TransferInstanceStep'
}


/** A transfer instance step status. */
export interface TransferInstanceStepStatus {
    /** The status code. */
    code: (TransferInstanceStepStatusCodeEnum | null)
    /** True when the step is pending (not in any terminal state). */
    isPending: Scalars['Boolean']
    /** True when the step is in any teriminal state. */
    isEnded: Scalars['Boolean']
    /** True when the step did complete successfully. */
    isCompleted: Scalars['Boolean']
    /** A friendly description of the current status. */
    description: (Scalars['String'] | null)
    __typename: 'TransferInstanceStepStatus'
}

export type TransferInstanceStepArrowEnum = 'COMPLETED' | 'PENDING' | 'FAILED'


/** A transfer instance step status code. */
export type TransferInstanceStepStatusCodeEnum = 'INITIATED' | 'STARTED' | 'SUBMITTED' | 'CANCELED' | 'COMPLETED' | 'FAILED' | 'RETURNED'


/** A rule used by the system for creating transfer instances automatically. */
export type TransferRule = (SmartTransferRule | ScheduledTransferRule | OtherTransferRule) & { __isUnion?: true }


/** A transfer rule that creates instances based on a set of conditions. */
export interface SmartTransferRule {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Message explaining why the rule might not be in a nominal state. */
    cautionStatusMessage: (Scalars['String'] | null)
    /** Is the user allowed to edit the rule? */
    isEditingEnabled: Scalars['Boolean']
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled: Scalars['Boolean']
    /** True when clients should disallow user toggling of the pause/unpause switch. */
    isPauseToggleDisabled: Scalars['Boolean']
    /** The title for the rule. */
    title: Scalars['String']
    /** A description of the rule. */
    description: (Scalars['String'] | null)
    /** A longer, full description of the rule. */
    fullDescription: (Scalars['String'] | null)
    /**
     * @deprecated Not relevant for `SmartTransferRule`. Only present to implement `TransferRule` until this field is removed.
     * Not in use. Always returns null.
     */
    from: (TransferParticipant | null)
    /**
     * @deprecated Not relevant for `SmartTransferRule`. Only present to implement `TransferRule` until this field is removed.
     * Not in use. Always returns null.
     */
    to: (TransferParticipant | null)
    /**
     * @deprecated Not relevant for `SmartTransferRule`. Only present to implement `TransferRule` until this field is removed.
     * The transfer instance created from this rule most recently.
     */
    latestInstance: (TransferInstance | null)
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance: (Scalars['Boolean'] | null)
    /** A list of transfer instances created from this rule. */
    instances: (TransferInstanceConnection | null)
    /** True if there are any transfer instances created from this rule. */
    hasInstances: (Scalars['Boolean'] | null)
    /** A description of how many transfers have been created. */
    transferCountDescription: (Scalars['String'] | null)
    /** The total dollar amount transferred since the rule was created. */
    totalTransferAmount: (Scalars['Float'] | null)
    /** The participant at the focus of the smart transfer. */
    focusParticipant: (TransferParticipant | null)
    /** The trigger condition for the smart transfer. */
    balanceTrigger: SmartTransferBalanceTrigger
    /** The ordered list of contra participant entries (opposite the focus). */
    contraParticipantEntries: ((SmartTransferContraParticipantEntry | null)[] | null)
    /** The first element in `contraParticipantEntries`. Temporary for Phase 1. */
    initialContraParticipantEntry: (SmartTransferContraParticipantEntry | null)
    /** A set of requirements for editing this smart transfer. */
    editRequirements: (SmartTransferRuleEditRequirements | null)
    __typename: 'SmartTransferRule'
}


/** A smart transfer balance trigger. */
export interface SmartTransferBalanceTrigger {
    /** The type of balance trigger. */
    balanceTriggerType: SmartTransferBalanceTriggerTypeEnum
    /** The amount at which the trigger fires. */
    balanceThreshold: Scalars['Float']
    /** For under-balance triggers, the optional refill target balance amount. */
    underBalanceRefillTarget: (Scalars['Float'] | null)
    __typename: 'SmartTransferBalanceTrigger'
}


/** A type of smart transfer balance trigger. */
export type SmartTransferBalanceTriggerTypeEnum = 'OVER_BALANCE' | 'UNDER_BALANCE'


/** A contra participant entry in a smart transfer. */
export interface SmartTransferContraParticipantEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The title for this contra participant entry. */
    title: Scalars['String']
    /** The transfer instance created from this entry most recently. */
    latestInstance: (TransferInstance | null)
    /** A list of transfer instances created from this entry. */
    instances: (TransferInstanceConnection | null)
    /** True if there are any transfer instances created from this entry. */
    hasInstances: (Scalars['Boolean'] | null)
    /** A description of how many transfers have been created. */
    transferCountDescription: (Scalars['String'] | null)
    /** The total dollar amount transferred since the entry was created. */
    totalTransferAmount: (Scalars['Float'] | null)
    /** The contra participant. */
    contraParticipant: (TransferParticipant | null)
    /** Configuration for editing this contra participant entry. */
    editRequirements: (SmartTransferContraParticipantEntryEditRequirements | null)
    /** The condition under which when money will stop flowing. */
    fulfillmentCondition: SmartTransferFulfillmentCondition
    __typename: 'SmartTransferContraParticipantEntry'
}


/** A smart transfer fulfillment condition. */
export type SmartTransferFulfillmentCondition = (SmartTransferIndefiniteFulfillmentCondition | SmartTransferCashBalanceCapFulfillmentCondition | SmartTransferFundingPerPeriodFulfillmentCondition | SmartTransferIraYearlyFundingFulfillmentCondition | SmartTransferIraFundingPerPeriodFulfillmentCondition | SmartTransferCreditBorrowedCapFulfillmentCondition | SmartTransferCreditUtilizationCapFulfillmentCondition) & { __isUnion?: true }


/** Represents the indefinite fulfillment condition. */
export interface SmartTransferIndefiniteFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    __typename: 'SmartTransferIndefiniteFulfillmentCondition'
}


/** Represents the cash balance cap fulfillment condition. */
export interface SmartTransferCashBalanceCapFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    /** The cash balance cap amount. */
    capAmount: Scalars['Float']
    __typename: 'SmartTransferCashBalanceCapFulfillmentCondition'
}


/** Represents the funding per period fulfillment condition. */
export interface SmartTransferFundingPerPeriodFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    /** The funding amount. */
    fundingAmount: Scalars['Float']
    /** The time period. */
    fundingPeriod: SmartTransferFundingTimePeriodEnum
    __typename: 'SmartTransferFundingPerPeriodFulfillmentCondition'
}

export interface SmartTransferIraYearlyFundingFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    __typename: 'SmartTransferIraYearlyFundingFulfillmentCondition'
}

export interface SmartTransferIraFundingPerPeriodFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    /** The funding amount. */
    fundingAmount: Scalars['Float']
    __typename: 'SmartTransferIraFundingPerPeriodFulfillmentCondition'
}

export interface SmartTransferCreditBorrowedCapFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    /** Borrow account amount condition will run to. */
    borrowAmount: Scalars['Int']
    __typename: 'SmartTransferCreditBorrowedCapFulfillmentCondition'
}

export interface SmartTransferCreditUtilizationCapFulfillmentCondition {
    /** The type of fulfillment condition. */
    fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum
    /** A summary description of the fulfillment condition. */
    summary: Scalars['String']
    /** "Borrow account utilization condition should run to. */
    utilization: Scalars['Int']
    __typename: 'SmartTransferCreditUtilizationCapFulfillmentCondition'
}


/** A funding time period for Smart Transfers. */
export type SmartTransferFundingTimePeriodEnum = 'WEEK' | 'MONTH' | 'QUARTER' | 'YEAR'


/** A transfer rule that creates instances on a defined schedule. */
export interface ScheduledTransferRule {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled: Scalars['Boolean']
    /** True, when the schedule is an instance of Credit Card AutoPay and false otherwise. */
    isCreditCardAutoPay: Scalars['Boolean']
    /** True, when the schedule is an instance of Personal Loan AutoPay and false otherwise. */
    isPersonalLoanAutoPay: Scalars['Boolean']
    /** A label for the scheduled transfer from the list view. */
    scheduledTransferListLabel: (Scalars['String'] | null)
    /** The preset value for the transfer schedule, if applicable. */
    schedulePresetIndicator: (ScheduledTransferIndicatorEnum | null)
    /** The title for the rule. */
    title: Scalars['String']
    /** The location that money should be transferred from. */
    from: (TransferParticipant | null)
    /** The location that money should be transferred to. */
    to: (TransferParticipant | null)
    /** The transfer instance created from this rule most recently. */
    latestInstance: (TransferInstance | null)
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance: (Scalars['Boolean'] | null)
    /** Optional memo for the transfer schedule if applicable */
    memo: (Scalars['String'] | null)
    /** Recipient information for a check schedule. */
    sendCheckRecipient: (SendCheckRecipientEditRequirements | null)
    /** The amount that should be transferred. */
    amount: Scalars['Float']
    /**
     * When the destination participant is an Invest IRA, the contribution year
     * option that was specified for the transfer rule by the user.
     */
    iraContributionYear: (IraContributionYearEnum | null)
    /**
     * When the source participant is an Invest IRA, the distribution reason that was
     * was specified for the transfer rule by the user.
     */
    iraDistributionReason: (IraDistributionReasonEnum | null)
    /**
     * True when the IRA distribution reason requires verification to be completed
     * before the transfer can be completed.
     */
    iraDistributionReasonRequiresVerification: (Scalars['Boolean'] | null)
    /** A specification of the recurrence schedule. */
    schedule: (RecurrenceSchedule | null)
    /** The time when the rule was created. */
    createdDate: Scalars['String']
    /** The time when the rule was last modified. */
    lastModifiedDate: (Scalars['String'] | null)
    /** The additional details for the given scheduled transfer. */
    additionalDetails: ((ScheduledTransferRuleAdditionalDetail | null)[] | null)
    __typename: 'ScheduledTransferRule'
}

export interface ScheduledTransferRuleAdditionalDetail {
    /** Label for the additional transfer rule detail. */
    label: Scalars['String']
    /** Array of potential additional detail values to be displayed on the transfer rule detail. */
    values: Scalars['String'][]
    __typename: 'ScheduledTransferRuleAdditionalDetail'
}


/** A transfer rule of an unknown type. */
export interface OtherTransferRule {
    /** The ID of this node. */
    id: Scalars['ID']
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled: Scalars['Boolean']
    /** The title for the rule. */
    title: Scalars['String']
    /**
     * @deprecated Deprecated on interface because not all `TransferRule`s have the same concept of `from` and `to`.
     * The location that money should be transferred from.
     */
    from: (TransferParticipant | null)
    /**
     * @deprecated Deprecated on interface because not all `TransferRule`s have the same concept of `from` and `to`.
     * The location that money should be transferred to.
     */
    to: (TransferParticipant | null)
    /**
     * @deprecated Deprecated on interface because this concept does not apply to all `TransferRule`s.
     * The transfer instance created from this rule most recently.
     */
    latestInstance: (TransferInstance | null)
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance: (Scalars['Boolean'] | null)
    __typename: 'OtherTransferRule'
}

export interface InvestInitialDepositPromotionalText {
    /** The required promotional text header */
    header: Scalars['String']
    /** The required promotional text body */
    text: Scalars['String']
    /** The optional promotional text CTA */
    offersCta: (AppLink | null)
    __typename: 'InvestInitialDepositPromotionalText'
}

export type IraStateWithholdingTypeEnum = 'PERCENTAGE' | 'PERCENTAGE_OF_FEDERAL' | 'FIXED'

export interface TransferValidation {
    /** The title for the transfer validation screen. */
    title: Scalars['String']
    /** The source participant for the transfer */
    sourceParticipant: TransferParticipant
    /** The destination participant for the transfer */
    destinationParticipant: TransferParticipant
    /**
     * The amount of money being transferred.
     * If it is an IRA distribution, the amount is the requested amount
     * less the federal and state withholding.
     */
    amount: (Scalars['Float'] | null)
    /** Text shown with the amount */
    amountText: (Scalars['String'] | null)
    /** Whether the transfer qualifies as a liquidation. */
    isLiquidation: Scalars['Boolean']
    /** The line items associated with the transfer amount */
    amountLineItems: (TransferAmountLineItem[] | null)
    /**
     * The primary CTA button with a type associated with it that will be used
     * to determine the correct mutation to call.
     */
    primaryButton: AppAction
    /** The secondary CTA button */
    secondaryButton: AppButton
    /** Primary messages are related to disclaimers and timing information. */
    primaryMessages: (TransferValidationMessage[] | null)
    /**
     * Secondary messages were originally intended for timing information,
     * but are not being populated at the moment.
     * As of 2/22/24, we decided to roll secondary messages into primary messages,
     * due to the styling being identical.
     * We are keeping this field to potentially use in the future.
     * The intention is that this field would be used if additional messages
     * were required in the future, with different styling than primaryMessages.
     */
    secondaryMessages: (TransferValidationMessage[] | null)
    /** Text associated with CTA buttons */
    ctaText: (RichTextContent | null)
    /** Validation disclosure content */
    disclosureContent: ((RichTextContent | null)[] | null)
    __typename: 'TransferValidation'
}

export type TransferValidationMessageTypeEnum = 'LIQUIDATION' | 'PENDING_SELLS' | 'IRA_CONTRIBUTION_YEAR' | 'SCHEDULE_FREQUENCY' | 'SCHEDULE_START' | 'AMOUNT_GREATER_THAN_CASH_AVAILABLE'

export interface TransferValidationMessage {
    /** The type of validation message */
    type: TransferValidationMessageTypeEnum
    /** Text associated with the message */
    text: Scalars['String'][]
    __typename: 'TransferValidationMessage'
}

export interface TransferAmountLineItem {
    /** The key for the line item */
    key: Scalars['String']
    /** The label for the line item */
    label: Scalars['String']
    /** The amount for the line item */
    value: Scalars['Float']
    /** The formatted dollar value for the line item */
    formattedValue: Scalars['String']
    __typename: 'TransferAmountLineItem'
}

export interface ValueSnapshot {
    /** The date and time of the snapshot, in ISO 8601 format. */
    asOf: Scalars['String']
    /** The abolute dollar amount. */
    value: (Scalars['Float'] | null)
    __typename: 'ValueSnapshot'
}

export interface Viewer {
    /** Content for screens that come before login & sign up, when the user is not yet Authenticated. */
    unauthenticated: (Unauthenticated | null)
    /** List of all available accounts. */
    accounts: (AccountConnection | null)
    /** active security symbols */
    activeSecuritySymbols: ((Scalars['String'] | null)[] | null)
    /** Fetches an object given its ID */
    anyNode: (Node | null)
    /** Fetches multiple objects given their IDs */
    anyNodes: ((Node | null)[] | null)
    /** Borrow. */
    borrow: (Borrow | null)
    /** Entrypoint for Contact Us screen */
    contactUs: (ContactUs | null)
    /** Credit card. */
    credit: (Credit | null)
    /** Crypto. */
    crypto: (Crypto | null)
    /** Entry point for Document Upload Requests screen. */
    documentUploadRequestsCenter: (DocumentUploadRequestsCenter | null)
    /** A list of documents for all accounts. Value is null if documents are temporarily unavailable. */
    documents: (DocumentConnection | null)
    /** HYSA and Cash Accounts */
    earn: (Earn | null)
    /** Email verification page copy and illustration */
    emailVerificationPage: (EmailVerificationPage | null)
    /** Feature flags for this viewer. Value will be null if the feature flag system is temporarily unavailable. */
    featureFlags: (FeatureFlags | null)
    /** Feedback Form in Settings */
    feedbackForm: (FeedbackForm | null)
    /** Funding sources from external accounts */
    fundingSources: (FundingSources | null)
    /** The ID of this node. */
    id: Scalars['ID']
    /** Invest. */
    invest: (Invest | null)
    /** Information about current IRS regulations. */
    irsRegulations: IrsRegulations
    /** Value is `true` when the user is authenticated, `false` otherwise. */
    isAuthenticated: Scalars['Boolean']
    /** The latest agreement bundle. */
    latestAgreements: AgreementBundle
    /** Information about markets. */
    markets: Markets
    /** Net worth data */
    netWorth: (NetWorth | null)
    /** Notifications. */
    notifications: (Notifications | null)
    /** Onboarding */
    onboarding: (Onboarding | null)
    /** Overview. */
    overview: (Overview | null)
    /**
     * @deprecated Use sharedPie instead.
     * Experimental. Attempt to read a pie edit model from a pie share token. Value will be null if token is not valid.
     */
    pieEditModelForShareToken: (Scalars['String'] | null)
    sharedPie: (SharedPie | null)
    /** Plus. */
    plus: (Plus | null)
    /** Retrieve profile information for the viewer. Value is null if no profile information has been established. */
    profile: (Profile | null)
    /** Authenticated Promotions */
    promotions: (Promotions | null)
    /** Attempt to read a serialized pie edit model. Value will be null if the edit model input is not valid. */
    readPieEditModel: (PieEditModel | null)
    /** Information about referrals get and give amounts, along with referral title for a unauthenticated visitors. */
    referralOffer: (ReferralOffer | null)
    /** Research. */
    research: (Research | null)
    /** B2 Savings Accounts */
    save: (Save | null)
    /** Returns funds that match the selection criteria. */
    screenFunds: FundScreenerConnection
    /** Returns securities that match the selection criteria. */
    screenSecurities: SecurityScreenerConnection
    /** Returns system pies that match the selection criteria. */
    screenSystemPies: SystemPieScreenerConnection
    /** Returns securities that match the selection criteria. */
    searchSliceables: SliceableConnection
    /** Retrieve securities by their symbols. */
    securities: ((Security | null)[] | null)
    /** Security details is used for pages.m1.com security details pages. */
    securityDetails: (SecurityDetails | null)
    /** Settings. */
    settings: (Settings | null)
    /** Sets of sliceables for showcase display. Value is null when the showcase is disabled. */
    sliceableShowcase: (SliceableShowcase | null)
    /** Spend Checking. */
    spend: (Spend | null)
    /** Support. */
    support: (Support | null)
    /** Retrieve system pie by their key. */
    systemPiesByKey: ((SystemPie | null)[] | null)
    /** Transfers. */
    transfers: (Transfers | null)
    /** The current user. Value is null when unauthenticated. */
    user: (User | null)
    /** Retrieve all available user pies. */
    userPies: (UserPieConnection | null)
    /** Announcements. */
    announcements: (Announcements | null)
    __typename: 'Viewer'
}

export interface Query {
    /** Information for a specific client type and version. Value is null if the client is not recognized. */
    client: (ClientInfo | null)
    viewer: Viewer
    /** Fetches an object given its ID */
    node: (Node | null)
    /** Fetches multiple objects given their IDs */
    nodes: ((Node | null)[] | null)
    system: SystemInfo
    __typename: 'Query'
}


/** Payload for the `registerUser` mutation. */
export interface RegisterUserPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (RegisterUserOutcome | null)
    error: (RegisterUserErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: RegisterUserResult
    /** @deprecated Use `outcome` instead. */
    username: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    accessToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    refreshToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    expiresIn: (Scalars['Int'] | null)
    /** @deprecated Use `outcome` instead. */
    viewer: (Viewer | null)
    __typename: 'RegisterUserPayload'
}


/** Outcome for the `registerUser` mutation. */
export interface RegisterUserOutcome {
    /** The username of this user. */
    username: (Scalars['String'] | null)
    /** The access token. */
    accessToken: (Scalars['String'] | null)
    /** The refresh token. */
    refreshToken: (Scalars['String'] | null)
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    /** Outcome screen content after a user registers with a promoCode. */
    promotionSignUpOutcomePage: (AppInfoPage | null)
    /** The event to track for analytics. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'RegisterUserOutcome'
}


/** Errors for the `registerUser` mutation. */
export type RegisterUserErrorEnum = 'INVALID_USERNAME' | 'INVALID_PASSWORD' | 'USERNAME_ALREADY_EXISTS'

export interface RegisterUserResult {
    didSucceed: Scalars['Boolean']
    inputError: (RegisterUserInputErrorEnum | null)
    __typename: 'RegisterUserResult'
}

export type RegisterUserInputErrorEnum = 'INVALID_USERNAME' | 'INVALID_PASSWORD' | 'USERNAME_ALREADY_EXISTS'


/** Payload for the `queueLoanDisbursement` mutation. */
export interface QueueLoanDisbursementPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (QueueLoanDisbursementOutcome | null)
    error: (QueueLoanDisbursementErrorEnum | null)
    __typename: 'QueueLoanDisbursementPayload'
}


/** Errors for the `queueLoanDisbursement` mutation. */
export type QueueLoanDisbursementErrorEnum = 'GENERIC_QUEUE_LOAN_DISBURSEMENT_ERROR'


/** Outcome for the `queueLoanDisbursement` mutation. */
export interface QueueLoanDisbursementOutcome {
    /** Analytics event for the successful distribution of personal loan funds. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'QueueLoanDisbursementOutcome'
}


/** An account registration type availabe for online opening. */
export type OnlineAccountRegistrationEnum = 'INDIVIDUAL' | 'CRYPTO' | 'JOINT' | 'TRADITIONAL_IRA' | 'ROTH_IRA' | 'SEP_IRA' | 'CUSTODIAL'


/** A source of introduction for a user. Deprecated - no longer asking for introduction source */
export type IntroductionSourceEnum = 'APP_STORE' | 'DIRECT_SNAIL_MAIL' | 'FRIEND_OR_FAMILY' | 'MUSIC_VIDEO' | 'NEWSLETTER' | 'SEARCH_ENGINE' | 'SOCIAL_MEDIA' | 'TV_STREAMING' | 'WEBSITE' | 'OTHER' | 'DECLINED_TO_ANSWER'


/** A source of introduction for a user. Deprecated - use `IntroductionSourceEnum` instead. */
export type IntroductionSourceEnumV2 = 'APP_STORE' | 'DIRECT_SNAIL_MAIL' | 'FRIEND_OR_FAMILY' | 'NEWSLETTER' | 'PODCAST_RADIO' | 'SEARCH_ENGINE' | 'SOCIAL_MEDIA' | 'TV_STREAMING' | 'WEBSITE' | 'OTHER' | 'DECLINED_TO_ANSWER'


/** Payload for the `openAccount` mutation. */
export interface OpenAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (OpenAccountOutcome | null)
    error: (OpenAccountErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: OpenAccountResult
    /** @deprecated Use `outcome` instead. */
    viewer: (Viewer | null)
    /** @deprecated Use `outcome` instead. */
    accountEdge: (AccountEdge | null)
    /** @deprecated Use `outcome` instead. */
    account: (Account | null)
    __typename: 'OpenAccountPayload'
}


/** Outcome for the `openAccount` mutation. */
export interface OpenAccountOutcome {
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    /** Retrieve the newly-created account. */
    account: (Account | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OpenAccountOutcome'
}


/** Errors for the `openAccount` mutation. */
export type OpenAccountErrorEnum = 'DUPLICATE_SEP_IRA_ACCOUNT' | 'DUPLICATE_ROTH_IRA_ACCOUNT' | 'DUPLICATE_TRADITIONAL_IRA_ACCOUNT' | 'DUPLICATE_IRA_ACCOUNT' | 'DUPLICATE_INDIVIDUAL_ACCOUNT' | 'DUPLICATE_JOINT_ACCOUNT' | 'SSNS_MUST_NOT_MATCH' | 'PRIMARY_HOLDER_NAME_TOO_LONG' | 'SECONDARY_HOLDER_NAME_TOO_LONG' | 'INVALID_PRIMARY_HOLDER_DOB' | 'INVALID_SECONDARY_HOLDER_DOB' | 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW' | 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED' | 'EXCEEDS_NEW_ACCOUNT_RATE_LIMIT' | 'EXCEEDS_MAX_ACCOUNTS' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'INVALID_HOME_ADDRESS' | 'PHONE_MUST_MATCH_VERIFICATION' | 'MISSING_TRUSTED_CONTACT_INFO' | 'GENERAL_REJECTION' | 'INVALID_COUNTRY_CODE' | 'FAILED_TO_UPDATE_FPL_STATUS'

export interface OpenAccountResult {
    didSucceed: Scalars['Boolean']
    inputError: (OpenAccountInputErrorEnum | null)
    __typename: 'OpenAccountResult'
}

export type OpenAccountInputErrorEnum = 'PRIMARY_SSN_REQUIRED' | 'SECONDARY_SSN_REQUIRED' | 'BENEFICIARY_SSNS_REQUIRED' | 'SSNS_MUST_NOT_MATCH' | 'DUPLICATE_IRA_ACCOUNT' | 'DUPLICATE_INDIVIDUAL_ACCOUNT' | 'DUPLICATE_JOINT_ACCOUNT' | 'PRIMARY_HOLDER_REQUIRED' | 'SECONDARY_HOLDER_REQUIRED' | 'SUITABILITY_PROFILE_REQUIRED' | 'PRIMARY_HOLDER_NAME_TOO_LONG' | 'SECONDARY_HOLDER_NAME_TOO_LONG' | 'INVALID_COUNTRY_CODE' | 'INVALID_PRIMARY_HOLDER_DOB' | 'INVALID_SECONDARY_HOLDER_DOB' | 'INVALID_PRIMARY_SSN' | 'INVALID_SECONDARY_SSN' | 'INVALID_BENEFICIARY_SSNS' | 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW' | 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED' | 'EXCEEDS_NEW_ACCOUNT_RATE_LIMIT' | 'EXCEEDS_MAX_ACCOUNTS' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'INVALID_HOME_ADDRESS' | 'INVALID_PIE_ID' | 'PIE_NOT_FOUND' | 'INELIGIBLE_FOR_ROOT_PIE' | 'ESIGNATURE_REQUIRED' | 'INVALID_SIGNATURE' | 'PHONE_VERIFICATION_REQUIRED' | 'PHONE_MUST_MATCH_VERIFICATION' | 'PHONE_ALREADY_USED' | 'GENERAL_REJECTION'


/** Payload for the `openCustodialAccount` mutation. */
export interface OpenCustodialAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (OpenCustodialAccountOutcome | null)
    error: (OpenCustodialAccountErrorEnum | null)
    __typename: 'OpenCustodialAccountPayload'
}


/** Outcome for the `openCustodialAccount` mutation. */
export interface OpenCustodialAccountOutcome {
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    /** Retrieve the newly-created account. */
    account: (Account | null)
    __typename: 'OpenCustodialAccountOutcome'
}


/** Errors for the `openCustodialAccount` mutation. */
export type OpenCustodialAccountErrorEnum = 'USER_DOES_NOT_HAVE_INDIVIDUAL_ACCOUNT' | 'CUSTODIAL_BENEFICIARY_ALREADY_ASSOCIATED_TO_CUSTODIAL_ACCOUNT' | 'COULD_NOT_FETCH_PRIMARY_PROFILE' | 'CUSTODIAL_BENEFICIARY_NAME_TOO_LONG' | 'INVALID_CUSTODIAL_BENEFICIARY_DOB' | 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW' | 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'INVALID_LEGAL_RESIDENCE' | 'GENERAL_REJECTION'


/** Payload for the `updateProfile` mutation. */
export interface UpdateProfilePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (UpdateProfileOutcome | null)
    error: (UpdateProfileErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: UpdateProfileResult
    /** @deprecated Use `outcome` instead. */
    viewer: (Viewer | null)
    /** @deprecated Use `outcome` instead. */
    profile: (Profile | null)
    __typename: 'UpdateProfilePayload'
}


/** Outcome for the `updateProfile` mutation. */
export interface UpdateProfileOutcome {
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    /** Retrieve the updated profile. */
    profile: (Profile | null)
    __typename: 'UpdateProfileOutcome'
}


/** Errors for the `updateProfile` mutation. */
export type UpdateProfileErrorEnum = 'NO_UPDATE_UNTIL_ACCEPTED' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'INVALID_HOME_ADDRESS' | 'BENEFICIARY_SSNS_MUST_BE_UNIQUE' | 'INVALID_PRIMARY_BENEFICIARY_SHARE' | 'INVALID_CONTINGENT_BENEFICIARY_SHARE' | 'TEMPORARY_NEW_ACCOUNT_FREEZE' | 'MISSING_TRUSTED_CONTACT_INFO'

export interface UpdateProfileResult {
    didSucceed: Scalars['Boolean']
    inputError: (UpdateProfileInputErrorEnum | null)
    __typename: 'UpdateProfileResult'
}

export type UpdateProfileInputErrorEnum = 'NO_PROFILE' | 'MUST_PROVIDE_SECONDARY_ACCOUNT_HOLDER' | 'NO_UPDATE_UNTIL_ACCEPTED' | 'PRIMARY_HOLDER_NAME_TOO_LONG' | 'SECONDARY_HOLDER_NAME_TOO_LONG' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'INVALID_HOME_ADDRESS' | 'BENEFICIARIES_NOT_ALLOWED' | 'BENEFICIARY_SSNS_MUST_BE_UNIQUE' | 'INVALID_PRIMARY_BENEFICIARY_SHARE' | 'INVALID_CONTINGENT_BENEFICIARY_SHARE' | 'TEMPORARY_NEW_ACCOUNT_FREEZE' | 'GENERAL_REJECTION'

export interface CompleteDocumentUploadRequestPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (CompleteDocumentUploadErrorEnum | null)
    __typename: 'CompleteDocumentUploadRequestPayload'
}

export interface CompleteDocumentUploadPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (CompleteDocumentUploadErrorEnum | null)
    __typename: 'CompleteDocumentUploadPayload'
}

export type CompleteDocumentUploadErrorEnum = 'ERROR_VERIFYING_DOCUMENT_UPLOAD_STATUS'


/** Payload for the `linkExternalAccounts` mutation. */
export interface LinkExternalAccountsPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (LinkExternalAccountsOutcome | null)
    error: (LinkExternalAccountsErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: LinkExternalAccountsResult
    /** @deprecated Use `outcome` instead. */
    account: (Account | null)
    /** @deprecated Use `outcome` instead. */
    externalAccountEdges: (ExternalAccountEdge[] | null)
    __typename: 'LinkExternalAccountsPayload'
}


/** Outcome for the `linkExternalAccounts` mutation. */
export interface LinkExternalAccountsOutcome {
    /** The external accounts that were linked with the supplied token. */
    linkedExternalAccounts: ((ExternalAccount | null)[] | null)
    __typename: 'LinkExternalAccountsOutcome'
}


/** Errors for the `linkExternalAccounts` mutation. */
export type LinkExternalAccountsErrorEnum = 'LINK_FORBIDDEN'

export interface LinkExternalAccountsResult {
    didSucceed: Scalars['Boolean']
    inputError: (LinkExternalAccountsInputErrorEnum | null)
    __typename: 'LinkExternalAccountsResult'
}

export type LinkExternalAccountsInputErrorEnum = 'LINK_FORBIDDEN'


/** Payload for the `refreshEstimatedTrading` mutation. */
export interface RefreshEstimatedTradingPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (RefreshEstimatedTradingOutcome | null)
    error: (RefreshEstimatedTradingErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: RefreshEstimatedTradingResult
    /** @deprecated Use `outcome` instead. */
    estimatedTrading: (EstimatedTrading | null)
    __typename: 'RefreshEstimatedTradingPayload'
}


/** Outcome for the `refreshEstimatedTrading` mutation. */
export interface RefreshEstimatedTradingOutcome {
    /** The updated estimated trading information. */
    estimatedTrading: (EstimatedTrading | null)
    __typename: 'RefreshEstimatedTradingOutcome'
}


/** Errors for the `refreshEstimatedTrading` mutation. */
export type RefreshEstimatedTradingErrorEnum = 'ESTIMATED_TRADING_NOT_AVAILABLE'

export interface RefreshEstimatedTradingResult {
    didSucceed: Scalars['Boolean']
    __typename: 'RefreshEstimatedTradingResult'
}


/** Payload for the `setSmartTransferRule` mutation. */
export interface SetSmartTransferRulePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetSmartTransferRuleOutcome | null)
    error: (SetSmartTransferRuleErrorEnum | null)
    __typename: 'SetSmartTransferRulePayload'
}


/** Outcome for the `setSmartTransferRule` mutation. */
export interface SetSmartTransferRuleOutcome {
    /** The newly-created or now-updated smart transfer rule. */
    rule: (SmartTransferRule | null)
    __typename: 'SetSmartTransferRuleOutcome'
}


/** Errors for the `setSmartTransferRule` mutation. */
export type SetSmartTransferRuleErrorEnum = 'NOT_ELIGIBLE' | 'PARTICIPANTS_INVALID' | 'CONFLICTS_WITH_EXISTING_RULE' | 'BALANCE_TRIGGER_THRESHOLD_INVALID'


/** Payload for the `setEnabledOnTransferRule` mutation. */
export interface SetEnabledOnTransferRulePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetEnabledOnTransferRuleOutcome | null)
    error: (SetEnabledOnTransferRuleErrorEnum | null)
    __typename: 'SetEnabledOnTransferRulePayload'
}


/** Outcome for the `setEnabledOnTransferRule` mutation. */
export interface SetEnabledOnTransferRuleOutcome {
    /** The updated transfer rule. */
    rule: (TransferRule | null)
    __typename: 'SetEnabledOnTransferRuleOutcome'
}


/** Errors for the `setEnabledOnTransferRule` mutation. */
export type SetEnabledOnTransferRuleErrorEnum = 'ENABLE_STATE_CHANGE_DISALLOWED'


/** Payload for the `createAccountDocumentLink` mutation. */
export interface CreateAccountDocumentLinkPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateAccountDocumentLinkOutcome | null)
    error: (CreateAccountDocumentLinkErrorEnum | null)
    __typename: 'CreateAccountDocumentLinkPayload'
}


/** Outcome for the `createAccountDocumentLink` mutation. */
export interface CreateAccountDocumentLinkOutcome {
    /** The temporary URL to the document. It will expire after time. */
    url: Scalars['String']
    __typename: 'CreateAccountDocumentLinkOutcome'
}


/** Errors for the `createAccountDocumentLink` mutation. */
export type CreateAccountDocumentLinkErrorEnum = 'DOCUMENT_NOT_AVAILBLE'


/** Payload for the `generatePlaidLinkItemAddClientToken` mutation. */
export interface GeneratePlaidLinkItemAddClientTokenPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (GeneratePlaidLinkItemAddClientTokenOutcome | null)
    __typename: 'GeneratePlaidLinkItemAddClientTokenPayload'
}


/** Outcome for the `generatePaymentClientToken` mutation. */
export interface GeneratePlaidLinkItemAddClientTokenOutcome {
    /** Token used to connect to establish an ACH relationship via Plaid. */
    plaidLinkItemAddToken: Scalars['String']
    __typename: 'GeneratePlaidLinkItemAddClientTokenOutcome'
}


/** Payload for the `generatePaymentClientToken` mutation. */
export interface GeneratePaymentClientTokenPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (GeneratePaymentClientTokenOutcome | null)
    __typename: 'GeneratePaymentClientTokenPayload'
}


/** Outcome for the `generatePaymentClientToken` mutation. */
export interface GeneratePaymentClientTokenOutcome {
    /** Token used to initialize the payment client. Expires after 24 hours. */
    clientToken: Scalars['String']
    __typename: 'GeneratePaymentClientTokenOutcome'
}

export type DocumentAssociatedService = 'CREDIT_CARD' | 'INVEST' | 'SPEND' | 'PERSONAL_LOAN' | 'LENDING' | 'CRYPTO' | 'SAVE' | 'CASH' | 'TRANSFER' | 'PROMOTION' | 'IDENTITY' | 'OTHER'

export type DocumentBusinessPurpose = 'ACCOUNT_VERIFICATION' | 'APPEALING_SOCURE_BLOCKLIST' | 'BENEFICIARY' | 'BROKERAGE_MANUAL_REVIEW' | 'CLIENT_LETTER' | 'CREDIT_CARD_MANUAL_REVIEW' | 'DECEASED_ACCOUNT_CLOSURE' | 'INFORMATION_CHANGE' | 'LETTER_OF_INDEMNIFICATION' | 'MANUAL_BANK_CHANGE' | 'PAPER_ACCOUNT' | 'SPEND_MANUAL_REVIEW' | 'TRANSFER_REVIEW' | 'WIRE_TRANSFER_FORM' | 'TRANSFER_REQUEST_FORM' | 'CEASE_DESIST' | 'LOAN_AGREEMENT' | 'RISK_BASED_PRICING_DISCLOSURE' | 'ONBOARDING_IDENTITY_VERIFICATION' | 'CLEARING_DOCUMENTS' | 'SAVE_DOCUMENTS' | 'CASH_DOCUMENTS' | 'SPEND_DOCUMENTS' | 'PROMOTION_DOCUMENTS' | 'CREDIT_SCORE_DISCLOSURE' | 'PROSPECTUS_DELIVERY' | 'OTHER' | 'UNKNOWN' | 'CRYPTO_TAX_DOCUMENTS' | 'INVEST_TAX_DOCUMENTS' | 'CITIZENSHIP_VERIFICATION' | 'MANUAL_REVIEW_RE_REQUEST' | 'PERSONAL_LOAN_MANUAL_REVIEW' | 'DIVORCE_DISTRIBUTION' | 'TRANSFER_REQUEST'

export type DocumentUploadRequestStatus = 'Uninitialized' | 'Requested' | 'Complete' | 'Closed'


/** Payload for the `generatePresignedUrl` mutation. */
export interface GeneratePresignedUrlPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (GeneratePresignedUrlError | null)
    outcome: (GeneratePresignedUrlOutcome | null)
    __typename: 'GeneratePresignedUrlPayload'
}


/** Payload for the `generateGenericPresignedDocumentUrl` mutation. */
export interface GenerateGenericPresignedDocumentUrlPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (GeneratePresignedUrlError | null)
    outcome: (GenerateGenericPresignedDocumentUrlOutcome | null)
    __typename: 'GenerateGenericPresignedDocumentUrlPayload'
}


/** Outcome for the `generatePresignedUrl` mutation. */
export interface GeneratePresignedUrlOutcome {
    /** Presigned S3 url for upload. Will expire shortly after it's created. */
    presignedUrl: (Scalars['String'] | null)
    __typename: 'GeneratePresignedUrlOutcome'
}


/** Outcome for the `generateGenericPresignedDocumentUrl` mutation. */
export interface GenerateGenericPresignedDocumentUrlOutcome {
    /** The timeout in seconds of the idempotency constraints for limiting file uploads. */
    idempotencyTimeout: (Scalars['Int'] | null)
    /** Presigned S3 url for upload. Will expire shortly after it's created. */
    presignedUrl: (Scalars['String'] | null)
    __typename: 'GenerateGenericPresignedDocumentUrlOutcome'
}


/** Errors for the GeneratePresignedUrl mutation. */
export type GeneratePresignedUrlError = 'ERROR_GENERATING_PRESIGNED_URL'


/** Payload for the `setNotificationPreferences` mutation. */
export interface SetNotificationPreferencesPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetNotificationPreferencesOutcome | null)
    error: (SetNotificationPreferencesErrorEnum | null)
    __typename: 'SetNotificationPreferencesPayload'
}


/** Outcome for the `setNotificationPreferences` mutation. */
export interface SetNotificationPreferencesOutcome {
    /** The updated preferences. */
    preferences: (NotificationPreferences | null)
    __typename: 'SetNotificationPreferencesOutcome'
}


/** Errors for the `setNotificationPreferences` mutation. */
export type SetNotificationPreferencesErrorEnum = 'PREFERENCES_NOT_AVAILABLE'


/** Payload for the `applyPromotionCode` mutation. */
export interface ApplyPromotionCodePayload {
    clientMutationId: (Scalars['String'] | null)
    result: ApplyPromotionCodeResult
    user: (User | null)
    __typename: 'ApplyPromotionCodePayload'
}

export interface ApplyPromotionCodeResult {
    didSucceed: Scalars['Boolean']
    inputError: (ApplyPromotionCodeInputErrorEnum | null)
    __typename: 'ApplyPromotionCodeResult'
}

export type ApplyPromotionCodeInputErrorEnum = 'UNKNOWN_PROMO_CODE' | 'PROMO_ALREADY_APPLIED' | 'PROMO_INELIGIBLE'


/** Outcome for the `markUnmanagedHoldingsForLiquidation` mutation. */
export interface MarkUnmanagedHoldingsForLiquidationPayload {
    clientMutationId: (Scalars['String'] | null)
    /** A flag representing whether or not the mutation was succesful. */
    didSucceed: Scalars['Boolean']
    /** Retrieve the newly updated Account. */
    account: (Account | null)
    /** Copy to be rendered that describes an error detected during the mutation. This can be due to either a complete or partial error. */
    errorMessage: (Scalars['String'] | null)
    /** Copy to be rendered if the mutation succeeds. */
    successMessage: (Scalars['String'] | null)
    __typename: 'MarkUnmanagedHoldingsForLiquidationPayload'
}


/** Outcome for the `unmarkUnmanagedHoldingsForLiquidation` mutation. */
export interface UnmarkUnmanagedHoldingsForLiquidationPayload {
    clientMutationId: (Scalars['String'] | null)
    /** A flag representing whether or not the mutation was succesful. */
    didSucceed: Scalars['Boolean']
    /** Retrieve the newly updated Account. */
    account: (Account | null)
    /** Copy to be rendered that describes an error detected during the mutation. This can be due to either a complete or partial error. */
    errorMessage: (Scalars['String'] | null)
    /** Copy to be rendered if the mutation succeeds. */
    successMessage: (Scalars['String'] | null)
    error: (UnmarkUnmanagedHoldingsForLiquidationErrorEnum | null)
    __typename: 'UnmarkUnmanagedHoldingsForLiquidationPayload'
}

export type UnmarkUnmanagedHoldingsForLiquidationErrorEnum = 'GENERAL_ERROR'


/** Outcome for the `moveSlices` mutation. */
export interface MoveSlicesPayload {
    clientMutationId: (Scalars['String'] | null)
    /** Boolean that represents success state of the mutation. Considers both complete and partial errors. */
    didSucceed: Scalars['Boolean']
    /** Retrieve the newly updated Account. */
    account: (Account | null)
    /** Copy to rendered if the mutation was successful, null otherwise. If non-null, neither a complete nor partial error was detected. */
    successMessage: (Scalars['String'] | null)
    /** Copy to be rendered if the mutation was unsuccessful, null otherwise. If non-null, either a complete or partial error was detected. */
    errorMessage: (Scalars['String'] | null)
    /** A descriptive error code that is intentionally defined as a String instead of an Enum to support future flexibility. For client messaging, rely on 'errorMessage'. */
    errorCode: (Scalars['String'] | null)
    __typename: 'MoveSlicesPayload'
}

export interface MoveSlicesBatchPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (MoveSlicesBatchOutcome | null)
    error: (Scalars['String'] | null)
    __typename: 'MoveSlicesBatchPayload'
}

export interface MoveSlicesBatchOutcome {
    clientMutationId: (Scalars['String'] | null)
    /** The updated or created pie node at the root of the tree. */
    pie: (UserPie | null)
    /** Metadata about the result of executing the mutation. */
    result: UpdatePieTreeResult
    __typename: 'MoveSlicesBatchOutcome'
}


/** Outcome for the `submitInvestAcatTransfer` mutation. */
export interface SubmitInvestAcatTransferPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    /** Copy to be rendered that describes an error detected during the mutation. This can be due to either a complete or partial error. */
    errorMessage: (Scalars['String'] | null)
    /** The toast to be displayed as part of the mutation - if this is null, do not show a toast */
    toast: (AppToast | null)
    outcome: (SubmitInvestAcatTransferOutcome | null)
    __typename: 'SubmitInvestAcatTransferPayload'
}

export interface SubmitInvestAcatTransferOutcome {
    /** An analytics event to be fired upon the completion of the `submitInvestAcatTransfer` mutation. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SubmitInvestAcatTransferOutcome'
}


/** Payload for the `autoPayApplicationSetUp` mutation. */
export interface AutoPayApplicationSetUpPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (AutoPayApplicationSetUpOutcome | null)
    error: (AutoPayApplicationSetUpErrorEnum | null)
    __typename: 'AutoPayApplicationSetUpPayload'
}


/** Outcome for the `autoPayApplicationSetup` mutation. */
export interface AutoPayApplicationSetUpOutcome {
    /** An analytics event to be fired upon the completion of the `autoPayApplicationSetup` mutation. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'AutoPayApplicationSetUpOutcome'
}


/** Errors for the `autoPayApplicationSetup` mutation. */
export type AutoPayApplicationSetUpErrorEnum = 'GENERAL_SETUP_AUTOPAY_ERROR'


/** Outcome for the `moveUnmanagedHoldings` mutation. */
export interface MoveUnmanagedHoldingsPayload {
    clientMutationId: (Scalars['String'] | null)
    /** A flag representing whether or not the mutation was succesful. */
    didSucceed: Scalars['Boolean']
    /** Retrieve the newly updated Account. */
    account: (Account | null)
    /** Represents copy that should be rendered if an error occured during the mutation. This returns a non-null if the error detected was partial or complete. */
    errorMessage: (Scalars['String'] | null)
    /** Copy to be rendered if the mutation succeeds and no partial errors were detected */
    successMessage: (Scalars['String'] | null)
    __typename: 'MoveUnmanagedHoldingsPayload'
}


/** Payload for the `selectPaymentsAccount` mutation. */
export interface SelectPaymentsAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SelectPaymentsAccountOutcome | null)
    error: (SelectPaymentsAccountErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: SelectPaymentsAccountResult
    /** @deprecated Use `outcome` instead. */
    user: (User | null)
    __typename: 'SelectPaymentsAccountPayload'
}


/** Outcome for the `selectPaymentsAccount` mutation. */
export interface SelectPaymentsAccountOutcome {
    /** The updated user. */
    user: User
    __typename: 'SelectPaymentsAccountOutcome'
}


/** Errors for the `selectPaymentsAccount` mutation. */
export type SelectPaymentsAccountErrorEnum = 'INELIGIBLE_FOR_PAYMENTS_ACCOUNT'

export interface SelectPaymentsAccountResult {
    didSucceed: Scalars['Boolean']
    inputError: (SelectPaymentsAccountInputErrorEnum | null)
    __typename: 'SelectPaymentsAccountResult'
}

export type SelectPaymentsAccountInputErrorEnum = 'INVALID_ACCOUNT_ID' | 'INELIGIBLE_FOR_PAYMENTS_ACCOUNT'

export type ListableAccount = (Account | PersonalLoan | SavingsAccount | BorrowAccount | SpendAccount) & { __isUnion?: true }


/** A type categorization of transfer participants. */
export type AccountCategoryEnum = 'INVEST' | 'SPEND' | 'BORROW' | 'PHYSICAL_CHECK' | 'LOAN' | 'SAVE'


/** A preference for which trade window to use. */
export type PreferredTradeWindowEnum = 'DEFAULT' | 'MORNING' | 'AFTERNOON'

export type PartialTransferCreditStatusEnum = 'PARTIALLY_APPLIED'

export type AccountConfigDividendSettingType = 'KEEP_AS_CASH' | 'REINVEST_ALL_DIVIDENDS' | 'TRANSFER_TO_ACCOUNT' | 'CUSTOM_BY_SYMBOL'


/** Configurations and settings for invest accounts */
export interface AccountConfiguration {
    dividends: (AccountConfigurationDividends | null)
    id: Scalars['ID']
    __typename: 'AccountConfiguration'
}


/** The CTA associated with the account-level dividend configuration settings */
export interface AccountConfigurationDividendsCta {
    label: Scalars['String']
    value: Scalars['String']
    link: (AppLink | null)
    __typename: 'AccountConfigurationDividendsCta'
}

export interface AccountConfigurationDividends {
    cta: (AccountConfigurationDividendsCta | null)
    /** Footer text to display on the AccountConfigurationDividends screen. */
    footerText: (Scalars['String'][] | null)
    /** The heading text associated with account-level dividend configuration settings */
    heading: Scalars['String']
    subheading: (Scalars['String'] | null)
    contextualLink: (AppLink | null)
    selectedSettingType: (AccountConfigDividendSettingType | null)
    settings: (AccountConfigDividendSetting[] | null)
    holdings: (AccountConfigurationDividendsHoldings[] | null)
    __typename: 'AccountConfigurationDividends'
}


/** Holding-level node for dividend investment settings */
export interface AccountConfigurationDividendsHoldings {
    /** The PositionReference of the holding */
    position: PositionSecurityReference
    /** The dividend investment settings for the holding */
    settings: (AccountConfigDividendSetting[] | null)
    __typename: 'AccountConfigurationDividendsHoldings'
}


/** A dividend investment configuration setting */
export interface AccountConfigDividendSetting {
    /** If the setting is associated with transfer participants, they are here */
    accounts: ((AccountConfigDividendTransferAccount | null)[] | null)
    /** An associated link for the setting */
    contextualLink: (AppLink | null)
    /** The description of the account-level setting */
    description: (Scalars['String'] | null)
    /** Whether the setting is available for selection */
    disabled: Scalars['Boolean']
    /** Optional text associated with the setting */
    helperText: (Scalars['String'] | null)
    /** The human readable label for the setting */
    label: Scalars['String']
    /** Whether this setting is selected for the given holding */
    selected: Scalars['Boolean']
    /** The associated value for the setting */
    value: AccountConfigDividendSettingType
    /** A human readable label for the given setting's value */
    valueLabel: Scalars['String']
    __typename: 'AccountConfigDividendSetting'
}

export interface AccountConfigDividendTransferAccount {
    selected: Scalars['Boolean']
    transferParticipant: (TransferParticipant | null)
    __typename: 'AccountConfigDividendTransferAccount'
}

export interface OutstandingTransferCredits {
    /** The id of the account the transfer was made on */
    accountId: Scalars['ID']
    /** The date the partial amount was credited */
    created: (Scalars['String'] | null)
    /** The amount of the total transfer that was credited */
    creditedAmount: Scalars['Float']
    /** The id of the partial transfer credit record */
    id: Scalars['ID']
    /** The date this record was last updated */
    lastModified: (Scalars['String'] | null)
    /** The amount still outstanding/pending that will be credited once the transfer is complete */
    outstandingAmount: Scalars['Float']
    /** The status of the partial credit */
    status: (PartialTransferCreditStatusEnum | null)
    /** The total amount of the transfer */
    totalAmount: Scalars['Float']
    /** The id of the crypto broker ach transfer */
    transferId: Scalars['ID']
    __typename: 'OutstandingTransferCredits'
}

export interface MoveSlices {
    /** Label for the main Move Slices CTA. */
    moveSlicesLabel: (Scalars['String'] | null)
    /** Boolean value that represents the enabled/disabled state for the Move Slices CTA. */
    enableMoveSlices: (Scalars['Boolean'] | null)
    /** Type for rendering information about Pending Orders in relation to Move Slices. */
    pendingOrdersContent: (MoveSlicesPendingOrdersContent | null)
    /** Type for rendering helpful tutorial information in relation to Move Slices. */
    moveSlicesTutorialContent: (MoveSlicesTutorialContent | null)
    /**
     * Type for rendering the Move to Pie view for the Move Slices feature.
     * Accepts a list of Portfolio Slice Ids that a user intends to Move.
     */
    moveToPieContent: (MoveSlicesMoveToPieContent | null)
    /** Type for rendering the Set Destination Slice view for the Move Slices feature. */
    setDestinationSliceContent: (MoveSlicesSetDestinationPieSliceContent | null)
    /** Type for rendering the Set Source Slice view for the Move Slices feature. */
    setSourceSliceContent: (MoveSlicesSetSourceSliceContent | null)
    /** Argument-driven field for driving the confirmation content for all Pie Edits within Move Slices. Accepts the same input as the `moveSlices` mutation. */
    moveSlicesChangesConfirmation: (MoveSlicesChangesConfirmation | null)
    /**
     * A tooltip to explain why Move is disabled if a Trade Window is underway.
     * This field is always exposed thus it is the responsibility of clients to render it appropriately.
     */
    moveDisabledTradingWindowTooltip: (MoveDisabledTradingWindowTooltip | null)
    /**
     * A tooltip to explain why Move is disabled if the User has selected a Destination Pie and has returned to the editor.
     * This field is always exposed thus it is the responsibility of clients to render it appropriately.
     */
    moveDisabledDestinationPieSet: (MoveDisabledDestinationPieSetTooltip | null)
    __typename: 'MoveSlices'
}

export interface MoveDisabledTradingWindowTooltip {
    /** A list of strings to be used as the tooltip content. */
    text: ((Scalars['String'] | null)[] | null)
    __typename: 'MoveDisabledTradingWindowTooltip'
}

export interface MoveDisabledDestinationPieSetTooltip {
    /** A list of strings to be used as the tooltip content. */
    text: ((Scalars['String'] | null)[] | null)
    __typename: 'MoveDisabledDestinationPieSetTooltip'
}

export interface MoveSlicesPendingOrdersContent {
    /** Header value for content. */
    header: (Scalars['String'] | null)
    /** List of strings to be rendered as the main body of the content. */
    items: ((Scalars['String'] | null)[] | null)
    /** Label for the exit CTA. */
    exitLabel: (Scalars['String'] | null)
    __typename: 'MoveSlicesPendingOrdersContent'
}

export interface MoveSlicesTutorialContent {
    /** Header value for content. */
    header: (Scalars['String'] | null)
    /** List of tutorial content items to be rendered for Move Slices. */
    items: ((MoveSlicesTutorialContentItem | null)[] | null)
    /** Link to support article for learning more about Move Slices. */
    learnMore: (AppLink | null)
    /** Copy to be rendered for the CTA to close the content. */
    exitLabel: (Scalars['String'] | null)
    __typename: 'MoveSlicesTutorialContent'
}

export interface MoveSlicesTutorialContentItem {
    /** Icon to be rendered with copy. */
    icon: (AppImage | null)
    /** Copy to be rendered. */
    copy: (Scalars['String'] | null)
    __typename: 'MoveSlicesTutorialContentItem'
}

export interface MoveSlicesMoveToPieContent {
    /** Main label for Move to Pie content. */
    primaryLabel: (Scalars['String'] | null)
    /** Secondary label for Move to Pie content. */
    secondaryLabel: (Scalars['String'] | null)
    /** Tooltip to be rendered for Move to Pie content. */
    tooltip: (MoveToPieContentTooltip | null)
    /** Label used to prompt the user to open the Move Slices tutorial. */
    tutorialLabel: (Scalars['String'] | null)
    /** A list containing a custom type of augmented Portfolio Slices a set of slices can be moved to. */
    validAugmentedPortfolioSliceDestinations: ((MoveSlicesAugmentedPortfolioSliceDestinations | null)[] | null)
    __typename: 'MoveSlicesMoveToPieContent'
}

export interface MoveSlicesAugmentedPortfolioSliceDestinations {
    /** Used to determine the validity and error state of the given Portfolio Slice. */
    validity: (MoveSlicesPortfolioSliceDestinationsValidity | null)
    /** The given Portfolio Slice. */
    portfolioSlice: (PortfolioSlice | null)
    __typename: 'MoveSlicesAugmentedPortfolioSliceDestinations'
}

export interface MoveSlicesPortfolioSliceDestinationsValidity {
    /** A flag used to determine the eligibility of a given Portfolio Slice as a destination for Move Slices. */
    isValid: (Scalars['Boolean'] | null)
    /** An optional message for more information around validity of the given Portfolio Slice. */
    message: (Scalars['String'] | null)
    /** An optional link to render relevant to the validity of the given Portfolio Slice. */
    link: (AppLink | null)
    /** An optional icon to render relevant to the validity of the given Portfolio Slice. */
    icon: (AppImage | null)
    __typename: 'MoveSlicesPortfolioSliceDestinationsValidity'
}

export interface MoveToPieContentTooltip {
    /** A list of strings to be used as the tooltip content. */
    text: ((Scalars['String'] | null)[] | null)
    __typename: 'MoveToPieContentTooltip'
}

export interface MoveSlicesSetDestinationPieSliceContent {
    /**
     * @deprecated Control client-side instead
     * Main content title.
     */
    title: (Scalars['String'] | null)
    /** Header to be rendered for the content. */
    header: (Scalars['String'] | null)
    /** Subheader to be rendered for the content. */
    subheader: (Scalars['String'] | null)
    /** Tooltip to establish context for setting the destination Slice. */
    tooltip: (MoveSlicesSetDestinationPieSliceContentTooltip | null)
    /** Label for the continue CTA. */
    continueLabel: (Scalars['String'] | null)
    /** Label for the cancel CTA. */
    cancelLabel: (Scalars['String'] | null)
    __typename: 'MoveSlicesSetDestinationPieSliceContent'
}

export interface MoveSlicesSetDestinationPieSliceContentTooltip {
    /** A list of strings to be rendered as the tooltip content. */
    text: ((Scalars['String'] | null)[] | null)
    __typename: 'MoveSlicesSetDestinationPieSliceContentTooltip'
}

export interface MoveSlicesSetSourceSliceContent {
    /**
     * @deprecated Control client-side instead
     * Main content title.
     */
    title: (Scalars['String'] | null)
    /** Copy to be rendered in the Editor to help establish context for being back at the Source within the Move Slices flow. */
    copy: (Scalars['String'] | null)
    /** Tooltip to establish context for updating the source Slice. */
    tooltip: (MoveSlicesSetSourceSliceTooltip | null)
    /** Label for the continue CTA. */
    continueLabel: (Scalars['String'] | null)
    /** Label for the cancel CTA. */
    cancelLabel: (Scalars['String'] | null)
    __typename: 'MoveSlicesSetSourceSliceContent'
}

export interface MoveSlicesSetSourceSliceTooltip {
    /** A list of strings be rendered as the source slices tooltip. */
    text: ((Scalars['String'] | null)[] | null)
    __typename: 'MoveSlicesSetSourceSliceTooltip'
}


/** This is the main type to drive the Move Slices confirmation screen. */
export interface MoveSlicesChangesConfirmation {
    /** Title for the content. */
    title: (Scalars['String'] | null)
    /** Label for exiting the screen. */
    cancelLabel: (Scalars['String'] | null)
    /** Label for confirming changes. */
    confirmLabel: (Scalars['String'] | null)
    /** A set of details pertaining to the Portfolio Pie. */
    sourcePieDetails: (MoveSlicesSourcePieDetails | null)
    /**
     * @deprecated No longer desired to render this section. Remove it altogether from your app.
     * A type for rendering changes as a result of each 'Moved' Slice(s).
     */
    moveSlicesChangesSection: (MoveSlicesChangesConfirmationSection | null)
    /** A type for rendering changes made to the Source Pie. */
    sourcePieChangesSection: (MoveSlicesChangesConfirmationSourcePieChangesSection | null)
    /** A list type for rendering changes made to a Destination Pie. */
    destinationPieChangesSection: (MoveSlicesChangesConfirmationDestinationPiesChangesSection | null)
    /** Section that contains information regarding the next trading window. */
    nextAvailableTradeWindowSection: (MoveSlicesChangesConfirmationNextAvailableTradeWindowSection | null)
    /** Card that contains dynamic copy about trading in relation to the edits being confirmed. */
    infoCard: (AppInformationalMessageCard | null)
    __typename: 'MoveSlicesChangesConfirmation'
}

export interface MoveSlicesSourcePieDetails {
    /** Name of the Source Pie. */
    name: (Scalars['String'] | null)
    /** Logo associated with the Source Pie. */
    logoUrl: (Scalars['String'] | null)
    __typename: 'MoveSlicesSourcePieDetails'
}

export interface MoveSlicesChangesConfirmationSection {
    /** Label for the section. */
    label: (Scalars['String'] | null)
    /** Name of the Source Pie from which value is being moved from. */
    sourcePieName: (Scalars['String'] | null)
    /** Name of the Destination Pie from which value is being moved to. */
    destinationPieName: (Scalars['String'] | null)
    /** List of Slice(s) that were moved. */
    slices: ((PieChangesConfirmationMovedSlice | null)[] | null)
    __typename: 'MoveSlicesChangesConfirmationSection'
}

export interface MoveSlicesChangesConfirmationSourcePieChangesSection {
    /** Label for the section. */
    label: (Scalars['String'] | null)
    /** Copy to render if the Pie is Entangled, null otherwise. */
    applicableLocationsMessage: (Scalars['String'] | null)
    /** List of Slice(s) that were added, updated, or removed. */
    adjustedSlices: ((PieChangesConfirmationAdjustedSlice | null)[] | null)
    /** Messages to render in the section. */
    messages: (RichTextContent[] | null)
    __typename: 'MoveSlicesChangesConfirmationSourcePieChangesSection'
}

export interface MoveSlicesChangesConfirmationDestinationPiesChangesSection {
    /** Label for section. */
    label: (Scalars['String'] | null)
    /** Copy to render if the Pie is Entangled, null otherwise. */
    applicableLocationsMessage: (Scalars['String'] | null)
    /** List of Slice(s) that were added or updated. */
    adjustedSlices: ((PieChangesConfirmationAdjustedSlice | null)[] | null)
    /** Messages to render in the section. */
    messages: (RichTextContent[] | null)
    __typename: 'MoveSlicesChangesConfirmationDestinationPiesChangesSection'
}


/** The type of the adjusted slice */
export type MoveSlicesAdjustedSliceTypeEnum = 'SECURITY' | 'CRYPTO' | 'USER_PIE' | 'SYSTEM_PIE'

export interface PieChangesConfirmationAdjustedSlice {
    /** The name of the slice. */
    name: Scalars['String']
    /** The symbol of the slice if applicable. */
    symbol: (Scalars['String'] | null)
    /** The existing percentage of a given slice, zero if the slice is to be added. */
    oldPercentage: (Scalars['Float'] | null)
    /** The soon-to-be new percentage of the slice. */
    percentage: (Scalars['Float'] | null)
    /** The type of the slice, i.e 'SECURITY' | 'USER_PIE' | 'SYSTEM_PIE' | 'CRYPTO' */
    type: (MoveSlicesAdjustedSliceTypeEnum | null)
    /** A pill used to represent if the slice was added or updated */
    actionPill: (AppPill | null)
    /** If available, a URL to a logo image that represents the Slice. */
    logoUrl: (Scalars['String'] | null)
    __typename: 'PieChangesConfirmationAdjustedSlice'
}

export interface MoveSlicesChangesConfirmationNextAvailableTradeWindowSection {
    /** Label to be rendered for the section. */
    label: (Scalars['String'] | null)
    /** The current trading status of the account. */
    trading: (AccountTradingStatus | null)
    /**
     * @deprecated Plus has been sunsetted and this field is returning null
     * Pill to render if user has access to plus, null otherwise.
     */
    pill: (AppPill | null)
    __typename: 'MoveSlicesChangesConfirmationNextAvailableTradeWindowSection'
}

export type DocumentUploadRequestAssociatedService = 'CreditCard' | 'Invest' | 'Spend' | 'Save' | 'Other'

export interface DocumentUploadRequestsCenter {
    /**
     * Entry point for the Document Upload Request feature.
     * Returns a list of document upload requests matching the optional filter parameters.
     * If no matching document requests were found, returns null.
     */
    documentUploadRequests: (DocumentUploadRequestsConnection | null)
    /** The requirements for a document */
    documentRequirements: (DocumentRequirements | null)
    __typename: 'DocumentUploadRequestsCenter'
}

export interface DocumentUploadRequestsConnection {
    pageInfo: PageInfo
    edges: ((DocumentUploadRequestsEdge | null)[] | null)
    total: Scalars['Int']
    __typename: 'DocumentUploadRequestsConnection'
}

export interface DocumentUploadRequestsEdge {
    cursor: Scalars['String']
    node: (DocumentUploadRequest | null)
    __typename: 'DocumentUploadRequestsEdge'
}

export interface DocumentUploadRequest {
    /** The ID of this node. Encodes the document upload request ID. */
    id: Scalars['ID']
    /** A description of the associated service this document upload request in linked with. */
    associatedServiceDescription: (Scalars['String'] | null)
    /** The associated BE service linked to the given document upload request. */
    associatedServiceType: (Scalars['String'] | null)
    /** The associated business purpose the given request was created for. */
    businessPurpose: (Scalars['String'] | null)
    /** An optional correlation ID that may be provided if the given request was created with one. */
    correlationId: (Scalars['String'] | null)
    /** The maximum file size to display to the user */
    maximumFileSizeDescription: Scalars['String']
    /** The maximum file size in bytes */
    maximumFileSizeInBytes: Scalars['Int']
    /** A list of acceptable file types */
    acceptableFileTypes: (Scalars['String'][] | null)
    /** A list of acceptable file mime types */
    acceptableMimeTypes: (Scalars['String'][] | null)
    /** A list of acceptable document types */
    acceptableDocumentTypes: (DocumentUploadRequestOption[] | null)
    /** The header value of this screen. */
    header: (Scalars['String'] | null)
    /** Label for the select document CTA. */
    selectLabel: (Scalars['String'] | null)
    /** Label for the upload document CTA. */
    uploadLabel: (Scalars['String'] | null)
    /** Label for the cancel CTA. */
    cancelLabel: (Scalars['String'] | null)
    /** The BE status of the given Document Upload Request. */
    status: (Scalars['String'] | null)
    __typename: 'DocumentUploadRequest'
}


/** The Entry point for Document Upload Requirements. */
export interface DocumentRequirements {
    /** The maximum file size to display to the user */
    maximumFileSizeDescription: Scalars['String']
    /** The maximum file size in bytes */
    maximumFileSizeInBytes: Scalars['Int']
    /** A list of acceptable file types */
    acceptableFileTypes: Scalars['String'][]
    /** A list of acceptable file mime types */
    acceptableMimeTypes: Scalars['String'][]
    __typename: 'DocumentRequirements'
}


/** The Entry Point for the content and requirements needed for uploading documents to verify identity */
export interface DocumentUpload {
    /** The requirements for a document */
    requirements: (DocumentUploadRequirements | null)
    __typename: 'DocumentUpload'
}


/** The Entry point for Document Upload Requirements. */
export interface DocumentUploadRequirements {
    /** The maximum file size to display to the user */
    maximumFileSizeDescription: Scalars['String']
    /** The maximum file size in bytes */
    maximumFileSizeInBytes: Scalars['Int']
    /** A list of acceptable file types */
    acceptableFileTypes: (Scalars['String'][] | null)
    /** A list of acceptable file mime types */
    acceptableMimeTypes: (Scalars['String'][] | null)
    /** A list of acceptable document types */
    acceptableDocumentTypes: (DocumentUploadOption[] | null)
    __typename: 'DocumentUploadRequirements'
}


/** An option for valid documents to upload. */
export interface DocumentUploadOption {
    /** The description for the option. */
    description: Scalars['String']
    /** The type of document that can be uploaded */
    kind: DocumentUploadKindEnum
    __typename: 'DocumentUploadOption'
}


/** An option for valid documents to upload for Document Upload Request. */
export interface DocumentUploadRequestOption {
    /** A "user readable" description of the given option. */
    description: (Scalars['String'] | null)
    /**
     * The type of document that can be uploaded for the given upload request.
     * This value is intentionally typed as a String instead of an Enum to allow BE the flexibility to add/remove values without any FE changes.
     */
    docType: (Scalars['String'] | null)
    __typename: 'DocumentUploadRequestOption'
}


/** The type of document that can be uploaded */
export type DocumentUploadKindEnum = 'DRIVERS_LICENSE' | 'STATE_ID_CARD' | 'PASSPORT' | 'INTERNAL_STATEMENT' | 'IRS_FORM_1099_INT'


/** The Entry Point for Received Securities. */
export interface ReceivedSecurities {
    /** The Received Securities Card. Returns null if a user has not yet set their Portfolio. */
    receivedSecuritiesCard: (ReceivedSecuritiesCard | null)
    /** Entry point for the Unmanaged Holdings Screen. */
    unmanagedHoldingsScreen: (UnmanagedHoldingsScreen | null)
    /** Entry point for Move Securities. */
    moveSecurities: (MoveSecurities | null)
    /** A set of fields used to drive the confirm targets or create new pie step for the Move Securities flow within Received Securities. */
    moveSecuritiesConfirmTargets: (MoveSecuritiesConfirmTargets | null)
    /** A set of fields used to drive the screen for prompting a user to choose a "home" for their soon-to-be newly created Pie. */
    moveSecuritiesNewPieLocation: (MoveSecuritiesNewPieLocation | null)
    /** A set of fields used to drive the liquidate holdings confirmation screen. Accepts a required set of unmanaged holding IDs. */
    unmanagedHoldingsStagedForLiquidate: (UnmanagedHoldingsStagedForLiquidateConfirmation | null)
    __typename: 'ReceivedSecurities'
}

export interface ReceivedSecuritiesCard {
    /** Icon for Received Securities card. */
    icon: (AppImage | null)
    /** Header value for Received Securities card. */
    header: (Scalars['String'] | null)
    /** Sections to display for the Received Securities card. Includes label/value pairs for unmanaged, managed, and total account sections. */
    sections: ((ReceivedSecuritiesCardSection | null)[] | null)
    /** CTA link for card. */
    link: (AppLink | null)
    __typename: 'ReceivedSecuritiesCard'
}

export interface ReceivedSecuritiesCardSection {
    /** Copy for a Received Securities Card section. */
    label: (Scalars['String'] | null)
    /** Value for a Received Securities Card section. */
    value: (Scalars['String'] | null)
    __typename: 'ReceivedSecuritiesCardSection'
}


/** Main Screen for Move Securities from Holding Pen. */
export interface MoveSecurities {
    /** Title for the Move Securities screen. */
    title: (Scalars['String'] | null)
    /** Main header for the Move Securities screen. */
    header: (Scalars['String'] | null)
    /** Subheader for the Move Securities screen. */
    subheader: (Scalars['String'] | null)
    /** Tooltip for the Move Securities screen. */
    tooltip: (MovedSecuritiesScreenTooltip | null)
    /** A list of Portfolio Slices that a set of holdings can be moved to. */
    validPortfolioSliceDestinations: ((PortfolioSlice | null)[] | null)
    /** Button label value to for the Create Pie CTA */
    createPieCtaLabel: (Scalars['String'] | null)
    __typename: 'MoveSecurities'
}

export interface MovedSecuritiesScreenTooltip {
    /** Main content that lives inside the Tooltip. */
    text: (Scalars['String'] | null)
    __typename: 'MovedSecuritiesScreenTooltip'
}


/** Set of fields for confirming pie targets for moving securities from Unmanaged Holdings. */
export interface MoveSecuritiesConfirmTargets {
    /** Title for the MoveSecuritiesConfirmTargets. */
    title: (Scalars['String'] | null)
    /** Header for the MoveSecuritiesConfirmTargets. */
    header: (Scalars['String'] | null)
    /** When available, a link to be rendered within the header section of MoveSecuritiesConfirmTargets. */
    link: (AppLink | null)
    /** The button copy for the primary CTA. */
    saveTargetsCtaLabel: (Scalars['String'] | null)
    __typename: 'MoveSecuritiesConfirmTargets'
}

export interface MoveSecuritiesNewPieLocation {
    /** Title for MoveSecuritiesNewPieLocation. */
    title: (Scalars['String'] | null)
    /** Header for MoveSecuritiesNewPieLocation. */
    header: (Scalars['String'] | null)
    /** Hint text used to explain to the user how to Move a Pie. */
    moveHint: (Scalars['String'] | null)
    /** A list of Pies a user can select as the parent for the soon-to-be newly created Pie. */
    validPortfolioSliceDestinations: ((PortfolioSlice | null)[] | null)
    __typename: 'MoveSecuritiesNewPieLocation'
}

export interface UnmanagedHoldingsStagedForLiquidateConfirmation {
    /** Main title for the screen. */
    title: (Scalars['String'] | null)
    /** Details on the Account a given set of UH's are being Liquidated from. */
    accountDetails: (UnmanagedHoldingsForLiquidationAccountDetails | null)
    /** The header for the section being rendered. */
    sectionHeader: (Scalars['String'] | null)
    /** A helper message for the section being rendered. */
    sectionMessage: (Scalars['String'] | null)
    /** A list of Unmanaged Holdings that are staged for Liquidation. */
    holdings: ((StagedUnmanagedHoldingForLiquidate | null)[] | null)
    /** The current trading status of the account. */
    trading: (AccountTradingStatus | null)
    /** The header for the trade window section being rendered. */
    tradeWindowHeader: (Scalars['String'] | null)
    /** Copy for the main CTA. */
    primaryButtonLabel: (Scalars['String'] | null)
    /** Copy for the secondary CTA. */
    secondaryButtonLabel: (Scalars['String'] | null)
    __typename: 'UnmanagedHoldingsStagedForLiquidateConfirmation'
}

export interface UnmanagedHoldingsForLiquidationAccountDetails {
    /** Header for the account details. */
    header: (Scalars['String'] | null)
    /** Subheader for the account details. */
    subheader: (Scalars['String'] | null)
    __typename: 'UnmanagedHoldingsForLiquidationAccountDetails'
}

export interface StagedUnmanagedHoldingForLiquidate {
    /** The sublabel of the UH. This will be the symbol if available, fallback to CUSIP. */
    sublabel: (Scalars['String'] | null)
    /** The primary label of the UH which will be its name if available, otherwise null. */
    label: (Scalars['String'] | null)
    /** Label/value pair that renders the amount of shares for the UH. */
    quantitySection: (StagedUnmanagedHoldingForLiquidateSection | null)
    __typename: 'StagedUnmanagedHoldingForLiquidate'
}

export interface StagedUnmanagedHoldingForLiquidateSection {
    /** The label of the given section. */
    label: (Scalars['String'] | null)
    /** The value of the given section. */
    value: (Scalars['String'] | null)
    __typename: 'StagedUnmanagedHoldingForLiquidateSection'
}


/** Main Screen for Unmanaged Holdings. */
export interface UnmanagedHoldingsScreen {
    /** Title for the Unmanaged Holdings screen. */
    title: (Scalars['String'] | null)
    /** Link to support article for learning more about Unmanaged Holdings. */
    learnMore: (AppLink | null)
    /** Link to the contact us form */
    contactUs: (AppLink | null)
    /** Returns true or false depending on whether or not an account contains any Unmanaged Holdings, regardless of type. */
    hasUnmanagedHoldings: (Scalars['Boolean'] | null)
    /** Card for the Unmanaged Holdings. */
    unmanagedHoldingsScreenCard: (UnmanagedHoldingsScreenCard | null)
    /** A list of Unmanaged Holding collections. */
    unmanagedHoldingsCollections: ((UnmanagedHoldingsCollection | null)[] | null)
    /** Disclaimer text on the bottom of the screen. */
    bottomDisclaimer: (Scalars['String'] | null)
    __typename: 'UnmanagedHoldingsScreen'
}

export interface UnmanagedHoldingsScreenUnrealizedGainTooltip {
    /** Main content that lives inside the Tooltip. */
    text: ((Scalars['String'] | null)[] | null)
    /** Link for the tooltip, if any */
    link: (AppLink | null)
    __typename: 'UnmanagedHoldingsScreenUnrealizedGainTooltip'
}


/** An enum set denoting the type of actions a user can form on a given collection of Umanaged Holdings. */
export type UnmanagedHoldingsCollectionTypeEnum = 'UPDATE' | 'MOVE' | 'LIQUIDATE' | 'CONTACT_OPS' | 'DO_NOTHING'


/** A collection of Unmanaged Holdings of a given type. */
export interface UnmanagedHoldingsCollection {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The given type determined by what set of user actions can be performed on this collection. */
    type: (UnmanagedHoldingsCollectionTypeEnum | null)
    /** A paginated set of holdings. */
    holdings: (UnmanagedHoldingsConnection | null)
    /** Header value for the given Unmanaged Holdings Collection. */
    header: (Scalars['String'] | null)
    /** Tooltip value for the given Unmanaged Holdings Collection, if any. */
    tooltip: (UnmanagedHoldingsCollectionTooltip | null)
    __typename: 'UnmanagedHoldingsCollection'
}

export interface UnmanagedHoldingsCollectionTooltip {
    /** The text to be used as the tooltip content. */
    text: (Scalars['String'] | null)
    /** When available, the link to be included as the cta for the tooltip. */
    link: (AppLink | null)
    __typename: 'UnmanagedHoldingsCollectionTooltip'
}

export interface UnmanagedHoldingsConnection {
    pageInfo: PageInfo
    edges: ((UnmanagedHoldingsEdge | null)[] | null)
    total: Scalars['Int']
    __typename: 'UnmanagedHoldingsConnection'
}

export interface UnmanagedHoldingsEdge {
    cursor: Scalars['String']
    node: (UnmanagedHolding | null)
    __typename: 'UnmanagedHoldingsEdge'
}

export interface UnmanagedHoldingsScreenCard {
    /** Section for the Quantity of Unmanaged Holdings. */
    quantitySection: (UnmanagedHoldingsScreenCardSection | null)
    /** Section for the Total Value of Unmanaged Holdings. */
    totalValueSection: (UnmanagedHoldingsScreenCardSection | null)
    /** Section for the Unrealized Gain of Unmanaged Holdings. */
    unrealizedGainSection: (UnmanagedHoldingsCardSectionUnrealizedGain | null)
    __typename: 'UnmanagedHoldingsScreenCard'
}

export interface UnmanagedHoldingsScreenCardSection {
    /** Copy for the section. */
    label: (Scalars['String'] | null)
    /** Value for the section. */
    value: (Scalars['String'] | null)
    __typename: 'UnmanagedHoldingsScreenCardSection'
}

export interface UnmanagedHoldingsCardSectionUnrealizedGain {
    /** Tooltip for the unrealized gain section of the card. */
    tooltip: (UnmanagedHoldingsScreenUnrealizedGainTooltip | null)
    /** Copy for the Unrealized Gain section. */
    label: (Scalars['String'] | null)
    /** Value amount for the Unrealized Gain section. */
    amount: (Scalars['Float'] | null)
    /** Value percent for the Unrealized Gain section. */
    percent: (Scalars['Float'] | null)
    __typename: 'UnmanagedHoldingsCardSectionUnrealizedGain'
}


/** A holding that sits outside of a User's Portfolio. */
export interface UnmanagedHolding {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * The value of this holding. Value is null when price information is
     * unavailable.
     */
    value: (Scalars['String'] | null)
    /**
     * The unrealized gain from this holding. Value is null when cost or value are
     * unavailable.
     */
    unrealizedGain: (UnmanagedHoldingGain | null)
    /** A list of AppPills that represent the type of Unmanaged Holding. */
    unmanagedHoldingPills: ((AppPill | null)[] | null)
    /** Primary label for the unmanaged holding. */
    label: (Scalars['String'] | null)
    /** Secondary label for the unmanaged holding. */
    sublabel: (Scalars['String'] | null)
    /** The amount of shares for the given unmanaged holding. */
    quantity: (Scalars['Float'] | null)
    /** The current trading status of the account. */
    trading: (AccountTradingStatus | null)
    /** Flag that represents whether or not unmanaged holding is pending liquidation. */
    isPendingLiquidation: (Scalars['Boolean'] | null)
    /** Screen for rendering the details of the unmanaged holding if it is pending liquidation. Otherwise, null. */
    liquidationPendingDetailsScreen: (UnmanagedHoldingLiquidationPendingDetailsScreen | null)
    /** The allocation date of the unmanaged holding. */
    allocationDate: (UnmanagedHoldingDateValue | null)
    /** If the unmanaged holding is a security, the associated data for it. */
    security: (Security | null)
    __typename: 'UnmanagedHolding'
}

export interface UnmanagedHoldingDateValue {
    /** Label of the Unmanaged Holding date. */
    label: (Scalars['String'] | null)
    /** Value of the Unmanaged Holding date. */
    value: (Scalars['String'] | null)
    __typename: 'UnmanagedHoldingDateValue'
}

export interface UnmanagedHoldingLiquidationPendingDetailsScreen {
    /** Header for the screen. */
    header: (Scalars['String'] | null)
    /** A list of generic label/value pairs to be rendered together on this screen. */
    details: ((LiquidationPendingDetails | null)[] | null)
    /** Label for the primary CTA on the screen. */
    primaryButtonLabel: (Scalars['String'] | null)
    __typename: 'UnmanagedHoldingLiquidationPendingDetailsScreen'
}

export interface LiquidationPendingDetails {
    /** Label for the detail. */
    label: (Scalars['String'] | null)
    /** Value for the detail. */
    value: (Scalars['String'] | null)
    __typename: 'LiquidationPendingDetails'
}

export interface UnmanagedHoldingGain {
    /** Amount value for the Unrealized Gain of an Unmanaged Holding. */
    amount: (Scalars['Float'] | null)
    /** Percent value for the Unrealized Gain of an Unmanaged Holding. */
    percent: (Scalars['Float'] | null)
    __typename: 'UnmanagedHoldingGain'
}


/** An account registration type. */
export type AccountRegistrationEnum = 'INDIVIDUAL' | 'CRYPTO' | 'JOINT' | 'CUSTODIAL' | 'PARTNERSHIP' | 'LLC' | 'CORPORATION' | 'TRUST' | 'TRADITIONAL_IRA' | 'ROTH_IRA' | 'SEP_IRA' | 'OTHER'


/** A setup checklist with a list of steps to be completed. */
export interface SetupChecklist {
    /** The title of this checklist. */
    title: Scalars['String']
    /** The total number of steps currently in the checklist. */
    stepsTotal: Scalars['Int']
    /** The number of steps in the checklist that are currently completed. */
    stepsCompleted: Scalars['Int']
    /** The list of checklist steps. */
    steps: SetupChecklistStep[]
    __typename: 'SetupChecklist'
}


/** A setup checklist step. */
export type SetupChecklistStep = (GenericSetupChecklistStep | BuildPortfolioSetupChecklistStep) & { __isUnion?: true }


/** A generic setup checklist step. */
export interface GenericSetupChecklistStep {
    /** The title of the step. */
    title: Scalars['String']
    /** Whether the step has been completed. */
    isCompleted: (Scalars['Boolean'] | null)
    /** Whether the step is ready or blocked by earlier steps. */
    isReady: (Scalars['Boolean'] | null)
    /** An analytics event for following the step. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** An analytics event for following the step. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    /** The internal app destination for the step. */
    destination: (SetupChecklistDestination | null)
    __typename: 'GenericSetupChecklistStep'
}


/** A Build Portfolio setup checklist step. */
export interface BuildPortfolioSetupChecklistStep {
    /** The title of the step. */
    title: Scalars['String']
    /** Whether the step has been completed. */
    isCompleted: (Scalars['Boolean'] | null)
    /** Whether the step is ready or blocked by earlier steps. */
    isReady: (Scalars['Boolean'] | null)
    /** An analytics event for following the step. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** An analytics event for following the step. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    /** The internal app destination for the step. */
    destination: (SetupChecklistDestination | null)
    /**
     * @deprecated starterPie is no longer in use.
     * Pie created by the user during onboarding.
     */
    starterPie: (Pie | null)
    __typename: 'BuildPortfolioSetupChecklistStep'
}


/** The internal link destination for a setup checklist step. */
export interface SetupChecklistDestination {
    /** The internal application link URL. */
    url: Scalars['String']
    /** The path part of the link URL. */
    path: Scalars['String']
    __typename: 'SetupChecklistDestination'
}

export interface AccountConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((AccountEdge | null)[] | null)
    __typename: 'AccountConnection'
}

export interface AccountEdge {
    /** The item at the end of the edge */
    node: (Account | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'AccountEdge'
}


/**
 * Represents an ACH relationship between an investment account and another
 * account.
 */
export type AchRelationship = (AchRelationshipViaDeposits | AchRelationshipViaLink) & { __isUnion?: true }

export interface AchRelationshipViaDeposits {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** The current status of the relationship. */
    status: AchRelationshipStatusEnum
    /** True if the ACH relationship currently requires verification. */
    isVerificationRequired: (Scalars['Boolean'] | null)
    /** True if the ACH relationship required verification and it was completed. */
    wasVerificationCompleted: (Scalars['Boolean'] | null)
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason: (AchRelationshipRejectionReasonEnum | null)
    /** When true, the relationship is active and may be used to create transfers. */
    isActive: Scalars['Boolean']
    /** The nickname for this relationship. */
    nickname: Scalars['String']
    /** The type of the bank account. */
    bankAccountType: ViaDepositsBankAcctTypeEnum
    /** The routing number for the bank account. */
    bankAccountRoutingNumber: Scalars['String']
    /** The bank account number, obscured with `*` characters. */
    bankAccountNumber: Scalars['String']
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    __typename: 'AchRelationshipViaDeposits'
}

export interface AchRelationshipViaLink {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** The current status of the relationship. */
    status: AchRelationshipStatusEnum
    /** True if the ACH relationship currently requires verification. */
    isVerificationRequired: (Scalars['Boolean'] | null)
    /** True if the ACH relationship required verification and it was completed. */
    wasVerificationCompleted: (Scalars['Boolean'] | null)
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason: (AchRelationshipRejectionReasonEnum | null)
    /** When true, the relationship is active and may be used to create transfers. */
    isActive: Scalars['Boolean']
    /** The nickname for this relationship. */
    nickname: Scalars['String']
    /** The external account that this relationship links to. */
    toExternalAccount: (ExternalAccount | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    __typename: 'AchRelationshipViaLink'
}


/** An ACH relationship status. */
export type AchRelationshipStatusEnum = 'PENDING' | 'CANCELED' | 'APPROVED' | 'REJECTED'


/** An ACH relationship rejection reason. */
export type AchRelationshipRejectionReasonEnum = 'UNKNOWN_ROUTING_NUMBER' | 'UNKNOWN'

export interface AchRelationshipEdge {
    /** The item at the end of the edge */
    node: (AchRelationship | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'AchRelationshipEdge'
}

export interface AchTransfer {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /**
     * The direction of the transfer relative to the investment account. "Incoming"
     * means from the external account to the investment account, and "outgoing"
     * means vise-versa.
     */
    direction: AchTransferDirectionEnum
    /** The current status of the transfer. */
    status: AchTransferStatusEnum
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason: (AchTransferRejectionReasonEnum | null)
    /** True when the transfer is in a completed state, false otherwise. */
    isComplete: Scalars['Boolean']
    /**
     * True if the transfer was created by a schedule. It is possible for the value
     * to be false when it is actually unknown.
     */
    isCreatedBySchedule: Scalars['Boolean']
    /**
     * The signed amount of cash moving between the bank and the M1 account. Positive
     * values are deposits, negative values are withdrawals. Value is null when the
     * transfer is a pending liquidation withdrawal, and the amount is unavailable.
     */
    cashFlow: (Scalars['Float'] | null)
    /** The amount being transferred. */
    amount: Scalars['Float']
    /**
     * If applicable, the IRA contribution year for a deposit. Value is null if the
     * account is not an IRA, the transfer is not a deposit, or data is otherwise
     * unavailable.
     */
    contributionYear: (Scalars['Int'] | null)
    /** True when the transfer was created as a liquidating withdrawal. */
    forLiquidation: Scalars['Boolean']
    /** The time that this ACH transfer record was last updated, in ISO 8601 format. */
    lastUpdate: Scalars['String']
    /**
     * The ACH relationship utilized for the transfer. Value will be null if the ACH
     * relationship no longer exists.
     */
    viaAchRelationship: (AchRelationship | null)
    __typename: 'AchTransfer'
}


/** An ACH transfer direction. */
export type AchTransferDirectionEnum = 'INCOMING' | 'OUTGOING'


/** An ACH transfer status. */
export type AchTransferStatusEnum = 'PENDING' | 'FUNDS_POSTED' | 'CANCELED' | 'REJECTED' | 'RETURNED'


/** An ACH transfer rejection reason. */
export type AchTransferRejectionReasonEnum = 'UNKNOWN'


/** Balance information for an account. */
export interface AccountBalance {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Cash assets held by the account. */
    cash: (Cash | null)
    /** Investment assets held by the account. */
    investments: (Investments | null)
    /** Summarized total value of the account. */
    totalValue: (TotalAccountValue | null)
    __typename: 'AccountBalance'
}

export type CashBreakdownListItemType = 'BUYING_POWER' | 'CRYPTO_BUYING_POWER' | 'CASH_AVAILABLE' | 'CRYPTO_CASH_AVAILABLE' | 'PENDING_TRANSFERS' | 'TOTAL_BUYS' | 'TOTAL_SELLS' | 'NEXT_TRADE_WINDOW' | 'SLICE_NAME'

export interface CashBreakdownListItem {
    /** Descriptive label of the cash type */
    listItemType: (CashBreakdownListItemType | null)
    /** Descriptive label of the cash type */
    label: (Scalars['String'] | null)
    /** Formatted dollar amount of cash item */
    value: (Scalars['String'] | null)
    /** Raw dollar amount of cash item as a Float */
    cashBalanceFloat: (Scalars['Float'] | null)
    /** Determine if list should be highlighted in list */
    highlighted: (Scalars['Boolean'] | null)
    /** Optional icon for the item in breakdown list */
    icon: (AppImage | null)
    __typename: 'CashBreakdownListItem'
}


/** Cash assets held by an account. */
export interface Cash {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Cash currently available for trading. */
    available: Scalars['Float']
    /** Invest cash currently available for trading. Excludes the amount for any pending transfers from Borrow to either Spend or an external account. */
    investCashAvailable: Scalars['Float']
    /** The CAFW (Cash Available for Withdrawal) value for the invest account. */
    availableForWithdrawal: (Scalars['Float'] | null)
    /** Potential amount available for trading on crypto accounts */
    cryptoBuyingPower: (Scalars['Float'] | null)
    /** Cash available for a crypto account */
    cryptoCashAvailable: (Scalars['Float'] | null)
    /** Potential amount available for trading */
    buyingPower: (Scalars['Float'] | null)
    /** List of types of cash available to the account */
    breakdownList: ((CashBreakdownListItem | null)[] | null)
    __typename: 'Cash'
}


/** Investment assets held by an account. */
export interface Investments {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** True if there are positions. */
    hasPositions: Scalars['Boolean']
    /** Available if there are no positions for the account. */
    noPositionsContent: (NoPositionsContent | null)
    /** List of positions currently held by an account. */
    positions: PositionConnection
    /**
     * @deprecated Defunct, always returns empty array. Use `positions` instead.
     * Defunct, always returns empty array.
     */
    positionsList: Position[]
    /**
     * The summarized total cost basis of the investment assets. Value is null if
     * cost information is unavailable.
     */
    totalCost: (TotalInvestmentsCost | null)
    /**
     * The summarized total value of the investment assets. Value is null if price
     * information is temporarily unavailable.
     */
    totalValue: (TotalInvestmentsValue | null)
    /**
     * The summarized total unrealized gain of the investment assets. Value is null
     * if total cost or total value information is unavailable.
     */
    totalUnrealizedGain: (TotalInvestmentsGain | null)
    __typename: 'Investments'
}


/** Information for the account when there are no positions. */
export interface NoPositionsContent {
    /** The title for the screen. */
    title: (Scalars['String'] | null)
    /** The description for the page. */
    description: (Scalars['String'] | null)
    /** Information about the applink cta to display when there are no positions. */
    appLink: (AppLink | null)
    __typename: 'NoPositionsContent'
}


/** The overall cost basis of all investment assets. */
export interface TotalInvestmentsCost {
    /** The cost basis. */
    cost: Scalars['Float']
    /**
     * Indicates if this cost basis is a partial sum due to unavailable cost basis
     * information for one or more positions.
     */
    isPartial: Scalars['Boolean']
    /**
     * @deprecated Defunct, always returns false.
     * Indicates if this cost basis currently contains any estimations due to recent
     * trades.
     */
    isEstimated: Scalars['Boolean']
    __typename: 'TotalInvestmentsCost'
}


/** The overall value of all investment assets. */
export interface TotalInvestmentsValue {
    /** The value. */
    value: Scalars['Float']
    /** True if the value is greater than zero. */
    hasValue: Scalars['Boolean']
    /**
     * Indicates if this value is a partial sum due to unavailable price information
     * for one or more positions.
     */
    isPartial: Scalars['Boolean']
    __typename: 'TotalInvestmentsValue'
}


/** The overall unrealized gain of all investment assets. */
export interface TotalInvestmentsGain {
    /** The unrealized gain. */
    gain: Scalars['Float']
    /** The unrealized percent gain. */
    gainPercent: Scalars['Float']
    /**
     * Indicates if this is only a partial calculation due to unavailable price or
     * cost information for one or more positions.
     */
    isPartial: Scalars['Boolean']
    __typename: 'TotalInvestmentsGain'
}


/** The net total value of an account. */
export interface TotalAccountValue {
    /** The net total value of the account. */
    value: Scalars['Float']
    /** True if the value is greater than zero. */
    hasValue: Scalars['Boolean']
    /**
     * Indicates if this value is a partial sum due to unavailable price information
     * for one or more investment assets.
     */
    isPartial: Scalars['Boolean']
    __typename: 'TotalAccountValue'
}


/** Information about billing for a specific user. */
export interface Billing {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Obsolete and no longer supported.
     * Obsolete and no longer supported. Always returns an empty connection.
     */
    appliedPromos: AppliedPromotionConnection
    /** True when there are credits pending payment. */
    hasPendingCredits: Scalars['Boolean']
    /**
     * True when `hasPendingCredits` is true but there is no valid
     * `selectedPaymentsAccount`.
     */
    hasPendingCreditsButNoPaymentsAccount: (Scalars['Boolean'] | null)
    /**
     * The current payments account selection. Value is null when no payments account
     * is selected.
     */
    selectedPaymentsAccount: (SelectedPaymentsAccount | null)
    __typename: 'Billing'
}


/** The current payments account selection. */
export interface SelectedPaymentsAccount {
    /** The selected account. */
    account: Account
    /** True when the account is currently eligible to be a payments account. */
    isValid: Scalars['Boolean']
    __typename: 'SelectedPaymentsAccount'
}


/** A connection to a list of items. */
export interface AppliedPromotionConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((AppliedPromotionEdge | null)[] | null)
    /** The total number of applied promotions. */
    total: Scalars['Int']
    __typename: 'AppliedPromotionConnection'
}


/** An edge in a connection. */
export interface AppliedPromotionEdge {
    /** The item at the end of the edge */
    node: (AppliedPromotion | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'AppliedPromotionEdge'
}


/** Information about an applied promotion. */
export interface AppliedPromotion {
    /** The name of the promotion. */
    name: Scalars['String']
    /** A description of the promotion. */
    description: Scalars['String']
    /** The date the promotion was applied. */
    applicationDate: Scalars['String']
    /**
     * The code used to apply the promotion, if applicable. Value is null when the
     * promotion was applied via other means.
     */
    viaCode: (Scalars['String'] | null)
    __typename: 'AppliedPromotion'
}

export interface Borrow {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The current base margin rate. */
    baseRate: (Scalars['Float'] | null)
    /** The current discounted base margin rate for M1 Plus customers. */
    baseRateForPlus: (Scalars['Float'] | null)
    /** The current discounted base margin rate for M1 Plus customers. */
    baseRateForPlusShortDescription: (Scalars['String'] | null)
    /** The current discounted base margin rate for M1 Plus customers. */
    baseRateForPlusDisclaimer: (Scalars['String'] | null)
    /** Borrow home screen */
    dashboard: (BorrowDashboard | null)
    /** The minimum account value required to use M1 Borrow. */
    minRequiredAccountValue: (Scalars['Float'] | null)
    /** The maximum percentage of account value that can be borrowed. */
    maxBorrowableAccountValuePercent: (Scalars['Float'] | null)
    /** True if there is at least one available Borrow account. */
    hasBorrowAccounts: (Scalars['Boolean'] | null)
    /** A list of available Borrow accounts. */
    borrowAccounts: (BorrowAccountConnection | null)
    /** True if the user has a personal loan that has failed disbursement. */
    hasFailedPersonalLoanDisbursement: (Scalars['Boolean'] | null)
    /** True if the user has a currently late personal loan. */
    hasLatePersonalLoan: (Scalars['Boolean'] | null)
    /** True if any account is borrowing or has ever borrowed before. */
    hasBorrowedBefore: (Scalars['Boolean'] | null)
    /** True if there are Borrow accounts with open margin calls. */
    hasBorrowAccountWithOpenMaintenanceCall: (Scalars['Boolean'] | null)
    /** Returns the first Borrow account with an open margin call, if any. */
    borrowAccountWithOpenMaintenanceCall: (BorrowAccount | null)
    /**
     * @deprecated All states are now eligible so will always be true. Use 'isEligibleToApplyForPersonalLoan' instead.
     * True if the user is eligible to apply for a personal loan according to their state.
     */
    isEligibleForPersonalLoan: (Scalars['Boolean'] | null)
    /** True if the individual user is eligible to apply for a personal loan based on all eligibility criteria. */
    isEligibleToApplyForPersonalLoan: (Scalars['Boolean'] | null)
    /** True if personal loans applications should be available. Driven by Launch Darkly flag borrow-personal-loans-application-access or if the user has an in progress application. */
    shouldAllowAccessToPersonalLoansApplication: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use `borrowMarketingScreen` instead.
     * Information for the Borrow Marketing screen. Will be deprecated once all clients are using the new borrowMarketingScreen.
     */
    marketingScreen: (BorrowMarketingScreen | null)
    /** The new marketing screen content for the Borrow overview page. */
    borrowMarketingScreen: (BorrowMarketingScreenV2 | null)
    /**
     * @deprecated Disclosures for side menu no longer needed
     * Information for the Borrow Marketing screen.
     */
    borrowDisclosures: (BorrowDisclosureText | null)
    /** Personal loans */
    personalLoans: (PersonalLoans | null)
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen: (PlusPromotionalMessage | null)
    /** Check if the user has any active personal loans */
    hasActivePersonalLoan: Scalars['Boolean']
    __typename: 'Borrow'
}

export interface BorrowDisclosureText {
    /** Title for the Borrow disclosure set */
    title: (Scalars['String'] | null)
    /** Subtitles for the Borrow disclosure set */
    subtitle: ((Scalars['String'] | null)[] | null)
    /** Bullet text for the Borrow disclosure set */
    bodyText: ((Scalars['String'] | null)[] | null)
    __typename: 'BorrowDisclosureText'
}

export type BorrowDisclosureTextEnum = 'MARGIN' | 'PERSONAL'

export interface BorrowAccountConnection {
    pageInfo: PageInfo
    edges: ((BorrowAccountEdge | null)[] | null)
    __typename: 'BorrowAccountConnection'
}

export interface BorrowAccountEdge {
    cursor: Scalars['String']
    node: (BorrowAccount | null)
    __typename: 'BorrowAccountEdge'
}


/** Information about a Borrow account. */
export interface BorrowAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The account category. */
    accountCategory: AccountCategoryEnum
    /** The name of the account. */
    name: Scalars['String']
    /** A descriptor for the account, for help identifying in a list. */
    descriptor: (Scalars['String'] | null)
    /** The Invest account with the assets being borrowed against. */
    investAccount: (Account | null)
    /** True if the account is borrowing or has ever borrowed before. */
    hasBorrowedBefore: (Scalars['Boolean'] | null)
    /** True if the account is currently borrowing. */
    hasCreditBorrowed: (Scalars['Boolean'] | null)
    /** True if the account has credit available to borrow. */
    hasCreditAvailable: (Scalars['Boolean'] | null)
    /** The dollar amount currently borrowed. */
    creditBorrowed: (Scalars['Float'] | null)
    /** The dollar amount remaining that is available to borrow. */
    creditAvailable: (Scalars['Float'] | null)
    /** The total amount of credit available. */
    creditLimit: (Scalars['Float'] | null)
    /** The percentage of the credit limit currently in use. */
    inUsePercent: (Scalars['Float'] | null)
    /** Information about the Borrow rate for this account. */
    rate: (BorrowAccountRate | null)
    /** Information about the credit status of this account. */
    status: (BorrowAccountCreditStatus | null)
    /** Information about the upcoming bill, if Borrow has been used. */
    billUpcoming: (BorrowUpcomingBill | null)
    /** The bill that is currently due, if one exists. */
    billDue: (BorrowBill | null)
    /**
     * @deprecated Moved to MarginLandingPage - use marginLandingPage.statements
     * A list of Borrow bills. Sorted in reverse chronological order.
     */
    bills: (BorrowBillConnection | null)
    /**
     * @deprecated Moved to MarginLandingPage - use marginLandingPage.activity
     * A history of Borrow activity. Sorted in reverse chronological order.
     */
    activity: (BorrowActivityEntryConnection | null)
    /** Margin account landing page content. */
    marginProductLandingPage: (MarginProductLandingPage | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    __typename: 'BorrowAccount'
}


/** Information about the interest rate for a Borrow account. */
export interface BorrowAccountRate {
    /** The yearly interest rate as a percentage. */
    ratePercent: Scalars['Float']
    /**
     * @deprecated Plus is dead. Please use ratePercent instead.
     * True if this account receives a Plus discounted rate.
     */
    isPlusDiscountedRate: (Scalars['Boolean'] | null)
    __typename: 'BorrowAccountRate'
}


/** Information about the credit status of a Borrow account. */
export interface BorrowAccountCreditStatus {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The credit status code. */
    code: BorrowAccountCreditStatusCodeEnum
    /** True when the account currently has an open margin call. */
    hasOpenMaintenanceCall: Scalars['Boolean']
    /** Total margin equity in the account. */
    marginEquity: (Scalars['Float'] | null)
    /** The required margin equity value imposed by maintenance requirements. */
    requiredMarginEquity: (Scalars['Float'] | null)
    /** The total margin equity amount minus the required amount. */
    excessMarginEquity: (Scalars['Float'] | null)
    /**
     * When there is an open margin call, the margin equity deficit that must be
     * addressed. Equal to the required margin equity minus the total amount. Value
     * is null otherwise.
     */
    maintenanceCallMarginEquityDeficit: (Scalars['Float'] | null)
    /**
     * If the portfolio value decreases by this dollar amount, a margin call will be
     * issued.
     */
    valueDecreaseToMaintenanceCall: Scalars['Float']
    /**
     * If the portfolio value decreases by this percentage, a margin call will be
     * issued.
     */
    valueDecreaseToMaintenanceCallPercent: Scalars['Float']
    /** The account market value referenced for the margin equity figures. */
    referencedMarketValue: (Scalars['Float'] | null)
    /** A title for the credit status. */
    title: Scalars['String']
    /** A description of the credit status. */
    description: Scalars['String']
    /** Text for a status alert banner, if one should be displayed. */
    alertBanner: (Scalars['String'] | null)
    /** The as-of date for the credit status information. */
    asOfDate: (Scalars['String'] | null)
    /** The BorrowAccount associated to the credit status instance. */
    borrowAccount: (BorrowAccount | null)
    __typename: 'BorrowAccountCreditStatus'
}


/** A Borrow account status code. */
export type BorrowAccountCreditStatusCodeEnum = 'MAINTENANCE_CALL' | 'DANGER' | 'WARNING' | 'CAUTION' | 'GOOD' | 'GREAT'

export interface BorrowActivityEntryConnection {
    pageInfo: PageInfo
    edges: ((BorrowActivityEntryEdge | null)[] | null)
    __typename: 'BorrowActivityEntryConnection'
}

export interface BorrowActivityEntryEdge {
    cursor: Scalars['String']
    node: (BorrowActivityEntry | null)
    __typename: 'BorrowActivityEntryEdge'
}


/** A Borrow activity entry. */
export interface BorrowActivityEntry {
    /** The time of the activity. */
    date: Scalars['String']
    /** The title of the activity. */
    title: Scalars['String']
    /** An optional sub-title of the activity. */
    subTitle: (Scalars['String'] | null)
    /** A signed dollar amount related to the activity. */
    amount: (Scalars['Float'] | null)
    __typename: 'BorrowActivityEntry'
}

export interface DocumentConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((DocumentEdge | null)[] | null)
    /** An optional banner if there are potentially missing documents in the list. */
    missingDocumentsBanner: (InformationBanner | null)
    __typename: 'DocumentConnection'
}


/** An edge in a connection. */
export interface DocumentEdge {
    /** The item at the end of the edge */
    node: (Document | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'DocumentEdge'
}

export interface AccountLabel {
    /** The main label for the account label. */
    label: Scalars['String']
    /** The sublabel for the account label. */
    subLabel: (Scalars['String'] | null)
    __typename: 'AccountLabel'
}

export type Document = (InvestAccountDocument | AccountDocument | SpendAccountDocument) & { __isUnion?: true }


/** A document related to an Invest account. */
export interface InvestAccountDocument {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The date the document was issued. */
    date: Scalars['String']
    /** The type of the document. */
    type: DocumentTypeEnum
    /** The name of the document. */
    name: Scalars['String']
    /** The account name of the document. */
    accountName: (AccountLabel | null)
    /** The URL of the document. */
    url: Scalars['String']
    /** A list of URLs to additional insert documents, if they exist. */
    inserts: Scalars['String'][]
    /**
     * @deprecated Use accountName property on document directly instead.
     * The account associated with the document. Value is null if the account is unavailable.
     */
    account: (Account | null)
    __typename: 'InvestAccountDocument'
}


/** A document related to an M1 account. */
export interface AccountDocument {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The date the document was issued. */
    date: Scalars['String']
    /** The type of the document. */
    type: DocumentTypeEnum
    /** The name of the document. */
    name: Scalars['String']
    /** The account name of the document. */
    accountName: (AccountLabel | null)
    __typename: 'AccountDocument'
}


/** A document related to a Spend Checking account. */
export interface SpendAccountDocument {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The date the document was issued. */
    date: Scalars['String']
    /** The type of the document. */
    type: DocumentTypeEnum
    /** The name of the document. */
    name: Scalars['String']
    /** The account name of the document. */
    accountName: (AccountLabel | null)
    __typename: 'SpendAccountDocument'
}


/** A document type. */
export type DocumentTypeEnum = 'INVESTMENTS_RELATED' | 'STATEMENT' | 'TAX_FORM' | 'TRADE_CONFIRMATION' | 'ACCOUNT_DOCUMENT'


/** Information about estimated trading for an account. */
export interface EstimatedTrading {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The account for which trading is estimated. */
    account: Account
    /** True if there are estimated trades of some sort to display. */
    hasEstimatedTrades: Scalars['Boolean']
    /** Value is `true` when there are estimated trades, false otherwise. */
    hasTrades: Scalars['Boolean']
    /** True when there are excluded buy trades. */
    hasExcludedBuys: Scalars['Boolean']
    /** The list of estimated buy trades. */
    buys: EstimatedTradeAmountConnection
    /** Estimated buys messaging */
    buyMessages: (RichTextContent[] | null)
    /**
     * The list of estimated buy trades which have been calculated, but are excluded
     * and will not execute because they are below the minimum buy trade amount.
     */
    excludedBuys: EstimatedTradeAmountConnection
    /** The list of estimated sell trades. */
    sells: EstimatedTradeAmountConnection
    /** Estimated sells messaging */
    sellMessages: (RichTextContent[] | null)
    /** The total buy amount. */
    totalBuyAmount: Scalars['Float']
    /** The total sell amount. */
    totalSellAmount: Scalars['Float']
    /**
     * The time when this estimated trade information was generated. Trades are based
     * on, and can vary with, the current prices at the time of estimation. Value is
     * null when no estimation has yet occurred.
     */
    lastEstimatedTime: (Scalars['String'] | null)
    /** Messaging to display on Estimated Trades page, if any. */
    message: (EstimatedTradingMessage | null)
    __typename: 'EstimatedTrading'
}

export interface EstimatedTradingMessage {
    /** The content of the message. */
    content: Scalars['String']
    /** An optional link to view additional details on the messaging content. */
    link: (AppLink | null)
    __typename: 'EstimatedTradingMessage'
}


/** A connection to a list of items. */
export interface EstimatedTradeAmountConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((EstimatedTradeAmountEdge | null)[] | null)
    /** The total number of edges. */
    total: Scalars['Int']
    __typename: 'EstimatedTradeAmountConnection'
}


/** An edge in a connection. */
export interface EstimatedTradeAmountEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node: (EstimatedTradeAmount | null)
    __typename: 'EstimatedTradeAmountEdge'
}


/** Information about an estimated trade amount. */
export interface EstimatedTradeAmount {
    /** The estimated trade amount. */
    amount: Scalars['Float']
    /** Value is `true` for an estimated buy and `false` for an estimated sell. */
    isBuy: Scalars['Boolean']
    /** The security to be traded. */
    of: Security
    /** Pill to display for the estimated trade properties. */
    pill: (AppPill | null)
    __typename: 'EstimatedTradeAmount'
}


/** An estimated trade amount sort type. */
export type EstimatedTradeAmountSortTypeEnum = 'SYMBOL' | 'AMOUNT'


/** Represents a connected external account. */
export interface ExternalAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** The status of this external account. */
    status: ExternalAccountStatusEnum
    /** The type of the external account. */
    type: ExternalAccountTypeEnum
    /**
     * A code for the institution that the external account belongs to. Institution
     * codes are intended to be stable and provide a basis for mapping institutions
     * to logos and other data within client applications. Institution codes are
     * defined by Plaid.
     */
    institutionCode: Scalars['String']
    /** The name of the external account. */
    name: Scalars['String']
    /** The routing number. */
    routingNumber: Scalars['String']
    /** The bank account number, obscured with `*` characters. */
    accountNumber: Scalars['String']
    __typename: 'ExternalAccount'
}


/** An external account status. */
export type ExternalAccountStatusEnum = 'ACTIVE' | 'INACTIVE'


/** An external account type. */
export type ExternalAccountTypeEnum = 'CHECKING' | 'SAVINGS'


/** A connection to a list of items. */
export interface ExternalAccountConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((ExternalAccountEdge | null)[] | null)
    __typename: 'ExternalAccountConnection'
}

export interface ExternalAccountEdge {
    /** The item at the end of the edge */
    node: (ExternalAccount | null)
    /** A cursor for use in pagination */
    cursor: Scalars['String']
    __typename: 'ExternalAccountEdge'
}

export interface FeatureFlags {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A list of all features enabled for the user. */
    allFeatures: Scalars['String'][]
    /**
     * Given a list of feature keys, returns a corresponding list of boolean values
     * indicating if the user has that feature enabled. False values indicate that
     * either the feature is not enabled for the user or the key is not recognized.
     * The list of booleans is guaranteed to be the same length and order as the list
     * of keys provided as an argument. The maximum number of keys that can be
     * checked is 200.
     */
    hasFeature: Scalars['Boolean'][]
    __typename: 'FeatureFlags'
}

export interface IntradayQuoteTimeSeries {
    /**
     * The list of intraday quotes in chronological order. The list will be empty if
     * the market was not open over the selected time range.
     */
    series: IntradayQuotePointType[]
    /**
     * The market session(s) enclosing the time series span. Value is null when there
     * are zero time series points.
     */
    timeSpan: (MarketTimeSpan | null)
    /**
     * The time of the most recent data in this series. Value is null when there are
     * zero time series points.
     */
    lastUpdatedTime: (Scalars['String'] | null)
    __typename: 'IntradayQuoteTimeSeries'
}


/** An intraday quote time-series point. */
export interface IntradayQuotePointType {
    /** The start time for this interval. */
    time: Scalars['String']
    /**
     * The time represented by this point divided by difference between the start and
     * end times of the series, expressed as a percentage (0-100%).
     */
    timeSpanPercent: Scalars['Float']
    /** The intraday quote for this interval. */
    data: IntradayIntervalQuote
    __typename: 'IntradayQuotePointType'
}


/** Intraday quote data for a security over a particular time interval. */
export interface IntradayIntervalQuote {
    /** The price at the beginning of this interval. */
    openPrice: Scalars['Float']
    /**
     * The price at the end of this interval. Value is null when unavailable for this
     * interval.
     */
    closePrice: Scalars['Float']
    /**
     * The close price at the end of the previous interval. Value is null when unavailable
     * for the previous interval.
     */
    previousQuoteClosePrice: (Scalars['Float'] | null)
    /**
     * The high price over this interval. Value is null when unavailable for this
     * interval.
     */
    highPrice: (Scalars['Float'] | null)
    /**
     * The low price over this interval. Value is null when unavailable for this
     * interval.
     */
    lowPrice: (Scalars['Float'] | null)
    /**
     * The range over this interval. Value is null when low or high are unavailable
     * for this interval.
     */
    priceRange: (Scalars['Float'] | null)
    /**
     * The number of shares traded over this interval. Value is null when unavailable
     * for this interval.
     */
    shareVolume: (Scalars['Int'] | null)
    /**
     * The close price on the market day previous to the start of the series. Value
     * is null when unavailable.
     */
    previousClosePrice: (Scalars['Float'] | null)
    /**
     * The change between the close price on the market day previous to the start of
     * the series and the close price of this interval. Value is null when the
     * previous close price is unavailable.
     */
    changeFromPreviousClosePrice: (Scalars['Float'] | null)
    /**
     * The percent change between the close price on the market day previous to the
     * start of the series and the close price of this interval. Value is null when
     * the previous close price is unavailable or zero.
     */
    percentChangeFromPreviousClosePrice: (Scalars['Float'] | null)
    __typename: 'IntradayIntervalQuote'
}


/** Information about market sessions over a time span. */
export interface MarketTimeSpan {
    /** The market open time prior to or coinciding with the first time series point. */
    firstOpenTime: Scalars['String']
    /** The market close time following or coinciding with the last time series point. */
    lastCloseTime: Scalars['String']
    __typename: 'MarketTimeSpan'
}

export interface OnlineAccountRegistrationCountry {
    /** The name of the country. */
    description: Scalars['String']
    /** The three letter abbreviation associated with the country. */
    name: Scalars['String']
    __typename: 'OnlineAccountRegistrationCountry'
}

export interface Invest {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** An entry point for querying dividend related information by portfolioSlice. */
    dividends: (Dividends | null)
    /**
     * @deprecated Pie tutorial has been removed from onboarding.
     * The pie tutorial should be displayed to the user.
     */
    shouldShowPieTutorial: (Scalars['Boolean'] | null)
    /** The user has at least one Invest account in any status. */
    hasInvestAccount: (Scalars['Boolean'] | null)
    /** The user has at least one Invest account in an active (unclosed) status. */
    hasActiveInvestAccount: (Scalars['Boolean'] | null)
    /** Permissible Countries */
    permissibleCountriesForAccountOpen: (OnlineAccountRegistrationCountry | null)[]
    /** Returns the documents and agreements, by account type, that a user must agree to in order to open an invest account. */
    requiredDocuments: RequiredDocumentsBundle
    /** When true, a user is allowed to open a custodial account. */
    isEligibleToOpenCustodialAccount: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen: (PlusPromotionalMessage | null)
    /** A set of fields used to drive the pie confirmation changes screen. Accepts an optional argument for handling "merged" slices via Received Securities. */
    pieChangesConfirmation: (PieChangesConfirmation | null)
    /** Content for the Invest ACAT Wizard flow. */
    acatWizard: (InvestAcatWizardContent | null)
    /**
     * @deprecated Use AcatWizardInfo.acatWizardEntryLink instead.
     * When available, a CTA link to be rendered in Invest for the ACAT Wizard flow
     */
    acatWizardEntryLink: (AppLink | null)
    /** ACAT Wizard flow information */
    acatWizardInfo: (AcatWizardInfo | null)
    /**
     * @deprecated Use `investMarketingScreen` instead.
     * Invest Marketing content for users that have profile created, but no invest account. Will be deprecated once all clients are using investMarketingScreen.
     */
    investMarketing: (InvestMarketing | null)
    /** The new marketing screen content for the Invest overview page for users that have profile created, but no invest account. */
    investMarketingScreen: (InvestMarketingScreen | null)
    /** Entry point to drive the Invest Account opening flow. In a future state all Invest Account opening flows will be driven through this type. */
    accountOpening: (InvestAccountOpening | null)
    /** Share pie */
    sharePie: (InvestSharePie | null)
    /** Disclosures for Invest */
    investDisclosures: (InvestDisclosures | null)
    /** Security lending disclosures */
    fullyPaidLendingDisclosure: (InvestFullyPaidLendingDisclosure | null)
    __typename: 'Invest'
}

export interface AcatWizardInfo {
    /** When available, a CTA link to be rendered in Invest for the ACAT Wizard flow */
    acatWizardEntryLink: (AppLink | null)
    /** ACAT Promotion Content */
    acatPromotion: (RichTextContent | null)
    __typename: 'AcatWizardInfo'
}

export type InvestDisclosuresType = 'CRYPTO' | 'SECURITIES'

export interface InvestDisclosures {
    /** Disclosures for trading under Invest */
    investTradeDisclosures: (InvestTradeDisclosures | null)
    __typename: 'InvestDisclosures'
}

export interface InvestTradeDisclosures {
    /** Array of disclosures to be displayed */
    disclosures: ((InvestTradeDisclosureItem | null)[] | null)
    __typename: 'InvestTradeDisclosures'
}

export interface InvestTradeDisclosureItem {
    /** Section disclosure title for trading under Invest */
    title: (Scalars['String'] | null)
    /** Disclosure content for trading under Invest */
    content: (Scalars['String'] | null)
    /** Disclosure links for trading under Invest */
    links: ((AppLink | null)[] | null)
    __typename: 'InvestTradeDisclosureItem'
}

export interface InvestAccountOpening {
    title: (Scalars['String'] | null)
    questions: ((InvestAccountOpeningQuestion | null)[] | null)
    __typename: 'InvestAccountOpening'
}

export type InvestAccountOpeningQuestionType = 'INVESTMENT_EXPERIENCE' | 'RISK_TOLERANCE' | 'INVESTMENT_DURATION' | 'LIQUIDITY_IMPORTANCE' | 'TRUSTED_CONTACT' | 'HOW_DID_YOU_HEAR_ABOUT_M1'

export interface InvestAccountOpeningQuestion {
    /** An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis. */
    questionType: (InvestAccountOpeningQuestionType | null)
    /** Title screen for the question. */
    title: (Scalars['String'] | null)
    /** Subtitle copy of the given question. */
    subtitle: (Scalars['String'] | null)
    /** Copy to be rendered for the continue CTA. */
    continueLabel: (Scalars['String'] | null)
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel: (Scalars['String'] | null)
    /** An array of strings for a any disclaimer tooltips that need to be shown for the given question. */
    disclaimerTooltipContent: ((Scalars['String'] | null)[] | null)
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType: (InvestAccountOpeningQuestionType | null)
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType: (InvestAccountOpeningQuestionType | null)
    __typename: 'InvestAccountOpeningQuestion'
}


/** Information about historical activity for an Invest account. */
export interface InvestActivity {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A list of Invest account activity entries. */
    activity: (InvestActivityEntryConnection | null)
    __typename: 'InvestActivity'
}


/** An Invest activity entry sort type. */
export type InvestActivityEntrySortTypeEnum = 'DATE'

export interface InvestActivityEntryConnection {
    pageInfo: PageInfo
    edges: ((InvestActivityEntryEdge | null)[] | null)
    __typename: 'InvestActivityEntryConnection'
}

export interface InvestActivityEntryEdge {
    cursor: Scalars['String']
    node: (InvestActivityEntry | null)
    __typename: 'InvestActivityEntryEdge'
}


/** An Invest activity entry. */
export type InvestActivityEntry = (InvestActivityTradeSummaryEntry | InvestActivityTradeEntry | InvestActivityCashEntry | InvestActivityPositionEntry | InvestActivityRebalanceEntry | InvestActivityOrderEntry | InvestActivityOtherEntry) & { __isUnion?: true }


/** Summarizes all of the trades occurring during a single trade window. */
export interface InvestActivityTradeSummaryEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /** The total number of buy trades. */
    countOfBuys: Scalars['Int']
    /** The total number of sell trades. */
    countOfSells: Scalars['Int']
    /** The unsigned summed dollar amount of buy trades. */
    amountOfBuys: Scalars['Float']
    /** The unsigned summed dollar amount of sell trades. */
    amountOfSells: Scalars['Float']
    /**
     * A list of trade activity entries being summarized. Only available when the
     * entry is loaded independently, outside of a list.
     */
    trades: (InvestActivityTradeEntryConnection | null)
    /** True if this trade window had excluded buy trades. */
    hasExcludedBuys: (Scalars['Boolean'] | null)
    /** Buy trades that were calculated but excluded from a trading window. */
    excludedBuys: (InvestActivityExcludedTradeConnection | null)
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    __typename: 'InvestActivityTradeSummaryEntry'
}

export interface InvestActivityExcludedTradeConnection {
    total: (Scalars['Int'] | null)
    pageInfo: PageInfo
    edges: ((InvestActivityExcludedTradeEdge | null)[] | null)
    __typename: 'InvestActivityExcludedTradeConnection'
}

export interface InvestActivityExcludedTradeEdge {
    cursor: Scalars['String']
    node: (InvestActivityExcludedTrade | null)
    __typename: 'InvestActivityExcludedTradeEdge'
}


/** A trade that was calculated but excluded from a trading window. */
export interface InvestActivityExcludedTrade {
    /** A reference to the security being traded. */
    tradeSecurity: InvestActivitySecurityReference
    /** Value is true for a buy trade, and false for a sell trade. */
    isBuy: Scalars['Boolean']
    /** The unsigned total dollar amount of the trade that was excluded. */
    amount: Scalars['Float']
    __typename: 'InvestActivityExcludedTrade'
}

export interface InvestActivityTradeEntryConnection {
    total: (Scalars['Int'] | null)
    pageInfo: PageInfo
    edges: ((InvestActivityTradeEntryEdge | null)[] | null)
    __typename: 'InvestActivityTradeEntryConnection'
}

export interface InvestActivityTradeEntryEdge {
    cursor: Scalars['String']
    node: (InvestActivityTradeEntry | null)
    __typename: 'InvestActivityTradeEntryEdge'
}


/** A single trade within a trade window. */
export interface InvestActivityTradeEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /** A reference to the security being traded. */
    tradeSecurity: InvestActivitySecurityReference
    /** Value is true for a buy trade, and false for a sell trade. */
    isBuy: Scalars['Boolean']
    /** The unsigned share quantity being traded. */
    quantity: Scalars['Float']
    /** The share price that the trade occurred at. */
    sharePrice: Scalars['Float']
    /** The unsigned total dollar amount of the trade (`abs(quantity) * sharePrice`). */
    amount: Scalars['Float']
    /** The trade summary activity entry that summarizes this trade. */
    summary: (InvestActivityTradeSummaryEntry | null)
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    __typename: 'InvestActivityTradeEntry'
}

export interface InvestActivityCashEntryTransferDetails {
    /** Some descriptive text that summarizes the transfer. */
    transferSummary: (Scalars['String'] | null)
    /** The ID of the transfer instance that matches the invest activity entry. */
    transferId: Scalars['ID']
    /** The total amount of the matching transfer. */
    totalAmount: (Scalars['Float'] | null)
    __typename: 'InvestActivityCashEntryTransferDetails'
}


/** A change to the cash balance of an Invest account. */
export interface InvestActivityCashEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /**
     * Whether the cash balance change is related to a security. When true, the
     * `cashSecurity` field is expected to return a non-null value.
     */
    isRelatedToSecurity: Scalars['Boolean']
    /** The security paying or receiving the cash, if there is one. */
    cashSecurity: (InvestActivitySecurityReference | null)
    /** The signed dollar change to the cash balance. */
    amount: Scalars['Float']
    /**
     * The dividend tooltip text returned when the activity of this entry is
     * 'DIVIDEND_DEBITED' or 'ADR_FEE_DEBITED'.
     */
    tooltipCopy: (Scalars['String'] | null)
    /** Details of the transfer (if any) that matches the cash activity. */
    transferDetails: (InvestActivityCashEntryTransferDetails | null)
    __typename: 'InvestActivityCashEntry'
}


/** A change to the holdings of an Invest account. */
export interface InvestActivityPositionEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /** The security for which shares are being credited or debited. */
    positionSecurity: InvestActivitySecurityReference
    /** The signed share quantity change to the position. */
    quantity: Scalars['Float']
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    __typename: 'InvestActivityPositionEntry'
}

export interface InvestActivityRebalanceEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    __typename: 'InvestActivityRebalanceEntry'
}

export interface InvestActivityOrderEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    __typename: 'InvestActivityOrderEntry'
}

export interface InvestActivityOtherEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date: Scalars['String']
    /** A short title for the entry. */
    title: Scalars['String']
    /** A friendly description of this entry. */
    description: (Scalars['String'] | null)
    /** The account that owns this entry. */
    account: (Account | null)
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink: (AppLink | null)
    __typename: 'InvestActivityOtherEntry'
}

export interface InvestActivitySecurityReference {
    /** The best-available descriptor for the security. */
    descriptor: Scalars['String']
    /** The symbol of the security, if known. */
    symbol: (Scalars['String'] | null)
    /** The security, if available. */
    security: (Security | null)
    __typename: 'InvestActivitySecurityReference'
}

export interface Overview {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    balances: (BalancesOverview | null)
    /** The cards that are displayed on overview hub. */
    cards: (OverviewCards | null)
    /** Returns true if the feature flag for overview hub is enabled for the user. */
    overviewHubEnabled: Scalars['Boolean']
    /** True if the user should see the Move Money CTA on the home page (user has an active funding source or ach relationship). If null, default to showing the CTA. */
    showMoveMoney: (Scalars['Boolean'] | null)
    /** The tiles that are displayed on the overview home page */
    homeTilesSections: (HomeTilesSectionConnection | null)
    /** Disclosure information for the overview page footer */
    disclosuresFooter: (AppRichTextDisclosureLink | null)
    /** The mobile floating action button details for the home page */
    floatingActionButton: (AppNavigationItem | null)
    /** The section for showing promotional content on the home overview page */
    promotions: (OverviewPromotions | null)
    __typename: 'Overview'
}

export interface BalancesOverview {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Returns the total value of all assets minus liabilities. */
    total: (Scalars['Float'] | null)
    /**
     * @deprecated Use `accountTotals` instead. This will still return the sum of Invest accounts.
     * Returns the total account values of all invest accounts.
     */
    invest: (Scalars['Float'] | null)
    /**
     * @deprecated Use `accountTotals` instead. This will return the value of the Earn accounts. It is purposely incorrect due to the Spend pillar changes and mobile still using this field. Web does not use this.
     * Returns the total account value of the spend account.
     */
    spend: (Scalars['Float'] | null)
    /**
     * @deprecated Use `accountTotals` instead. This will return the sum of Borrow accounts.
     * Returns the total amount owed on borrow.
     */
    borrow: (Scalars['Float'] | null)
    /**
     * @deprecated Use `accountTotals` instead. This will return the value of the Credit Card account.
     * Returns the total amount owed on the M1 credit card.
     */
    credit: (Scalars['Float'] | null)
    /** The total assets that a user has on the platform. */
    assets: (NetWorthLabel | null)
    /** The total liabilities that a user has on the platform. */
    liabilities: (NetWorthLabel | null)
    /** The ratio of assets compared to liabilities between 0-1. */
    assetRatio: (Scalars['Float'] | null)
    /** An array of all of the user's account types and balances. */
    accountTotals: ((AccountTotalWithStatus | null)[] | null)
    isPartialTotal: Scalars['Boolean']
    __typename: 'BalancesOverview'
}

export interface OverviewCards {
    /** The ID of this node. */
    id: Scalars['ID']
    /** An array of all the asset card types. */
    assets: ((OverviewCardInterface | null)[] | null)
    /** An array of all the liability card types. */
    liabilities: ((OverviewCardInterface | null)[] | null)
    /**
     * @deprecated Use 'assets' instead.
     * The invest card for overview hub.
     */
    invest: (OverviewInvestCard | null)
    /**
     * @deprecated Use 'assets' instead.
     * The spend card for overview hub.
     */
    spend: (OverviewCard | null)
    /**
     * @deprecated Use 'liabilities' instead.
     * The borrow card for overview hub.
     */
    borrow: (OverviewCard | null)
    /**
     * @deprecated Use 'liabilities' instead.
     * The credit card card for overview hub.
     */
    creditCard: (OverviewCard | null)
    __typename: 'OverviewCards'
}

export type OverviewCardInterface = (OverviewCard | OverviewInvestCard | OverviewSpendCard | OverviewBorrowCard | OverviewCreditCard) & { __isUnion?: true }

export type OverviewCardContentInterface = (OverviewCardContent | OverviewInvestCardContent) & { __isUnion?: true }

export type OverviewCardTitleInterface = (OverviewCardTitle) & { __isUnion?: true }

export interface OverviewCard {
    /** The title for the overview card. */
    title: OverviewCardTitle
    /** The content for the overview card. */
    content: (OverviewCardContentInterface | null)
    /** The footer text and icon for the card. */
    footer: (OverviewCardFooter | null)
    /** The image shown as a marketing image on the card. */
    marketingImage: (AppImage | null)
    /** The link that directs clicking/touching the card. */
    link: (AppLink | null)
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OverviewCard'
}

export interface OverviewCardTitle {
    /** The icon on the title. */
    icon: (AppImage | null)
    /** The title text. */
    text: Scalars['String']
    /** The subtitle for the title. */
    subtitle: (Scalars['String'] | null)
    __typename: 'OverviewCardTitle'
}

export interface OverviewCardContent {
    /** The main content text for the overview card. */
    text: Scalars['String']
    /** The subtitle for the content. */
    subtitle: (Scalars['String'] | null)
    __typename: 'OverviewCardContent'
}

export interface OverviewCardFooter {
    /** The image for the icon on the icon */
    icon: (AppImage | null)
    /** The text shown in the footer of the card. */
    text: (Scalars['String'] | null)
    __typename: 'OverviewCardFooter'
}

export interface OverviewInvestCard {
    /** The title for the overview card. */
    title: OverviewCardTitle
    /** The content for the overview card. */
    content: (OverviewCardContentInterface | null)
    /** The footer text and icon for the card. */
    footer: (OverviewCardFooter | null)
    /** The image shown as a marketing image on the card. */
    marketingImage: (AppImage | null)
    /** The link that directs clicking/touching the card. */
    link: (AppLink | null)
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OverviewInvestCard'
}

export interface OverviewSpendCard {
    /** The title for the overview card. */
    title: OverviewCardTitle
    /** The content for the overview card. */
    content: (OverviewCardContentInterface | null)
    /** The footer text and icon for the card. */
    footer: (OverviewCardFooter | null)
    /** The image shown as a marketing image on the card. */
    marketingImage: (AppImage | null)
    /** The link that directs clicking/touching the card. */
    link: (AppLink | null)
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OverviewSpendCard'
}

export interface OverviewBorrowCard {
    /** The title for the overview card. */
    title: OverviewCardTitle
    /** The content for the overview card. */
    content: (OverviewCardContentInterface | null)
    /** The footer text and icon for the card. */
    footer: (OverviewCardFooter | null)
    /** The image shown as a marketing image on the card. */
    marketingImage: (AppImage | null)
    /** The link that directs clicking/touching the card. */
    link: (AppLink | null)
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OverviewBorrowCard'
}

export interface OverviewCreditCard {
    /** The title for the overview card. */
    title: OverviewCardTitle
    /** The content for the overview card. */
    content: (OverviewCardContentInterface | null)
    /** The footer text and icon for the card. */
    footer: (OverviewCardFooter | null)
    /** The image shown as a marketing image on the card. */
    marketingImage: (AppImage | null)
    /** The link that directs clicking/touching the card. */
    link: (AppLink | null)
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'OverviewCreditCard'
}

export interface OverviewInvestCardContent {
    /** The text for the invest card's content. */
    text: Scalars['String']
    /** The gains for the all of the user's accounts. */
    gains: (OverviewInvestCardContentSubtitle | null)
    /** The subtitle for the content. */
    subtitle: (Scalars['String'] | null)
    __typename: 'OverviewInvestCardContent'
}

export interface OverviewInvestCardContentSubtitle {
    /** The change for all of the user's invest accounts. */
    change: (Scalars['String'] | null)
    /** The percent change for all of the user's invest accounts. */
    percentChange: (Scalars['String'] | null)
    /** Boolean declaring if this is a gain or loss. */
    isGain: (Scalars['Boolean'] | null)
    __typename: 'OverviewInvestCardContentSubtitle'
}


/** The account type along with total balance of the account. */
export interface AccountTotalWithStatus {
    /**
     * The type of account.
     * Currently limited to 'Invest' | 'Earn' | 'Borrow' | 'Spend'.
     */
    type: Scalars['String']
    /** The total account value (positive or negative) for the current account. For display purposes, generally, Borrow will be negative, Spend (Credit Card) and all others will be positive. */
    total: Scalars['Float']
    __typename: 'AccountTotalWithStatus'
}


/** The label and value for the asset and liabilities */
export interface NetWorthLabel {
    /** The type of label. Limited to 'Assets' | 'Liabilities'. */
    label: Scalars['String']
    /** The value for the asset or liability. */
    value: (Scalars['Float'] | null)
    __typename: 'NetWorthLabel'
}

export interface HomeTilesSectionConnection {
    pageInfo: PageInfo
    edges: ((HomeTilesSectionEdge | null)[] | null)
    __typename: 'HomeTilesSectionConnection'
}

export interface HomeTilesSectionEdge {
    cursor: Scalars['String']
    node: (HomeTilesSection | null)
    __typename: 'HomeTilesSectionEdge'
}

export interface HomeTilesSection {
    /** The header of each group of tiles. Limited to 'Assets' | 'Liabilities'. */
    header: Scalars['String']
    /** The tiles that are displayed on the home page for assets and liabilities. */
    tiles: (AccountTile | null)[]
    __typename: 'HomeTilesSection'
}

export interface AccountTile {
    /** The title of the tile. */
    title: Scalars['String']
    /** The icon of the tile */
    icon: (AppImage | null)
    /** The subtitle of the tile */
    subtitle: (SubtitleInfo | null)
    /** The value for the account for the tile */
    value: (Scalars['String'] | null)
    /** The subvalue for the account for the tile */
    subValue: (SubValueInfo | null)
    /** The illustration to be displayed on the tile */
    illustration: (AppImage | null)
    /** An analytics event to fire when the given tile is displayed. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** The primary action that should take place when the tile is clicked */
    primaryAction: (AppLink | null)
    /** The secondary action that should take place when subtitle is clickable */
    secondaryAction: (AppNavigationItem | null)
    __typename: 'AccountTile'
}

export interface SubtitleInfo {
    /** The subtitle text of the tile */
    text: (Scalars['String'] | null)
    /** The icon for the subtitle */
    icon: (AppImage | null)
    __typename: 'SubtitleInfo'
}

export interface SubValueInfo {
    /** The subvalue for the account for the tile */
    text: (Scalars['String'] | null)
    /** The color for the subvalue */
    color: (Scalars['String'] | null)
    __typename: 'SubValueInfo'
}

export interface PieAnalysis {
    /**
     * The total number of security holdings associated with this pie, including
     * those of any pie descendents.
     */
    totalHoldings: Scalars['Int']
    /**
     * The average dividend yield for the components of this pie, weighted by their
     * target allocation percentage. Value is expressed as a percentage. Value is
     * null when unavailable.
     */
    dividendYield: (Scalars['Float'] | null)
    /**
     * The avergage net expense ratio for the components of this pie, weighted by
     * their target allocation percentage. Value is expressed as a percentage. Value
     * is null when unavailable.
     */
    netExpenseRatio: (Scalars['Float'] | null)
    /**
     * Backtested performance information for this pie. Value is null if backtesting
     * is currently unavailable.
     */
    backtesting: (PieBacktesting | null)
    __typename: 'PieAnalysis'
}

export interface PieBacktesting {
    /** The start time of the backtest period. */
    startTime: Scalars['String']
    /** The end time of the backtest period. */
    endTime: Scalars['String']
    /**
     * A time series of backtest values. Value is null when data is temporarily
     * unavailable.
     */
    series: (PieBacktestTimeSeriesPoint[] | null)
    /**
     * The change in value over the backtest period. Value is null when data is
     * temporarily unavailable.
     */
    valueChange: (Scalars['Float'] | null)
    /**
     * The percent change in value over the backtest period. Value is null when data
     * is temporarily unavailable.
     */
    valuePercentChange: (Scalars['Float'] | null)
    __typename: 'PieBacktesting'
}

export interface PieBacktestTimeSeriesPoint {
    /** The time of this point. */
    time: Scalars['String']
    /** The dollar value at this point. */
    value: Scalars['Float']
    __typename: 'PieBacktestTimeSeriesPoint'
}


/** A backtest time period. */
export type PieBacktestPeriodEnum = 'ONE_DAY' | 'ONE_WEEK' | 'ONE_MONTH' | 'ONE_QUARTER' | 'YEAR_TO_DATE' | 'ONE_YEAR' | 'THREE_YEARS' | 'FIVE_YEARS'

export interface PieEditModel {
    /**
     * Analysis on the composition of this pie edit model. Value is null if the pie
     * has greater than 500 securities, or when analysis is unavilable.
     */
    analysis: (PieAnalysis | null)
    __typename: 'PieEditModel'
}

export interface PieFundamentals {
    /**
     * The total number of security holdings associated with this pie, including
     * those of any pie descendents. Value is null when unavailable.
     */
    totalHoldings: (Scalars['Int'] | null)
    /**
     * The average dividend yield for the components of this pie, weighted by their
     * target allocation percentage. Value is expressed as a percentage. Value is
     * null when unavailable.
     */
    dividendYield: (Scalars['Float'] | null)
    /**
     * The avergage net expense ratio for the components of this pie, weighted by
     * their target allocation percentage. Value is expressed as a percentage. Value
     * is null when unavailable.
     */
    netExpenseRatio: (Scalars['Float'] | null)
    __typename: 'PieFundamentals'
}

export interface PieChangesConfirmationMovedSlice {
    /** The name of the slice. */
    name: Scalars['String']
    /** The symbol of the slice if applicable. */
    symbol: (Scalars['String'] | null)
    /** A pill used to represent that the slice was Moved */
    actionPill: (AppPill | null)
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl: (Scalars['String'] | null)
    __typename: 'PieChangesConfirmationMovedSlice'
}

export interface InvestAcatWizardContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen content for the ACAT Type Step of the ACAT Wizard Flow. */
    acatTransferTypeScreenContent: (InvestAcatTransferTypeScreenContent | null)
    /** Screen content for the Brokerage Selection step of the ACAT Wizard Flow. */
    brokerageSelectionContent: (InvestAcatBrokerageSelectionContent | null)
    /** Screen content for the Brokerage Account Details Input step of the ACAT Wizard Flow. */
    brokerageAccountDetailsContent: (InvestAcatBrokerageAccountDetailsContent | null)
    /** Screen content for the Destination Selection step of the ACAT Wizard Flow. */
    destinationAccountContent: (InvestAcatDestinationAccountContent | null)
    /** Screen content for the Transfer Information step of the ACAT Wizard Flow. */
    transferInformationScreenContent: (InvestAcatTransferInformationScreenContent | null)
    /** Screen content for the Confirm Selections step of the ACAT Wizard Flow. */
    confirmSelectionsScreenContent: (InvestAcatConfirmSelectionsContent | null)
    /**
     * @deprecated Use `SubmitInvestAcatTransferPayload.toast` instead.
     * Screen content for the successful ACAT confirmation step of the ACAT Wizard Flow.
     */
    acatConfirmationContent: (InvestAcatConfirmationContent | null)
    assetSelectionContent: InvestAcatWizardAssetSelectionContent
    /** The content for the rollover information screen. */
    rolloverInformationScreenContent: (AppInfoPage | null)
    /** The content for the rollover creation screen */
    rolloverCreationScreenContent: (RolloverCreationScreenContent | null)
    /** Informational message for the ACAT Transfer Type screen. */
    informationalBanner: (InformationBanner | null)
    __typename: 'InvestAcatWizardContent'
}

export interface RolloverCreationScreenContent {
    /** The webview URL for initiating the ACAT rollover flow */
    initiateRolloverWebviewUrl: Scalars['String']
    __typename: 'RolloverCreationScreenContent'
}

export interface InvestAcatWizardAssetSelectionContent {
    id: Scalars['ID']
    header: (RichTextContent | null)
    cash: (InvestAcatWizardAssetSelectionCashSectionContent | null)
    assets: (InvestAcatWizardAssetSelectionAssetsSectionContent | null)
    ctaLabel: Scalars['String']
    __typename: 'InvestAcatWizardAssetSelectionContent'
}

export interface InvestAcatWizardAssetSelectionCashSectionContent {
    header: (RichTextContent | null)
    description: (RichTextContent | null)
    input: (AcatWizardAssetSelectionInput | null)
    __typename: 'InvestAcatWizardAssetSelectionCashSectionContent'
}

export interface InvestAcatWizardAssetSelectionAssetsSectionContent {
    /** Properties for displaying header content */
    header: (RichTextContent | null)
    /** Text description for partial transfer asset selection */
    description: (RichTextContent | null)
    /** Properties for displaying the securities search input field */
    searchInput: (AcatWizardAssetSelectionInput | null)
    /** Properties for displaying the security quantity input field */
    sharesInput: (AcatWizardAssetSelectionInput | null)
    /** A CTA associated with this section */
    cta: AcatWizardAssetSelectionCTA
    /** Copy for informing the user if they did not find what they are searching for */
    notFoundCopy: (RichTextContent | null)
    __typename: 'InvestAcatWizardAssetSelectionAssetsSectionContent'
}

export interface AcatWizardAssetSelectionInput {
    label: (Scalars['String'] | null)
    placeholder: (Scalars['String'] | null)
    helperText: (Scalars['String'] | null)
    __typename: 'AcatWizardAssetSelectionInput'
}

export interface AcatWizardAssetSelectionCTA {
    label: Scalars['String']
    icon: (AppImage | null)
    __typename: 'AcatWizardAssetSelectionCTA'
}

export interface InvestAcatTransferTypeScreenContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** Header `AppLink`. */
    headerLink: (AppLink | null)
    /** ACAT transfer option selections. */
    selections: InvestAcatWizardTransferTypeSelection[]
    /** CTA label. */
    ctaLabel: Scalars['String']
    /** Analytics for viewing this page */
    pageViewAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'InvestAcatTransferTypeScreenContent'
}

export interface InvestAcatWizardTransferTypeSelection {
    /** Transfer type label. */
    label: Scalars['String']
    /** Transfer type sub-label. */
    sublabel: (Scalars['String'] | null)
    /** `AppLink` to use for navigation purposes. */
    navigation: InvestAcatWizardTransferTypeSelectionNavigationEnum
    /** Analytics for choosing this transfer type */
    analyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'InvestAcatWizardTransferTypeSelection'
}

export type InvestAcatWizardTransferTypeSelectionNavigationEnum = 'FULL_ACAT_TRANSFER' | 'PARTIAL_ACAT_TRANSFER' | 'ROLLOVER'

export interface InvestAcatBrokerageSelectionContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** Content for the Contra Participant search form in the Invest ACAT Wizard. */
    searchForm: (InvestAcatWizardContraSearchForm | null)
    /** List of contra participants available for users to ACAT from. */
    contraParticipants: (InvestAcatWizardContraParticipantConnection | null)
    /** CTA label. */
    ctaLabel: Scalars['String']
    __typename: 'InvestAcatBrokerageSelectionContent'
}

export interface InvestAcatWizardContraSearchForm {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Copy and `AppLink` for users transferring from a brokerage that cannot be handled in-app. */
    contraUnavailableNotice: (InvestAcatWizardContraUnavailable | null)
    /** Search form placeholder text. */
    placeholder: (Scalars['String'] | null)
    /** Result of contra participants based on user's search term. */
    contraParticipantList: (InvestAcatWizardContraParticipantConnection | null)
    __typename: 'InvestAcatWizardContraSearchForm'
}

export interface InvestAcatWizardContraUnavailable {
    /** Copy to display when a user's search yields no results. */
    content: Scalars['String']
    /** `AppLink` to display to users when their search yields no results. */
    link: AppLink
    __typename: 'InvestAcatWizardContraUnavailable'
}

export interface InvestAcatWizardContraParticipantConnection {
    pageInfo: PageInfo
    edges: ((InvestAcatWizardContraParticipantEdge | null)[] | null)
    __typename: 'InvestAcatWizardContraParticipantConnection'
}

export interface InvestAcatWizardContraParticipantEdge {
    cursor: Scalars['String']
    node: (InvestAcatWizardContraParticipant | null)
    __typename: 'InvestAcatWizardContraParticipantEdge'
}

export interface InvestAcatWizardContraParticipant {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** `AppImage` for the contra participant. */
    icon: (AppImage | null)
    /** Name of the contraparticipant. */
    name: (Scalars['String'] | null)
    __typename: 'InvestAcatWizardContraParticipant'
}

export interface InvestAcatBrokerageAccountDetailsContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** Label and placeholder content for the contra account number text field. */
    accountNumberTextField: (InvestAcatWizardContraAccountNumberTextField | null)
    /** Optional informational message. */
    informationalMessage: (InvestAcatWizardInformationalMessageContent | null)
    /** CTA label. */
    ctaLabel: Scalars['String']
    __typename: 'InvestAcatBrokerageAccountDetailsContent'
}

export interface InvestAcatWizardContraAccountNumberTextField {
    /** Label copy. */
    label: (Scalars['String'] | null)
    /** Placeholder copy. */
    placeholder: (Scalars['String'] | null)
    /** For use in client-side input validation. Account number must be greater than or equal to this amount. */
    minAccountLength: (Scalars['Int'] | null)
    /** For use in client-side input validation. Account number must be less than or euqal to this amount. */
    maxAccountLength: (Scalars['Int'] | null)
    __typename: 'InvestAcatWizardContraAccountNumberTextField'
}

export interface InvestAcatWizardInformationalMessageContent {
    /** Icon to display for the ACAT Wizard Informational Message on the Contra Brokerage Account Details page. */
    icon: (AppImage | null)
    /** Copy to display for the ACAT Wizard Informational Message on the Contra Brokerage Account Details page. */
    copy: (Scalars['String'] | null)
    __typename: 'InvestAcatWizardInformationalMessageContent'
}

export interface InvestAcatDestinationAccountContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** List of valid destination participants for the ACAT transfer. */
    validParticipants: (AccountConnection | null)
    /** Label for the participant dropdown. */
    validParticipantsLabel: (Scalars['String'] | null)
    /** Informational message. */
    informationalMessage: (AppInformationalMessageCard | null)
    /** CTA label. */
    ctaLabel: Scalars['String']
    __typename: 'InvestAcatDestinationAccountContent'
}

export interface InvestAcatTransferInformationScreenContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** A list of details that a user should know as it pertains to ACAT Invest transfers. */
    transferDetails: InvestAcatTransferDetail[]
    /** Footer content. */
    footer: (Scalars['String'] | null)
    /** CTA label. */
    ctaLabel: Scalars['String']
    __typename: 'InvestAcatTransferInformationScreenContent'
}

export interface InvestAcatTransferDetail {
    /** `AppLink` for the Transfer Detail. */
    icon: (AppImage | null)
    /** Transfer detail title. */
    title: Scalars['String']
    /** Transfer detail content. */
    content: Scalars['String']
    /** Optional `AppLink` for the transfer detail. */
    link: (AppLink | null)
    __typename: 'InvestAcatTransferDetail'
}

export interface InvestAcatConfirmSelectionsContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** CTA label. */
    ctaLabel: Scalars['String']
    /** The internal account a user is transferring assets into. */
    destinationAccount: (Account | null)
    /** The external brokerage a user is transferring assets from. */
    externalBrokerage: (InvestAcatWizardContraParticipant | null)
    /** Additional information related to the transfer (e.g. securities, cash, etc.). */
    sections: (InvestAcatConfirmSelectionsContentSection[] | null)
    /** The amount of cash a user is transferring as part of a partial ACAT. Will be null for full ACAT transfers. */
    cash: (InvestAcatConfirmSelectionsCashSection | null)
    /** The number of assets a user is transferring as part of a partial ACAT. Will be null for full ACAT transfers. */
    assets: (InvestAcatConfirmSelectionsAssetsSection | null)
    /** Additional details related to the ACAT transfer for the user to be aware of. */
    transferDetails: InvestAcatConfirmSelectionsTransferDetailsSection
    __typename: 'InvestAcatConfirmSelectionsContent'
}

export interface InvestAcatConfirmSelectionsContentSection {
    header: Scalars['String']
    entries: InvestAcatConfirmSelectionsContentSectionEntry[]
    __typename: 'InvestAcatConfirmSelectionsContentSection'
}

export interface InvestAcatConfirmSelectionsCashSection {
    header: (RichTextContent | null)
    amount: Scalars['String']
    __typename: 'InvestAcatConfirmSelectionsCashSection'
}

export interface InvestAcatConfirmSelectionsAssetsSection {
    header: (RichTextContent | null)
    /** Label for a link that shows how many assets the user is transferring */
    assetsListLinkLabel: Scalars['String']
    __typename: 'InvestAcatConfirmSelectionsAssetsSection'
}

export interface InvestAcatConfirmSelectionsContentSectionEntry {
    label: Scalars['String']
    value: Scalars['String']
    __typename: 'InvestAcatConfirmSelectionsContentSectionEntry'
}

export interface InvestAcatConfirmSelectionsTransferDetailsSection {
    header: (Scalars['String'] | null)
    details: InvestAcatConfirmSelectionsTransferDetailsSectionDetail[]
    __typename: 'InvestAcatConfirmSelectionsTransferDetailsSection'
}

export interface InvestAcatConfirmSelectionsTransferDetailsSectionDetail {
    icon: (AppImage | null)
    body: RichTextContent
    __typename: 'InvestAcatConfirmSelectionsTransferDetailsSectionDetail'
}

export interface InvestAcatConfirmationContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header content. */
    header: (Scalars['String'] | null)
    /** `AppImage` for confirmation screen. */
    image: (AppImage | null)
    /** `InvestAcatConfirmationInfoCard` content. */
    infoCard: (InvestAcatConfirmationInfoCard | null)
    /** CTA label. */
    ctaLabel: Scalars['String']
    __typename: 'InvestAcatConfirmationContent'
}

export interface InvestAcatConfirmationInfoCard {
    /** Title content. */
    title: (Scalars['String'] | null)
    /** An array of strings to display as a list. */
    content: Scalars['String'][]
    /** Footer content. */
    footer: (Scalars['String'] | null)
    __typename: 'InvestAcatConfirmationInfoCard'
}

export interface Profile {
    /** Information about the primary account holder. Null when there are no accounts with a primary account holder. */
    primary: AccountHolder
    /** Information about the secondary account holder. Null when there are no accounts with a secondary account holder. */
    secondary: (AccountHolder | null)
    /** Suitabililty information about the primary account holder. Null when there are no accounts with a primary account holder. */
    suitability: SuitabilityProfile
    /**
     * A list of retirement account beneficiaries, if set. During updates, the value
     * for this field has special meaning -- set `null` to leave existing
     * beneficiaries as-is, or set `[]` to clear the existing beneficiaries list.
     */
    beneficiaries: Beneficiary[]
    /** When true, beneficiaries are allowed to be set on the profile. */
    allowsBeneficiaries: Scalars['Boolean']
    /** Updates to account holder home address will only be applied when true. */
    allowsHomeAddressUpdates: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use 'identityStatus' instead.
     * The current update status for profile information.
     */
    status: ProfileUpdateStatusEnum
    /** The current user's Identity status. Null if the user does not have an M1 Identity. */
    identityStatus: (IdentityProfileStatus | null)
    /** The trusted contact for the user profile. */
    trustedContact: (TrustedContact | null)
    __typename: 'Profile'
}


/** An update status for profile information. */
export type ProfileUpdateStatusEnum = 'UNACCEPTED' | 'ACCEPTED' | 'PENDING' | 'REJECTED'

export type IdentityProfileStatus = 'Created' | 'Queued' | 'Submitted' | 'Approved' | 'Rejected' | 'InReview' | 'UserActionRequired' | 'Unverified'


/** Represents profile information about an investment account holder. */
export interface AccountHolder {
    /** The full name of the account holder. */
    fullName: Scalars['String']
    /** The first (given) name of the account holder. */
    firstName: Scalars['String']
    /** The middle initial of the account holder. */
    middleInitial: (Scalars['String'] | null)
    /** The last (family) name of the account holder. */
    lastName: Scalars['String']
    /** The suffix of the account holder's name. */
    suffix: (NameSuffixEnum | null)
    /** The account holder's date of birth, in the format of `YYYY-MM-DD`. */
    dateOfBirth: Scalars['String']
    /** The account holder's country of citizenship. */
    countryOfCitizenship: Scalars['String']
    /** The home address of the account holder. */
    homeAddress: MailingAddress
    /** The phone number of the account holder. */
    phoneNumber: Scalars['String']
    /** An optional, additional email address for the account holder. */
    additionalEmail: (Scalars['String'] | null)
    /**
     * @deprecated use employmentInfo instead
     * The employment information for this account holder.
     */
    employment: Employment
    /** The employment information for this account holder. */
    employmentInfo: (Employment | null)
    /** Disclosure of an affiliation with a stock exchange or FINRA. */
    exchangeOrFinraAffiliationDisclosure: (ExchangeOrFinraAffiliationDisclosure | null)
    /** Disclosure of being a control person at any publicly-traded companies. */
    controlPersonDisclosure: (ControlPersonDisclosure | null)
    /**
     * @deprecated Deprecated please use politicalDisclosure instead
     * Disclosure of political exposure.
     */
    politicalExposureDisclosure: PoliticalExposureDisclosure
    /** Disclosure of political exposure. */
    politicalDisclosure: (PoliticalExposureDisclosure | null)
    /** Disclosure of user being subject to backup withholding. */
    backupWithholding: (BackupWithholding | null)
    __typename: 'AccountHolder'
}


/** A name suffix. */
export type NameSuffixEnum = 'JR' | 'SR' | 'I' | 'II' | 'III' | 'IV' | 'V' | 'VI' | 'VII' | 'VIII' | 'IX'


/**
 * Legacy - use Invest.permissibleCountriesForAccountOpen instead.
 * 
 * A list of countries valid for account holder citizenship.
 */
export type CitizenshipCountryEnum = 'USA' | 'AFG' | 'ALA' | 'ALB' | 'DZA' | 'ASM' | 'AND' | 'AGO' | 'AIA' | 'ATA' | 'ATG' | 'ARG' | 'ARM' | 'ABW' | 'AUS' | 'AUT' | 'AZE' | 'BHS' | 'BHR' | 'BGD' | 'BRB' | 'BLR' | 'BEL' | 'BLZ' | 'BEN' | 'BMU' | 'BTN' | 'BOL' | 'BES' | 'BIH' | 'BWA' | 'BVT' | 'BRA' | 'IOT' | 'BRN' | 'BGR' | 'BFA' | 'BDI' | 'CPV' | 'KHM' | 'CMR' | 'CAN' | 'CYM' | 'CAF' | 'TCD' | 'CHL' | 'CHN' | 'CXR' | 'CCK' | 'COL' | 'COM' | 'COD' | 'COG' | 'COK' | 'CRI' | 'CIV' | 'HRV' | 'CUB' | 'CUW' | 'CYP' | 'CZE' | 'DNK' | 'DJI' | 'DMA' | 'DOM' | 'ECU' | 'EGY' | 'SLV' | 'GNQ' | 'ERI' | 'EST' | 'ETH' | 'FLK' | 'FRO' | 'FJI' | 'FIN' | 'FRA' | 'GUF' | 'PYF' | 'ATF' | 'GAB' | 'GMB' | 'GEO' | 'DEU' | 'GHA' | 'GIB' | 'GRC' | 'GRL' | 'GRD' | 'GLP' | 'GUM' | 'GTM' | 'GGY' | 'GIN' | 'GNB' | 'GUY' | 'HTI' | 'HMD' | 'VAT' | 'HND' | 'HKG' | 'HUN' | 'ISL' | 'IND' | 'IDN' | 'IRN' | 'IRQ' | 'IRL' | 'IMN' | 'ISR' | 'ITA' | 'JAM' | 'JPN' | 'JEY' | 'JOR' | 'KAZ' | 'KEN' | 'KIR' | 'PRK' | 'KOR' | 'KWT' | 'KGZ' | 'LAO' | 'LVA' | 'LBN' | 'LSO' | 'LBR' | 'LBY' | 'LIE' | 'LTU' | 'LUX' | 'MAC' | 'MKD' | 'MDG' | 'MWI' | 'MYS' | 'MDV' | 'MLI' | 'MLT' | 'MHL' | 'MTQ' | 'MRT' | 'MUS' | 'MYT' | 'MEX' | 'FSM' | 'MDA' | 'MCO' | 'MNG' | 'MNE' | 'MSR' | 'MAR' | 'MOZ' | 'MMR' | 'NAM' | 'NRU' | 'NPL' | 'NLD' | 'NCL' | 'NZL' | 'NIC' | 'NER' | 'NGA' | 'NIU' | 'NFK' | 'MNP' | 'NOR' | 'OMN' | 'PAK' | 'PLW' | 'PSE' | 'PAN' | 'PNG' | 'PRY' | 'PER' | 'PHL' | 'PCN' | 'POL' | 'PRT' | 'PRI' | 'QAT' | 'REU' | 'ROU' | 'RUS' | 'RWA' | 'BLM' | 'SHN' | 'KNA' | 'LCA' | 'MAF' | 'SPM' | 'VCT' | 'WSM' | 'SMR' | 'STP' | 'SAU' | 'SEN' | 'SRB' | 'SYC' | 'SLE' | 'SGP' | 'SXM' | 'SVK' | 'SVN' | 'SLB' | 'SOM' | 'ZAF' | 'SGS' | 'SSD' | 'ESP' | 'LKA' | 'SDN' | 'SUR' | 'SJM' | 'SWZ' | 'SWE' | 'CHE' | 'SYR' | 'TWN' | 'TJK' | 'TZA' | 'THA' | 'TLS' | 'TGO' | 'TKL' | 'TON' | 'TTO' | 'TUN' | 'TUR' | 'TKM' | 'TCA' | 'TUV' | 'UGA' | 'UKR' | 'ARE' | 'GBR' | 'UMI' | 'URY' | 'UZB' | 'VUT' | 'VEN' | 'VNM' | 'VGB' | 'VIR' | 'WLF' | 'ESH' | 'YEM' | 'ZMB' | 'ZWE'


/** A list of states (or other subdivisions) valid for a mailing address for custodial benficiaries. */
export type MailingAddressSubdivisionForCustodialBeneficiariesEnum = 'AL' | 'AK' | 'AZ' | 'AR' | 'CA' | 'CO' | 'CT' | 'DE' | 'FL' | 'GA' | 'HI' | 'ID' | 'IL' | 'IN' | 'IA' | 'KS' | 'KY' | 'LA' | 'ME' | 'MD' | 'MA' | 'MI' | 'MN' | 'MS' | 'MO' | 'MT' | 'NE' | 'NV' | 'NH' | 'NJ' | 'NM' | 'NY' | 'NC' | 'ND' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VT' | 'VA' | 'WA' | 'WV' | 'WI' | 'WY' | 'DC' | 'AS' | 'MP' | 'PR' | 'UM' | 'FM' | 'MH' | 'PW'


/** Represents an employment for a user. */
export interface Employment {
    /** The status of employment. */
    status: EmploymentStatusEnum
    /** If employed, the employer. */
    employer: (Scalars['String'] | null)
    /** If employed, the occupation. */
    occupation: (Scalars['String'] | null)
    /** Boolean describing whether the user has selected an occupation/industry from the due diligence list. */
    hasSelectedOccupationFromList: (Scalars['Boolean'] | null)
    /** Boolean describing whether the user has selected an occupation status value from the due diligence list. */
    hasSelectedOccupationStatusFromList: (Scalars['Boolean'] | null)
    __typename: 'Employment'
}


/** An employment status. */
export type EmploymentStatusEnum = 'EMPLOYED' | 'SELF_EMPLOYED' | 'RETIRED' | 'STUDENT' | 'UNEMPLOYED'


/** Disclosure of an affiliation with a stock exchange or FINRA. */
export interface ExchangeOrFinraAffiliationDisclosure {
    /** Is the user is affiliated with, or an employee of a member firm of, a stock exchange or FINRA? */
    isAffiliated: Scalars['Boolean']
    /** If `isAffiliated` is `true`, the name of the affiliated firm. */
    firmName: (Scalars['String'] | null)
    __typename: 'ExchangeOrFinraAffiliationDisclosure'
}


/** Disclosure of the user being a control person of any public companies. */
export interface ControlPersonDisclosure {
    /** Is the user a control person (director, officer, or 10% stock owner) of any publicly-traded companies? */
    isControlPerson: Scalars['Boolean']
    /** If `isControlPerson` is `true`, a list of stock ticker symbols for which the user is a control person. */
    companySymbols: ((Scalars['String'] | null)[] | null)
    __typename: 'ControlPersonDisclosure'
}


/** Disclosure of the user having political exposure. */
export interface PoliticalExposureDisclosure {
    /** Is the user politically exposed? */
    isPoliticallyExposed: Scalars['Boolean']
    /** If `isPoliticallyExposed` is `true`, the name of the related political organization. */
    politicalOrganization: (Scalars['String'] | null)
    /** If `isPoliticallyExposed` is `true`, a list of the user's immediate family members, including former spouses. */
    immediateFamilyMembers: ((Scalars['String'] | null)[] | null)
    __typename: 'PoliticalExposureDisclosure'
}


/** Disclosure of the user having backup withholding. */
export interface BackupWithholding {
    /**
     * Is the user subject to backup withholding?
     * A null value represents the user not being asked this question previously.
     */
    isSubjectToBackupWithholding: (Scalars['Boolean'] | null)
    __typename: 'BackupWithholding'
}


/** Represents suitability information about the ownership of an investment account. */
export interface SuitabilityProfile {
    /** The combined account holders' yearly income in US dollars. */
    annualIncome: (AnnualIncomeEnum | null)
    /** The account holders' yearly income in US dollars. */
    annualIncomeAmount: (Scalars['Int'] | null)
    /** The combined account holders' net worth in US dollars. */
    totalNetWorth: (TotalNetWorthEnum | null)
    /** The account holders' net worth in US dollars. */
    totalNetWorthAmount: (Scalars['Int'] | null)
    /** The combined account holders' liquid net worth in US dollars. */
    liquidNetWorth: (LiquidNetWorthEnum | null)
    /** The account holders' liquid net worth in US dollars. */
    liquidNetWorthAmount: (Scalars['Int'] | null)
    /** The investment experience of the account holder(s). */
    investmentExperience: (InvestmentExperienceEnum | null)
    /** The investment risk tolerance of the account holder(s). */
    riskTolerance: (RiskToleranceEnum | null)
    /** The accoult holders' time horizon before making withdrawls on their investment. */
    timeHorizon: (TimeHorizonEnum | null)
    /** The account holders' liquidity needs for their money. */
    liquidityNeeds: (LiquidityNeedsEnum | null)
    __typename: 'SuitabilityProfile'
}


/** An annual income range in US Dollars. */
export type AnnualIncomeEnum = 'UP_TO_25000' | 'UP_TO_50000' | 'UP_TO_100000' | 'UP_TO_200000' | 'UP_TO_300000' | 'UP_TO_500000' | 'UP_TO_1200000' | 'UP_TO_INFINITY'


/** A total net worth range. */
export type TotalNetWorthEnum = 'UP_TO_50000' | 'UP_TO_100000' | 'UP_TO_200000' | 'UP_TO_500000' | 'UP_TO_1000000' | 'UP_TO_5000000' | 'UP_TO_INFINITY'


/** A liquid net worth range. */
export type LiquidNetWorthEnum = 'UP_TO_50000' | 'UP_TO_100000' | 'UP_TO_200000' | 'UP_TO_500000' | 'UP_TO_1000000' | 'UP_TO_5000000' | 'UP_TO_INFINITY'


/** A level of investment experience. */
export type InvestmentExperienceEnum = 'NONE' | 'LIMITED' | 'GOOD' | 'EXTENSIVE'


/** A level of risk tolerance. */
export type RiskToleranceEnum = 'LOW' | 'MEDIUM' | 'HIGH'


/** A time horizon. */
export type TimeHorizonEnum = 'SHORT' | 'AVERAGE' | 'LONGEST'


/** A level of liquidity need. */
export type LiquidityNeedsEnum = 'VERY_IMPORTANT' | 'SOMEWHAT_IMPORTANT' | 'NOT_IMPORTANT'


/** Information about an account beneficiary. */
export interface Beneficiary {
    /** The first (given) name of the beneficiary. */
    firstName: Scalars['String']
    /** The last (family) name of the beneficiary. */
    lastName: Scalars['String']
    /** The suffix of the beneficiary's name. */
    suffix: (NameSuffixEnum | null)
    /** The beneficiary's date of birth, in the format of `YYYY-MM-DD`. */
    dateOfBirth: Scalars['String']
    /** The home address of the beneficiary. */
    address: MailingAddress
    /** The relationship of the beneficiary to the account holder. */
    relationship: Scalars['String']
    /**
     * The percentage account ownership assigned to the beneficiary. The sums of the
     * primary and contingent beneficiary groups must each equal 100%.
     */
    sharePercentage: Scalars['Int']
    /**
     * True if this is a primary beneficiary. Otherwise, the beneficiary is
     * contingent. Primary beneficaries have seniority over contingent beneficiaries.
     */
    isPrimary: Scalars['Boolean']
    __typename: 'Beneficiary'
}


/** Information about the user's trusted contact. */
export interface TrustedContact {
    /** The first (given) name of the trusted contact. */
    firstName: Scalars['String']
    /** The last (family) name of the trusted contact. */
    lastName: Scalars['String']
    /** The email address of the trusted contact. */
    email: (Scalars['String'] | null)
    /** The phone number of the trusted contact. */
    phoneNumber: (Scalars['String'] | null)
    __typename: 'TrustedContact'
}


/** Information about referrals status for a specific user. */
export interface Referrals {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** True when the user is eligible to participate in the referrals program. */
    isEligible: Scalars['Boolean']
    /** True when the user is participating in the referrals program. */
    isParticipating: Scalars['Boolean']
    /**
     * Information about the user's referrer status. Value is null when the user is
     * not currently participating in the referrals program.
     */
    referrerStatus: (ReferrerStatus | null)
    /** The dollar amount that the referring user receives from a referral. */
    getAmount: Scalars['Float']
    /** The dollar amount that the referred user received from a referral. */
    giveAmount: Scalars['Float']
    /** The title for the referrals screen. */
    referralsTitle: Scalars['String']
    /** The description for the referrals screen. */
    referralsDescription: Scalars['String']
    /** A link to referrals terms and conditions. */
    referralsTermsLink: (AppLink | null)
    /** Info card to link to the referrals page */
    referralsCard: (AppInformationalMessageCard | null)
    /** Referrals navigation item for the side rail. If null, do not display anything. */
    referralsSideNavigationItem: (AppNavigationItem | null)
    /** Referrals navigation item for the top nav. If null, do not display anything. */
    referralsTopNavigationItem: (AppNavigationItem | null)
    __typename: 'Referrals'
}


/** Information about referrals program participation. */
export interface ReferrerStatus {
    /** The referrer code. Value is null when temporarily unavailable. */
    referrerCode: (Scalars['String'] | null)
    /**
     * The custom share URL for this referrer. Value is null when temporarily
     * unavailable.
     */
    shareUrl: (Scalars['String'] | null)
    /** A custom share message, including the share URL. */
    shareMessage: (Scalars['String'] | null)
    /**
     * The number of referrals that have registered, but not yet completed the
     * referral goal within the required time frame.
     */
    incompleteReferralCount: Scalars['Int']
    /** The number of referrals that have registered and completed the referral goal. */
    completeReferralCount: Scalars['Int']
    __typename: 'ReferrerStatus'
}

export interface ReferralOffer {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The dollar amount that a referring user will receive from a referral. */
    getAmount: Scalars['Float']
    /** The dollar amount that a referred user will receive from a referral. */
    giveAmount: Scalars['Float']
    /** The title for the web referral signup screen screen. */
    referralsTitle: Scalars['String']
    /** The illustration for the web referral signup screen screen. */
    referralsIllustration: (AppImage | null)
    /** The disclosure copy for the web referral signup screen screen. */
    referralsDisclosureContent: (RichTextContent[] | null)
    __typename: 'ReferralOffer'
}

export interface Research {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen: (PlusPromotionalMessage | null)
    __typename: 'Research'
}

export interface Quote {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The date and time that the quote was retrieved. */
    asOfTime: Scalars['String']
    /** The date and time of the last trade. */
    lastTradeTime: (Scalars['String'] | null)
    /** The date and time that the quote was retrieved formatted to the user's timezone (MM DD, HH:MM <timezeone abbreviation>). */
    localAsOfTime: Scalars['String']
    /** The date and time of the last trade formatted to the user's timezone (MM DD, HH:MM <timezeone abbreviation>). */
    localLastTradeTime: (Scalars['String'] | null)
    /**
     * The price at which the last trade of the security occurred, as of the quote's
     * time.
     */
    lastPrice: (Scalars['Float'] | null)
    /** The high price. */
    highPrice: (Scalars['Float'] | null)
    /** The low price. */
    lowPrice: (Scalars['Float'] | null)
    /** The range for the day (high - low). */
    priceRange: (Scalars['Float'] | null)
    /** The open price. */
    openPrice: (Scalars['Float'] | null)
    /** The price of the security at close of market on the previous trading day. */
    previousClosePrice: (Scalars['Float'] | null)
    /** The difference between the last price and the previous close price. */
    changeFromPreviousClosePrice: (Scalars['Float'] | null)
    /**
     * The percentage difference between the last price and the previous close price,
     * expressed as a percentage.
     */
    percentChangeFromPreviousClosePrice: (Scalars['Float'] | null)
    /** The number of trades during a session. */
    tradeVolume: (Scalars['Float'] | null)
    /** The number of shares traded during a session. */
    shareVolume: (Scalars['Float'] | null)
    /** The volume weighted average price. */
    vwap: (Scalars['Float'] | null)
    /**
     * True if trading in the security is halted as of the quote's time; false
     * otherwise. Value is null when unknown.
     */
    isTradingHalted: (Scalars['Boolean'] | null)
    __typename: 'Quote'
}

export type IssueTypeEnum = 'AMERICAN_DEPOSITORY_RECEIPT' | 'REAL_ESTATE_INVESTMENT_TRUST' | 'CLOSED_END_FUND' | 'SECONDARY_ISSUE' | 'LIMITED_PARTNERSHIP' | 'COMMON_STOCK' | 'EXCHANGE_TRADED_FUND' | 'OTHER'

export interface SecurityProfile {
    /** The issue type. */
    issueType: (IssueTypeEnum | null)
    /** The sector that the security belongs to. */
    sector: (Scalars['String'] | null)
    /** The industry that the security belongs to. */
    industry: (Scalars['String'] | null)
    /** A description of the company, if available. */
    description: (Scalars['String'] | null)
    /** A long description of the company, if available. */
    longDescription: (Scalars['String'] | null)
    /** The name of the CEO, if available. */
    ceo: (Scalars['String'] | null)
    /** The number of employees, if available. */
    numberOfEmployees: (Scalars['Int'] | null)
    /** A website URL for the company, if available. */
    website: (Scalars['String'] | null)
    /** The icon to display for websites */
    websiteIcon: AppImage
    /** A URL to a possible logo for the security. Value is null when no logo exists. Note that even when a value is returned, the URL may still respond with a 404 if no logo is available. */
    logoUrl: (Scalars['String'] | null)
    /** The location of the company headquarters. */
    headquarters: (Scalars['String'] | null)
    /** The url for the security information on the SEC's website. */
    securitySecUrl: (AppLink | null)
    /** The icon to display for the SEC website. */
    secIcon: AppImage
    __typename: 'SecurityProfile'
}

export interface PriceChange {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The date of the historical reference point.
     */
    date: Scalars['String']
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The number of days between the historical reference point and the date of the current price data.
     */
    daysAgo: Scalars['Int']
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The closing price on the reference point date. Value is rounded to cents for output.
     */
    previousPrice: Scalars['Float']
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The current price used for the price change calculation. Value is rounded to cents for output.
     */
    currentPrice: Scalars['Float']
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The difference between the current price and the previous price. Value is rounded to cents for output.
     */
    change: Scalars['Float']
    /** The percent change from the previous price to the current price. Value is rounded to two decimal places for output. */
    percentChange: Scalars['Float']
    /** The percent change, annualized. Value is rounded to two decimal places for output. */
    percentChangeAnnualized: Scalars['Float']
    __typename: 'PriceChange'
}


/** A dividend type. */
export type DividendTypeEnum = 'DIVIDEND_INCOME' | 'INTEREST_INCOME' | 'STOCK_DIVIDEND' | 'OTHER'

export interface SliceableShowcase {
    /** A list of showcased equities. */
    equities: Equity[]
    /** A list of showcased funds. */
    funds: Fund[]
    /** A list of showcased system pies. */
    systemPies: SystemPie[]
    __typename: 'SliceableShowcase'
}

export interface Spend {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The user is eligible to use Spend Checking. */
    isEligible: (Scalars['Boolean'] | null)
    /** If true, the user is eligible to send checks. */
    isEligibleForSendCheck: (Scalars['Boolean'] | null)
    /** If true, Send Check is enabled for the current user. */
    isSendCheckEnabled: (Scalars['Boolean'] | null)
    /** If true, the user meets the eligibility criteria to open more than one Spend account. */
    isMultipleAccountsEligible: (Scalars['Boolean'] | null)
    /** If true, the ability to open more than one Spend account is enabled for the user. */
    isMultipleAccountsEnabled: (Scalars['Boolean'] | null)
    /** If true, the Credit Card tab should be enabled and visible for the current user. */
    isCreditCardTabAvailable: (Scalars['Boolean'] | null)
    /** The user is eligible to select a Spend Checking Debit Card design. */
    isEligibleForCardSelection: (Scalars['Boolean'] | null)
    /** The `Viewer.profile` is created. */
    isProfileCreated: (Scalars['Boolean'] | null)
    /** The primary marketing screen content for the Spend overview page. */
    spendPrimaryMarketingScreen: (SpendPrimaryMarketingScreen | null)
    /** The new marketing screen content for the Spend overview page. */
    spendMarketingScreen: (SpendMarketingScreen | null)
    /** The `Viewer.profile` is accepted and ready to be a Spend Checking identity. */
    isProfileReady: (Scalars['Boolean'] | null)
    /** A `Spend.spendIdentity` has been created and verfication has been attempted. */
    isIdentityVerificationSubmitted: (Scalars['Boolean'] | null)
    /** True if the Spend overview changes are enabled for the user. */
    isSpendOverviewEnabled: (Scalars['Boolean'] | null)
    /**
     * A manual review of the `Spend.spendIdentity` has been completed, if it was
     * required. Same as `SpendIdentity.status.isVerificationReviewed`.
     */
    isIdentityVerificationReviewed: (Scalars['Boolean'] | null)
    /**
     * The `Spend.spendIdentity` is verified. Same as
     * `SpendIdentity.status.isVerified`.
     */
    isIdentityVerified: (Scalars['Boolean'] | null)
    /**
     * The user has no currently-pending transfers that prevent the internal
     * transfers linkage process to proceed.
     */
    isReadyForInternalTransfersLinkage: (Scalars['Boolean'] | null)
    /**
     * The entire Spend Checking enrollment process is complete, and Spend Checking features are ready
     * to use.
     */
    isSpendEnrollmentComplete: (Scalars['Boolean'] | null)
    /** The user currently has an active primary Spend Checking account. */
    hasActiveSpendAccount: (Scalars['Boolean'] | null)
    /** The user currently has an active Spend Checking debit card. */
    hasActiveDebitCard: (Scalars['Boolean'] | null)
    /** The user currently has a funded Invest account. */
    hasFundedInvestAccount: (Scalars['Boolean'] | null)
    /** A `Spend.externalAccount` has been created. */
    isExternalAccountInitiated: (Scalars['Boolean'] | null)
    /** A `Spend.primaryDebitCard` has been created. */
    isPrimaryDebitCardInitiated: (Scalars['Boolean'] | null)
    /**
     * @deprecated Sunset Checking.
     * The user agreements necessary to use Spend Checking.
     */
    spendAgreements: (SpendAgreements | null)
    /**
     * @deprecated Sunset Checking.
     * The Q2 customer due diligence questions needed to complete Spend Checking enrollment.
     */
    spendDueDiligenceQuestions: (SpendDueDiligenceQuestions | null)
    /** The user identity which must be verified and accepted to use Spend Checking. */
    spendIdentity: (SpendIdentity | null)
    /** The total account balance of all spend checking accounts. */
    netBalance: (Scalars['Float'] | null)
    /** A user's Spend Checking account. */
    spendAccount: (SpendAccount | null)
    /** All the current Spend accounts for the user, if the have a primary debit card account it will be returned first. */
    currentSpendAccounts: ((SpendAccount | null)[] | null)
    /** True if the user is able to add any additional Spend checking accounts. */
    isAbleToAddCheckingAccounts: (Scalars['Boolean'] | null)
    /** True if the user has any additional accounts in excess of their primary Spend account, false otherwise. */
    hasAdditionalCheckingAccounts: (Scalars['Boolean'] | null)
    /**
     * An optional external bank account, owned by the user, to be used for transfers
     * to Spend Checking accounts.
     */
    externalAccount: (SpendExternalAccount | null)
    /** The marketing perks for the request Spend Debit card enrollment screen. */
    debitCardMarketingPerks: ((TextWithTooltip | null)[] | null)
    /**
     * @deprecated Use `debitCardCta` and `availableDebitCardDesigns` instead.
     * Information about available debit cards before one is requested.
     */
    availableDebitCards: (SpendAvailableDebitCards | null)
    /** A list of currently-available debit card designs. */
    availableDebitCardDesigns: (SpendDebitCardDesign[] | null)
    /** Spend Checking debit card CTA assets to be displayed on Spend Checking screens. */
    debitCardCta: (SpendDebitCardCta | null)
    /** Spend Checking debit card assets to be displayed on Spend Checking marketing screens. */
    debitCardMarketing: (SpendDebitCardDesign | null)
    /** The primary Spend Checking debit card, if one has been requested. */
    primaryDebitCard: (SpendDebitCard | null)
    /** The last primary debit card, if there is one. */
    lastPrimaryDebitCard: (SpendDebitCard | null)
    /** A log of activity related to Spend Checking features. */
    activity: (SpendActivity | null)
    /** A boolean indicating whether the user has checking activity (i.e. is funded). */
    hasFundedCheckingAccount: (Scalars['Boolean'] | null)
    /**
     * A list of Plaid external accounts that are available for use as a linked Spend
     * external account.
     */
    availableExternalAccounts: (ExternalAccountConnection | null)
    /** True if there is at least one available external account. */
    hasAvailableExternalAccounts: (Scalars['Boolean'] | null)
    /** True if there is a linked external account for the user. */
    hasConnectedExternalAccount: (Scalars['Boolean'] | null)
    /**
     * A list of Invest external bank accounts which are currently eligible to be
     * migrated to become a Spend Checking external account.
     */
    migratableInvestExternalAccounts: (MigratableInvestExternalAccountConnection | null)
    /** True if there is at least one migratable Invest external account. */
    hasMigratableInvestExternalAccounts: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav: (PlusPromotionalMessage | null)
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen: (PlusPromotionalMessage | null)
    /** An optional Plus promotional message for the marketing screen. */
    plusPromotionForMarketingMain: (PlusPromotionalMessage | null)
    /** An optional Plus promotional message for a marketing screen detail. */
    plusPromotionForMarketingDetail1: (PlusPromotionalMessage | null)
    /** An optional Plus promotional message for a marketing screen detail. */
    plusPromotionForMarketingDetail2: (PlusPromotionalMessage | null)
    /** An optional Plus promotional message for a marketing screen detail. */
    plusPromotionForMarketingDetail3: (PlusPromotionalMessage | null)
    /** An optional Plus promotional message for the request debit card screen. */
    plusPromotionForRequestCardScreen: (PlusPromotionalMessage | null)
    /** A link to the direct deposit enrollment form */
    directDepositVoidedCheckUrl: (Scalars['String'] | null)
    /**
     * @deprecated Use `Transfers.moveMoney(type: SPEND)` instead
     * Returns information that pertains to the Spend Checking Move Money screen.
     */
    moveMoney: SpendMoveMoney
    /**
     * @deprecated Sunset Checking.
     * Returns information that pertains to the send check screen.
     */
    sendCheck: (SendCheck | null)
    __typename: 'Spend'
}

export interface SpendAgreements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The Spend Checking e-sign agreement. Must be presented separately to customers. */
    eSignAgreement: SpendESignAgreement
    /** The latest bundle of agreements that must be accepted to use Spend Checking. */
    latestAgreements: AgreementBundle
    __typename: 'SpendAgreements'
}

export interface SpendDueDiligenceQuestions {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * The list of customer due diligence questions.
     */
    questions: DueDiligenceQuestion[]
    __typename: 'SpendDueDiligenceQuestions'
}

export interface DueDiligenceQuestion {
    /**
     * @deprecated Sunset Checking.
     * The question ID for the Spend Checking due diligence question.
     */
    questionId: Scalars['Float']
    /**
     * @deprecated Sunset Checking.
     * The question analytics event for the Spend Checking due diligence question.
     */
    questionAnalyticsEvent: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * The question name for the Spend Checking due diligence question.
     */
    questionName: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * The question description for the Spend Checking due diligence question.
     */
    questionDescription: Scalars['String']
    /**
     * @deprecated Sunset Checking.
     * The required answer type for the Spend Checking due diligence question.
     */
    answerType: SpendDueDiligenceAnswerTypeEnum
    /**
     * @deprecated Sunset Checking.
     * The available choices for the Spend Checking due diligence question.
     */
    choices: DueDiligenceQuestionChoice[]
    __typename: 'DueDiligenceQuestion'
}

export interface DueDiligenceQuestionChoice {
    /**
     * @deprecated Sunset Checking.
     * The ID for this Spend Checking due diligence question choice.
     */
    choiceId: (Scalars['Float'] | null)
    /**
     * @deprecated Sunset Checking.
     * The name for this Spend Checking due diligence question choice.
     */
    choiceName: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * The description for this Spend Checking due diligence question choice.
     */
    choiceDescription: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * Value denoting whether or not the user should skip the following question.
     */
    shouldSkipNextQuestion: (Scalars['Boolean'] | null)
    __typename: 'DueDiligenceQuestionChoice'
}

export type SpendDueDiligenceAnswerTypeEnum = 'SINGLE_SELECT_DROPDOWN' | 'SINGLE_SELECT_RADIAL' | 'MULTI_SELECT' | 'TEXT'

export interface TextWithTooltip {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The text for this text and tooltip item. */
    text: Scalars['String']
    /** The optional tooltip content for this text and tooltip item. */
    tooltipContent: (Scalars['String'] | null)
    __typename: 'TextWithTooltip'
}

export interface SpendPrimaryMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The title for the primary Spend overview marketing screen. */
    title: (Scalars['String'] | null)
    /** The title for the primary Spend overview marketing screen. */
    subtitle: (Scalars['String'] | null)
    /** The small pair of Spend overview balance labels to be displayed on the primary marketing screen on mobile with credit balance info if applicable */
    creditBalanceLabel: ((BalanceOverviewLabel | null)[] | null)
    /** The large Spend overview balance label to be displayed on the primary marketing screen on mobile with checking and savings balance info if applicable */
    checkingBalanceLabel: (BalanceOverviewLabel | null)
    /** An array of account cards for the user's Spend checking accounts, if applicable. */
    checkingAccounts: ((AccountCard | null)[] | null)
    /** The account card for the user's Spend credit card account, if applicable. */
    creditCardAccount: (AccountCard | null)
    /** An array of account cards for the user's Savings accounts, if applicable */
    savingsAccounts: ((AccountCard | null)[] | null)
    /** The Plus promotional message for the primary Spend overview marketing screen. */
    plusCard: (PlusPromotionalMessage | null)
    /** The tooltip text for the Spend primary marketing screen for maximum account creation, if applicable. */
    addAccountTooltipText: ((Scalars['String'] | null)[] | null)
    /** An array of the content cards for the primary Spend overview marketing screen. */
    marketingCards: ((MarketingCard | null)[] | null)
    /** Additional AppLinks to be displayed at the bottom of the primary Spend overview marketing screen. */
    additionalLinks: ((AppLink | null)[] | null)
    /** Additional disclaimer text to be displayed at the bottom of the primary Spend overview marketing screen. */
    disclaimerText: ((Scalars['String'] | null)[] | null)
    __typename: 'SpendPrimaryMarketingScreen'
}

export interface BalanceOverviewLabel {
    /** The value for the balance overview label. */
    primaryBalanceValue: (Scalars['String'] | null)
    /** The description for the balance overview label. */
    primaryBalanceLabel: (Scalars['String'] | null)
    /** The optional toolptip for the balance overview label. */
    balanceToolTip: ((Scalars['String'] | null)[] | null)
    __typename: 'BalanceOverviewLabel'
}

export interface AccountCard {
    /** The account ID for the associated Spend checking or credit card account. */
    accountId: (Scalars['String'] | null)
    /** The title for the Spend account card. */
    title: (Scalars['String'] | null)
    /** The balance to be displayed for the Spend account card. */
    balance: (Scalars['Float'] | null)
    /** The subtitle for the Spend account card. */
    subtitle: (Scalars['String'] | null)
    /** The optional AppPill for the Spend account card. */
    pill: (AppPill | null)
    __typename: 'AccountCard'
}

export type SpendPrimaryMarketingIndicatorEnum = 'CREDIT' | 'CHECKING' | 'SAVINGS'

export interface MarketingCard {
    /** Enumerated value for account types (ie: INVEST | LENDING | SAVINGS | CHECKING | CREDIT) */
    accountType: SpendPrimaryMarketingIndicatorEnum
    /** The main title for a marketing screen card. */
    title: (Scalars['String'] | null)
    /** The optional title tooltip for a marketing screen card. */
    titleTooltip: (Scalars['String'] | null)
    /** The optional card icon for a marketing screen card. */
    cardIcon: (AppImage | null)
    /** An analytics event for following the step into the personal loan application flow. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** An array of perks relating to a marketing screen card. */
    marketingPerks: ((MarketingPerk | null)[] | null)
    /** The optional card image for a marketing screen card. */
    cardImage: (AppImage | null)
    /** An array of links for a marketing screen card. */
    marketingLinks: ((AppLink | null)[] | null)
    /** The CTA destination deep link for a marketing screen card. */
    ctaButtonDestination: (AppLink | null)
    __typename: 'MarketingCard'
}

export interface MarketingPerk {
    /** The icon for a marketing screen perk. */
    icon: (AppImage | null)
    /** The title on a marketing screen perk. */
    title: (Scalars['String'] | null)
    /** The subtitle on a marketing screen perk. */
    subtitle: (Scalars['String'] | null)
    /** The optional tooltip on a marketing screen perk. */
    tooltip: (Scalars['String'] | null)
    __typename: 'MarketingPerk'
}

export interface SpendESignAgreement {
    /** Content of the agreement in HTML format. */
    contentHtml: Scalars['String']
    __typename: 'SpendESignAgreement'
}

export interface SpendIdentity {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The status of the identity. */
    status: SpendIdentityStatus
    __typename: 'SpendIdentity'
}

export interface SpendIdentityStatus {
    /** The identity status code. */
    code: SpendIdentityStatusCodeEnum
    /** Verification of the identity has been attempted. */
    isVerificationSubmitted: Scalars['Boolean']
    /** A manual review of the identity has been completed, if it was necessary. */
    isVerificationReviewed: Scalars['Boolean']
    /** The identity is verified. */
    isVerified: Scalars['Boolean']
    /** The identity is currently locked. */
    isLocked: Scalars['Boolean']
    __typename: 'SpendIdentityStatus'
}

export type SpendIdentityStatusCodeEnum = 'INITIATED' | 'MANUAL_REVIEW' | 'VERIFIED' | 'DENIED' | 'EXPIRED' | 'ARCHIVED' | 'DECEASED'

export interface SpendAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The account category. */
    accountCategory: AccountCategoryEnum
    /** The name of the account. */
    name: Scalars['String']
    /** A descriptor for the account, for help identifying in a list. */
    descriptor: (Scalars['String'] | null)
    /** The time when the account was created. */
    createdDate: Scalars['String']
    /** The routing number for the account. */
    routingNumber: (Scalars['String'] | null)
    /** The account number for the account. */
    accountNumber: (Scalars['String'] | null)
    /** Information about the status of the account. */
    status: SpendAccountStatus
    /** If applicable, a checklist of steps for the user to complete for product onboarding. */
    setupChecklist: (SetupChecklist | null)
    /** Information about the balance of the account. */
    balance: (SpendAccountBalance | null)
    /** Information about the rates associated with the account. */
    rates: (SpendAccountRates | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    /** A link to report any issues for the Spend Checking user. */
    accountResolutionCta: (AppLink | null)
    /** True, if the current Spend account is the primary checking account which has the user's debit card if applicable, false otherwise. */
    isPrimarySpendAccount: (Scalars['Boolean'] | null)
    /** The Spend promotional message for Credit Card to be displayed on the checking screen. */
    creditMarketingCard: (SpendPromotionalMessage | null)
    __typename: 'SpendAccount'
}


/** Information about a Borrow account. */
export interface SpendPromotionalMessage {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Title for the Spend promotional message. */
    title: (Scalars['String'] | null)
    /** Body text for the Spend promotional message. */
    body: (Scalars['String'] | null)
    /** Link for the Spend promotional message. */
    link: (AppLink | null)
    /** Optional tooltip array for the Spend promotional message. */
    tooltip: ((Scalars['String'] | null)[] | null)
    __typename: 'SpendPromotionalMessage'
}


/** Information about a Borrow account. */
export interface PhysicalCheck {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The account category. */
    accountCategory: AccountCategoryEnum
    /** The name of the account. */
    name: Scalars['String']
    /** A descriptor for the account, for help identifying in a list. */
    descriptor: (Scalars['String'] | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    __typename: 'PhysicalCheck'
}


/** The status of a Spend Checking account. */
export interface SpendAccountStatus {
    /** The status code. */
    code: SpendAccountStatusCodeEnum
    /** True if the account is currently open or pending open. */
    isActive: Scalars['Boolean']
    /** True if the account is currently open and ready to be used. */
    isOpen: Scalars['Boolean']
    /** A friendly description of the account status. */
    description: Scalars['String']
    __typename: 'SpendAccountStatus'
}


/** A Spend Checking account status code. */
export type SpendAccountStatusCodeEnum = 'PENDING_OPEN' | 'OPEN' | 'PENDING_CLOSED' | 'CLOSED'


/** Information about the balance of a Spend Checking account. */
export interface SpendAccountBalance {
    /** The sum of all settled transactions. Includes funds that have holds. */
    current: Scalars['Float']
    /** The settled amount available for withdrawal. Omits funds with holds. */
    available: Scalars['Float']
    /**
     * The settled amount subject to temporary holds. This is the current balance
     * minus the available balance. It cannot be negative.
     */
    holds: Scalars['Float']
    /** True if the current balance contains funds with holds. */
    hasHolds: Scalars['Boolean']
    /** The sum of all pending deposit transactions. */
    pending: Scalars['Float']
    /** True if the account currently has any value. */
    hasValue: Scalars['Boolean']
    __typename: 'SpendAccountBalance'
}


/** Information about the rates associated with a Spend Checking account. */
export interface SpendAccountRates {
    /** The current interest rate. */
    interestRatePercent: (Scalars['Float'] | null)
    /** The current cash back rate. */
    cashBackRatePercent: (Scalars['Float'] | null)
    __typename: 'SpendAccountRates'
}

export interface SpendExternalAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The name of the account. */
    name: Scalars['String']
    /** The status of the external account. */
    status: SpendExternalAccountStatus
    /** The account type. */
    accountType: SpendExternalAccountTypeEnum
    /** The routing number. */
    routingNumber: (Scalars['String'] | null)
    /** The account number. */
    accountNumber: (Scalars['String'] | null)
    /** The transfer participant type categorization. */
    transferParticipantType: TransferParticipantTypeEnum
    /** The name to display for this transfer participant. */
    transferParticipantName: Scalars['String']
    /** An optional description of this transfer participant. */
    transferParticipantDescription: (Scalars['String'] | null)
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances: (Scalars['Boolean'] | null)
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances: ((TransferInstance | null)[] | null)
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary: (Scalars['String'] | null)
    __typename: 'SpendExternalAccount'
}

export interface SpendExternalAccountStatus {
    /** The status code. */
    code: SpendExternalAccountStatusCodeEnum
    /** The account is awaiting verification. */
    isAwaitingVerification: Scalars['Boolean']
    /** Verification is currently blocked. */
    isBlockedVerification: Scalars['Boolean']
    /** The account has been verified and is ready to be used for transfers. */
    isVerified: Scalars['Boolean']
    /** The account is currently locked. */
    isLocked: Scalars['Boolean']
    __typename: 'SpendExternalAccountStatus'
}

export type SpendExternalAccountStatusCodeEnum = 'UNVERIFIED' | 'VERIFY_LOCKED' | 'VERIFIED' | 'DENIED' | 'EXPIRED' | 'ARCHIVED'

export type SpendExternalAccountTypeEnum = 'CHECKING' | 'SAVINGS' | 'PREPAID'


/** Information about available Spend Checking debit cards. */
export interface SpendAvailableDebitCards {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Use `debitCardMarketing or debitCardCta` instead.
     * The Spend Checking debit card design that should be displayed as a preview.
     */
    previewDesignType: (SpendDebitCardDesignTypeEnum | null)
    __typename: 'SpendAvailableDebitCards'
}


/** A Spend Checking debit card. */
export interface SpendDebitCard {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The status of the card. */
    status: SpendDebitCardStatus
    /** The content and actions for the Spend debit manage card screen. */
    manageCard: (ManageSpendCard | null)
    /** The full name of the cardholder, as it is printed on the card. */
    fullName: Scalars['String']
    /** The Primary Account Number (PAN) printed on the card, masked. */
    panMasked: Scalars['String']
    /** The card expiration month. */
    expireMonth: Scalars['Int']
    /** The card expiration year. */
    expireYear: Scalars['Int']
    /**
     * @deprecated Use `design` instead.
     * The visual design type of the card.
     */
    designType: (SpendDebitCardDesignTypeEnum | null)
    /** Limits pertaining to card usage. */
    limits: (SpendDebitCardLimits | null)
    /** A description of this card's design. */
    design: (SpendDebitCardDesign | null)
    __typename: 'SpendDebitCard'
}


/** Spend Checking debit manage card screen content and actions. */
export interface ManageSpendCard {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Link directly to additional flow for managing a Spend debit card. */
    manageCardAssistanceLink: (AppLink | null)
    /** All available card actions for the user's current Spend debit card. */
    cardActions: ((ManageSpendCardAction | null)[] | null)
    __typename: 'ManageSpendCard'
}

export interface ManageSpendCardAction {
    /** The title for this manage card action. */
    title: (Scalars['String'] | null)
    /** The subtitle for this manage card action. */
    subtitle: (Scalars['String'] | null)
    /** The text and destination to route the user for this manage card action. */
    destination: (AppLink | null)
    __typename: 'ManageSpendCardAction'
}


/** A Spend Checking debit card design description. */
export interface SpendDebitCardDesign {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A styling hint for CTA copy. */
    contrastHint: SpendDebitCardContrastHintEnum
    /** Unique key to identify the card design type. */
    designTypeKey: Scalars['String']
    /** A short description for the card design. */
    description: (Scalars['String'] | null)
    /** The name of the card design. */
    name: Scalars['String']
    /** Information about whether the card is available to the user as an option. */
    isAvailableToUser: (Scalars['Boolean'] | null)
    /** Image of an angled debit card */
    angledDebitCard: (AppImage | null)
    /** Image of an flat debit card */
    flatDebitCard: (AppImage | null)
    /** Image of an flat debit card without logo */
    flatDebitCardWithoutLogo: (AppImage | null)
    /** Image of a thumbnail debit card */
    thumbnail: (AppImage | null)
    __typename: 'SpendDebitCardDesign'
}


/** A Spend Checking debit card CTA design description. */
export interface SpendDebitCardCta {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Spend Checking Debit Card description for CTA style card. */
    design: (SpendDebitCardDesign | null)
    /** Information about whether the user has an active Spend Checking debit card. Logic matches `Spend.primaryDebitCard?.status.isActive`. */
    isCardInitiated: (Scalars['Boolean'] | null)
    /** Information about whether the user's Spend Checking debit card is awaiting verification. */
    isCardAwaitingVerification: (Scalars['Boolean'] | null)
    __typename: 'SpendDebitCardCta'
}


/** Spend Checking debit card CTA copy styling hint. */
export type SpendDebitCardContrastHintEnum = 'STANDARD' | 'INVERSE'


/** The status of a Spend Checking debit card. */
export interface SpendDebitCardStatus {
    /** The status code. */
    code: SpendDebitCardStatusCodeEnum
    /** True if the card is ready for use or going to be ready for use. */
    isActive: Scalars['Boolean']
    /** The card has been requested but is awaiting manufacturing and shipping. */
    isAwaitingIssuance: Scalars['Boolean']
    /** The card has reached the expiration date and can no longer be used. */
    isExpired: Scalars['Boolean']
    /** The card has been shipped and is awaiting verification. */
    isAwaitingVerification: Scalars['Boolean']
    /** The card is verified and ready to use. */
    isVerified: Scalars['Boolean']
    /** The card is currently locked (either for the system or for the user). */
    isLocked: Scalars['Boolean']
    /** The specific lock status. */
    lockStatusCode: SpendDebitCardLockStatusCodeEnum
    /** When the card is locked, the reason for the lock. */
    lockReasonCode: (SpendDebitCardLockReasonCodeEnum | null)
    __typename: 'SpendDebitCardStatus'
}


/** The Spend Checking debit card status code. */
export type SpendDebitCardStatusCodeEnum = 'INITIATED' | 'PENDING' | 'PENDING_VERIFICATION' | 'VERIFIED' | 'DENIED' | 'EXPIRED' | 'ARCHIVED' | 'REISSUED' | 'REISSUED_PENDING_VERIFICATION' | 'HOTLISTED'


/** The lock status of a Spend Checking debit card. */
export type SpendDebitCardLockStatusCodeEnum = 'UNLOCKED' | 'CUSTOMER_LOCKED' | 'SYSTEM_LOCKED'


/** The reason for a lock on a Spend Checking debit card. */
export type SpendDebitCardLockReasonCodeEnum = 'UNKNOWN' | 'STOLEN' | 'LOST' | 'SUSPECTED_FRAUD' | 'PHYSICAL_DAMAGE' | 'ADMINISTRATIVE' | 'TEMPORARY' | 'PIN_RETRIES_EXCEEDED'


/** The visual design type of a Spend Checking debit card. */
export type SpendDebitCardDesignTypeEnum = 'BASIC_V1' | 'PLUS_V1'


/** Limits pertaining to card usage. */
export interface SpendDebitCardLimits {
    /** The total dollar amount that may be spent per day using the card. */
    dailySpendingLimit: (Scalars['Float'] | null)
    /** The total dollar amount that may be withdrawn per day at an ATM. */
    dailyAtmWithdrawalLimit: (Scalars['Float'] | null)
    /** The number of ATM fee instances that will be reimbursed per month. */
    monthlyAtmFeeReimbursements: (Scalars['Int'] | null)
    __typename: 'SpendDebitCardLimits'
}

export interface SpendActivity {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * A list of Spend Checking activity entries, including Spend Checking transactions. Sorted in
     * reverse chronological order.
     */
    activity: (SpendActivityEntryConnection | null)
    __typename: 'SpendActivity'
}

export type SpendActivityModeEnum = 'ONLY_PENDING' | 'ONLY_FINAL' | 'ALL'

export interface SpendActivityEntryConnection {
    total: (Scalars['Int'] | null)
    pageInfo: PageInfo
    edges: ((SpendActivityEntryEdge | null)[] | null)
    __typename: 'SpendActivityEntryConnection'
}

export interface SpendActivityEntryEdge {
    cursor: Scalars['String']
    node: (SpendActivityEntry | null)
    __typename: 'SpendActivityEntryEdge'
}


/** A Spend Checking activity entry. */
export type SpendActivityEntry = (CreditCardTransaction | SavingsTransaction | SpendTransaction | SpendActivityOtherEntry) & { __isUnion?: true }

export interface SpendActivityEntryDetails {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Additional label/value pairs to display for the activity entry. */
    additionalDetails: ((SpendActivityEntryAdditionalDetail | null)[] | null)
    /** Amount of the entry. */
    amount: Scalars['Float']
    /** Category details for the entry. Null if unavailable or otherwise uncategorized. */
    categoryDetails: (SpendActivityEntryCategoryDetails | null)
    /** Dispute details for the entry. Value present if entry is disputable. */
    disputeDetails: (SpendActivityEntryDisputeDetails | null)
    /** If entry is eligible for debit card cash back program. */
    isEligibleForCashBack: (Scalars['Boolean'] | null)
    /**
     * @deprecated Utilize `colorizedTransactionRewardTier` instead.
     * Returns the associated rewards tier for the transaction if applicable.
     */
    transactionRewardTier: (AppPill | null)
    /** Returns the associated color coded reward tier for the transaction if applicable. Use instead of transactionRewardTier. */
    colorizedTransactionRewardTier: (CreditCardRewardsAppPill | null)
    /** Optional pill to display if the transaction is a reversal, either return or refund. */
    isReversal: (AppPill | null)
    /** If entry is an ACH reversal or return */
    isReversalOrReturn: (Scalars['Boolean'] | null)
    /** Plus promotional message for the view. */
    plusPromotion: (PlusPromotionalMessage | null)
    /** Status pill to display, if any. */
    status: (AppPill | null)
    /** Further supplementary message about the entry. */
    supplementaryMessage: (SpendActivityEntrySupplementaryMessage | null)
    /** Entry details title. */
    title: Scalars['String']
    /** Additional separate lines of copy with links interspersed. */
    additionalLinks: (RichTextContent[] | null)
    __typename: 'SpendActivityEntryDetails'
}

export interface SpendActivityEntryAdditionalDetail {
    /** A short label describing the value or pill. */
    label: Scalars['String']
    /** A value. Likely some metadata about the entry, e.g. created date, description, etc. */
    value: Scalars['String']
    /** A pill relating to the entry, likely some descriptive image. */
    pill: (AppPill | null)
    __typename: 'SpendActivityEntryAdditionalDetail'
}

export interface SpendActivityEntryCategoryDetails {
    /** An icon representing the category. */
    icon: AppImage
    /** A subtitle with more details on the category. */
    subtitle: (Scalars['String'] | null)
    /** The title of the category. */
    title: Scalars['String']
    __typename: 'SpendActivityEntryCategoryDetails'
}

export interface SpendActivityEntrySupplementaryMessage {
    /** The content of the supplementary message. */
    content: Scalars['String']
    /** A link with more information regarding the message, if any. */
    link: (AppLink | null)
    /** The phone number to be linked to in the content. */
    phoneNumber: (Scalars['String'] | null)
    __typename: 'SpendActivityEntrySupplementaryMessage'
}

export interface SpendActivityEntryDisputeDetails {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Plain content describing steps to resolve a disputete. */
    content: Scalars['String'][]
    /** Phone number to use for disputes. */
    phoneNumber: (Scalars['String'] | null)
    /** If entry is associated with a debit card transaction, the related SpendDebitCard. */
    ifDebitCardRelated: (SpendDebitCard | null)
    /** A link to the support resolution form to assist the user in the dispute. */
    resolutionCta: (AppLink | null)
    /** The title of the dispute details. */
    title: Scalars['String']
    /** The label for use on entry details linking to dispute details. */
    viaDetailsCtaLabel: Scalars['String']
    __typename: 'SpendActivityEntryDisputeDetails'
}

export interface SpendTransaction {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The date this transaction was created. */
    date: Scalars['String']
    /** A status AppPill for this transaction. */
    status: (AppPill | null)
    /** The activity date for this transaction. */
    activityDate: Scalars['String']
    /** The Spend Checking icon for this transaction. */
    icon: (AppImage | null)
    /** The category label for this transaction. */
    categoryLabel: Scalars['String']
    /** A boolean to indicate whether this transaction is voided or not. */
    isVoided: (Scalars['Boolean'] | null)
    /** A friendly description for this transaction which must be displayed to users. */
    description: Scalars['String']
    /** The merchant name where the activity entry occured. */
    merchant: (Scalars['String'] | null)
    /** A short summary description for this transaction. */
    summary: Scalars['String']
    /**
     * The signed dollar amount associated with this transaction. Postive amounts are
     * cash flows into a Spend Checking account, and negative amounts are cash flows out.
     */
    amount: (Scalars['Float'] | null)
    /** The date this transaction was settled, if applicable. */
    settledDate: (Scalars['String'] | null)
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntryDetails` type.
     * Information about the transaction type.
     */
    transactionType: SpendTransactionType
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntryDetails` type.
     * Information about the transaction status.
     */
    transactionStatus: SpendTransactionStatus
    /** An optional Plus promotional message. */
    plusPromotionForTransaction: (PlusPromotionalMessage | null)
    /** Further details for this activity entry. */
    details: (SpendActivityEntryDetails | null)
    /** @deprecated Utilize appropriate field from `SpendActivityEntry` type. */
    transactionDate: Scalars['String']
    __typename: 'SpendTransaction'
}


/** Information about the type of a Spend Checking transaction. */
export interface SpendTransactionType {
    /** A friendly description of the transaction type. */
    description: Scalars['String']
    /** A category type for the transaction, if known. */
    categoryType: (SpendTransactionCategoryTypeEnum | null)
    /** A title describing the categorization, if known. */
    categoryTitle: (Scalars['String'] | null)
    /** Additional detail describing the categorization, if available. */
    categoryDetail: (Scalars['String'] | null)
    /** True if the transaction involves a debit card. */
    isCardTransaction: Scalars['Boolean']
    /** True if the transaction is a debit card authorization transaction. */
    isCardAuthTransaction: Scalars['Boolean']
    /** True if the transaction is a debit card reversal or an ACH return. */
    isReversalOrReturn: Scalars['Boolean']
    __typename: 'SpendTransactionType'
}

export type SpendTransactionCategoryTypeEnum = 'SYSTEM_TRANSFERS' | 'OUTSIDE_TRANSFERS' | 'INTEREST_PAYMENTS' | 'ATM' | 'CASH' | 'CHECK' | 'EDUCATION' | 'ENTERTAINMENT' | 'FINANCES' | 'FOOD' | 'FUEL' | 'GAMBLING' | 'GOVERNMENT_SERVICES' | 'GROCERIES' | 'HEALTH' | 'HOUSING_SERVICES' | 'MEMBERSHIPS' | 'MISCELLANEOUS' | 'OFFICE' | 'PROFESSIONAL_SERVICES' | 'RECREATIONAL' | 'RETAIL' | 'TRAVEL' | 'TRANSPORATION' | 'UTILITIES' | 'PAYMENT' | 'FEE'


/** The status of a Spend Checking transaction. */
export interface SpendTransactionStatus {
    /** The status code. */
    code: SpendTransactionStatusCodeEnum
    /** True if the transaction is currently pending. */
    isPending: Scalars['Boolean']
    /** True if the transaction has been voided. */
    isVoided: Scalars['Boolean']
    /** A friendly description of the transaction status. */
    description: (Scalars['String'] | null)
    __typename: 'SpendTransactionStatus'
}


/** A Spend Checking transaction status code. */
export type SpendTransactionStatusCodeEnum = 'INITIATED' | 'PENDING' | 'SETTLED' | 'VOIDED' | 'REVERSED'


/** A Spend Checking activity entry of an unknown type. */
export interface SpendActivityOtherEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The status of this activity entry. */
    status: (AppPill | null)
    /** The date for this activity entry. */
    date: Scalars['String']
    /** The formatted date for this activity entry. */
    activityDate: Scalars['String']
    /** The AppImage icon for this activity entry. */
    icon: (AppImage | null)
    /** A short summary description for this transaction. */
    summary: Scalars['String']
    /** A friendly description of this activity entry. */
    description: Scalars['String']
    /** The merchant name where the activity entry occured. */
    merchant: (Scalars['String'] | null)
    /** A short description of the activity entry category. */
    categoryLabel: Scalars['String']
    /** A boolean value for whether or not the transaction is void. */
    isVoided: (Scalars['Boolean'] | null)
    /** A signed dollar amount associated with this activity, if applicable. */
    amount: (Scalars['Float'] | null)
    /** Further details for this activity entry. */
    details: (SpendActivityEntryDetails | null)
    /** @deprecated Utilize appropriate field from `SpendActivityEntry` type. */
    transactionDate: Scalars['String']
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was settled.
     */
    settledDate: (Scalars['String'] | null)
    __typename: 'SpendActivityOtherEntry'
}

export interface MigratableInvestExternalAccountConnection {
    pageInfo: PageInfo
    edges: ((MigratableInvestExternalAccountEdge | null)[] | null)
    __typename: 'MigratableInvestExternalAccountConnection'
}

export interface MigratableInvestExternalAccountEdge {
    cursor: Scalars['String']
    node: (MigratableInvestExternalAccount | null)
    __typename: 'MigratableInvestExternalAccountEdge'
}


/** Description of a migratable Invest external bank account. */
export interface MigratableInvestExternalAccount {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A title for the external bank account. */
    title: Scalars['String']
    /** A description for the external bank account, if available. */
    description: (Scalars['String'] | null)
    /**
     * When applicable, a Plaid external account that corresponds to this migratable
     * Invest external bank account.
     */
    relatedExternalAccount: (ExternalAccount | null)
    __typename: 'MigratableInvestExternalAccount'
}


/** Deprecated - use `Transfers.moveMoney(type: SPEND)` instead */
export interface SpendMoveMoney {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: Scalars['String']
    /** Subtitle for the Spend Checking Move Money screen. */
    subtitle: (Scalars['String'] | null)
    /** Categories of options for moving money from Spend Checking. */
    categories: ((SpendMoveMoneyCategory | null)[] | null)
    __typename: 'SpendMoveMoney'
}


/** Deprecated - use `MoveMoneyCategory` instead */
export interface SpendMoveMoneyCategory {
    /** Category label. */
    label: Scalars['String']
    /** List of options for a Spend Checking Move Money category. */
    options: ((SpendMoveMoneyOption | null)[] | null)
    __typename: 'SpendMoveMoneyCategory'
}


/** Deprecated - use `MoveMoneyOption` instead */
export interface SpendMoveMoneyOption {
    /** An analytics event to be recorded upon clicking a Spend Checking Move Money option. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** Spend Checking Move Money Option icon. */
    icon: (AppImage | null)
    /** Spend Checking Move Money Option title. */
    title: Scalars['String']
    /** Optional `AppPill` to display for the move money option. */
    pill: (AppPill | null)
    /** Spend Checking Move Money Option subtitle. */
    subtitle: Scalars['String']
    /** Spend Checking Move Money Option link. */
    destination: SpendMoveMoneyOptionDestinationEnum
    __typename: 'SpendMoveMoneyOption'
}


/** Deprecated - use `MoveMoneyOption.link` instead */
export type SpendMoveMoneyOptionDestinationEnum = 'DEPOSIT' | 'WITHDRAW' | 'SEND_CHECK' | 'DIRECT_DEPOSIT' | 'CREDIT_CARD'

export interface SendCheck {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Ineligible screen in the Send Check flow.
     */
    ineligibleContent: (SendCheckIneligibleContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Plus Marketing screen in the Send Check flow.
     */
    plusMarketingContent: (SendCheckPlusMarketingContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy and screen variables for the Transfer Overview screen in the Send Check flow.
     */
    transferOverviewContent: (SendCheckTransferOverviewContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy and recent recipient data for the Select Recipient screen in the Send Check flow.
     */
    selectRecipientContent: (SendCheckSelectRecipientContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Select Recipient Type screen in the Send Check flow.
     */
    selectRecipientTypeContent: (SelectRecipientTypeContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Recipient Information screen in the Send Check flow.
     */
    recipientInformationContent: (RecipientInformationContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Set Check Amount screen in the Send Check flow.
     */
    setCheckAmountContent: (SetCheckAmountContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Check Memo screen in the Send Check flow.
     */
    checkMemoContent: (CheckMemoContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Confirm Check Details pop up in the Send Check flow.
     */
    confirmCheckDetailsContent: (ConfirmCheckDetailsContent | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Payment Confirmed screen in the Send Check flow.
     */
    paymentConfirmedContent: (PaymentConfirmedContent | null)
    /**
     * @deprecated Sunset Checking.
     * Boolean indicating whether or not recurring Send Check is enabled for the user.
     */
    isRecurringSendCheckEnabled: (Scalars['Boolean'] | null)
    __typename: 'SendCheck'
}

export interface SendCheckIneligibleContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Header for the Send Check Ineligble screen content. */
    header: Scalars['String']
    /** Content copy for the Send Check Ineligible screen content. */
    content: Scalars['String']
    /** Send Check FAQ `AppLink`. */
    sendCheckFaqCta: (AppLink | null)
    /** Done CTA Copy. */
    doneCtaCopy: Scalars['String']
    __typename: 'SendCheckIneligibleContent'
}

export interface SendCheckPlusMarketingContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: (Scalars['String'] | null)
    /** Image for the Send Check Plus Marketing screen. */
    image: AppImage
    /** Header for the Send Check Plus Marketing screen content. */
    header: Scalars['String']
    /** Content copy for the Send Check Plus Marketing screen content. */
    content: Scalars['String']
    /** M1 Plus content copy for the Send Check Plus Marketing screen content. */
    plusContent: Scalars['String']
    /** Join CTA Copy */
    joinCtaCopy: Scalars['String']
    /** Learn More CTA `AppLink`. */
    learnMore: (AppLink | null)
    __typename: 'SendCheckPlusMarketingContent'
}

export interface SendCheckTransferOverviewContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Icon to be used in the Spend Checking Account overview section. */
    spendAccountIcon: AppImage
    /** Screen title copy. */
    title: (Scalars['String'] | null)
    /** Short description for the Spend Checking account being used as the source for the transfer. */
    spendAccountDescription: (Scalars['String'] | null)
    /** Current balance of the Spend Checking account being used as the source for the transfer. */
    spendAccountBalance: (Scalars['String'] | null)
    /** Icon (optional), label and placeholder copy for the Recipient section of the Send Check Transfer Overview screen. */
    recipientOverviewSection: (SendCheckTransferDetailOption | null)
    /** Icon (optional), label and placeholder copy for the Amount section of the Send Check Transfer Overview screen. */
    amountSection: (SendCheckTransferDetailOption | null)
    /** Icon (optional), label and placeholder copy for the Memo section of the Send Check Transfer Overview screen. */
    memoSection: (SendCheckTransferDetailOption | null)
    /** Copy used for the link to switch to a recurring check schedule. */
    recurringCheckCopy: Scalars['String']
    /** Copy used for the link to switch to a one-time check. */
    oneTimeCheckCopy: Scalars['String']
    /** Label for the Frequency section of the Send Check Transfer Overview screen. */
    frequencySectionLabel: (Scalars['String'] | null)
    /** Copy for the Continue CTA */
    continueCtaCopy: Scalars['String']
    __typename: 'SendCheckTransferOverviewContent'
}

export interface SendCheckTransferDetailOption {
    /** Label for a Send Check Transfer Overview screen option (recipient, amount, etc.). */
    label: (Scalars['String'] | null)
    /** Placeholder for a Send Check Transfer Overview screen option (recipient, amount, etc.). */
    placeholder: Scalars['String']
    /** Icon to display, if applicable. */
    icon: (AppImage | null)
    __typename: 'SendCheckTransferDetailOption'
}

export interface SendCheckSelectRecipientContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: Scalars['String']
    /** Label for the new recipient section. */
    newRecipientLabel: Scalars['String']
    /** Optional sublabel for the new recipient section. */
    newRecipientSublabel: (Scalars['String'] | null)
    /** Display list for recent send check recipient(s). */
    recentRecipients: (SendCheckRecipientList | null)
    __typename: 'SendCheckSelectRecipientContent'
}

export interface SendCheckRecipientList {
    /** Optional title/description for a list of send check recipients. */
    title: Scalars['String']
    /** List of send check recipients. */
    recipients: ((SendCheckRecipientListItem | null)[] | null)
    __typename: 'SendCheckRecipientList'
}

export interface SendCheckRecipientListItem {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Send check recipient label. */
    label: Scalars['String']
    /** Send check recipient sublabel. */
    sublabel: Scalars['String']
    /** Send check recipient edit requirements. */
    recipientEditRequirements: (SendCheckRecipientEditRequirements | null)
    __typename: 'SendCheckRecipientListItem'
}

export interface SendCheckRecipientEditRequirements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Indicates whether the recipient is an idividual or a business. */
    recipientType: SendCheckRecipientTypeEnum
    /** If the recipient is an individual, this is the recipient's first name. */
    firstName: (Scalars['String'] | null)
    /** If the recipient is an individual, this is the recipient's last name. */
    lastName: (Scalars['String'] | null)
    /** If the recipient is a business, this is the recipient's business name. */
    businessName: (Scalars['String'] | null)
    /** Line one of the recipient's mailing address. */
    lineOne: Scalars['String']
    /** Line two of the recipient's mailing address. */
    lineTwo: (Scalars['String'] | null)
    /** The recipient's city. */
    city: Scalars['String']
    /** The recipient's state or province. */
    stateOrProvince: MailingAddressSubdivisionEnum
    /** The recipient's postal code. */
    postalCode: Scalars['PostalCode']
    __typename: 'SendCheckRecipientEditRequirements'
}

export type SendCheckRecipientTypeEnum = 'INDIVIDUAL' | 'BUSINESS'

export interface SelectRecipientTypeContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: Scalars['String']
    /** Individual recipient option. */
    individual: (SendCheckRecipientTypeOption | null)
    /** Business recipient option. */
    business: (SendCheckRecipientTypeOption | null)
    __typename: 'SelectRecipientTypeContent'
}

export interface SendCheckRecipientTypeOption {
    /** Business recipient option title. */
    title: Scalars['String']
    /** Business recipient option subtitle. */
    subtitle: Scalars['String']
    __typename: 'SendCheckRecipientTypeOption'
}

export interface RecipientInformationContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: Scalars['String']
    /** Recipient's name section title. */
    recipientNameTitle: Scalars['String']
    /** Recipient's address section title. */
    recipientAddressTitle: Scalars['String']
    /** Copy for the Continue CTA */
    continueCtaCopy: Scalars['String']
    __typename: 'RecipientInformationContent'
}

export interface SetCheckAmountContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * Screen title copy.
     */
    title: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * Minimum amount for which a check can be written for.
     */
    minCheckAmount: Scalars['Float']
    /**
     * @deprecated Sunset Checking.
     * Maximum amount for which a check can be written for.
     */
    maxCheckAmount: Scalars['Float']
    /**
     * @deprecated Sunset Checking.
     * Error message to display if the check amount is greater than required value.
     */
    maxErrorMessageCopy: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * Error message to display if the check amount is less than required value.
     */
    minErrorMessageCopy: (Scalars['String'] | null)
    /**
     * @deprecated Sunset Checking.
     * Copy for the Continue CTA.
     */
    continueCtaCopy: Scalars['String']
    __typename: 'SetCheckAmountContent'
}

export interface CheckMemoContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Screen title copy. */
    title: (Scalars['String'] | null)
    /** Copy to be used for the input placeholder. */
    inputPlaceholder: Scalars['String']
    /** Maximum number of characters that can be included in the Memo input. */
    maxCharacterLimit: Scalars['Int']
    /** Continue CTA Copy. */
    continueCtaCopy: Scalars['String']
    __typename: 'CheckMemoContent'
}

export interface ConfirmCheckDetailsContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Pop-up title copy. */
    title: Scalars['String']
    /** Copy for the From label. */
    fromLabel: Scalars['String']
    /** `AppImage` for the send check transfer source. */
    fromIcon: (AppImage | null)
    /** Spend Checking account description. */
    spendAccountDescription: Scalars['String']
    /** Copy for the To label. */
    toLabel: Scalars['String']
    /** Copy for the Frequency label. */
    frequencyLabel: (Scalars['String'] | null)
    /** `AppImage` for the send check transfer destination. */
    toIcon: (AppImage | null)
    /** Copy for the Address label. */
    addressLabel: Scalars['String']
    /** Copy for the Memo label. */
    memoLabel: Scalars['String']
    /** Content for the send check transfer timing message. */
    transferTimingMessage: SendCheckTransferTimingMessage
    /** Copy for the Cancel Transfer CTA. */
    cancelCtaCopy: Scalars['String']
    /** Copy for the Confirm Transfer CTA. */
    confirmTransferCtaCopy: Scalars['String']
    __typename: 'ConfirmCheckDetailsContent'
}

export interface SendCheckTransferTimingMessage {
    /** `AppImage` for the transfer timing message. */
    icon: (AppImage | null)
    /** Content for the transfer timing message. */
    content: Scalars['String']
    /** `AppLink` for the transfer timing message. */
    link: (AppLink | null)
    __typename: 'SendCheckTransferTimingMessage'
}

export interface PaymentConfirmedContent {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Payment confirmed screen title. */
    title: (Scalars['String'] | null)
    /** Send Check payment confirmed illustration. */
    illustration: (AppImage | null)
    /** Payment confirmed screen content header copy. */
    headerCopy: Scalars['String']
    /** Payment confirmed screen content body copy. */
    bodyCopy: Scalars['String']
    /** Copy for the Done CTA. */
    doneCtaCopy: Scalars['String']
    /** Copy for Check Details CTA. */
    checkDetailsCtaCopy: Scalars['String']
    __typename: 'PaymentConfirmedContent'
}


/** Information about the current trading status of an account. */
export interface AccountTradingStatus {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The timestamp for this status. */
    asOfTime: Scalars['String']
    /** True when the account is currently in the process of trading. */
    isInProgress: Scalars['Boolean']
    /** True when the account is actively under maintenance window via our vendor. Null if vendor maintenance state is not available or not relevant to the account. */
    isInVendorMaintenanceWindow: (Scalars['Boolean'] | null)
    /** The type of window currently in progress for the account, if applicable. */
    inProgressWindowForAccount: (TradingWindowTypeEnum | null)
    /** The anticipated start time of the next trading window for the account. */
    nextTradingTime: (Scalars['String'] | null)
    /** The type of the next available trading window for this account. */
    nextWindowForAccount: (TradingWindowTypeEnum | null)
    /** The type of the system's next trading window. */
    nextWindowForSystem: (TradingWindowTypeEnum | null)
    /** A description of the system's next morning trading window. */
    nextMorningWindow: (TradingWindowDescription | null)
    /** A description of the system's next afternoon trading window. */
    nextAfternoonWindow: (TradingWindowDescription | null)
    /** A description of the system's next on demand trading window. */
    nextOnDemandWindow: (TradingWindowDescription | null)
    /** How many on demand trading windows are left. */
    onDemandTradeWindowsLeft: (Scalars['Int'] | null)
    /** The maximum number of on demand trading windows that can be performed per period. */
    maxOnDemandTradeWindows: (Scalars['Int'] | null)
    /** True if this account has access to the next afternoon trading window. */
    hasAccessToNextAfternoonWindow: (Scalars['Boolean'] | null)
    /**
     * True if `hasAccessToNextAfternoonWindow` is true AND this account is currently
     * allowed to trade in the next afternoon window based on day trading rules.
     */
    hasAccessToAndCanTradeInNextAfternoonWindow: (Scalars['Boolean'] | null)
    /** The minimum account value required for trading in multiple windows. */
    minAccountValueForMultipleDailyWindows: (Scalars['Float'] | null)
    /** The allocated trades of the last on-demand trade window OR the given on-demand trade window. */
    onDemandAllocatedTrades: (OnDemandAllocatedTrade[] | null)
    /** The reason on-demand trading is restricted for the user. If null, the user is allowed to trade. */
    onDemandTradingRestrictionReason: (Scalars['String'] | null)
    __typename: 'AccountTradingStatus'
}


/** A trading window type. */
export type TradingWindowTypeEnum = 'MORNING' | 'AFTERNOON' | 'ADMIN' | 'LEGACY' | 'ON_DEMAND'


/** A trading window description. */
export interface TradingWindowDescription {
    /** The type of this trading window. */
    type: TradingWindowTypeEnum
    /** The starting time of this trading window. */
    startTime: Scalars['String']
    __typename: 'TradingWindowDescription'
}

export interface OnDemandAllocatedTrade {
    /** The account ID of the account that made this trade. */
    brokerageAccountId: Scalars['ID']
    /** The account number of the account that made this trade. */
    custodianAccountNumber: Scalars['String']
    /** The trade window ID of the trade window that this trade belongs to. */
    tradeWindowId: Scalars['ID']
    /** The security that was traded. */
    of: (Security | null)
    /** Whether the trade was a buy or sell. */
    side: OnDemandAllocatedTradeSideEnum
    /** The quantity of the traded security. */
    allocatedQuantity: (Scalars['Float'] | null)
    /** The price of the traded security. */
    allocatedPrice: (Scalars['Float'] | null)
    /** The amount of the security purchased in dollars. */
    allocatedAmount: (Scalars['Float'] | null)
    /** The status of the allocated trade. */
    status: OnDemandAllocatedTradeStatusEnum
    /** The copy to display for the status of the allocated trade. */
    statusCopy: Scalars['String']
    /**
     * @deprecated Undesired pattern. Use `note` instead.
     * Optional notes about the allocated trade, such as reasons why it was rejected. Deprecated.
     */
    notes: (OnDemandAllocatedTradeNote[] | null)
    /** Optional note about the allocated trade, such as reasons why it was rejected. */
    note: (Scalars['String'] | null)
    /** Pill indicating the status of the allocated trade. */
    statusPill: (AppPill | null)
    /** The timestamp of when the trade was created. */
    createdTimestamp: Scalars['String']
    /** The timestamp of when the trade was executed. */
    executionTimestamp: (Scalars['String'] | null)
    __typename: 'OnDemandAllocatedTrade'
}

export interface OnDemandAllocatedTradeNote {
    key: Scalars['String']
    value: Scalars['String']
    __typename: 'OnDemandAllocatedTradeNote'
}

export type OnDemandAllocatedTradeStatusEnum = 'PENDING' | 'OPEN' | 'FILLED' | 'CANCELLED' | 'REJECTED'

export type OnDemandAllocatedTradeSideEnum = 'BUY' | 'SELL'

export interface SecurityMarginTooltip {
    /** The icon entry point to the security margin tooltip. */
    icon: AppImage
    /** The security margin label to be displayed with the tooltip. */
    label: Scalars['String']
    /** The security margin text to be displayed when the tooltip is engaged. */
    text: Scalars['String']
    __typename: 'SecurityMarginTooltip'
}


/** A recurrence schedule. */
export type RecurrenceSchedule = (MonthlySchedule | WeekOfMonthSchedule | BiweeklySchedule | WeeklySchedule) & { __isUnion?: true }


/** A monthly schedule. */
export interface MonthlySchedule {
    /** A short title for the schedule. */
    title: Scalars['String']
    /** A description of schedule. */
    description: Scalars['String']
    /** The day of the month. */
    dayOfMonth: MonthlyScheduleDateEnum
    __typename: 'MonthlySchedule'
}


/** A week-of-month schedule. */
export interface WeekOfMonthSchedule {
    /** A short title for the schedule. */
    title: Scalars['String']
    /** A description of schedule. */
    description: Scalars['String']
    /** The week of the month. */
    weekOfMonth: WeekOfMonthScheduleWeekEnum
    /** The day of the week. */
    dayOfWeek: WeeklyScheduleDayEnum
    __typename: 'WeekOfMonthSchedule'
}


/** A biweekly schedule. */
export interface BiweeklySchedule {
    /** A short title for the schedule. */
    title: Scalars['String']
    /** A description of schedule. */
    description: Scalars['String']
    /** The day of the week. */
    dayOfWeek: WeeklyScheduleDayEnum
    /** True if the schedule is for even weeks, false for odd weeks. */
    isEvenWeeks: Scalars['Boolean']
    __typename: 'BiweeklySchedule'
}


/** A weekly schedule. */
export interface WeeklySchedule {
    /** A short title for the schedule. */
    title: Scalars['String']
    /** A description of schedule. */
    description: Scalars['String']
    /** The day of the week. */
    dayOfWeek: WeeklyScheduleDayEnum
    __typename: 'WeeklySchedule'
}


/** Potential Credit Card AutoPay values. */
export type CreditCardPaymentValueEnum = 'STATEMENT_BALANCE' | 'MINIMUM_PAYMENT' | 'FIXED_AMOUNT'


/** Potential AutoPay values. */
export type AutoPayPaymentValueEnum = 'STATEMENT_BALANCE' | 'MINIMUM_PAYMENT' | 'MONTHLY_PAYMENT' | 'FIXED_AMOUNT' | 'CURRENT_BALANCE'


/** A monthly schedule date. */
export type MonthlyScheduleDateEnum = 'DAY_1' | 'DAY_2' | 'DAY_3' | 'DAY_4' | 'DAY_5' | 'DAY_6' | 'DAY_7' | 'DAY_8' | 'DAY_9' | 'DAY_10' | 'DAY_11' | 'DAY_12' | 'DAY_13' | 'DAY_14' | 'DAY_15' | 'DAY_16' | 'DAY_17' | 'DAY_18' | 'DAY_19' | 'DAY_20' | 'DAY_21' | 'DAY_22' | 'DAY_23' | 'DAY_24' | 'DAY_25' | 'DAY_26' | 'DAY_27' | 'DAY_28' | 'LAST'


/** A week-of-month schedule week number. */
export type WeekOfMonthScheduleWeekEnum = 'WEEK_1' | 'WEEK_2' | 'WEEK_3' | 'WEEK_4' | 'WEEK_5'


/** A weekly schedule day. */
export type WeeklyScheduleDayEnum = 'SUNDAY' | 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY'


/** Information about Invest account rollovers. */
export interface InvestRollovers {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    checkInstructions: (InvestRolloverCheckInstructions | null)
    /** Information about existing rollover transactions */
    rolloverTransactions: (RolloverTransactions | null)
    __typename: 'InvestRollovers'
}

export interface RolloverTransactions {
    /** The webview URL for existing ACAT transactions - this will return null if the user does not have previous rollover transactions. */
    transactionsWebviewUrl: (Scalars['String'] | null)
    __typename: 'RolloverTransactions'
}


/** Share Pie fields */
export interface InvestSharePie {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Share Pie modal */
    sharePieModal: (InvestSharePieModal | null)
    /** Share Pie Screenshot Information to be used on mobile for highlighting share pie feature */
    sharePieScreenshotBanner: (InformationBanner | null)
    __typename: 'InvestSharePie'
}

export interface InvestSharePieModal {
    /** share pie modal illustration */
    illustration: (AppImage | null)
    /** share pie title */
    title: (Scalars['String'] | null)
    /** share pie subtitle */
    subtitle: (Scalars['String'] | null)
    /** share pie message */
    message: (Scalars['String'] | null)
    /** share pie referrals */
    referrals: (Referrals | null)
    __typename: 'InvestSharePieModal'
}


/** Instructions for sending rollover checks. */
export interface InvestRolloverCheckInstructions {
    /** Who the check should be made payable to. */
    payableTo: Scalars['String']
    /**
     * The mailing address that the check should be sent to. Strings are intended to
     * be displayed verbatim on separate lines.
     */
    mailingAddressLines: Scalars['String'][]
    __typename: 'InvestRolloverCheckInstructions'
}

export interface User {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId: (Scalars['String'] | null)
    /** The time that this user was created in ISO 8601 format. */
    created: (Scalars['String'] | null)
    /**
     * @deprecated No longer supported.
     * No longer supported. Always returns null.
     */
    modified: (Scalars['String'] | null)
    /** The username of this user. */
    username: Scalars['String']
    /** The correlation key for this user. */
    correlationKey: Scalars['String']
    /** The push notification subscriber key for this user. */
    subscriberKey: (Scalars['String'] | null)
    /** A list of user data entries. */
    data: UserDataEntry[]
    /** The user requires verification via phone. */
    requiresPhoneVerification: (Scalars['Boolean'] | null)
    /** The user has successfullly completed verification via phone. */
    hasCompletedPhoneVerification: (Scalars['Boolean'] | null)
    /**
     * True if the user has completed onboarding. A user is considered onboarded if they have
     * a user profile.
     */
    hasOnboarded: Scalars['Boolean']
    /** True if the user has at least one (1) M1 product. */
    hasProduct: Scalars['Boolean']
    /** When true, the user's primary email address has been verified. */
    isPrimaryEmailVerified: Scalars['Boolean']
    /** When true, two factor authentication has been enabled for the user. */
    isTwoFactorAuthEnabled: Scalars['Boolean']
    /** Billing history and status for the user. */
    billing: Billing
    /** Hashe used for Intercom's Identity Verification */
    intercomIdentityHash: (Scalars['String'] | null)
    /** Referrals program information for the user. */
    referrals: (Referrals | null)
    /** The current agreement status for this user. */
    agreementStatus: (AgreementStatus | null)
    /** When true, user has requested account deletion */
    hasRequestedDeletion: Scalars['Boolean']
    /** When true, user account is deleted */
    accountDeletionComplete: Scalars['Boolean']
    /** A list of key value pairs for a given user's account meant to aid with third-party Customer Support services. */
    customerSupportFields: ((CustomerSupportField | null)[] | null)
    /** Entry point for modern onboarding as part of product agnostic onboarding experience. */
    onboardingIdentityFirst: (OnboardingIdentityFirst | null)
    /** Latest product selected during an onboarding flow. If a user has this value, that means they have completed Module 1 for the latest selected product. Null if not. */
    latestProductSelection: (ProductListIdentifier | null)
    /** When true, user has a primaryProfile with a non-nullable identityInfo object. In the case of service outage, returns true. */
    hasIdentityInfo: Scalars['Boolean']
    /** True if a user has a primary profile containing both profile and required suitability information. */
    hasCompletedProfile: Scalars['Boolean']
    __typename: 'User'
}

export interface OnboardingIdentityFirst {
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasDirectToHYSAFlagLaunchDarkly: (Scalars['Boolean'] | null)
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasScreenReorderingFlagLaunchDarkly: (Scalars['Boolean'] | null)
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasMidflowFlagLaunchDarkly: (Scalars['Boolean'] | null)
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasCxIntegratedOnboarding: Scalars['Boolean']
    /** Drives the User Profile section. Renders questions that collect L1 and L2 user information for creating an M1 User Profile with minimally required information. */
    userProfileSection: (OnboardingIdentityFirstUserProfileSection | null)
    /** Drives the financial suitability profile section. */
    financialSuitabilitySection: (OnboardingIdentityFirstFinancialSuitabilitySection | null)
    __typename: 'OnboardingIdentityFirst'
}

export type ModularConfirmationScreenFlowKind = 'DIRECT_TO_INVEST'

export interface OnboardingIdentityFirstUserProfileSection {
    title: (Scalars['String'] | null)
    questions: ((OnboardingIdentityFirstQuestion | null)[] | null)
    __typename: 'OnboardingIdentityFirstUserProfileSection'
}

export interface OnboardingIdentityFirstFinancialSuitabilitySection {
    title: (Scalars['String'] | null)
    questions: ((OnboardingIdentityFirstQuestion | null)[] | null)
    __typename: 'OnboardingIdentityFirstFinancialSuitabilitySection'
}

export type OnboardingIdentityFirstQuestionType = 'NAME' | 'ADDRESS' | 'NAME_AND_ADDRESS' | 'DATE_OF_BIRTH' | 'CITIZENSHIP' | 'DATE_OF_BIRTH_AND_CITIZENSHIP' | 'SOCIAL_SECURITY_NUMBER' | 'POLITICALLY_EXPOSED_PERSON' | 'EMPLOYMENT_STATUS' | 'WHERE_DO_YOU_WORK' | 'EMPLOYMENT_STATUS_AND_WHERE_DO_YOU_WORK' | 'ANNUAL_INCOME' | 'NET_WORTH' | 'LIQUID_NET_WORTH'

export interface OnboardingIdentityFirstQuestion {
    /** An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis. */
    questionType: (OnboardingIdentityFirstQuestionType | null)
    /** Title screen for the question. */
    title: (Scalars['String'] | null)
    /** Subtitle copy for the given question. */
    subtitle: (Scalars['String'] | null)
    /** An ENUM that represents the associated section the given question exists under. */
    section: (OnboardingIdentityFirstSectionType | null)
    /** Copy to be rendered for the continue CTA. */
    continueLabel: (Scalars['String'] | null)
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel: (Scalars['String'] | null)
    /** An array of strings for a any disclaimer tooltips that need to be shown for the given question. */
    disclaimerTooltipContent: ((Scalars['String'] | null)[] | null)
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType: (OnboardingIdentityFirstQuestionType | null)
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType: (OnboardingIdentityFirstQuestionType | null)
    __typename: 'OnboardingIdentityFirstQuestion'
}

export type OnboardingIdentityFirstSectionType = 'USER_PROFILE' | 'FINANCIAL_SUITABILITY'

export interface CustomerSupportField {
    /** A key associated with a given field. */
    key: (Scalars['String'] | null)
    /** A value associated with a given field. */
    value: (Scalars['String'] | null)
    __typename: 'CustomerSupportField'
}


/** Represents a user data entry. */
export interface UserDataEntry {
    /** The data key. */
    key: Scalars['String']
    /** The data value. Value is null when not present. */
    value: (Scalars['String'] | null)
    __typename: 'UserDataEntry'
}

export type MarketingScreen = (BorrowMarketingScreenV2 | InvestMarketingScreen | SpendMarketingScreen | EarnMarketingScreen) & { __isUnion?: true }


/** A statement type filter. */
export type StatementTypeFilterEnumType = 'CREDIT_CARD_STATEMENT' | 'CRYPTO_TAX_FORM' | 'INVEST_STATEMENT' | 'INVEST_TAX_FORM' | 'INVEST_TRADE_CONFIRMATION' | 'LENDING_DOCUMENT' | 'SPEND_STATEMENT' | 'SPEND_TAX_FORM'


/** A document type filter. */
export type DocumentTypeFilterEnumType = 'ACCOUNT_DOCUMENT' | 'INVESTMENTS_RELATED' | 'STATEMENT' | 'TAX_FORM' | 'TRADE_CONFIRMATION'


/** A document sort type. */
export type DocumentSortTypeEnum = 'ACCOUNT' | 'DATE' | 'TYPE'


/** An account registration type. */
export type BrokerAccountRegistrationEnum = 'BENEFICIARY_IRA' | 'CORPORATION' | 'CRYPTO' | 'CUSTODIAL' | 'CUSTODIAL_UGMA' | 'CUSTODIAL_UTMA' | 'INDIVIDUAL' | 'JOINT' | 'LLC' | 'PARTNERSHIP' | 'ROTH_IRA' | 'SEP_IRA' | 'SIMPLE_IRA' | 'TRADITIONAL_IRA' | 'TRUST'


/**
 * Deprecated - The action that will be run on the client side. Client will interpret this action.
 * Use AppButton instead.
 */
export interface AppAction {
    /**
     * @deprecated use AppButton instead
     * An analytics event for following the link.
     */
    analyticsEvent: (AppAnalyticsEvent | null)
    /**
     * @deprecated use AppButton instead
     * The action type used to execute client side.
     */
    type: AppActionEnum
    /**
     * @deprecated use AppButton instead
     * A title that can be displayed as trigger for an action.
     */
    title: Scalars['String']
    __typename: 'AppAction'
}

export type AppActionEnum = 'ENABLE_PLUS_AUTO_RENEW' | 'RESEND_EMAIL_VERIFICATION' | 'CREATE_TRANSFER_INSTANCE' | 'CREATE_IRA_TRANSFER' | 'SET_SCHEDULED_TRANSFER_RULE' | 'MARGIN_CALL' | 'MARGIN_VIEW_DETAILS' | 'MARGIN_LEARN_MORE' | 'VIEW_BILL' | 'FINISHED_REGISTER_USER_FLOW' | 'BEGIN_EARN_ONBOARDING_DIRECT_DEPOSIT'

export interface AppAnalyticsEvent {
    /** The name of the analytics event. */
    name: Scalars['String']
    /** An optional numeric value for the built-in `value` parameter. */
    valueParameter: (Scalars['Float'] | null)
    /** An optional list of parameters that should be sent with the event. */
    customParameters: (AppAnalyticsParameter[] | null)
    /** An optional list of boolean parameters that should be sent with the event. */
    customBoolParameters: (AppAnalyticsBooleanParameter[] | null)
    /** An optional list of number parameters that should be sent with the event. */
    customNumberParameters: (AppAnalyticsNumberParameter[] | null)
    __typename: 'AppAnalyticsEvent'
}


/** A specification for an analytics parameter. */
export interface AppAnalyticsParameter {
    /** The name of the parameter. */
    name: Scalars['String']
    /** The value of the parameter. */
    value: Scalars['String']
    __typename: 'AppAnalyticsParameter'
}


/** A specification for a boolean analytics parameter. */
export interface AppAnalyticsBooleanParameter {
    /** The name of the parameter. */
    name: Scalars['String']
    /** The value of the parameter. */
    value: Scalars['Boolean']
    __typename: 'AppAnalyticsBooleanParameter'
}


/** A specification for a number analytics parameter. */
export interface AppAnalyticsNumberParameter {
    /** The name of the parameter. */
    name: Scalars['String']
    /** The value of the parameter. */
    value: Scalars['Float']
    __typename: 'AppAnalyticsNumberParameter'
}


/** A union of possible App Buttons. */
export type AppButtonUnion = (AppButton | AppLink | AppShareButton) & { __isUnion?: true }

export type AppButtonInterface = (AppButton | AppShareButton) & { __isUnion?: true }

export interface AppButton {
    /** The label of the button */
    label: (Scalars['String'] | null)
    /** An analytics event for clicking the button */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** disabled state of the button */
    disabled: (Scalars['Boolean'] | null)
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind: (Scalars['String'] | null)
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size: (Scalars['String'] | null)
    /** An action that can be used for mapping the click event to a specific action */
    action: (AppActionEnum | null)
    __typename: 'AppButton'
}

export interface AppShareButton {
    /** The label of the button */
    label: (Scalars['String'] | null)
    /** An analytics event for clicking the button */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** The disabled state of the button */
    disabled: (Scalars['Boolean'] | null)
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind: (Scalars['String'] | null)
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size: (Scalars['String'] | null)
    /** Content string that is copied to clipboard or shared when the button is clicked */
    shareContent: (Scalars['String'] | null)
    /** Whether the button should copy or share the shareContent on click. If null, web behavior will default to copy and mobile behavior will default to share. */
    shareType: (AppShareButtonTypeEnum | null)
    __typename: 'AppShareButton'
}

export type AppShareButtonTypeEnum = 'COPY' | 'SHARE'

export interface AppCard {
    /** True if the card is collapsible */
    isCollapsible: (Scalars['Boolean'] | null)
    /** True if the card is dismissible */
    isDismissible: (Scalars['Boolean'] | null)
    /** Background color for the card - liquid semantic color naming used */
    backgroundColor: (Scalars['String'] | null)
    /** Border color for the card - liquid semantic color naming used */
    borderColor: (Scalars['String'] | null)
    /** Hover/highlight color for the card - liquid semantic color naming used */
    highlightColor: (Scalars['String'] | null)
    /** Icon for the card */
    icon: (AppImage | null)
    /** Title for the card */
    title: (RichTextContent | null)
    /** Body (paragraphs) for the card */
    paragraphs: (RichTextContent[] | null)
    /** Primary CTA for the card */
    primaryCta: (AppButtonUnion | null)
    /** Secondary CTA for the card */
    secondaryCta: (AppButtonUnion | null)
    /** Tappable CTA for the card, if applicable. If present, that signals to clients that the card itself should be tappable. */
    tappableCta: (AppButtonUnion | null)
    /** An analytics event to be recorded upon displaying the card. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    /** An analytics event to be recorded upon collapsing/dismissing the card. */
    actionAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'AppCard'
}

export interface AppImage {
    /**
     * The image type, can be either ILLUSTRATION or ICON. This field is to be used to determine which
     * component clients will use for the AppImage (Illustration or Icon).
     */
    type: AppImageType
    /**
     * The name(s) (key) of the Icon or Illustration asset.
     * The name needs to be a valid IllustrationsType or IconsType from the `@m1/liquid-react`.
     * Clients might not have the named asset, so fallbacks can be provided in the array after the first index.
     */
    names: (Scalars['String'][] | null)
    /** The color to fill monochromatic icons. Not relevant for any other image type. */
    color: (Scalars['String'] | null)
    /** Light-theme image variation. */
    lightTheme: AppImageSourceSet
    /** Dark-theme image variation. */
    darkTheme: AppImageSourceSet
    __typename: 'AppImage'
}

export type AppImageType = 'ILLUSTRATION' | 'POLYCHROMATIC_ICON' | 'MONOCHROMATIC_ICON' | 'LEGACY'


/** A set of source URLs for an image asset. */
export interface AppImageSourceSet {
    /** Asset Url at 1x resolution */
    scale1xUrl: Scalars['String']
    /** "Asset Url at 2x resolution */
    scale2xUrl: Scalars['String']
    /** Asset Url at 3x resolution */
    scale3xUrl: Scalars['String']
    __typename: 'AppImageSourceSet'
}

export interface AppInfoPage {
    /** Illustration to display at top of AppInfoPage */
    illustration: (AppImage | null)
    /** Title of AppInfoPage */
    title: (Scalars['String'] | null)
    /** Subtitle of AppInfoPage */
    subtitle: (Scalars['String'] | null)
    /** The list of items on ApInfoPage, including icon and content */
    infoList: (InfoPageListItem[] | null)
    /**
     * @deprecated Use `paragraphs` instead
     * Links for AppInfoPage
     */
    links: (AppLink[] | null)
    /** Rich Text Disclosures for AppInfoPage. On web, this appears below the CTA. If you need disclosures above the CTA, use `paragraphs` instead. */
    richTextDisclosures: (AppRichTextDisclosureLink[] | null)
    /**
     * @deprecated Use `richTextDisclosures`(for below the CTA) or `paragraphs` (for above the CTA) instead
     * Disclosures for AppInfoPage
     */
    disclosures: (AppDisclosureLink[] | null)
    /** Rich text content that can go below the info list and above CTAs, such as links, disclosures, disclaimers, etc. */
    paragraphs: (RichTextContent[] | null)
    /** An analytics event to fire off when the page loads. This should be deprecated once the new Wizards flows on Web support logging page views automatically. */
    pageViewAnalytics: (AppAnalyticsEvent | null)
    /**
     * @deprecated Use `primaryCtaButton` instead
     * The text for the label of the primary call to action button/link
     */
    primaryCtaLabel: (Scalars['String'] | null)
    /**
     * @deprecated Use `secondaryCtaButton` instead
     * The text for the label of the secondary call to action button/link
     */
    secondaryCtaLabel: (Scalars['String'] | null)
    /** The button of the primary call to action button/link */
    primaryCtaButton: (AppButton | null)
    /** The button of the secondary call to action button/link */
    secondaryCtaButton: (AppButton | null)
    /** A link option for the primary CTA */
    primaryCtaLink: (AppLink | null)
    /** A link option for the secondary CTA */
    secondaryCtaLink: (AppLink | null)
    /** The label for the skip button */
    skipLabel: (Scalars['String'] | null)
    __typename: 'AppInfoPage'
}

export interface InfoPageListItem {
    /** Icon for the item of the info list of AppInfoPage */
    icon: (AppImage | null)
    /** The title of the list item. Will return `body` as text in this resolver for backwards compatability. */
    title: (RichTextContent | null)
    /** The subtitle/body content of the list item */
    subtitle: (RichTextContent[] | null)
    /**
     * @deprecated use `title` instead
     * Content of the item of the info list of AppInfoPage
     */
    body: (Scalars['String'] | null)
    __typename: 'InfoPageListItem'
}


/** An informational card to display important messages to the user. */
export interface AppInformationalMessageCard {
    /** Determines if the M1 Plus logo should show. */
    isPlusRelated: (Scalars['Boolean'] | null)
    /** The header (or title) of the card. */
    title: (Scalars['String'] | null)
    /** The pill that shows up for the card. */
    status: (AppPill | null)
    /** The subtitle for the card. An array of strings where each index is displayed independently. */
    items: ((AppInformationalMessageCardItem | null)[] | null)
    /** The informative message displayed to the user. */
    message: (Scalars['String'] | null)
    /** The icon to display next to the message. */
    icon: (AppImage | null)
    /** The support link associated with the message. */
    link: (AppLink | null)
    __typename: 'AppInformationalMessageCard'
}


/** Items to display on the Informational card. */
export interface AppInformationalMessageCardItem {
    /** The label to show for this item. */
    label: Scalars['String']
    /** The value to show for this item. */
    value: (Scalars['String'] | null)
    /** The tooltip icon displayed next to the card item. */
    tooltip: (AppInformationalMessageCardItemTooltip | null)
    __typename: 'AppInformationalMessageCardItem'
}


/** The tooltip that will be displayed next to items in the AppInformationalMessageCard. */
export interface AppInformationalMessageCardItemTooltip {
    /** The icon to display for this tooltip. */
    icon: AppImage
    /** The text that will display when the user clicks the tooltip icon. */
    text: ((Scalars['String'] | null)[] | null)
    __typename: 'AppInformationalMessageCardItemTooltip'
}

export type AppPillInterface = (AppPill | CreditCardRewardsAppPill) & { __isUnion?: true }

export interface AppPill {
    /** The label to use when displaying this pill. */
    label: Scalars['String']
    /** The "kind" of pill to display. Refer to design documentation for specs. */
    kind: AppPillKind
    /** Optional icon to display within the `AppPill` */
    icon: (AppPillIcon | null)
    __typename: 'AppPill'
}

export type AppPillIcon = 'DIAMOND'

export type AppPillKind = 'CAUTION' | 'DANGER' | 'DANGER_INVERSE' | 'IMPORTANT' | 'IMPORTANT_INVERSE' | 'NEUTRAL' | 'PLUS' | 'SUCCESS' | 'WHATS_NEW' | 'WHATS_NEW_INVERSE'

export interface AppRichTextDisclosureLink {
    /** The label for a disclosure */
    linkText: (Scalars['String'] | null)
    /**
     * The font size of the linkText as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font: (Scalars['String'] | null)
    /**
     * The font weight of the linkText as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight: (Scalars['String'] | null)
    /** If true, the linkText should be underlined. */
    underline: Scalars['Boolean']
    /** The array of rich text for a disclosure */
    paragraphs: ((RichTextContent | null)[] | null)
    __typename: 'AppRichTextDisclosureLink'
}

export interface AppToast {
    /** The paragraphs of the toast content */
    paragraphs: RichTextContent[]
    /** The link of the toast - can be a link or a button */
    link: (AppButtonUnion | null)
    /** The kind of toast */
    kind: AppToastKind
    __typename: 'AppToast'
}

export type AppToastKind = 'ALERT' | 'WARNING' | 'SUCCESS' | 'INFORMATIONAL'

export type AppTooltipInterface = (AppTooltip) & { __isUnion?: true }

export interface AppTooltip {
    /** Optional header for the tooltip content */
    header: (Scalars['String'] | null)
    /** Content for tooltip as an array of strings */
    body: Scalars['String'][]
    /** Optional AppLink at footer of tooltip content */
    link: (AppLink | null)
    /** The type of tooltip icon */
    icon: AppImage
    __typename: 'AppTooltip'
}

export interface ClientInfo {
    /** The client identification string. */
    id: Scalars['String']
    /** The client type identifier. */
    type: Scalars['String']
    /** The client version string. */
    version: Scalars['String']
    /** The upgrade status for the client. */
    upgrade: ClientUpgradeStatusEnum
    /** An optional message about the upgrade status for the client. */
    upgradeMessage: (Scalars['String'] | null)
    __typename: 'ClientInfo'
}


/** A client upgrade status. */
export type ClientUpgradeStatusEnum = 'NONE' | 'RECOMMENDED' | 'REQUIRED'

export interface ContactUs {
    /** The title for the screen. */
    title: (Scalars['String'] | null)
    /** Subtitle for the screen. */
    subtitle: (Scalars['String'] | null)
    /** A list of cards to be displayed on the Contact Us screen. */
    cards: ((ContactUsCard | null)[] | null)
    /** A custom type to drive the content for the videos section of the Contact Us screen. */
    videoTutorialsSection: (VideoTutorialsSection | null)
    __typename: 'ContactUs'
}

export type ContactUsCardIdentifier = 'INSTANT_CHAT' | 'HELP_CENTER' | 'EMAIL_US' | 'CALL_US'

export interface ContactUsCard {
    /** An identifier that can be keyed off of to build dynamic client-side behavior. */
    identifier: ContactUsCardIdentifier
    /** The title of the given card. */
    title: (Scalars['String'] | null)
    /** An array of strings for the given card. */
    content: ((Scalars['String'] | null)[] | null)
    /** An optionally provided action label for a given card. */
    buttonLabel: (Scalars['String'] | null)
    /** An optionally provided url for a given card's CTA to route to. If null, handling should defined client-side. */
    buttonDestinationUrl: (Scalars['String'] | null)
    __typename: 'ContactUsCard'
}

export interface VideoTutorialsSection {
    /** Title of the Video Tutorials section. */
    title: (Scalars['String'] | null)
    /** Subtitle of the Video Tutorials section. */
    subtitle: (Scalars['String'] | null)
    /** Custom list of video(s) to be displayed. */
    videos: ((Video | null)[] | null)
    /** Custom type for driving the 'view all' videos content. */
    viewAll: (VideoTutorialsSectionViewAll | null)
    __typename: 'VideoTutorialsSection'
}

export interface VideoTutorialsSectionViewAll {
    /** External URL to route the user to when they click 'View all'. */
    destination: (Scalars['String'] | null)
    /** Label to present the 'View all' URL as. */
    label: (Scalars['String'] | null)
    __typename: 'VideoTutorialsSectionViewAll'
}

export interface Video {
    /** Title for a given video. */
    title: (Scalars['String'] | null)
    /** Exact url for a given video. */
    url: (Scalars['String'] | null)
    __typename: 'Video'
}

export interface CreditCardConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((CreditCardEdge | null)[] | null)
    __typename: 'CreditCardConnection'
}

export interface CreditCardEdge {
    /** The item at the end of the edge */
    node: (CreditCard | null)
    __typename: 'CreditCardEdge'
}

export interface CreditCard {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** When `true`, the `CreditCard` is in locked status. */
    isLocked: Scalars['Boolean']
    /** Last four digits of the credit card number. */
    lastFour: Scalars['String']
    /** The credit card network (i.e. Visa). */
    network: CreditCardNetworkEnum
    /** The type of card issued. */
    cardType: CreditCardTypeEnum
    /** The status of the card. */
    status: CreditCardStatusEnum
    __typename: 'CreditCard'
}

export type CreditCardNetworkEnum = 'VISA'

export type CreditCardTypeEnum = 'PHYSICAL' | 'VIRTUAL'

export type CreditCardStatusEnum = 'PENDING' | 'VERIFIED' | 'LOCKED' | 'ARCHIVED' | 'ACTIVATION_THRESHOLD_EXCEEDED'

export interface CreditCardRewardsAppPill {
    /** The label to use when displaying this pill. */
    label: Scalars['String']
    /** The "kind" of pill to display. Refer to design documentation for specs. */
    kind: CreditCardRewardsAppPillKind
    /** Optional icon to display within the `CreditCardRewardsAppPill` */
    icon: (AppPillIcon | null)
    __typename: 'CreditCardRewardsAppPill'
}

export type CreditCardRewardsAppPillKind = 'BRONZE' | 'PLATINUM' | 'GOLD' | 'OBSIDIAN' | 'NEUTRAL'

export interface Earn {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The new marketing screen content for the Earn (HYSA + CA) overview page. */
    earnMarketingScreen: (EarnMarketingScreen | null)
    __typename: 'Earn'
}

export interface EarnMarketingScreen {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The header for a marketing screen. */
    header: (Scalars['String'] | null)
    /** An array of the content cards for a marketing screen. */
    productMarketingCards: ((ProductMarketingCard | null)[] | null)
    /** An array of the disclosures for a marketing screen. */
    disclosures: ((AppRichTextDisclosureLink | null)[] | null)
    __typename: 'EarnMarketingScreen'
}

export interface EmailVerificationPage {
    /** Title for the email verification page */
    title: Scalars['String']
    /** Content for the email verification page */
    content: Scalars['String'][]
    /** CTA label for the email verification page */
    ctaLabel: Scalars['String']
    /** Illustration for the email verificaion page. If null, use emailVerifyInProcess from the DSR. */
    illustration: (AppImage | null)
    __typename: 'EmailVerificationPage'
}

export interface FeedbackForm {
    /** The ID of this node. */
    id: Scalars['ID']
    /** Flag to determine if a user should see the feedback form (if null, default to false). */
    showFeedbackForm: (Scalars['Boolean'] | null)
    __typename: 'FeedbackForm'
}

export interface InformationBanner {
    /** Copy to display in the banner */
    label: Scalars['String']
    /** The "kind" of banner to display. Refer to design documentation for specs. */
    kind: InformationBannerKind
    /** Icon for InformationBanner card. */
    icon: (AppImage | null)
    /** Optional `AppLink` that includes the navigation action required by the user. Lens guarantees that only a link XOR button will be returned. */
    link: (AppLink | null)
    /** Optional `AppButton` that includes the click event action required by the user. Lens guarantees that only a link XOR button will be returned. */
    button: (AppButton | null)
    __typename: 'InformationBanner'
}

export type InformationBannerKind = 'INFO' | 'CAUTION' | 'DANGER' | 'SUCCESS'

export interface InitialFunding {
    /**
     * @deprecated This feature flag is old and no longer in use.
     * Returns the bank connection experiment variant that the user has, control is the default.
     */
    initialFundingBankConnectionVariant: BankConnectionVariant
    /** An object containing the content for the initial funding screens. */
    initialFundingScreens: InitialFundingScreens
    __typename: 'InitialFunding'
}

export type BankConnectionVariant = 'CONTROL' | 'REORDER' | 'REDUCTIVE' | 'ADDITIVE'

export interface InitialFundingScreens {
    /** Contains content for the overview screen of the initial funding flow. */
    initialFundingOverviewScreen: (InitialFundingOverviewScreen | null)
    /** Contains content for the confirmation screen of the initial funding flow. */
    initialFundingConfirmationScreen: (AppInfoPage | null)
    /** Contains content for the screen that displays if a user exits plaid flow voluntarily. */
    initialFundingIncompleteConnectionScreen: (AppInfoPage | null)
    /** Contains content for the screen that displays if a user uses microdeposits to connect bank. */
    initialFundingPendingPlaidConnectionScreen: (AppInfoPage | null)
    __typename: 'InitialFundingScreens'
}

export interface InitialFundingOverviewScreen {
    /** The title to display on the page. */
    title: Scalars['String']
    /**
     * A collection of content items that include a title,
     * description (with or without embedded links) and an optional icon.
     */
    content: (InitialFundingOverviewScreenListItem[] | null)
    /** An analytics event that should be fired when the page is viewed. */
    pageViewAnalyticsEvent: (AppAnalyticsEvent | null)
    /** Information for the primary cta button on the screen. */
    primaryCtaButton: (AppButton | null)
    /** Information for the secondary cta button on the screen. */
    secondaryCtaButton: (AppButton | null)
    /** The skip cta icon ('X') at the top of the screen. */
    skipCta: (AppButton | null)
    __typename: 'InitialFundingOverviewScreen'
}

export interface InitialFundingOverviewScreenListItem {
    /** An optional icon to display to the left of the items title. */
    icon: (AppImage | null)
    /** The title of the content item. */
    title: Scalars['String']
    /** The description copy of the content item. Can contain inline links. */
    description: (RichTextContent | null)
    __typename: 'InitialFundingOverviewScreenListItem'
}

export interface IrsRegulations {
    /** A list of currently-available IRA contribution years. */
    iraContributionYears: IraContributionYear[]
    /** A list of currently-available IRA excess contribution withdrawal years. */
    iraExcessContributionRemovalYears: IraExcessContributionRemovalYear[]
    __typename: 'IrsRegulations'
}


/** Information about an IRA contribution year. */
export interface IraContributionYear {
    /** The year. */
    year: Scalars['Int']
    /** The annual contribution limit for people under 50 years old. */
    limitUnder50: Scalars['Float']
    /** The annual contribution limit for people over 50 years old. */
    limitOver50: Scalars['Float']
    /** True if this is the current contribution year. */
    isCurrent: Scalars['Boolean']
    __typename: 'IraContributionYear'
}


/** Information about an IRA excess contribution withdrawal year */
export interface IraExcessContributionRemovalYear {
    /** The year. */
    year: Scalars['Int']
    /** True if this is the current contribution year. */
    isCurrent: Scalars['Boolean']
    __typename: 'IraExcessContributionRemovalYear'
}

export interface ListItem {
    /**
     * @deprecated Use descriptionV2 instead
     * Optional description text to render under the header labels of the list item
     */
    description: (Scalars['String'] | null)
    /** Optional subtext text to render under the header labels of the list item */
    descriptionV2: (RichTextContent[] | null)
    /** Icon for the card. */
    icon: (AppImage | null)
    /** Left aligned header text for the list item. */
    header: (Scalars['String'] | null)
    /** Right aligned header text for the list item. */
    headerRight: (Scalars['String'] | null)
    /** An optional pill to render at the top of the list item. */
    pill: (AppPill | null)
    /** An optional size specification for the list item. */
    size: (ListItemSize | null)
    /** Subheader text for the card. */
    subheader: (Scalars['String'] | null)
    /** A list of bullet points to nest under the subheader */
    subheaderItems: (Scalars['String'][] | null)
    /** The value that the card represents. */
    value: (Scalars['String'] | null)
    /** An analytics event to fire when the given Product is clicked. */
    analyticsEventClick: (AppAnalyticsEvent | null)
    /** Whether the list item is disabled or not */
    disabled: Scalars['Boolean']
    /** A link to navigate to when the list item is clicked. */
    link: (AppLink | null)
    __typename: 'ListItem'
}

export type ListItemSize = 'SMALL' | 'MEDIUM' | 'LARGE'


/** Represents a mailing address for a user. */
export interface MailingAddress {
    /** Line one of the street address. */
    lineOne: Scalars['String']
    /** Line two of the street address. */
    lineTwo: (Scalars['String'] | null)
    /** The city. */
    city: Scalars['String']
    /** The state (or other subdivision). */
    stateOrProvince: MailingAddressSubdivisionEnum
    /** The postal code. */
    postalCode: Scalars['String']
    /** The country. */
    country: MailingAddressCountryEnum
    __typename: 'MailingAddress'
}


/** A list of states (or other subdivisions) valid for a mailing address. */
export type MailingAddressSubdivisionEnum = 'AL' | 'AK' | 'AZ' | 'AR' | 'CA' | 'CO' | 'CT' | 'DE' | 'FL' | 'GA' | 'HI' | 'ID' | 'IL' | 'IN' | 'IA' | 'KS' | 'KY' | 'LA' | 'ME' | 'MD' | 'MA' | 'MI' | 'MN' | 'MS' | 'MO' | 'MT' | 'NE' | 'NV' | 'NH' | 'NJ' | 'NM' | 'NY' | 'NC' | 'ND' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VT' | 'VA' | 'WA' | 'WV' | 'WI' | 'WY' | 'DC' | 'AS' | 'GU' | 'MP' | 'PR' | 'VI' | 'UM' | 'FM' | 'MH' | 'PW' | 'AA' | 'AE' | 'AP'


/** A list of countries valid for a mailing address. */
export type MailingAddressCountryEnum = 'USA'

export interface Markets {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A list of index proxies. */
    indexProxies: IndexProxy[]
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of recent market news stories, sorted in reverse chronological order.
     */
    news: NewsConnection
    /** A list of recent market news stories, sorted in reverse chronological order. */
    marketNews: (NewsConnection | null)
    __typename: 'Markets'
}


/** Information about an index via a proxy fund. */
export interface IndexProxy {
    /** The name of the index. */
    name: Scalars['String']
    /** The fund that acts as a proxy for the index. */
    proxy: Fund
    __typename: 'IndexProxy'
}

export interface NewsConnection {
    pageInfo: PageInfo
    edges: ((NewsEdge | null)[] | null)
    __typename: 'NewsConnection'
}

export interface NewsEdge {
    cursor: Scalars['String']
    node: (News | null)
    __typename: 'NewsEdge'
}


/** A news story. */
export interface News {
    /** The date of the news story. */
    date: Scalars['String']
    /** The headline of the news story. */
    headline: Scalars['String']
    /** The source of the news story. */
    source: Scalars['String']
    /** An optional URL to a logo for the given source. */
    sourceLogoUrl: (Scalars['String'] | null)
    /**
     * A short summary of the news story. Value is null when there is no summary
     * available.
     */
    summary: (Scalars['String'] | null)
    /** The URL for the news story. */
    url: Scalars['String']
    /** An optional URL to an image that corresponds to the news story. */
    imageUrl: (Scalars['String'] | null)
    /** the news type */
    newsType: (NewsTypeEnum | null)
    __typename: 'News'
}

export type NewsTypeEnum = 'ARTICLE' | 'VIDEO'

export type Node = (Account | BorrowDashboard | BorrowMarketingScreen | BorrowMarketingScreenV2 | PersonalLoans | PersonalLoanApplicationFlow | PersonalLoanDeclinedErrorScreen | PersonalLoanIneligibilityScreen | PersonalLoanApplicationManualReviewScreen | PersonalLoanDisbursementFlow | PersonalLoanDisbursement | PersonalLoanViewTerms | PersonalLoanApplicationDetails | PreApprovalLoanApplicationOffer | PersonalLoan | LoanTransactionEntry | BorrowPromotionalMessage | CommonTransaction | Credit | UserAcceptedCreditCardAgreements | CreditCardApplicantInformation | CreditCardApplicationDetails | CreditCardActiveOffer | CreditCardAccount | CreditCardOnboardingContent | CreditCardOnboardingStartApplicationScreen | CreditCardOnboardingApplicationStatusScreen | CreditCardManageCardDetailsScreen | CreditCardManageCardScreen | DigitalWalletPushProvisioningCredentials | CreditCardRewardsPortalScreen | CreditCardRewardsDetailsScreen | CreditCardRewardsProgramOverview | CreditCardTransaction | CreditCardWaitlistConfirmationContent | CreditCardRewardsProgramBreakdown | CreditCardWaitlistMarketingBanner | CreditCardSelectRewardDestinationContent | CreditCardRewardDestinationOption | CreditCardWaitlistMarketingScreen | CreditCardApplyNowMarketingScreen | Crypto | CryptoSystemPie | CryptoAsset | FundingSources | FundingSourceAccount | Fund | Fundamentals | Equity | InvestMarketing | InvestMarketingScreen | PortfolioSliceOrderStatus | PortfolioSliceRebalanceStatus | Position | SecurityReference | NetWorth | ChildPortfolioSlice | RootPortfolioSlice | SharedPie | SystemPie | UserPie | Plus | PlusEditPaymentMethodPagePaymentMethod | PlusBilling | PlusBillingPaymentMethod | PlusBenefitCalculatorInitialState | Save | Savings | SavingsJointAccountInvitation | SavingsAgreements | SavingsAccount | SavingsCustomerDueDiligenceQuestions | SavingsTransaction | SpendMarketingScreen | Transfers | MoveMoneyV2 | MoveMoney | TransferInstanceDetails | NewSmartTransferFocusOption | SmartTransferRuleEditRequirements | NewSmartTransferContraParticipantEntryOption | SmartTransferContraParticipantEntryEditRequirements | SmartTransferFulfillmentConditionOption | AcatTransferInstance | TransferInstance | TransferInstanceStep | SmartTransferRule | SmartTransferContraParticipantEntry | ScheduledTransferRule | OtherTransferRule | Viewer | AccountConfiguration | DocumentUploadRequest | UnmanagedHoldingsCollection | UnmanagedHolding | AchRelationshipViaDeposits | AchRelationshipViaLink | AchTransfer | AccountBalance | Cash | Investments | Billing | Borrow | BorrowAccount | BorrowAccountCreditStatus | InvestAccountDocument | AccountDocument | SpendAccountDocument | EstimatedTrading | ExternalAccount | FeatureFlags | Invest | InvestActivity | InvestActivityTradeSummaryEntry | InvestActivityTradeEntry | InvestActivityCashEntry | InvestActivityPositionEntry | InvestActivityRebalanceEntry | InvestActivityOrderEntry | InvestActivityOtherEntry | Overview | BalancesOverview | OverviewCards | InvestAcatWizardContent | InvestAcatWizardAssetSelectionContent | InvestAcatTransferTypeScreenContent | InvestAcatBrokerageSelectionContent | InvestAcatWizardContraSearchForm | InvestAcatWizardContraParticipant | InvestAcatBrokerageAccountDetailsContent | InvestAcatDestinationAccountContent | InvestAcatTransferInformationScreenContent | InvestAcatConfirmSelectionsContent | InvestAcatConfirmationContent | Referrals | ReferralOffer | Research | Quote | PriceChange | Spend | SpendAgreements | SpendDueDiligenceQuestions | TextWithTooltip | SpendPrimaryMarketingScreen | SpendIdentity | SpendAccount | SpendPromotionalMessage | PhysicalCheck | SpendExternalAccount | SpendAvailableDebitCards | SpendDebitCard | ManageSpendCard | SpendDebitCardDesign | SpendDebitCardCta | SpendActivity | SpendActivityEntryDetails | SpendActivityEntryDisputeDetails | SpendTransaction | SpendActivityOtherEntry | MigratableInvestExternalAccount | SpendMoveMoney | SendCheck | SendCheckIneligibleContent | SendCheckPlusMarketingContent | SendCheckTransferOverviewContent | SendCheckSelectRecipientContent | SendCheckRecipientListItem | SendCheckRecipientEditRequirements | SelectRecipientTypeContent | RecipientInformationContent | SetCheckAmountContent | CheckMemoContent | ConfirmCheckDetailsContent | PaymentConfirmedContent | AccountTradingStatus | InvestRollovers | InvestSharePie | User | CreditCard | Earn | EarnMarketingScreen | FeedbackForm | Markets | Notifications | NotificationPreferences | RequiredDocumentsBundle | PlatformBillingEntry | Settings | Support | Unauthenticated | AgreementBundle | AgreementStatus | Announcement | Announcements | BorrowUpcomingBill | AccountFundingTotals | AccountTradingPause | ChartableSliceData | CustodialAccountBeneficiary | IraContributionLimits | IraContributionTotals | Onboarding) & { __isUnion?: true }

export interface Notifications {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Notification preferences. */
    preferences: (NotificationPreferences | null)
    __typename: 'Notifications'
}

export interface NotificationPreferences {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** Preferences for transfer completion notifications. */
    transferCompletion: (TransferCompletionNotificationPreferences | null)
    /** Preferences for Invest activity notifications. */
    investActivity: (InvestActivityNotificationsPreferences | null)
    /** Preferences for Spend Checking transaction notifications. */
    spendTransaction: (SpendTransactionNotificationPreferences | null)
    __typename: 'NotificationPreferences'
}


/** Preferences for transfer completion notifications. */
export interface TransferCompletionNotificationPreferences {
    /** Send via push notification. Null means not available. */
    sendViaPush: (Scalars['Boolean'] | null)
    /** Send via email. Null means not available. */
    sendViaEmail: (Scalars['Boolean'] | null)
    __typename: 'TransferCompletionNotificationPreferences'
}


/** Preferences for Invest activity notifications. */
export interface InvestActivityNotificationsPreferences {
    /** Send via push notification. Null means not available. */
    sendViaPush: (Scalars['Boolean'] | null)
    /** Send via email. Null means not available. */
    sendViaEmail: (Scalars['Boolean'] | null)
    __typename: 'InvestActivityNotificationsPreferences'
}


/** Preferences for Spend Checking transaction notifications. */
export interface SpendTransactionNotificationPreferences {
    /** Send via push notification. Null means not available. */
    sendViaPush: (Scalars['Boolean'] | null)
    /** Send via email. Null means not available. */
    sendViaEmail: (Scalars['Boolean'] | null)
    __typename: 'SpendTransactionNotificationPreferences'
}


/** Information about pagination in a connection. */
export interface PageInfo {
    /** When paginating forwards, the cursor to continue. */
    endCursor: (Scalars['String'] | null)
    /** When paginating forwards, are there more items? */
    hasNextPage: Scalars['Boolean']
    /** When paginating backwards, are there more items? */
    hasPreviousPage: Scalars['Boolean']
    /** When paginating backwards, the cursor to continue. */
    startCursor: (Scalars['String'] | null)
    __typename: 'PageInfo'
}


/** A set of fields for editing a pie and confirming changes */
export interface PieChangesConfirmation {
    /** A message associated with the applicable locations section. */
    applicableLocationsMessage: (Scalars['String'] | null)
    /** A set of pie details for a given pie. */
    pieDetails: (PieChangesConfirmationDetails | null)
    /** An object containing data about added or updated slices. */
    addedOrUpdated: (PieChangesConfirmationAddedOrUpdated | null)
    /** An object containing data about removed slices. */
    removed: (PieChangesConfirmationRemoved | null)
    __typename: 'PieChangesConfirmation'
}

export interface PieChangesConfirmationDetails {
    /** Further details on changes to a pie's name. Null if value was not edited. */
    name: (PieDetailsField | null)
    /** Further details on changes to a pie's description. Null if value was not edited. */
    description: (PieDetailsField | null)
    __typename: 'PieChangesConfirmationDetails'
}

export interface PieChangesConfirmationAddedOrUpdatedSlice {
    /** The name of the slice. */
    name: Scalars['String']
    /** The symbol of the slice if applicable. */
    symbol: (Scalars['String'] | null)
    /**
     * The existing percentage of a given slice, zero if the slice is to be added.
     * New Field added to Move Slices, not implemented elsewhere yet.
     */
    oldPercentage: (Scalars['Float'] | null)
    /**
     * The soon-to-be new percentage of the slice.
     * New Field added to Move Slices, not implemented elsewhere yet.
     */
    percentage: (Scalars['Float'] | null)
    /** A pill used to represent if the slice was added or updated */
    actionPill: (AppPill | null)
    /**
     * If available, a URL to a logo image that represents the Slice.
     * New Field added to Move Slices, not implemented elsewhere yet.
     */
    logoUrl: (Scalars['String'] | null)
    __typename: 'PieChangesConfirmationAddedOrUpdatedSlice'
}

export interface PieChangesConfirmationRemoved {
    /** An array of removed slices. */
    slices: (PieChangesConfirmationRemovedSlice | null)[]
    /**
     * @deprecated Use messages instead
     * A message associated with removed slices.
     */
    message: (Scalars['String'] | null)
    /** Messages associated with removed slices. */
    messages: (RichTextContent[] | null)
    __typename: 'PieChangesConfirmationRemoved'
}

export interface PieDetailsField {
    /** An AppPill to be provided conditionally if the user has performed an action on the given field. */
    actionPill: (AppPill | null)
    /** The value of the pie details field. */
    value: Scalars['String']
    __typename: 'PieDetailsField'
}

export interface PieChangesConfirmationRemovedSlice {
    /** The name of the slice. */
    name: Scalars['String']
    /** The symbol of the slice if applicable. */
    symbol: (Scalars['String'] | null)
    /** The existing percentage of a slice. */
    oldPercentage: Scalars['Float']
    /** The new percentage of a slice, which will be zero for all removed slices. */
    newPercentage: Scalars['Float']
    /** A snapshot value of the slice. */
    value: (Scalars['Float'] | null)
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl: (Scalars['String'] | null)
    __typename: 'PieChangesConfirmationRemovedSlice'
}

export interface PieChangesConfirmationAddedOrUpdated {
    /** An array of slices that were added or updated. */
    slices: (PieChangesConfirmationAddedOrUpdatedSlice | null)[]
    /**
     * @deprecated Use messages instead
     * A message associated with added or updated slices.
     */
    message: (Scalars['String'] | null)
    /** Messages associated with added or updated slices. */
    messages: (RichTextContent[] | null)
    __typename: 'PieChangesConfirmationAddedOrUpdated'
}

export interface ProductMarketingCard {
    /** The optional card icon for a marketing screen card. */
    illustration: (AppImage | null)
    /** The main title for a marketing screen card. */
    title: (Scalars['String'] | null)
    /** The title tooltip for a marketing screen card. */
    titleTooltip: (Scalars['String'] | null)
    /** The subtitle for a marketing screen card. */
    subtitle: (Scalars['String'] | null)
    /** The CTA destination deep link (button styling) for a marketing screen card. */
    primaryCtaButton: (AppLink | null)
    /** The CTA destination deep link (text styling) for a marketing screen card. */
    secondaryCtaButton: (AppLink | null)
    /** A (card displayed) analytics event for a marketing screen card */
    analyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'ProductMarketingCard'
}

export interface RequiredDocumentsBundle {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The list of individual documents in this bundle. */
    documents: RequiredDocument[]
    /** Copy to be displayed after the document list. */
    postamble: (Scalars['String'] | null)
    /** Copy to be displayed before the document list. */
    preamble: (Scalars['String'] | null)
    /** The unique signature for this bundle of documents & legal agreements. */
    signature: Scalars['String']
    /** Copy to be displayed after the document list that implements Rich Text. */
    richPostamble: (RichTextContent[] | null)
    __typename: 'RequiredDocumentsBundle'
}

export interface RequiredDocument {
    /** The title of the document or legal agreement. */
    title: Scalars['String']
    /** The URL of the document or legal agreement. */
    url: Scalars['String']
    __typename: 'RequiredDocument'
}

export interface RichTextContent {
    /** Array of rich text scalars or components for rendering inline on clients. */
    content: ((RichTextUnion | null)[] | null)
    __typename: 'RichTextContent'
}


/** A union of possible components for rendering inline on clients. */
export type RichTextUnion = (Text | AppButton | AppLink | AppShareButton | AppTooltip | AppRichTextDisclosureLink) & { __isUnion?: true }


/** The disclosures and agreements page under settings. */
export interface DisclosuresAndAgreementsPage {
    /** The agreements bundle for the HYSA product. */
    hysaAgreements: (AgreementBundle | null)
    /** The agreements bundle for the cash account product. */
    cashAccountAgreements: (AgreementBundle | null)
    /** The agreements bundle for the credit card product. */
    creditCardAgreements: (AgreementBundle | null)
    /** The agreements bundle for the crypto product. */
    cryptoAgreements: (RequiredDocumentsBundle | null)
    /** The agreements bundle for the promotional product. */
    promotionalAgreements: (RequiredDocumentsBundle | null)
    __typename: 'DisclosuresAndAgreementsPage'
}

export interface FullyPaidLendingPage {
    /** The title of the Fully Paid Securities Lending page. */
    title: Scalars['String']
    /** The subtitle of the Fully Paid Securities Lending page. */
    subtitle: Scalars['String']
    /** A banner to display contextual messages about Fully Paid Lending. */
    banner: (InformationBanner | null)
    /** The link to the Fully Paid Securities Lending page. */
    helpLink: (AppLink | null)
    /** Contains the copy + icon for the income earned description. */
    incomeEarnedSection: FullyPaidLendingIncomeEarnedSection
    /** A collection of objects that group accounts with their stock loan holdings. */
    accountStockLoanHoldings: (AccountStockLoanHoldingGroup[] | null)
    /** Contains information about the user's current FPL program participation status. */
    optInSection: (FullyPaidLendingOptInSection | null)
    __typename: 'FullyPaidLendingPage'
}

export interface AccountStockLoanHoldingGroup {
    /** A message to display when there are no active stock loans for the account. */
    emptyGroupMessage: (Scalars['String'] | null)
    /** The header copy for the grouping of loans. */
    header: Scalars['String']
    /** A collection of StockLoans for the brokerage account. */
    stockLoans: (StockLoan[] | null)
    __typename: 'AccountStockLoanHoldingGroup'
}

export interface FullyPaidLendingIncomeEarnedSection {
    /** The income earned message copy. */
    content: Scalars['String']
    /** The icon to display before the interest earned copy. */
    icon: (AppImage | null)
    __typename: 'FullyPaidLendingIncomeEarnedSection'
}

export interface StockLoan {
    /** The number of shares on loan. */
    quantity: (Scalars['Float'] | null)
    /** Information on the security that matches the stock loan. */
    securityReference: SecurityReference
    __typename: 'StockLoan'
}

export interface FullyPaidLendingOptInSection {
    /** Content to present when a user shows intent to opt-in to FPL. */
    confirmContent: FullyPaidLendingOptInSectionConfirmContent
    /** Label for the CTA to begin opt-in. */
    ctaLabel: Scalars['String']
    __typename: 'FullyPaidLendingOptInSection'
}

export interface FullyPaidLendingOptInSectionConfirmContent {
    /** Label to display next to the UI element signaling user agreement. */
    agreementLabel: Scalars['String']
    /** Label for the CTA to cancel opt-in. */
    cancelCtaLabel: Scalars['String']
    /** Label for the CTA to confirm opt-in. */
    confirmCtaLabel: Scalars['String']
    /**
     * @deprecated Utilize `contentV2` instead.
     * Content to present when a user is in the opt-in flow..
     */
    content: RichTextContent
    /** Content to present when a user is in the opt-in flow.. */
    paragraphs: RichTextContent[]
    /** Title to present when a user is in the opt-in flow.. */
    title: (Scalars['String'] | null)
    __typename: 'FullyPaidLendingOptInSectionConfirmContent'
}

export interface InvestSettingsPage {
    /** UI information for the Fully Paid Securities Lending page under invest settings. */
    fullyPaidLending: (FullyPaidLendingPage | null)
    __typename: 'InvestSettingsPage'
}

export interface PlatformBillingPage {
    /** Header for the platform billing page */
    header: PlatformBillingPageHeader
    /** The billing methods section with content describing the payment methods available to the user */
    billingMethodSection: (PlatformBillingMethodSection | null)
    /** Platform billing history for the user. */
    billingHistorySection: (PlatformBillingHistorySection | null)
    /** Banner that appears when a user has had a payment fail */
    paymentFailureBanner: (InformationBanner | null)
    __typename: 'PlatformBillingPage'
}

export interface PlatformBillingPageHeader {
    /** The title of the page */
    title: (Scalars['String'] | null)
    /** An array of strings that can provide billing and billing cycle information */
    subtitles: ((Scalars['String'] | null)[] | null)
    __typename: 'PlatformBillingPageHeader'
}

export interface PlatformBillingMethodSection {
    /** Icon that precedes the platform billing method title copy */
    titleIcon: (AppImage | null)
    /** Static copy for the payment method dropdown */
    title: (Scalars['String'] | null)
    /** The list of eligible transfer participants */
    billingMethods: (TransferParticipantList | null)
    /** Transfer Particpant ID for the preferred payment method, will be null if no method is selected */
    preferredPaymentMethodId: (Scalars['ID'] | null)
    /** Static copy that informs users that an account will be chosen to pay the fee if payment with the current method fails */
    subtitle: (Scalars['String'] | null)
    /** A list of disclosures */
    disclosures: (AppRichTextDisclosureLink[] | null)
    /** A list of links */
    links: (AppLink[] | null)
    __typename: 'PlatformBillingMethodSection'
}

export interface PlatformBillingHistorySection {
    /** Icon that precedes the platform billing history title copy */
    titleIcon: (AppImage | null)
    /** Billing history table title */
    title: (Scalars['String'] | null)
    /** An array of billing history items */
    billingHistory: (PlatformBillingHistoryEntryConnection | null)
    /** Dynamic fallback copy in case there is no billing history or it fails to load */
    billingHistoryFallbackCopy: (Scalars['String'] | null)
    __typename: 'PlatformBillingHistorySection'
}

export interface PlatformBillingHistoryEntryConnection {
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** A list of edges. */
    edges: ((PlatformBillingHistoryEntryEdge | null)[] | null)
    __typename: 'PlatformBillingHistoryEntryConnection'
}

export interface PlatformBillingHistoryEntryEdge {
    cursor: Scalars['String']
    /** The item at the end of the edge */
    node: (PlatformBillingEntry | null)
    __typename: 'PlatformBillingHistoryEntryEdge'
}

export interface PlatformBillingEntry {
    /** The ID of this node. */
    id: Scalars['ID']
    /** List item details for the billing entry. */
    listItem: (ListItem | null)
    __typename: 'PlatformBillingEntry'
}

export interface Settings {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** UI information for the Disclosures and Agreements page. */
    disclosuresAndAgreements: (DisclosuresAndAgreementsPage | null)
    /** UI information for the Invest settings page */
    invest: (InvestSettingsPage | null)
    /** An optional Plus promotional message. */
    plusPromotionForSettings: (PlusPromotionalMessage | null)
    /** UI information for the Platform Billing page */
    platformBilling: (PlatformBillingPage | null)
    __typename: 'Settings'
}

export interface SharePieLandingPageScreen {
    /** The header for the share pie landing page screen. */
    header: SharePieLandingPageHeader
    /** The analytics event that fires off when you view the share pie landing page screen. */
    pageViewAnalyticsEvent: (AppAnalyticsEvent | null)
    /** The pie title for the share pie landing page screen. */
    pieTitle: (Scalars['String'] | null)
    /** The banner for the share pie landing page screen if pie is delisted. */
    delistedPieBanner: (InformationBanner | null)
    /** The log in banner for the share pie landing page screen. */
    logInBanner: (SharePieLogInBanner | null)
    /** The marketing details for the share pie landing page screen. */
    marketingDetails: SharePieMarketingDetails
    /** The disclosures for the share pie landing page screen. */
    disclosures: (AppLink | null)
    /** The disclosures for the share pie landing page screen. */
    disclosuresFooter: (AppRichTextDisclosureLink | null)
    __typename: 'SharePieLandingPageScreen'
}

export interface SharePieLandingPageHeader {
    /** The text for a Share Pie Landing page header */
    text: (Scalars['String'] | null)
    /** The icon for a Share Pie Landing Page Header */
    icon: (AppImage | null)
    /** The ctaButton for a Share Pie Landing Page Header */
    ctaButton: (AppButton | null)
    __typename: 'SharePieLandingPageHeader'
}

export interface SharePieLogInBanner {
    /** The title for a Share Pie Log In Banner */
    title: (Scalars['String'] | null)
    /** The description for a Share Pie Log In Banner */
    description: (Scalars['String'] | null)
    /** The primary cta for a Share Pie Log In Banner */
    primaryCTA: (AppButton | null)
    /** The log in CTA for a Share Pie Log In Banner */
    logInCTA: (AppButton | null)
    /** The disclosure for a Share Pie Log In Banner */
    createAccountDisclosure: (RichTextContent[] | null)
    /** The illustration for a Share Pie Log In Banner */
    illustration: (AppImage | null)
    __typename: 'SharePieLogInBanner'
}

export interface SharePieMarketingDetails {
    /** The title for a Share Pie Marketing Details */
    title: (Scalars['String'] | null)
    /** The marketing content details for a Share Pie Marketing Details */
    marketingContent: (SharePieMarketingContent[] | null)
    __typename: 'SharePieMarketingDetails'
}

export interface SharePieMarketingContent {
    /** The title for a Share Pie Marketing Content */
    title: (Scalars['String'] | null)
    /** The description for a Share Pie Marketing Content */
    description: (Scalars['String'] | null)
    /** The illustration for a Share Pie Marketing Content */
    illustration: (AppImage | null)
    __typename: 'SharePieMarketingContent'
}

export interface Support {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /**
     * The support phone number that should be displayed to a user. When null, no
     * phone number should be displayed.
     */
    phoneNumber: (Scalars['PhoneNumber'] | null)
    __typename: 'Support'
}


/** A system status. */
export type SystemStatusEnum = 'NORMAL' | 'DEGRADED' | 'DISRUPTED' | 'MAINTENANCE'


/** A system functionality area. */
export type SystemFunctionalityEnum = 'OPEN_ACCOUNT'


/** Information about the system. */
export interface SystemInfo {
    /**
     * A list of specific functionality areas that are currently blocked. If the
     * value is empty array, ALL functionality is blocked. If the value is null, NO
     * functionality is blocked.
     */
    blockedFunctionality: (SystemFunctionalityEnum[] | null)
    /** True if the current system status blocks some or all functionality. */
    isStatusBlocking: Scalars['Boolean']
    /** The overall status of the system. */
    status: SystemStatusEnum
    /** An optional message about the current status of the system. */
    statusMessage: (Scalars['String'] | null)
    /** The system version. */
    version: Scalars['String']
    __typename: 'SystemInfo'
}

export interface TabularDataItem {
    /** The title for a Tabular Data Item */
    title: (Scalars['String'] | null)
    /** The title link for a Tabular Data Item */
    titleLink: (AppLink | null)
    /** The value for a Tabular Data Item */
    value: (Scalars['String'] | null)
    /** The value link for a Tabular Data Item */
    valueLink: (AppLink | null)
    /** The tooltip for a Tabular Data Item */
    tooltip: (AppTooltip | null)
    /** Rich text tablular data item value */
    richTextValue: (RichTextContent | null)
    /** Icon for the tabular data item value */
    valueIcon: (AppImage | null)
    __typename: 'TabularDataItem'
}

export interface TabularDataSection {
    /** The header for a Tabular Data Section */
    header: (Scalars['String'] | null)
    /** The array of details for a Tabular Data Section */
    details: ((TabularDataItem | null)[] | null)
    __typename: 'TabularDataSection'
}

export interface Text {
    /** The content text for the Text instance. */
    text: (Scalars['String'] | null)
    /** Optional color of the text instance. When null, please use client specified color. */
    color: (Scalars['String'] | null)
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font: (Scalars['String'] | null)
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight: (Scalars['String'] | null)
    __typename: 'Text'
}

export interface Unauthenticated {
    /** The ID of this node */
    id: Scalars['ID']
    /** Promotion content; Requires a promo code to serve the correct content */
    promotions: (Promotions | null)
    /** Share Pie Landing page content */
    sharePieLandingPage: SharePieLandingPageScreen
    __typename: 'Unauthenticated'
}

export interface PromotionSignUpPage {
    /** Header for the sign up page */
    header: ((Scalars['String'] | null)[] | null)
    /** Disclosures for the sign up page */
    disclosures: ((AppDisclosureLink | null)[] | null)
    /** Document bundle for the sign up page */
    termsAndConditions: RequiredDocumentsBundle
    /** Label for the primary action for the sign up page */
    primaryCtaLabel: (Scalars['String'] | null)
    /** Copy that goes under the illustration on the sign up page */
    marketingContent: ((RichTextContent | null)[] | null)
    /** Promotion page illustration */
    illustration: (AppImage | null)
    __typename: 'PromotionSignUpPage'
}

export interface ValuePropCard {
    /** Title for the card */
    title: (Scalars['String'] | null)
    /** Illustration for the card */
    illustration: (AppImage | null)
    /** Primary value prop section for the card */
    primaryValue: (PrimaryValue | null)
    /** A list of values realated to the value prop */
    details: (ValueRow[] | null)
    __typename: 'ValuePropCard'
}

export interface PrimaryValue {
    /** Primary value prop for the card */
    value: (Scalars['String'] | null)
    /** The nullable primary value color for the card - liquid semantic color naming used */
    valueColor: (Scalars['String'] | null)
    /** Description for primary value prop for the card */
    description: (Scalars['String'] | null)
    /** The nullable primary value description color for the card - liquid semantic color naming used */
    descriptionColor: (Scalars['String'] | null)
    /** The accessory tooltip for the primary value prop */
    tooltip: (AppTooltip | null)
    __typename: 'PrimaryValue'
}

export interface ValueRow {
    /** The label for the row */
    label: (Scalars['String'] | null)
    /** The nullable label color for the row - liquid semantic color naming used */
    labelColor: (Scalars['String'] | null)
    /** The accessory tooltip for the row */
    tooltip: (AppTooltip | null)
    /** The value for the row */
    value: (Scalars['String'] | null)
    /** The nullable value color for the row - liquid semantic color naming used */
    valueColor: (Scalars['String'] | null)
    __typename: 'ValueRow'
}

export interface AgreementBundle {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The unique signature for this bundle of legal agreements. */
    signature: Scalars['String']
    /**
     * A description of this agreement bundle that suitable for displaying to the
     * user. Value is null when there is no description.
     */
    description: (Scalars['String'] | null)
    /** The list of individual documents in this bundle. */
    documents: AgreementDocument[]
    __typename: 'AgreementBundle'
}


/** Information about a legal agreement document. */
export interface AgreementDocument {
    /** The title of the agreement document. */
    title: Scalars['String']
    /** The URL of the agreement document. */
    url: Scalars['String']
    __typename: 'AgreementDocument'
}


/** Information about legal agreement status for a specific user. */
export interface AgreementStatus {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** True when re-agreement is necessary from the user to maintain open accounts. */
    isNewAgreementRequired: Scalars['Boolean']
    /** True when the user has missed the deadline date for necessary re-agreement. */
    isPastDeadline: Scalars['Boolean']
    /** The deadline date by which agreement is required. */
    deadlineDate: (Scalars['String'] | null)
    __typename: 'AgreementStatus'
}


/** An announcement to display to the user. */
export interface Announcement {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A short title for the announcement. */
    title: Scalars['String']
    /** A description of the announcement, if present. */
    description: (Scalars['String'] | null)
    /** Text that describes the time of the announcement, if applicable. */
    timeDescription: (Scalars['String'] | null)
    /**
     * @deprecated Use `appLink` instead.
     * An optional link related to the announcement.
     */
    link: (AnnouncementLink | null)
    /** An optional link related to the announcement. */
    appLink: (AppLink | null)
    /**
     * @deprecated Use `announcementIcon` instead.In MA, we need to update the announcement config to support returning an AppImage so we can safely deprecate this field in favor of AppImage.
     * The icon that should be displayed for the announcement.
     */
    icon: (AnnouncementIconEnum | null)
    /** The icon that should be displayed for the announcement. */
    announcementIcon: (AppImage | null)
    /** The tag that should be displayed for the announcement. */
    tag: (AnnouncementTagEnum | null)
    /** The appearance that should be used for the announcement. */
    appearance: (AnnouncementAppearanceEnum | null)
    /**
     * @deprecated Use `displayPreference` instead.
     * When true, and applicable, a modal presentation should be used.
     */
    displayAsModal: (Scalars['Boolean'] | null)
    /** The type of announcement to display (modal, banner, etc.). */
    displayPreference: (AnnouncementDisplayPreferenceEnum | null)
    /**
     * Passes a call to action to the client. This action should be taken
     * when the user clicks on the announcement's button.
     */
    action: (AppAction | null)
    /** The analytics event for when announcement is displayed. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'Announcement'
}


/** An icon for an announcement. */
export type AnnouncementIconEnum = 'GENERAL' | 'PLUS' | 'TRANSFERS' | 'INVEST' | 'BORROW' | 'SPEND' | 'GIFT' | 'TADA' | 'BANK' | 'UPLOAD_DOCUMENTS' | 'CONFIRM_DOCUMENTS' | 'EMAIL' | 'M1_ELEVATED' | 'SCHEDULE_CALL' | 'RIBBON_PROMO_ELEVATED' | 'GIFT_PROMO_ELEVATED'

export type AnnouncementDisplayPreferenceEnum = 'BANNER' | 'MODAL' | 'NUDGE'


/** An appearance for an announcement. */
export type AnnouncementAppearanceEnum = 'PROMO_NEUTRAL' | 'PROMO_COOL' | 'PROMO_WARM'


/** A tag for an announcement. */
export type AnnouncementTagEnum = 'ALERT' | 'NEW' | 'PLUS'

export interface AnnouncementExternalLink {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The link URL. */
    url: Scalars['String']
    __typename: 'AnnouncementExternalLink'
}

export interface AnnouncementInternalLink {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The link URL. */
    url: Scalars['String']
    /** The path part of the link URL. */
    path: Scalars['String']
    __typename: 'AnnouncementInternalLink'
}


/** A link related to an announcement. */
export type AnnouncementLink = (AnnouncementExternalLink | AnnouncementInternalLink | AnnouncementSupportLink) & { __isUnion?: true }

export interface AnnouncementSupportLink {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The link URL. */
    url: Scalars['String']
    /** The support article ID part of the link URL. */
    articleId: Scalars['String']
    __typename: 'AnnouncementSupportLink'
}

export interface Announcements {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The user has at least one announcement in the list. */
    hasAny: (Scalars['Boolean'] | null)
    /** There are new announcements for the user in the list. */
    hasNew: (Scalars['Boolean'] | null)
    /** A list of announcements for the user, in priority order. */
    list: (AnnouncementConnection | null)
    /** An announcement to display about Transfers, if present. */
    forTransfers: (Announcement | null)
    /** An announcement to display about Move Money, if present. */
    forMoveMoney: (Announcement | null)
    /** An announcement to display about Invest, if present. */
    forInvest: (Announcement | null)
    /** An announcement to display about Borrow, if present. */
    forBorrow: (Announcement | null)
    /** An announcement to display about Spend, if present. */
    forSpend: (Announcement | null)
    /** An announcement to display about Referrals, if present. */
    forReferrals: (Announcement | null)
    /** An announcement to display about Plus, if present. */
    forPlus: (Announcement | null)
    /** An announcement to display about Documents, if present. */
    forDocuments: (Announcement | null)
    /** An announcement to display about Overview (Nudge), if present. */
    forHome: (Announcement | null)
    /** An announcement to display about Overview (Modal), if present. */
    forHomeModal: (Announcement | null)
    /** An announcement to display about Personal Loans, if present. */
    forPersonalLoans: (Announcement | null)
    /** An announcement to display about Save, if present. */
    forSave: (Announcement | null)
    /** An announcement to display about Invest Marketing, if present. */
    forInvestMarketing: (Announcement | null)
    /** An announcement to display about Save Marketing, if present. */
    forSaveMarketing: (Announcement | null)
    /** An announcement to display about Borrow Marketing, if present. */
    forBorrowMarketing: (Announcement | null)
    __typename: 'Announcements'
}

export interface AnnouncementConnection {
    pageInfo: PageInfo
    edges: ((AnnouncementEdge | null)[] | null)
    __typename: 'AnnouncementConnection'
}

export interface AnnouncementEdge {
    cursor: Scalars['String']
    node: (Announcement | null)
    __typename: 'AnnouncementEdge'
}

export interface BorrowBillConnection {
    pageInfo: PageInfo
    edges: ((BorrowBillEdge | null)[] | null)
    __typename: 'BorrowBillConnection'
}

export interface BorrowBillEdge {
    cursor: Scalars['String']
    node: (BorrowBill | null)
    __typename: 'BorrowBillEdge'
}


/** Information about a Borrow billing period that has ended. */
export interface BorrowBill {
    /** The start time of the billing period as an ISO 8601 timestamp. */
    startDate: Scalars['String']
    /** The end time of the billing period as an ISO 8601 timestamp. */
    endDate: Scalars['String']
    /** The bill due time of the billing period as an ISO 8601 timestamp. */
    dueDate: (Scalars['String'] | null)
    /** True when the bill is currently due. */
    isDue: (Scalars['Boolean'] | null)
    /** A description of the interest rate or range of rates for the period. */
    rateDescription: (Scalars['String'] | null)
    /** The total amount of interest accrued during the billing period. */
    amount: Scalars['Float']
    __typename: 'BorrowBill'
}


/** Information about a Borrow billing period that has not yet ended. */
export interface BorrowUpcomingBill {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The start time of the billing period as an ISO 8601 timestamp. */
    startDate: Scalars['String']
    /** The end time of the billing period as an ISO 8601 timestamp. */
    endDate: Scalars['String']
    /** The bill due time of the billing period as an ISO 8601 timestamp. */
    dueDate: (Scalars['String'] | null)
    /** The total amount of interest accrued so far during the billing period. */
    totalInterestToDate: (Scalars['Float'] | null)
    /**
     * The projected total interest accrued at the end time of the billing period if
     * the margin extended amount and the interest rate does not change. The value
     * may be null when it is temporarily unavailable.
     */
    projectedTotalInterest: (Scalars['Float'] | null)
    /** If applicable, a special message regarding the current billing period. */
    specialMessage: (Scalars['String'] | null)
    /**
     * @deprecated Use `plusPromotionForBilling` instead.
     * An optional Plus promotional message.
     */
    plusPromotion: (PlusPromotionalMessage | null)
    /** An optional Plus promotional message. */
    plusPromotionForBilling: (PlusPromotionalMessage | null)
    __typename: 'BorrowUpcomingBill'
}

export interface AccountFundingTotals {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A summary of funding activity by year, in chronological order. */
    totalsByYear: FundingTotalForYear[]
    __typename: 'AccountFundingTotals'
}

export interface FundingTotalForYear {
    /** The calendar year. */
    year: Scalars['Int']
    /** The total dollar amount of deposits during the calendar year. */
    totalDeposits: Scalars['Float']
    /** The total dollar amount of withdrawals during the calendar year. */
    totalWithdrawals: Scalars['Float']
    __typename: 'FundingTotalForYear'
}


/** Information about a trading pause. */
export interface AccountTradingPause {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The pause reason title. */
    title: Scalars['String']
    /** An optional description of the pause reason. */
    description: (Scalars['String'] | null)
    /**
     * @deprecated Use `appLink` instead.
     * An optional link related to the pause reason.
     */
    link: (AccountTradingPauseLink | null)
    /** An optional link related to the pause reason. */
    appLink: (AppLink | null)
    /** An optional message further detailing reasons for the pause. */
    pauseMessage: (AccountTradingPauseMessage | null)
    /** An optional second link to a more comprehensive FAQ article. */
    faqLink: (AppLink | null)
    __typename: 'AccountTradingPause'
}


/** A descriptive message with a link for account pause. */
export interface AccountTradingPauseMessage {
    /** The description for the trading pause message. */
    description: Scalars['String']
    /** The link for the trading pause message. */
    appLink: (AppLink | null)
    __typename: 'AccountTradingPauseMessage'
}


/** A link related to a pause reason. */
export interface AccountTradingPauseLink {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The link URL. */
    url: Scalars['String']
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath: (Scalars['String'] | null)
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId: (Scalars['String'] | null)
    __typename: 'AccountTradingPauseLink'
}

export interface ChartableSliceData {
    /** The ID of this node */
    id: Scalars['ID']
    /** The internal key of this node */
    key: (Scalars['String'] | null)
    /** The name of the series */
    name: (Scalars['String'] | null)
    /** The id of the series for charting purposes. For example, if you need to tie two series together by ID, you can use this field. If this value is null, it does not have additional data series that need to refer to it. */
    seriesId: (Scalars['String'] | null)
    /** The id of the series that this series pertains too for charting purposes. Only used for `additionalData` series. If this value is null, this series does not refer to any "parent" series. */
    onSeriesId: (Scalars['String'] | null)
    /** Chartable data for the series */
    data: (ChartableSliceDatum[] | null)
    /** The type of data. More specific than `seriesType`. If this is null, there should be no special handling of this type of data besides the default and `chartSeries` handling. */
    dataType: (DataTypeEnum | null)
    /** The type of series which determines how the data should render. If the value is null, it should default to a line chart. */
    seriesType: (SeriesTypeEnum | null)
    /** Additional series of data to accompany this series. For example, a time series of dividends that are tied to a series of value history. */
    additionalData: ((ChartableSliceData | null)[] | null)
    __typename: 'ChartableSliceData'
}

export type DataTypeEnum = 'DIVIDEND' | 'NET_CASH_FLOW'

export type SeriesTypeEnum = 'FLAG_EVENTS'

export interface ChartableSliceDatum {
    /** The date of this datum */
    date: Scalars['String']
    /** The volume of this datum */
    volume: (Scalars['Int'] | null)
    /** The open price of this datum */
    open: (Scalars['Float'] | null)
    /** The high price of this datum */
    high: (Scalars['Float'] | null)
    /** The low price of this datum */
    low: (Scalars['Float'] | null)
    /** The close price of this datum */
    close: (Scalars['Float'] | null)
    /** The previous close price of this datum */
    previousClose: (Scalars['Float'] | null)
    /** The sum of dividends for a single chart datum */
    sumDividends: Scalars['Float']
    /** The dividend distributed on this datum */
    dividends: (HistoricalDividend[] | null)
    /** The split that occurred on this datum */
    splits: (HistoricalSplit[] | null)
    /** The sum of trades (cash flow) for a single chart datum */
    sumTrades: Scalars['Float']
    /** The trades that occurred on this datum */
    trades: (TradeCashFlow[] | null)
    __typename: 'ChartableSliceDatum'
}


/** Information about a custodial account's beneficiary. */
export interface CustodialAccountBeneficiary {
    key: (Scalars['String'] | null)
    /** The ID of the Node */
    id: Scalars['ID']
    /** The first (given) name of the beneficiary. */
    firstName: Scalars['String']
    /** The middle name of the beneficiary. */
    middleInitial: (Scalars['String'] | null)
    /** The last (family) name of the beneficiary. */
    lastName: Scalars['String']
    /** The suffix of the beneficiary's name. */
    suffix: (NameSuffixEnum | null)
    /** The beneficiary's date of birth, in the format of `YYYY-MM-DD`. */
    dateOfBirth: Scalars['String']
    /** The custodial account beneficiary's country of citizenship. */
    countryOfCitizenship: Scalars['String']
    /** The legal home address of the beneficiary. */
    legalResidence: MailingAddress
    /** Nicely formatted string to display the custodial account beneficiary's legal residence. */
    formattedLegalResidence: Scalars['String']
    __typename: 'CustodialAccountBeneficiary'
}


/** Information about a historical dividend for a security. */
export interface HistoricalDividend {
    /** The declared date for the dividend. Value is null when unavailable. */
    declaredDate: (Scalars['String'] | null)
    /** The ex date for the dividend. */
    exDate: Scalars['String']
    /** The record date for the dividend. Value is null when unavailable. */
    recordDate: (Scalars['String'] | null)
    /** The payment date for the dividend. Value is null when unavailable. */
    paymentDate: (Scalars['String'] | null)
    /** The type of dividend. */
    type: DividendTypeEnum
    /** The dividend amount. */
    amount: Scalars['Float']
    /** The frequency of the dividend. Value is null when unavailable. */
    frequency: (DividendFrequencyEnum | null)
    /** The date and time the dividend was effective, the same day as the exDate */
    effectiveDate: (Scalars['String'] | null)
    /** The symbol of the stock giving the dividend */
    symbol: (Scalars['String'] | null)
    /** The currency of the dividend */
    currency: (Scalars['String'] | null)
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns null.
     */
    indicatedRate: (Scalars['Float'] | null)
    __typename: 'HistoricalDividend'
}

export interface HistoricalQuote {
    /** The date for the historical quote. */
    date: Scalars['String']
    /** The daily opening price. */
    openPrice: Scalars['Float']
    /** The daily closing price. */
    closePrice: Scalars['Float']
    /** The close price for the previous day. */
    previousQuoteClosePrice: (Scalars['Float'] | null)
    /** The daily high price. */
    highPrice: Scalars['Float']
    /** The daily low price. */
    lowPrice: Scalars['Float']
    /** The change between the daily open price and close price. */
    dailyChange: Scalars['Float']
    /** The percent change between the daily open price and close price. */
    dailyPercentChange: Scalars['Float']
    /** The close price of the day before the start of the period. */
    previousClosePrice: (Scalars['Float'] | null)
    /**
     * The change between the price at the close before the beginning
     * of the period and the current price.
     */
    changeInPriceFromPeriodOpen: (Scalars['Float'] | null)
    /**
     * The percent change between the close before the beginning of the
     * period and the current price.
     */
    percentChangeFromBeginningOfPeriod: (Scalars['Float'] | null)
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    tradeVolume: Scalars['Float']
    /** The number of shares traded during the day. */
    shareVolume: Scalars['Float']
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    vwap: Scalars['Float']
    /** A list of dividends with ex dates on this day. */
    dividends: HistoricalDividend[]
    /**
     * Information about a stock split with an ex date on this day, if one occurred.
     * Value is null when no stock split occurred on this day.
     */
    split: (HistoricalSplit | null)
    /**
     * @deprecated Field is renamed to `closePrice`.
     * The daily closing price of the security.
     */
    lastPrice: Scalars['Float']
    /**
     * @deprecated Field is renamed to `tradeVolume`.
     * The number of trades during the day.
     */
    volume: Scalars['Float']
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    changeFromPreviousClosePrice: Scalars['Float']
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    percentChangeFromPreviousClosePrice: Scalars['Float']
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns `USD`.
     */
    currency: Scalars['String']
    __typename: 'HistoricalQuote'
}


/** Information about a historical stock split for a security. */
export interface HistoricalSplit {
    /** The declared date for the split. Value is null when unavailable. */
    declaredDate: (Scalars['String'] | null)
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns null.
     */
    recordDate: (Scalars['String'] | null)
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    paymentDate: (Scalars['String'] | null)
    /** The ex date for the split. */
    exDate: Scalars['String']
    /** The split factor, expressed as a single string. For example, `2:1`. */
    factor: Scalars['String']
    /** The "to-factor" for the split. For example, `2` for a `2:1` split. */
    toFactor: Scalars['Float']
    /** The "for-factor" for the split. For example, `1` for a `2:1` split. */
    forFactor: Scalars['Float']
    /** The split ratio, equal to the for-factor divided by the to-factor. */
    ratio: Scalars['Float']
    /** The symbol of the split stock */
    symbol: (Scalars['String'] | null)
    __typename: 'HistoricalSplit'
}

export interface IraContributionLimits {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** The IRA contribution limit for the current year. */
    currentYearLimit: (Scalars['Float'] | null)
    __typename: 'IraContributionLimits'
}

export interface IraContributionTotals {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A summary of IRA contributions by year, in chronological order. */
    totalsByYear: IraContributionTotalForYear[]
    __typename: 'IraContributionTotals'
}

export interface IraContributionTotalForYear {
    /** The IRA contribution year. Note that this is different than the calendar year. */
    year: Scalars['Int']
    /** The total dollar amount of contributions for this contribution year. */
    totalContribution: Scalars['Float']
    /** The maximum contribution amount for this contribution year. */
    maxContribution: Scalars['Float']
    __typename: 'IraContributionTotalForYear'
}

export interface IraWithholding {
    /** Default Federal Withholding */
    defaultFederalWithholding: Scalars['Float']
    /** Default State Withholding */
    defaultStateWithholding: Scalars['Float']
    /** Is the State withholding the same as federal */
    isStateEditable: Scalars['Boolean']
    /** State withholding information */
    stateWithholdingInformationText: (Scalars['String'] | null)
    /** Tax withholding information Link */
    iraWithholdingLink: (AppLink | null)
    /** State withholding information Link */
    stateWithholdingInformationLink: (AppLink | null)
    __typename: 'IraWithholding'
}


/** Options for setting the portfolio on an account. */
export interface SetPortfolioOptions {
    /** True if starting by browsing user pies should be offered. */
    shouldOfferUserPies: (Scalars['Boolean'] | null)
    /**
     * @deprecated starterPieSlice is no longer in use.
     * If applicable, information about a starter pie slice to offer.
     */
    starterPieSlice: (StarterPieSliceOption | null)
    __typename: 'SetPortfolioOptions'
}


/** Information about a starter pie slice. */
export interface StarterPieSliceOption {
    /** A title for the option. */
    title: Scalars['String']
    /** A description for the option, if available. */
    description: (Scalars['String'] | null)
    /** The pie to use as a starter slice. */
    pie: Pie
    __typename: 'StarterPieSliceOption'
}

export interface TradeCashFlow {
    /** The amount of cash traded */
    amount: Scalars['Float']
    /** The date the trade occurred */
    effectiveDate: Scalars['String']
    /** The date the trade was created */
    createdDateTime: Scalars['String']
    /** The trade window job ID of the trade */
    tradeWindowJobId: Scalars['String']
    /** The symbol of the trade */
    symbol: Scalars['String']
    __typename: 'TradeCashFlow'
}

export interface BreakdownDetail {
    /** Breakddown label */
    label: (Scalars['String'] | null)
    /** Breakdown value - formatted string */
    labelValue: (Scalars['String'] | null)
    /** Breakdown value - raw numeric value */
    numericValue: (Scalars['Float'] | null)
    /** Breakdown tooltip */
    tooltip: (AppTooltip | null)
    __typename: 'BreakdownDetail'
}


/** Breakdown of an order for manual orders */
export interface ManualOrderBreakdown {
    /** Slice name label and total value - as a string and number */
    slice: (BreakdownDetail | null)
    /**
     * Cash order buying power label and value - as a string and number
     * This value is clamped to be 0 or greater.
     */
    cashBuyingPower: (BreakdownDetail | null)
    /**
     * Unclamped cash buying power label and value - as a string and number
     * This value respects any negative cash buying power from backend.
     * This value should **not** be used for display purposes!
     * For example, buy buttons should be disabled if this value is negative.
     */
    unclampedCashBuyingPower: (BreakdownDetail | null)
    /** Margin order buying power label and value - as a string and number */
    marginBuyingPower: (BreakdownDetail | null)
    /** Total order buying power label and value - as a string and number */
    totalBuyingPower: (BreakdownDetail | null)
    /** Trade preference label and time of trade window when order will be executed */
    tradeWindow: (BreakdownDetail | null)
    /** manual order disclosures - as rich text. order direction will determine what is resolved */
    disclosures: (RichTextContent[] | null)
    __typename: 'ManualOrderBreakdown'
}

export type PortfolioSlice = (ChildPortfolioSlice | RootPortfolioSlice) & { __isUnion?: true }


/** A portfolio slice's buying power - cash, margin & total */
export interface PortfolioSliceBuyingPower {
    /** Cash buying power label and value - as a string */
    cash: (TabularDataItem | null)
    /** Margin buying power label and value - as a string */
    margin: (TabularDataItem | null)
    /** Margin borrowed & rate text */
    marginBorrowingText: (Scalars['String'] | null)
    /** Total Cash buying power label and value - as a string */
    total: (TabularDataItem | null)
    /** The overview of buying power for margin accounts. */
    overview: (MarginBuyingPowerOverview | null)
    __typename: 'PortfolioSliceBuyingPower'
}

export interface MarginBuyingPowerOverview {
    /** The title of the overview page, mobile only */
    title: (Scalars['String'] | null)
    /** The header of the overview page */
    header: (Scalars['String'] | null)
    /** An optional array of paragraphs that can explain margin buying power */
    details: (RichTextContent[] | null)
    /** A breakdown of the margin buying power */
    breakdown: (MarginBuyingPowerOverviewBreakdown | null)
    /** An optional link about margin buying power */
    link: (AppLink | null)
    /** An optional paragraph about margin risk */
    marginRisk: (RichTextContent | null)
    /** An optional margin promotion card - if the user has accepted a margin promotion campaign */
    marginPromotionCard: (AppCard[] | null)
    /** The primary CTA for the margin overview page */
    primaryCta: (AppButton | null)
    /** The secondary CTA for the margin overview page */
    secondaryCta: (AppLink | null)
    /** The disclosure link for the margin overview page */
    disclosures: (AppDisclosureLink[] | null)
    /** The analytics event to be fired on view of the margin overview page */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'MarginBuyingPowerOverview'
}

export interface MarginBuyingPowerOverviewBreakdown {
    /** The header of the breakdown card */
    header: (Scalars['String'] | null)
    /** The line items of the breakdown that are related to the total */
    items: (BreakdownDetail[] | null)
    /** The total of the breakdown */
    total: (BreakdownDetail | null)
    /** The footer of the breakdown card, displayed below the card */
    footer: (RichTextContent | null)
    __typename: 'MarginBuyingPowerOverviewBreakdown'
}

export interface PortfolioSliceValue {
    /** The total value. Value is null if the total cannot currently be calculated. */
    total: (Scalars['Float'] | null)
    /**
     * True if the total value is greater than zero. Value is null when `total` is
     * null.
     */
    hasValue: (Scalars['Boolean'] | null)
    __typename: 'PortfolioSliceValue'
}

export interface AccountTaxLot {
    /** The lot's M1 unique identifier. */
    id: (Scalars['String'] | null)
    /** Tax lot symbol */
    symbol: (Scalars['String'] | null)
    /** Tax lot cusip */
    cusip: (Scalars['String'] | null)
    /** Tax lot acquisition date */
    acquisitionDate: (Scalars['String'] | null)
    /** Tax lot quantity */
    quantity: (Scalars['Float'] | null)
    /** Tax lot cost basis */
    costBasis: (Scalars['Float'] | null)
    /** Tax lot short or long indicator */
    shortLongTermHolding: (Scalars['String'] | null)
    /** Tax lot closed date */
    closeDate: (Scalars['String'] | null)
    /** Tax lot long term realized gain or loss */
    longTermRealizedGainLoss: (Scalars['Float'] | null)
    /** Tax lot short term realized gain or loss */
    shortTermRealizedGainLoss: (Scalars['Float'] | null)
    /** Tax lot unrealized gain or loss */
    unrealizedGainLoss: (Scalars['Float'] | null)
    /** Tax lot wash sale indicator */
    washSaleIndicator: (Scalars['Boolean'] | null)
    __typename: 'AccountTaxLot'
}

export interface AccountTaxLotsConnection {
    /** A list of edges. */
    edges: ((AccountTaxLotsEdge | null)[] | null)
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The number of nodes in the connection. */
    totalCount: Scalars['Int']
    __typename: 'AccountTaxLotsConnection'
}

export interface AccountTaxLotsEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node: AccountTaxLot
    __typename: 'AccountTaxLotsEdge'
}

export interface AppDisclosureLink {
    /** The link text for the disclosure link */
    linkText: Scalars['String']
    /**
     * The font size of the linkText as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font: (Scalars['String'] | null)
    /**
     * The font weight of the linkText as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight: (Scalars['String'] | null)
    /** If true, the linkText should be underlined. */
    underline: Scalars['Boolean']
    /** The text for the disclosure link modal/dialogue as an array of paragraphs */
    paragraphs: Scalars['String'][]
    __typename: 'AppDisclosureLink'
}

export interface AppLink {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The link URL. */
    url: Scalars['String']
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath: (Scalars['String'] | null)
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId: (Scalars['String'] | null)
    /** An analytics event for following the link. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. If kind exists on AppLink, clients should render a linkable button, else just render link. */
    kind: (Scalars['String'] | null)
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size: (Scalars['String'] | null)
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font: (Scalars['String'] | null)
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight: (Scalars['String'] | null)
    /** If true, the link should be underlined. */
    underline: Scalars['Boolean']
    __typename: 'AppLink'
}

export type AppLinkInterface = (AppLink | AppNavigationItem) & { __isUnion?: true }

export interface AppNavigationItem {
    /** The title to display for the link. */
    title: Scalars['String']
    /** The subtitle to display for the link. */
    subtitle: (Scalars['String'] | null)
    /** The icon to display for the link. */
    icon: (AppImage | null)
    /** The link URL. */
    url: Scalars['String']
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath: (Scalars['String'] | null)
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId: (Scalars['String'] | null)
    /** An analytics event for following the link. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind: (Scalars['String'] | null)
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size: (Scalars['String'] | null)
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font: (Scalars['String'] | null)
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight: (Scalars['String'] | null)
    /** If true, the link should be underlined. */
    underline: Scalars['Boolean']
    __typename: 'AppNavigationItem'
}


/** A interface for types that express a link to some other application state. */
export type Linkable = (TransferSuggestionLink | GenericSetupChecklistStep | BuildPortfolioSetupChecklistStep | SpendMoveMoneyOption | AppLink | AppNavigationItem) & { __isUnion?: true }

export interface ArchivePiePayload {
    clientMutationId: (Scalars['String'] | null)
    /** The updated pie. */
    pie: (UserPie | null)
    didSucceed: Scalars['Boolean']
    error: (ArchivePieInputErrorEnum | null)
    /**
     * @deprecated Added only due to limitations of Relay. Query this off `pie` instead.
     * The ID of the updated pie.
     */
    pieId: (Scalars['ID'] | null)
    /**
     * @deprecated Use `didSucceed`, `outcome` and `error` instead.
     * Metadata about the result of executing the mutation.
     */
    result: ArchivePieResult
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    __typename: 'ArchivePiePayload'
}


/** Metadata about the result of executing the `ArchivePie` mutation. */
export interface ArchivePieResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (ArchivePieInputErrorEnum | null)
    __typename: 'ArchivePieResult'
}


/** Possible input errors for the `ArchivePie` mutation. */
export type ArchivePieInputErrorEnum = 'CANNOT_ARCHIVE_ROOT_PIE' | 'HAS_UNARCHIVED_ANCESTORS' | 'INVALID_PIE_ID' | 'PIE_NOT_EDITABLE' | 'PIE_NOT_FOUND'

export interface CreatePieShareUrlPayload {
    clientMutationId: (Scalars['String'] | null)
    /** True if the share URL includes a referrer code. */
    hasReferrerCode: (Scalars['Boolean'] | null)
    /** The referrer code of the account sharing the user pie. */
    referrerCode: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: CreatePieShareUrlResult
    /** The share token for the user pie. */
    token: (Scalars['String'] | null)
    /** The share URL for the user pie. */
    url: (Scalars['String'] | null)
    /** Buttons that takes web to each social media site for sharing or takes mobile to the share sheet using this information. */
    socialMediaShareButtons: (AppNavigationItem[] | null)
    __typename: 'CreatePieShareUrlPayload'
}


/** Metadata about the result of executing the `CreatePieShareUrl` mutation. */
export interface CreatePieShareUrlResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (CreatePieShareUrlInputErrorEnum | null)
    __typename: 'CreatePieShareUrlResult'
}


/** Possible input errors for the `CreatePieShareUrl` mutation. */
export type CreatePieShareUrlInputErrorEnum = 'INELIGIBLE_FOR_SHARING' | 'REMOVE_BEFORE_SHARING'


/** Possible input errors for the `SetMaxCashThreshold` mutation. */
export type SetMaxCashThresholdInputErrorEnum = 'INVALID_ACCOUNT_ID' | 'PENDING_SELL_ORDERS' | 'THRESHOLD_CANNOT_BE_NEGATIVE'

export interface SetMaxCashThresholdPayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    clientMutationId: (Scalars['String'] | null)
    /** Metadata about the result of executing the mutation. */
    result: SetMaxCashThresholdResult
    __typename: 'SetMaxCashThresholdPayload'
}


/** Metadata about the result of executing the `SetMaxCashThreshold` mutation. */
export interface SetMaxCashThresholdResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (SetMaxCashThresholdInputErrorEnum | null)
    __typename: 'SetMaxCashThresholdResult'
}


/** Payload for the `acceptPersonalLoan` mutation */
export interface AcceptPersonalLoanPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (AcceptPersonalLoanOutcome | null)
    error: (AcceptPersonalLoanErrorEnum | null)
    __typename: 'AcceptPersonalLoanPayload'
}


/** Error enum for the `acceptPersonalLoan` mutation */
export type AcceptPersonalLoanErrorEnum = 'GENERIC_ACCEPT_LOAN_ERROR' | 'EMAIL_UNVERIFIED'


/** Outcome for the `acceptPersonalLoan` mutation */
export interface AcceptPersonalLoanOutcome {
    /** The content for the personal loan disbursement page. */
    loanDisbursement: (PersonalLoanDisbursement | null)
    /** Flag to determine if the user has valid external account to disburse their loan to. */
    hasDisbursementOption: (Scalars['Boolean'] | null)
    __typename: 'AcceptPersonalLoanOutcome'
}

export interface AcceptPersonalLoanOfferPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (AcceptPersonalLoanOfferOutcome | null)
    error: (AcceptPersonalLoanOfferErrorEnum | null)
    __typename: 'AcceptPersonalLoanOfferPayload'
}

export type AcceptPersonalLoanOfferErrorEnum = 'GENERIC_ACCEPT_OFFER_ERROR' | 'COULD_NOT_FIND_LOAN_APPLICATION' | 'COULD_NOT_FIND_LOAN_ID' | 'REJECTED' | 'REJECTED_CREDIT_FROZEN' | 'EMAIL_UNVERIFIED'

export interface AcceptPersonalLoanOfferOutcome {
    /** The ID of the offer that was accepted. */
    offerId: (Scalars['ID'] | null)
    /**
     * @deprecated Clients to poll using status from the application
     * Loan ID for the loan to be accepted if the user continues.
     */
    loanId: (Scalars['ID'] | null)
    __typename: 'AcceptPersonalLoanOfferOutcome'
}

export interface ActivatePlusTrialPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ActivatePlusTrialOutcome | null)
    error: (ActivatePlusTrialErrorEnum | null)
    __typename: 'ActivatePlusTrialPayload'
}

export interface ActivatePlusTrialOutcome {
    /** The updated Plus information. */
    plus: (Plus | null)
    /** The updated Spend Checking information. */
    spend: (Spend | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'ActivatePlusTrialOutcome'
}

export type ActivatePlusTrialErrorEnum = 'ALREADY_PLUS_MEMBER' | 'INELIGIBLE_FOR_TRIAL'


/** Payload for the `archiveTransferRule` mutation. */
export interface ArchiveTransferRulePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (ArchiveTransferRuleErrorEnum | null)
    __typename: 'ArchiveTransferRulePayload'
}


/** Errors for the `archiveTransferRule` mutation. */
export type ArchiveTransferRuleErrorEnum = 'NOT_ARCHIVABLE'


/** Payload for the `authenticate` mutation. */
export interface AuthenticatePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (AuthenticateOutcome | null)
    error: (AuthenticateErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: AuthenticateResult
    /** @deprecated Use `outcome` instead. */
    accessToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    refreshToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    expiresIn: (Scalars['Int'] | null)
    /** @deprecated Use `outcome` instead. */
    viewer: (Viewer | null)
    __typename: 'AuthenticatePayload'
}


/** Outcome for the `authenticate` mutation. */
export interface AuthenticateOutcome {
    /** The access token. */
    accessToken: Scalars['String']
    /** The refresh token. */
    refreshToken: Scalars['String']
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    __typename: 'AuthenticateOutcome'
}


/** Errors for the `authenticate` mutation. */
export type AuthenticateErrorEnum = 'INCORRECT_CREDENTIALS' | 'USER_ACCOUNT_LOCKED' | 'CODE_REQUIRED' | 'EMAIL_AMFA_REQUIRED' | 'AMFA_TOKEN_EXPIRED' | 'INCORRECT_AMFA_CODE' | 'INCORRECT_CODE' | 'AGREEMENT_REQUIRED' | 'CLIENT_VERSION_NOT_SUPPORTED'

export interface AuthenticateResult {
    didSucceed: Scalars['Boolean']
    inputError: (AuthenticateInputErrorEnum | null)
    __typename: 'AuthenticateResult'
}

export type AuthenticateInputErrorEnum = 'INCORRECT_CREDENTIALS' | 'USER_ACCOUNT_LOCKED' | 'CODE_REQUIRED' | 'INCORRECT_CODE' | 'AGREEMENT_REQUIRED' | 'EMAIL_AMFA_REQUIRED' | 'INCORRECT_AMFA_CODE' | 'AMFA_TOKEN_EXPIRED'


/** Payload for the `cancelTransferInstance` mutation. */
export interface CancelTransferInstancePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CancelTransferInstanceOutcome | null)
    error: (CancelTransferInstanceErrorEnum | null)
    __typename: 'CancelTransferInstancePayload'
}


/** Outcome for the `cancelTransferInstance` mutation. */
export interface CancelTransferInstanceOutcome {
    /** The transfer instance that was canceled. */
    instance: (TransferInstance | null)
    __typename: 'CancelTransferInstanceOutcome'
}


/** Errors for the `cancelTransferInstance` mutation. */
export type CancelTransferInstanceErrorEnum = 'NOT_CANCELABLE'


/** Payload for the `changePassword` mutation. */
export interface ChangePasswordPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (ChangePasswordErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: ChangePasswordResult
    __typename: 'ChangePasswordPayload'
}


/** Errors for the `changePassword` mutation. */
export type ChangePasswordErrorEnum = 'INCORRECT_OLD_PASSWORD' | 'INVALID_NEW_PASSWORD'

export interface ChangePasswordResult {
    didSucceed: Scalars['Boolean']
    inputError: (ChangePasswordInputErrorEnum | null)
    __typename: 'ChangePasswordResult'
}

export type ChangePasswordInputErrorEnum = 'INCORRECT_OLD_PASSWORD' | 'INVALID_NEW_PASSWORD'


/** Payload for the `completePhoneVerification` mutation. */
export interface CompletePhoneVerificationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CompletePhoneVerificationOutcome | null)
    error: (CompletePhoneVerificationErrorEnum | null)
    __typename: 'CompletePhoneVerificationPayload'
}


/** Outcome for the `completePhoneVerification` mutation. */
export interface CompletePhoneVerificationOutcome {
    /** The phone number that was successfully verified. */
    phone: Scalars['PhoneNumber']
    /** The updated user. */
    user: (User | null)
    __typename: 'CompletePhoneVerificationOutcome'
}


/** Errors for the `completePhoneVerification` mutation. */
export type CompletePhoneVerificationErrorEnum = 'NO_PENDING_VERIFICATION' | 'INCORRECT_CODE' | 'PHONE_ALREADY_USED' | 'TOO_MANY_ATTEMPTS'

export interface CreateProfilePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateProfileOutcome | null)
    error: (CreateProfileError | null)
    __typename: 'CreateProfilePayload'
}

export interface CreateProfileOutcome {
    didSucceed: Scalars['Boolean']
    userProfileId: Scalars['String']
    __typename: 'CreateProfileOutcome'
}

export type CreateProfileError = 'GENERAL_REJECTION' | 'INVALID_HOLDER_DOB' | 'DUPLICATE_PROFILE' | 'HOLDER_NAME_TOO_LONG' | 'INVALID_COUNTRY_CODE' | 'INVALID_HOME_ADDRESS' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'PHONE_MUST_MATCH_VERIFICATION'


/** Payload for the `createSpendAccountDocumentLink` mutation. */
export interface CreateSpendAccountDocumentLinkPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateSpendAccountDocumentLinkOutcome | null)
    error: (CreateSpendAccountDocumentLinkErrorEnum | null)
    __typename: 'CreateSpendAccountDocumentLinkPayload'
}


/** Outcome for the `createSpendAccountDocumentLink` mutation. */
export interface CreateSpendAccountDocumentLinkOutcome {
    /** The temporary URL to the document. It will expire after time. */
    url: Scalars['String']
    __typename: 'CreateSpendAccountDocumentLinkOutcome'
}


/** Errors for the `createSpendAccountDocumentLink` mutation. */
export type CreateSpendAccountDocumentLinkErrorEnum = 'DOCUMENT_NOT_AVAILBLE'


/** Payload for the `initiateSpendIdentity` mutation. */
export interface InitiateSpendIdentityPayload {
    clientMutationId: (Scalars['String'] | null)
    /** @deprecated Sunset Checking. */
    didSucceed: Scalars['Boolean']
    /** @deprecated Sunset Checking. */
    outcome: (InitiateSpendIdentityOutcome | null)
    /** @deprecated Sunset Checking. */
    error: (InitiateSpendIdentityErrorEnum | null)
    __typename: 'InitiateSpendIdentityPayload'
}


/** Outcome for the `initiateSpendIdentity` mutation. */
export interface InitiateSpendIdentityOutcome {
    /**
     * @deprecated Sunset Checking.
     * The newly-initiated identity.
     */
    identity: SpendIdentity
    /**
     * @deprecated Sunset Checking.
     * If the identity is accepted, an identity verification session is started and a
     * set of challenge question is returned. Respond to the challenge with the
     * `verifySpendIdentity` mutation.
     */
    challenge: (SpendIdentityVerificationChallenge | null)
    __typename: 'InitiateSpendIdentityOutcome'
}


/**
 * An identity verfication challenge associated with the `initiateSpendIdentity`
 * mutation.
 */
export interface SpendIdentityVerificationChallenge {
    /**
     * @deprecated Sunset Checking.
     * A unique token identifying the identity verification session associated with
     * these questions.
     */
    verificatonToken: Scalars['String']
    /**
     * @deprecated Sunset Checking.
     * A set of questions for the user to answer to verify their identity.
     */
    verificationQuestions: SpendIdentityVerificationQuestion[]
    __typename: 'SpendIdentityVerificationChallenge'
}


/**
 * An single identity verification question associated with the
 * `initiateSpendIdentity` mutation.
 */
export interface SpendIdentityVerificationQuestion {
    /**
     * @deprecated Sunset Checking.
     * A machine-readable code used to identify this question when answering.
     */
    questionCode: Scalars['String']
    /**
     * @deprecated Sunset Checking.
     * A human-readable question prompt to display to the user.
     */
    prompt: Scalars['String']
    /**
     * @deprecated Sunset Checking.
     * A set of multiple-choice options to both display to the user and return as an
     * answer.
     */
    choices: Scalars['String'][]
    __typename: 'SpendIdentityVerificationQuestion'
}


/** Errors for the `initiateSpendIdentity` mutation. */
export type InitiateSpendIdentityErrorEnum = 'INVALID_AGREEMENT_SIGNATURE' | 'NOT_ELIGIBLE' | 'PROFILE_NOT_CREATED' | 'PROFILE_NOT_READY' | 'CANNOT_REINITIATE_IDENTITY' | 'TAX_ID_ALREADY_IN_USE' | 'TAX_ID_HAS_TOO_MANY_FAILURES' | 'DISALLOWED_HOME_ADDRESS'


/** Payload for the `updateSpendIdentity` mutation. */
export interface UpdateSpendIdentityPayload {
    clientMutationId: (Scalars['String'] | null)
    /** @deprecated Sunset Checking. */
    didSucceed: Scalars['Boolean']
    /** @deprecated Sunset Checking. */
    outcome: (UpdateSpendIdentityOutcome | null)
    /** @deprecated Sunset Checking. */
    error: (UpdateSpendIdentityErrorEnum | null)
    __typename: 'UpdateSpendIdentityPayload'
}


/** Errors for the `updateSpendIdentity` mutation. */
export type UpdateSpendIdentityErrorEnum = 'UNABLE_TO_UPDATE_SPEND_CUSTOMER' | 'INVALID_AGREEMENT_SIGNATURE'


/** Outcome for the `updateSpendIdentity` mutation. */
export interface UpdateSpendIdentityOutcome {
    /**
     * @deprecated Sunset Checking.
     * The user's Spend identity.
     */
    identity: (SpendIdentity | null)
    __typename: 'UpdateSpendIdentityOutcome'
}


/** Payload for the `verifySpendIdentity` mutation. */
export interface VerifySpendIdentityPayload {
    clientMutationId: (Scalars['String'] | null)
    /** @deprecated Sunset Checking. */
    didSucceed: Scalars['Boolean']
    /** @deprecated Sunset Checking. */
    outcome: (VerifySpendIdentityOutcome | null)
    /** @deprecated Sunset Checking. */
    error: (VerifySpendIdentityErrorEnum | null)
    __typename: 'VerifySpendIdentityPayload'
}


/** Outcome for the `verifySpendIdentity` mutation. */
export interface VerifySpendIdentityOutcome {
    /**
     * @deprecated Sunset Checking.
     * The updated identity.
     */
    identity: SpendIdentity
    /**
     * @deprecated Sunset Checking.
     * Spend Checking due diligence questions for users to complete before finishing enrollment.
     */
    spendDueDiligenceQuestions: (SpendDueDiligenceQuestions | null)
    __typename: 'VerifySpendIdentityOutcome'
}


/** Errors for the `verifySpendIdentity` mutation. */
export type VerifySpendIdentityErrorEnum = 'IDENTITY_NOT_INITIATED' | 'IDENTITY_VERIFICATION_NOT_READY'


/** Payload for the `completeSpendEnrollment` mutation. */
export interface CompleteSpendEnrollmentPayload {
    clientMutationId: (Scalars['String'] | null)
    /** @deprecated Sunset Checking. */
    didSucceed: Scalars['Boolean']
    /** @deprecated Sunset Checking. */
    outcome: (CompleteSpendEnrollmentOutcome | null)
    /** @deprecated Sunset Checking. */
    error: (CompleteSpendEnrollmentErrorEnum | null)
    __typename: 'CompleteSpendEnrollmentPayload'
}


/** Outcome for the `completeSpendEnrollment` mutation. */
export interface CompleteSpendEnrollmentOutcome {
    /**
     * @deprecated Sunset Checking.
     * The newly-created Spend Checking account.
     */
    spendAccount: SpendAccount
    /**
     * @deprecated Sunset Checking.
     * True if there is a linked external account for the user.
     */
    hasConnectedExternalAccount: (Scalars['Boolean'] | null)
    /**
     * @deprecated Sunset Checking.
     * True only when a migration of an Invest external account was requested, but it
     * failed. False when a migrated was requested and succeeded, or when no
     * migration was requested at all.
     */
    didRequestedExternalAccountMigrationFail: (Scalars['Boolean'] | null)
    /**
     * @deprecated Sunset Checking.
     * An analytics event to be recorded upon success.
     */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'CompleteSpendEnrollmentOutcome'
}


/** Errors for the `completeSpendEnrollment` mutation. */
export type CompleteSpendEnrollmentErrorEnum = 'IDENTITY_NOT_VERIFIED' | 'BLOCKED_BY_PENDING_TRANSFER' | 'ENROLLMENT_ALREADY_COMPLETE'


/** Payload for the `createSpendExternalAccountViaLink` mutation. */
export interface CreateSpendExternalAccountViaLinkPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (CreateSpendExternalAccountViaLinkOutcome | null)
    error: (CreateSpendExternalAccountViaLinkErrorEnum | null)
    __typename: 'CreateSpendExternalAccountViaLinkPayload'
}


/** Outcome for the `createSpendExternalAccountViaLink` mutation. */
export interface CreateSpendExternalAccountViaLinkOutcome {
    /** The newly-created external bank account. */
    spendExternalAccount: (SpendExternalAccount | null)
    __typename: 'CreateSpendExternalAccountViaLinkOutcome'
}


/** Errors for the `createSpendExternalAccountViaLink` mutation. */
export type CreateSpendExternalAccountViaLinkErrorEnum = 'ENROLLMENT_NOT_COMPLETE' | 'TOO_MANY_EXTERNAL_ACCOUNTS' | 'DISALLOWED_EXTERNAL_ACCOUNT'


/**
 * An external account type used for input to the `initiateSpendExternalAccount`
 * mutation.
 */
export type SpendExternalAccountTypeInputEnum = 'CHECKING' | 'SAVINGS'


/** Payload for the `initiateSpendExternalAccount` mutation. */
export interface InitiateSpendExternalAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (InitiateSpendExternalAccountOutcome | null)
    error: (InitiateSpendExternalAccountErrorEnum | null)
    __typename: 'InitiateSpendExternalAccountPayload'
}


/** Outcome for the `initiateSpendExternalAccount` mutation. */
export interface InitiateSpendExternalAccountOutcome {
    /** The newly-initiated external bank account. */
    spendExternalAccount: SpendExternalAccount
    __typename: 'InitiateSpendExternalAccountOutcome'
}


/** Errors for the `initiateSpendExternalAccount` mutation. */
export type InitiateSpendExternalAccountErrorEnum = 'ENROLLMENT_NOT_COMPLETE' | 'NICKNAME_ALREADY_IN_USE' | 'TOO_MANY_EXTERNAL_ACCOUNTS' | 'INVALID_ROUTING_NUMBER' | 'INVALID_ACCOUNT_NUMBER'


/** Payload for the `verifySpendExternalAccount` mutation. */
export interface VerifySpendExternalAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (VerifySpendExternalAccountOutcome | null)
    error: (VerifySpendExternalAccountErrorEnum | null)
    __typename: 'VerifySpendExternalAccountPayload'
}


/** Outcome for the `verifySpendExternalAccount` mutation. */
export interface VerifySpendExternalAccountOutcome {
    /** The updated external bank account. */
    spendExternalAccount: SpendExternalAccount
    __typename: 'VerifySpendExternalAccountOutcome'
}


/** Errors for the `verifySpendExternalAccount` mutation. */
export type VerifySpendExternalAccountErrorEnum = 'EXTERNAL_ACCOUNT_IS_LOCKED' | 'EXTERNAL_ACCOUNT_IS_DENIED' | 'EXTERNAL_ACCOUNT_IS_EXPIRED' | 'TOO_MANY_VERIFICATION_FAILURES' | 'DEPOSITS_INCORRECT'


/** Payload for the `archiveSpendExternalAccount` mutation. */
export interface ArchiveSpendExternalAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ArchiveSpendExternalAccountOutcome | null)
    error: (ArchiveSpendExternalAccountErrorEnum | null)
    __typename: 'ArchiveSpendExternalAccountPayload'
}


/** Outcome for the `archiveSpendExternalAccount` mutation. */
export interface ArchiveSpendExternalAccountOutcome {
    /** Outcome content for the 'archiveSpendExternalAccount' mutation. */
    outcomeContent: (Scalars['String'] | null)
    __typename: 'ArchiveSpendExternalAccountOutcome'
}


/** Errors for the `archiveSpendExternalAccount` mutation. */
export type ArchiveSpendExternalAccountErrorEnum = 'CUSTOMER_NOT_FOUND' | 'INVALID_EXTERNAL_ACCOUNT_ID' | 'UNABLE_TO_DEACTIVATE_EXTERNAL_ACCOUNT' | 'UNABLE_TO_DEACTIVATE_EXTERNAL_ACCOUNT_PENDING_ACTION' | 'UNABLE_TO_ARCHIVE_EXTERNAL_ACCOUNT_OUTSTANDING_TRANSACTIONS' | 'INVALID_USER_EXTERNAL_ACCOUNT_STATE'


/** Payload for the `sendCheck` mutation. */
export interface SendCheckPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SendCheckOutcome | null)
    error: (SendCheckErrorEnum | null)
    __typename: 'SendCheckPayload'
}

export interface SendCheckOutcome {
    /** The `TransferInstance` of the transfer created to send the check. */
    transfer: (TransferInstance | null)
    /** The `ScheduledTransferRule` of the transfer schedule created for recurring checks. */
    transferScheduleRule: (ScheduledTransferRule | null)
    /** Copy for the Payment Confirmed screen in the Send Check flow. */
    paymentConfirmedContent: (PaymentConfirmedContent | null)
    __typename: 'SendCheckOutcome'
}

export type SendCheckErrorEnum = 'PARTICIPANTS_FROZEN' | 'PARTICIPANTS_DAILY_LIMIT_EXCEEDED' | 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' | 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' | 'AMOUNT_GREATER_THAN_AVAILABLE_BALANCE' | 'PHYSICAL_CHECK_MEMO_TOO_LONG' | 'PHYSICAL_CHECK_ADDRESS_TOO_LONG' | 'PHYSICAL_CHECK_ADDRESS_COUNTRY_INVALID' | 'PHYSICAL_CHECK_RECIPIENT_NAME_TOO_LONG' | 'SEND_CHECK_GENERIC_ERROR' | 'CONFLICTS_WITH_EXISTING_RULE'


/** Payload for the `disableTwoFactorAuth` mutation. */
export interface DisableTwoFactorAuthPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (DisableTwoFactorAuthOutcome | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: DisableTwoFactorAuthResult
    /** @deprecated Use `outcome` instead. */
    user: (User | null)
    __typename: 'DisableTwoFactorAuthPayload'
}


/** Outcome for the `disableTwoFactorAuth` mutation. */
export interface DisableTwoFactorAuthOutcome {
    /** The updated user. */
    user: (User | null)
    __typename: 'DisableTwoFactorAuthOutcome'
}

export interface DisableTwoFactorAuthResult {
    didSucceed: Scalars['Boolean']
    inputError: (DisableTwoFactorAuthInputErrorEnum | null)
    __typename: 'DisableTwoFactorAuthResult'
}

export type DisableTwoFactorAuthInputErrorEnum = 'TWO_FACTOR_AUTH_ALREADY_DISABLED'


/** An announcement context. */
export type AnnouncementContextEnum = 'ALL' | 'LIST' | 'TRANSFERS' | 'MOVE_MONEY' | 'INVEST' | 'BORROW' | 'SPEND' | 'REFERRALS' | 'PLUS' | 'DOCUMENTS' | 'HOME' | 'HOME_MODAL' | 'PERSONAL_LOANS' | 'SAVE' | 'INVEST_MARKETING' | 'SAVE_MARKETING' | 'BORROW_MARKETING' | 'HOME_PROMO' | 'INVEST_PLP_PROMO' | 'EARN_PLP_PROMO' | 'MARGIN_PLP_PROMO'


/** Payload for the `dismissAnnouncements` mutation. */
export interface DismissAnnouncementsPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (DismissAnnouncementsOutcome | null)
    __typename: 'DismissAnnouncementsPayload'
}


/** Outcome for the `dismissAnnouncements` mutation. */
export interface DismissAnnouncementsOutcome {
    /** Updated announcements. */
    announcements: (Announcements | null)
    __typename: 'DismissAnnouncementsOutcome'
}


/** Payload for the `enableTwoFactorAuth` mutation. */
export interface EnableTwoFactorAuthPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (EnableTwoFactorAuthOutcome | null)
    error: (EnableTwoFactorAuthErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: EnableTwoFactorAuthResult
    /** @deprecated Use `outcome` instead. */
    user: (User | null)
    __typename: 'EnableTwoFactorAuthPayload'
}


/** Outcome for the `enableTwoFactorAuth` mutation. */
export interface EnableTwoFactorAuthOutcome {
    /** The updated user. */
    user: (User | null)
    __typename: 'EnableTwoFactorAuthOutcome'
}


/** Errors for the `enableTwoFactorAuth` mutation. */
export type EnableTwoFactorAuthErrorEnum = 'INCORRECT_CODE'

export interface EnableTwoFactorAuthResult {
    didSucceed: Scalars['Boolean']
    inputError: (EnableTwoFactorAuthInputErrorEnum | null)
    __typename: 'EnableTwoFactorAuthResult'
}

export type EnableTwoFactorAuthInputErrorEnum = 'TWO_FACTOR_AUTH_ALREADY_ENABLED' | 'INCORRECT_CODE'

export interface GenerateAtomicTokenPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: (Scalars['Boolean'] | null)
    outcome: (GenerateAtomicTokenOutcome | null)
    error: (GenerateAtomicTokenErrorEnum | null)
    errorMessage: (Scalars['String'] | null)
    __typename: 'GenerateAtomicTokenPayload'
}

export interface GenerateAtomicTokenOutcome {
    /** Atomic client token */
    token: (Scalars['String'] | null)
    __typename: 'GenerateAtomicTokenOutcome'
}

export type GenerateAtomicTokenErrorEnum = 'GENERIC_ATOMIC_ERROR'

export interface GenerateIdempotencyKeyPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (IdempotencyKeyError | null)
    outcome: (GenerateIdempotencyKeyOutcome | null)
    __typename: 'GenerateIdempotencyKeyPayload'
}

export interface GenerateIdempotencyKeyOutcome {
    idempotencyKey: Scalars['String']
    __typename: 'GenerateIdempotencyKeyOutcome'
}

export type IdempotencyKeyError = 'ERROR_GENERATING_IDEMPOTENCY_KEY'


/** Payload for the `initializeTwoFactorAuth` mutation. */
export interface InitializeTwoFactorAuthPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (InitializeTwoFactorAuthOutcome | null)
    error: (InitializeTwoFactorAuthErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: InitializeTwoFactorAuthResult
    /** @deprecated Use `outcome` instead. */
    secret: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    uri: (Scalars['String'] | null)
    __typename: 'InitializeTwoFactorAuthPayload'
}


/** Outcome for the `initializeTwoFactorAuth` mutation. */
export interface InitializeTwoFactorAuthOutcome {
    /** The two factor authentication secret. */
    secret: Scalars['String']
    /** The two factor authentication secret as an `otpauth` URI. */
    uri: Scalars['String']
    __typename: 'InitializeTwoFactorAuthOutcome'
}


/** Errors for the `initializeTwoFactorAuth` mutation. */
export type InitializeTwoFactorAuthErrorEnum = 'TWO_FACTOR_AUTH_ALREADY_ENABLED' | 'MFA_TOKEN_REQUIRED'

export interface InitializeTwoFactorAuthResult {
    didSucceed: Scalars['Boolean']
    inputError: (InitializeTwoFactorAuthInputErrorEnum | null)
    __typename: 'InitializeTwoFactorAuthResult'
}

export type InitializeTwoFactorAuthInputErrorEnum = 'TWO_FACTOR_AUTH_ALREADY_ENABLED'

export interface InitializeTwoFactorVerificationPayload {
    /** Did the mutation succeed */
    didSucceed: Scalars['Boolean']
    /** Error code */
    error: (InitializeTwoFactorVerificationErrorEnum | null)
    __typename: 'InitializeTwoFactorVerificationPayload'
}

export type InitializeTwoFactorVerificationErrorEnum = 'NO_VERIFIED_NUMBERS' | 'INVALID_PHONE' | 'DISALLOWED_PHONE' | 'PHONE_ALREADY_USED' | 'PHONE_DOES_NOT_SUPPORT_SMS' | 'TOO_MANY_ATTEMPTS'

export type PhoneVerificationChannelEnum = 'SMS' | 'CALL'


/** Payload for the `initiatePhoneVerification` mutation. */
export interface InitiatePhoneVerificationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (InitiatePhoneVerificationOutcome | null)
    error: (InitiatePhoneVerificationErrorEnum | null)
    __typename: 'InitiatePhoneVerificationPayload'
}


/** Outcome for the `initiatePhoneVerification` mutation. */
export interface InitiatePhoneVerificationOutcome {
    /** The phone number that the verification code was sent to. */
    phone: Scalars['PhoneNumber']
    __typename: 'InitiatePhoneVerificationOutcome'
}


/** Errors for the `initiatePhoneVerification` mutation. */
export type InitiatePhoneVerificationErrorEnum = 'INVALID_PHONE' | 'DISALLOWED_PHONE' | 'PHONE_ALREADY_USED' | 'PHONE_DOES_NOT_SUPPORT_SMS' | 'TOO_MANY_ATTEMPTS'


/** Payload for the `initiateResetPassword` mutation. */
export interface InitiateResetPasswordPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (InitiateResetPasswordErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: InitiateResetPasswordResult
    __typename: 'InitiateResetPasswordPayload'
}


/** Errors for the `initiateResetPassword` mutation. */
export type InitiateResetPasswordErrorEnum = 'INVALID_EMAIL_ADDRESS'

export interface InitiateResetPasswordResult {
    didSucceed: Scalars['Boolean']
    inputError: (InitiateResetPasswordInputErrorEnum | null)
    __typename: 'InitiateResetPasswordResult'
}

export type InitiateResetPasswordInputErrorEnum = 'INVALID_EMAIL_ADDRESS'

export interface JoinCryptoWaitlistPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (JoinCryptoWaitlistError | null)
    __typename: 'JoinCryptoWaitlistPayload'
}

export type JoinCryptoWaitlistError = 'ALREADY_ON_WAITLIST' | 'NOT_ELIGIBLE' | 'GENERAL_JOIN_CRYPTO_WAITLIST_ERROR'


/** Payload for the `SetPlusAutorenewalPreference` mutation. */
export interface SetPlusAutoRenewalPreferencePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetPlusAutoRenewalPreferenceOutcome | null)
    error: (SetPlusAutoRenewalPreferenceErrorEnum | null)
    __typename: 'SetPlusAutoRenewalPreferencePayload'
}


/** Outcome for the `SetPlusAutorenewalPreferences` mutation. */
export interface SetPlusAutoRenewalPreferenceOutcome {
    /** Updated Plus information. */
    plus: (Plus | null)
    /** Analytics event for turning plus autorenewal on or off */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SetPlusAutoRenewalPreferenceOutcome'
}

export type SetPlusAutoRenewalPreferenceErrorEnum = 'NO_ACTIVE_PLUS_MEMBERSHIP'


/** Payload for the `confirmPlusMembership` mutation. */
export interface ConfirmPlusMembershipPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ConfirmPlusMembershipOutcome | null)
    error: (ConfirmPlusMembershipErrorEnum | null)
    errorMessage: (Scalars['String'] | null)
    __typename: 'ConfirmPlusMembershipPayload'
}


/** Outcome for the `confirmPlusMembership` mutation. */
export interface ConfirmPlusMembershipOutcome {
    /** A message for the success toast. */
    successMessage: (Scalars['String'] | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'ConfirmPlusMembershipOutcome'
}

export type ConfirmPlusMembershipErrorEnum = 'TRANSACTION_DECLINED' | 'GENERIC_PLUS_CONFIRMATION_ERROR'


/** Payload for the `submitPlusMembershipPayment` mutation. */
export interface SubmitPlusMembershipPaymentPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SubmitPlusMembershipPaymentOutcome | null)
    error: (SubmitPlusMembershipPaymentErrorEnum | null)
    __typename: 'SubmitPlusMembershipPaymentPayload'
}


/** Outcome for the `submitPlusMembershipPayment` mutation. */
export interface SubmitPlusMembershipPaymentOutcome {
    /** The transaction ID of the user's membership registration. */
    transactionId: Scalars['String']
    /** The updated Plus information. */
    plus: (Plus | null)
    /** The updated Spend Checking information. */
    spend: (Spend | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SubmitPlusMembershipPaymentOutcome'
}


/** Errors for the `submitPlusMembershipPayment` mutation. */
export type SubmitPlusMembershipPaymentErrorEnum = 'PAYMENT_ALREADY_SUBMITTED' | 'TRANSACTION_DECLINED' | 'SPEND_TRANSACTION_DECLINED' | 'INSUFFICIENT_FUNDS_FOR_PAYMENT'


/** Payload for the `submitOneTimePlusPayment` mutation. */
export interface SubmitOneTimePlusPaymentPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SubmitOneTimePlusPaymentOutcome | null)
    error: (SubmitOneTimePlusPaymentErrorEnum | null)
    __typename: 'SubmitOneTimePlusPaymentPayload'
}


/** Outcome for the `submitOneTimePlusPayment` mutation. */
export interface SubmitOneTimePlusPaymentOutcome {
    /** The updated Plus information. */
    plus: (Plus | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SubmitOneTimePlusPaymentOutcome'
}

export type SubmitOneTimePlusPaymentErrorEnum = 'INVALID_PAYMENT_METHOD' | 'SUBSCRIPTION_NOT_RENEWAL_ELIGIBLE' | 'UNABLE_TO_UPDATE_PAYMENT_PREFERENCE' | 'NO_ACTIVE_PLUS_MEMBERSHIP' | 'SUBSCRIPTION_ID_NOT_FOUND' | 'FAILED_INVEST_TRANSACTION' | 'SPEND_INSUFFICIENT_FUNDS' | 'FAILED_SPEND_TRANSACTION'


/** Payload for the `SetActivePlusMembershipPaymentMethod` mutation. */
export interface SetActivePlusMembershipPaymentMethodPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetActivePlusMembershipPaymentMethodOutcome | null)
    error: (SetActivePlusMembershipPaymentMethodErrorEnum | null)
    __typename: 'SetActivePlusMembershipPaymentMethodPayload'
}


/** Outcome for the `SetActivePlusMembershipPaymentMethod` mutation. */
export interface SetActivePlusMembershipPaymentMethodOutcome {
    /** The updated Plus information. */
    plus: (Plus | null)
    /** A message to the user on success. */
    message: (Scalars['String'] | null)
    __typename: 'SetActivePlusMembershipPaymentMethodOutcome'
}


/** Errors for the `SetActivePlusMembershipPaymentMethod` mutation. */
export type SetActivePlusMembershipPaymentMethodErrorEnum = 'DISALLOWED_PAYMENT_METHOD'


/** Accept promotion campaign payload */
export interface AcceptPromotionCampaignPayload {
    /** The client mutation ID. */
    clientMutationId: (Scalars['String'] | null)
    /** Whether the promotion campaign was accepted. */
    didSucceed: Scalars['Boolean']
    /** error */
    error: (AcceptPromotionCampaignError | null)
    /** error message */
    errorMessage: (Scalars['String'] | null)
    /** Outcome */
    outcome: (AcceptPromotionCampaignOutcome | null)
    __typename: 'AcceptPromotionCampaignPayload'
}


/** Accept promotion campaign error */
export type AcceptPromotionCampaignError = 'GENERAL_ACCEPT_PROMOTION_CAMPAIGN_ERROR'


/** Accept promotion campaign outcome */
export interface AcceptPromotionCampaignOutcome {
    /** The promotion campaign success message. */
    successMessage: (Scalars['String'] | null)
    /** The promotion campaign success analytics event. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'AcceptPromotionCampaignOutcome'
}


/** Payload for the `reauthenticate` mutation. */
export interface ReauthenticatePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ReauthenticateOutcome | null)
    error: (ReauthenticateErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: ReauthenticateResult
    /** @deprecated Use `outcome` instead. */
    accessToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    refreshToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    expiresIn: (Scalars['Int'] | null)
    /** @deprecated Use `outcome` instead. */
    viewer: (Viewer | null)
    __typename: 'ReauthenticatePayload'
}


/** Outcome for the `reauthenticate` mutation. */
export interface ReauthenticateOutcome {
    /** The access token. */
    accessToken: Scalars['String']
    /** The refresh token. */
    refreshToken: Scalars['String']
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    __typename: 'ReauthenticateOutcome'
}


/** Errors for the `reauthenticate` mutation. */
export type ReauthenticateErrorEnum = 'INVALID_REFRESH_TOKEN' | 'USER_ACCOUNT_LOCKED'

export interface ReauthenticateResult {
    didSucceed: Scalars['Boolean']
    inputError: (ReauthenticateInputErrorEnum | null)
    __typename: 'ReauthenticateResult'
}

export type ReauthenticateInputErrorEnum = 'INVALID_REFRESH_TOKEN' | 'USER_ACCOUNT_LOCKED'


/** Payload for the `rebalancePortfolioSlice` mutation. */
export interface RebalancePortfolioSlicePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (RebalancePortfolioSliceOutcome | null)
    error: (RebalancePortfolioSliceErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: RebalancePortfolioSliceResult
    /** @deprecated Use `outcome` instead. */
    account: (Account | null)
    /** @deprecated Use `outcome` instead. */
    portfolioSlice: (PortfolioSlice | null)
    __typename: 'RebalancePortfolioSlicePayload'
}


/** Outcome for the `rebalancePortfolioSlice` mutation. */
export interface RebalancePortfolioSliceOutcome {
    /** The updated account. */
    account: (Account | null)
    /** The updated portfolio slice. */
    portfolioSlice: (PortfolioSlice | null)
    /** Updated estimated trading information for the Invest account. */
    estimatedTrading: (EstimatedTrading | null)
    __typename: 'RebalancePortfolioSliceOutcome'
}


/** Errors for the `rebalancePortfolioSlice` mutation. */
export type RebalancePortfolioSliceErrorEnum = 'LOCKED_BY_ALLOCATION' | 'LOCKED_BY_ORDER' | 'LOCKED_BY_TRADING' | 'LOCKED_BY_LIQUIDATION'

export interface RebalancePortfolioSliceResult {
    didSucceed: Scalars['Boolean']
    inputError: (RebalancePortfolioSliceInputErrorEnum | null)
    __typename: 'RebalancePortfolioSliceResult'
}

export type RebalancePortfolioSliceInputErrorEnum = 'LOCKED_BY_ALLOCATION' | 'LOCKED_BY_ORDER' | 'LOCKED_BY_TRADING' | 'LOCKED_BY_LIQUIDATION'

export interface RenameAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (RenameAccountOutcome | null)
    error: (RenameAccountErrorEnum | null)
    __typename: 'RenameAccountPayload'
}


/** Outcome for the `RenameAccount` mutation. */
export interface RenameAccountOutcome {
    /** The newly updated account name */
    name: (Scalars['String'] | null)
    __typename: 'RenameAccountOutcome'
}


/** Errors for the `RenameAccount` mutation. */
export type RenameAccountErrorEnum = 'DUPLICATE_NAME' | 'INVALID_ACCOUNT_CLOSING' | 'INVALID_ACCOUNT_TYPE' | 'INVEST_RENAME_ERROR' | 'SAVINGS_ACCOUNT_NOT_FOUND'


/** A mobile device type. */
export type MobileDeviceTypeEnum = 'IOS' | 'ANDROID'


/** Payload for the `reportMobileDeviceInfo` mutation. */
export interface ReportMobileDeviceInfoPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: ReportMobileDeviceInfoResult
    __typename: 'ReportMobileDeviceInfoPayload'
}

export interface ReportMobileDeviceInfoResult {
    didSucceed: Scalars['Boolean']
    inputError: (ReportMobileDeviceInfoInputErrorEnum | null)
    __typename: 'ReportMobileDeviceInfoResult'
}

export type ReportMobileDeviceInfoInputErrorEnum = 'INVALID_MODEL'


/** Payload for the `requestAccountDeactivation` mutation. */
export interface RequestAccountDeactivationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    __typename: 'RequestAccountDeactivationPayload'
}

export interface RequestOfflineOpenAccountPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    /** Metadata about the result of executing the mutation. */
    result: RequestOfflineOpenAccountResult
    __typename: 'RequestOfflineOpenAccountPayload'
}


/** An account registration type available for offline opening only. */
export type OfflineAccountRegistrationEnum = 'CORPORATION' | 'LLC' | 'PARTNERSHIP' | 'TRUST'


/** Metadata about the result of executing the `RequestOfflineOpenAccount` mutation. */
export interface RequestOfflineOpenAccountResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    __typename: 'RequestOfflineOpenAccountResult'
}


/** Payload for the `requestReferralsParticipation` mutation. */
export interface RequestReferralsParticipationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (RequestReferralsParticipationOutcome | null)
    error: (RequestReferralsParticipationErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: RequestReferralsParticipationResult
    /** @deprecated Use `outcome` instead. */
    user: (User | null)
    __typename: 'RequestReferralsParticipationPayload'
}


/** Outcome for the `requestReferralsParticipation` mutation. */
export interface RequestReferralsParticipationOutcome {
    /** The updated user. */
    user: User
    __typename: 'RequestReferralsParticipationOutcome'
}


/** Errors for the `requestReferralsParticipation` mutation. */
export type RequestReferralsParticipationErrorEnum = 'INELIGIBLE_FOR_PARTICIPATION' | 'MUST_SELECT_PAYMENTS_ACCOUNT'

export interface RequestReferralsParticipationResult {
    didSucceed: Scalars['Boolean']
    inputError: (RequestReferralsParticipationInputErrorEnum | null)
    __typename: 'RequestReferralsParticipationResult'
}

export type RequestReferralsParticipationInputErrorEnum = 'INELIGIBLE_FOR_PARTICIPATION' | 'MUST_SELECT_PAYMENTS_ACCOUNT'


/** Payload for the `resendEmailVerification` mutation. */
export interface ResendEmailVerificationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ResendEmailVerificationOutcome | null)
    error: (ResendEmailVerificationErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: ResendEmailVerificationResult
    /** @deprecated Use `outcome` instead. */
    email: (Scalars['String'] | null)
    __typename: 'ResendEmailVerificationPayload'
}


/** Outcome for the `resendEmailVerification` mutation. */
export interface ResendEmailVerificationOutcome {
    /**
     * @deprecated Email is no longer returned for this outcome.
     * The email address to which the verification email was resent.
     */
    email: (Scalars['String'] | null)
    __typename: 'ResendEmailVerificationOutcome'
}


/** Errors for the `resendEmailVerification` mutation. */
export type ResendEmailVerificationErrorEnum = 'EMAIL_ALREADY_VERIFIED'

export interface ResendEmailVerificationResult {
    didSucceed: Scalars['Boolean']
    inputError: (ResendEmailVerificationInputErrorEnum | null)
    __typename: 'ResendEmailVerificationResult'
}

export type ResendEmailVerificationInputErrorEnum = 'EMAIL_ALREADY_VERIFIED'


/** Payload for the `resetPassword` mutation. */
export interface ResetPasswordPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ResetPasswordOutcome | null)
    error: (ResetPasswordErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: ResetPasswordResult
    /** @deprecated Use `outcome` instead. */
    accessToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    refreshToken: (Scalars['String'] | null)
    /** @deprecated Use `outcome` instead. */
    expiresIn: (Scalars['Int'] | null)
    __typename: 'ResetPasswordPayload'
}


/** Outcome for the `resetPassword` mutation. */
export interface ResetPasswordOutcome {
    /** The access token. */
    accessToken: (Scalars['String'] | null)
    /** The refresh token. */
    refreshToken: (Scalars['String'] | null)
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    __typename: 'ResetPasswordOutcome'
}


/** Errors for the `resetPassword` mutation. */
export type ResetPasswordErrorEnum = 'UNKNOWN_RESET_PASSWORD_TOKEN' | 'EXPIRED_RESET_PASSWORD_TOKEN' | 'USER_ACCOUNT_LOCKED' | 'INVALID_NEW_PASSWORD' | 'SSN_CHALLENGE_REQUIRED' | 'ACCOUNT_CHALLENGE_FAILED' | 'NO_RESET_WITH_2FA' | 'RESET_ATTEMPT_REJECTED'

export interface ResetPasswordResult {
    didSucceed: Scalars['Boolean']
    inputError: (ResetPasswordInputErrorEnum | null)
    __typename: 'ResetPasswordResult'
}

export type ResetPasswordInputErrorEnum = 'UNKNOWN_RESET_PASSWORD_TOKEN' | 'EXPIRED_RESET_PASSWORD_TOKEN' | 'USER_ACCOUNT_LOCKED' | 'INVALID_NEW_PASSWORD' | 'SSN_CHALLENGE_REQUIRED' | 'ACCOUNT_CHALLENGE_FAILED' | 'NO_RESET_WITH_2FA' | 'RESET_ATTEMPT_REJECTED'

export interface ResubmitLoanAfterCreditFreezePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (ResubmitLoanAfterCreditFreezeOutcome | null)
    error: (ResubmitLoanAfterCreditFreezeOutcomeErrorEnum | null)
    __typename: 'ResubmitLoanAfterCreditFreezePayload'
}

export type ResubmitLoanAfterCreditFreezeOutcomeErrorEnum = 'GENERIC_RESUBMIT_AFTER_CREDIT_FREEZE_ERROR'

export interface ResubmitLoanAfterCreditFreezeOutcome {
    /** The loan application ID. */
    applicationId: Scalars['String']
    /** The loan ID. */
    loanId: (Scalars['String'] | null)
    __typename: 'ResubmitLoanAfterCreditFreezeOutcome'
}


/** Payload for the `revokeRefresh` mutation. */
export interface RevokeRefreshPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: RevokeRefreshResult
    __typename: 'RevokeRefreshPayload'
}

export interface RevokeRefreshResult {
    didSucceed: Scalars['Boolean']
    __typename: 'RevokeRefreshResult'
}


/** Payload for the `sendTestPushNotification` mutation. */
export interface SendTestPushNotificationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    __typename: 'SendTestPushNotificationPayload'
}


/** Payload for `setFullyPaidLendingStatus`. */
export interface SetFullyPaidLendingStatusPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetFullyPaidLendingStatusOutcome | null)
    error: (SetFullyPaidLendingStatusErrorEnum | null)
    __typename: 'SetFullyPaidLendingStatusPayload'
}


/** Outcome for `setFullyPaidLendingStatus`. */
export interface SetFullyPaidLendingStatusOutcome {
    /** Analytics event to fire when present. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SetFullyPaidLendingStatusOutcome'
}


/** Error enum for `setFullyPaidLendingStatus`. */
export type SetFullyPaidLendingStatusErrorEnum = 'GENERIC_ERROR'

export interface SetIntroductionSourcePayload {
    didSucceed: Scalars['Boolean']
    __typename: 'SetIntroductionSourcePayload'
}

export type ManualPortfolioSliceOrderTypeEnum = 'BUY' | 'SELL'


/** Payload for the `setPortfolioSliceOrder` mutation. */
export interface SetPortfolioSliceOrderPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetPortfolioSliceOrderOutcome | null)
    error: (SetPortfolioSliceOrderErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: SetPortfolioSliceOrderResult
    /** @deprecated Use `outcome` instead. */
    account: (Account | null)
    /** @deprecated Use `outcome` instead. */
    portfolioSlice: (PortfolioSlice | null)
    __typename: 'SetPortfolioSliceOrderPayload'
}


/** Outcome for the `setPortfolioSliceOrder` mutation. */
export interface SetPortfolioSliceOrderOutcome {
    /** The updated account. */
    account: (Account | null)
    /** The updated portfolio slice. */
    portfolioSlice: (PortfolioSlice | null)
    /** Updated estimated trading information for the Invest account. */
    estimatedTrading: (EstimatedTrading | null)
    __typename: 'SetPortfolioSliceOrderOutcome'
}


/** Errors for the `setPortfolioSliceOrder` mutation. */
export type SetPortfolioSliceOrderErrorEnum = 'LOCKED_BY_REBALANCE' | 'LOCKED_BY_TRADING' | 'LOCKED_BY_LIQUIDATION' | 'LESS_THAN_MINIMUM_BUY' | 'GREATER_THAN_MAXIMUM_SELL' | 'CANNOT_SET_ORDER_FOR_INACTIVE_SLICEABLE' | 'CANNOT_SET_BUY_ORDER_FOR_DELISTED_SLICEABLE'

export interface SetPortfolioSliceOrderResult {
    didSucceed: Scalars['Boolean']
    inputError: (SetPortfolioSliceOrderInputErrorEnum | null)
    __typename: 'SetPortfolioSliceOrderResult'
}

export type SetPortfolioSliceOrderInputErrorEnum = 'LOCKED_BY_REBALANCE' | 'LOCKED_BY_TRADING' | 'LOCKED_BY_LIQUIDATION' | 'LESS_THAN_MINIMUM_BUY' | 'GREATER_THAN_MAXIMUM_SELL' | 'CANNOT_SET_ORDER_FOR_INACTIVE_SLICEABLE' | 'CANNOT_SET_BUY_ORDER_FOR_DELISTED_SLICEABLE'


/** Payload for the `setPreferredPlatformPaymentMethod` mutation */
export interface SetPreferredPlatformPaymentMethodPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetPreferredPlatformPaymentMethodOutcome | null)
    error: (SetPreferredPlatformPaymentMethodErrorEnum | null)
    __typename: 'SetPreferredPlatformPaymentMethodPayload'
}


/** Errors for the `setPreferredPlatformPaymentMethod` mutation */
export type SetPreferredPlatformPaymentMethodErrorEnum = 'PREFERRED_ACCOUNT_UPDATE_FAILED'


/** Outcome for the `setPreferredPlatformPaymentMethod` mutation */
export interface SetPreferredPlatformPaymentMethodOutcome {
    /** Node ID of the preferred payment method */
    preferredPaymentMethodId: (Scalars['ID'] | null)
    /** The analytics event for when the mutation successfully sets a preferred account */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SetPreferredPlatformPaymentMethodOutcome'
}


/** Payload for the `setPreferredTradeWindow` mutation. */
export interface SetPreferredTradeWindowPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SetPreferredTradeWindowOutcome | null)
    error: (SetPreferredTradeWindowErrorEnum | null)
    __typename: 'SetPreferredTradeWindowPayload'
}


/** Outcome for the `setPreferredTradeWindow` mutation. */
export interface SetPreferredTradeWindowOutcome {
    /** The updated account. */
    account: (Account | null)
    __typename: 'SetPreferredTradeWindowOutcome'
}


/** Errors for the `setPreferredTradeWindow` mutation. */
export type SetPreferredTradeWindowErrorEnum = 'NOT_ELIGIBLE' | 'ERROR_UPDATING_TRADE_WINDOW_PREFERENCE'

export interface SetRootPiePayload {
    /** Retrieve the updated account. */
    account: (Account | null)
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (SetRootPieInputErrorEnum | null)
    /**
     * @deprecated Use `didSucceed` and `error` instead.
     * Metadata about the result of executing the mutation.
     */
    result: SetRootPieResult
    /** Analytics for the setRootPieMutation */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SetRootPiePayload'
}


/** Metadata about the result of executing the `SetRootPie` mutation. */
export interface SetRootPieResult {
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed: Scalars['Boolean']
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError: (SetRootPieInputErrorEnum | null)
    __typename: 'SetRootPieResult'
}


/** Possible input errors for the `SetRootPie` mutation. */
export type SetRootPieInputErrorEnum = 'GENERAL_REJECTION' | 'INELIGIBLE_FOR_ROOT_PIE' | 'INVALID_INVESTMENT_ACCOUNT_ID' | 'INVALID_PIE_ID' | 'INVESTMENT_ACCOUNT_NOT_FOUND' | 'PIE_NOT_FOUND' | 'ROOT_PIE_NOT_EDITABLE'

export interface SetUserFinancialGoalPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (SetUserFinancialGoalErrorEnum | null)
    __typename: 'SetUserFinancialGoalPayload'
}

export type SetUserFinancialGoalErrorEnum = 'GENERAL_SET_GOAL_ERROR'


/** Payload for the `signAgreementBundle` mutation. */
export interface SignAgreementBundlePayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SignAgreementBundleOutcome | null)
    error: (SignAgreementBundleErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: SignAgreementBundleResult
    /** @deprecated Use `outcome` instead. */
    user: (User | null)
    __typename: 'SignAgreementBundlePayload'
}


/** Outcome for the `signAgreementBundle` mutation. */
export interface SignAgreementBundleOutcome {
    /** The updated user. */
    user: User
    __typename: 'SignAgreementBundleOutcome'
}


/** Errors for the `signAgreementBundle` mutation. */
export type SignAgreementBundleErrorEnum = 'INVALID_SIGNATURE'

export interface SignAgreementBundleResult {
    didSucceed: Scalars['Boolean']
    inputError: (SignAgreementBundleInputErrorEnum | null)
    __typename: 'SignAgreementBundleResult'
}

export type SignAgreementBundleInputErrorEnum = 'INVALID_SIGNATURE'

export interface StartCryptoOnDemandTradeWindowOutcome {
    tradeWindowId: Scalars['ID']
    __typename: 'StartCryptoOnDemandTradeWindowOutcome'
}

export interface StartCryptoOnDemandTradeWindowPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (StartCryptoOnDemandTradeWindowOutcome | null)
    /** Enum value that represents an error code. Null, if the operations was successful. */
    error: (StartCryptoOnDemandTradeWindowError | null)
    /** An error message that describes what went wrong if the mutation failed. Null, if the operation was successful. */
    errorMessage: (Scalars['String'] | null)
    __typename: 'StartCryptoOnDemandTradeWindowPayload'
}

export type StartCryptoOnDemandTradeWindowError = 'NO_TRADES_CALCULATED' | 'INVALID_TRADES_CALCULATED' | 'ACCOUNT_STATUS_NOT_TRADEABLE' | 'ACCOUNT_PAUSED' | 'NO_MORE_TRADE_WINDOWS_LEFT' | 'ACTIVE_VENDOR_MAINTENANCE_WINDOW' | 'ACTIVE_TRADE_WINDOW' | 'GENERAL_START_CRYPTO_ON_DEMAND_TRADE_WINDOW_ERROR'


/** Possible input errors for the `StartCustomerSupportConversation` mutation. */
export type StartCustomerSupportConversationErrorEnum = 'GENERAL_REJECTION'


/** Payload for `Mutation.startCustomerSupportConversation`. */
export interface StartCustomerSupportConverstionPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    error: (StartCustomerSupportConversationErrorEnum | null)
    outcome: (StartCustomerSupportConversationOutcome | null)
    __typename: 'StartCustomerSupportConverstionPayload'
}


/** Outcome for `Mutation.startCustomerSupportConversation`. */
export interface StartCustomerSupportConversationOutcome {
    /** External ID of the conversation. Currently an Intercom ID. */
    externalConversationId: Scalars['String']
    __typename: 'StartCustomerSupportConversationOutcome'
}


/** Payload for the `submitPersonalLoanApplication` mutation */
export interface SubmitPersonalLoanApplicationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (SubmitPersonalLoanApplicationOutcome | null)
    error: (SubmitPersonalLoanApplicationErrorEnum | null)
    __typename: 'SubmitPersonalLoanApplicationPayload'
}


/** Outcome for the `submitPersonalLoanApplication` mutation */
export interface SubmitPersonalLoanApplicationOutcome {
    /** The application id for the application */
    applicationId: (Scalars['String'] | null)
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'SubmitPersonalLoanApplicationOutcome'
}

export type SubmitPersonalLoanApplicationErrorEnum = 'GENERIC_PERSONAL_LOAN_ERROR'

export type UserFeedbackTopicEnum = 'PERSONAL_LOANS' | 'MARGIN_LOANS' | 'INVESTMENT_ACCOUNTS' | 'SAVINGS' | 'CREDIT_CARD' | 'PLUS_MEMBERSHIP' | 'M1_GENERAL_FEEDBACK'

export interface SubmitUserFeedbackPayload {
    didSucceed: Scalars['Boolean']
    error: (Scalars['String'] | null)
    __typename: 'SubmitUserFeedbackPayload'
}


/** Payload for the `updateProfile` mutation. */
export interface UpdateCustodialAccountBeneficiaryLegalAddressPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (UpdateCustodialAccountBeneficiaryLegalAddressOutcome | null)
    error: (UpdateCustodialAccountBeneficiaryLegalAddressErrorEnum | null)
    __typename: 'UpdateCustodialAccountBeneficiaryLegalAddressPayload'
}


/** Outcome for the `updateCustodialAccountBeneficiaryLegalAddress` mutation. */
export interface UpdateCustodialAccountBeneficiaryLegalAddressOutcome {
    /** Retrieve details for the current user. */
    viewer: (Viewer | null)
    /** Retrieve the updated Custodial Account Beneficary's profile. */
    custodialAccountBeneficiary: (CustodialAccountBeneficiary | null)
    __typename: 'UpdateCustodialAccountBeneficiaryLegalAddressOutcome'
}

export type UpdateCustodialAccountBeneficiaryLegalAddressErrorEnum = 'NO_UPDATE_UNTIL_ACCEPTED' | 'HOME_ADDRESS_CANNOT_BE_PO_BOX' | 'INVALID_HOME_ADDRESS' | 'TEMPORARY_NEW_ACCOUNT_FREEZE'

export interface UpdateEmailPayload {
    /** Did the mutation succeed */
    didSucceed: Scalars['Boolean']
    /** Error code */
    error: (UpdateEmailErrorEnum | null)
    /** Error message */
    errorMessage: (Scalars['String'] | null)
    /** Success message */
    successMessage: (Scalars['String'] | null)
    __typename: 'UpdateEmailPayload'
}

export type UpdateEmailErrorEnum = 'INCORRECT_CODE' | 'INVALID_USERNAME' | 'USERNAME_ALREADY_EXISTS' | 'INCORRECT_MFA_CODE' | 'INVALID_INPUT' | 'UNKNOWN_ERROR' | 'INVALID_PHONE' | 'NO_PENDING_2FA' | 'MULTIPLE_PENDING_2FA'

export interface UpdateFullyPaidLendingStatusPayload {
    clientMutationId: (Scalars['String'] | null)
    /** User's fully paid lending status */
    didSucceed: Scalars['Boolean']
    /** Error enum value */
    error: (UpdateFullyPaidLendingStatusErrorEnum | null)
    __typename: 'UpdateFullyPaidLendingStatusPayload'
}


/** Error enum for the `updateFullyPaidLendingStatus` mutation */
export type UpdateFullyPaidLendingStatusErrorEnum = 'ERROR_UPDATING_FULLY_PAID_LENDING_STATUS'


/** Payload for the `updateUserData` mutation. */
export interface UpdateUserDataPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (UpdateUserDataOutcome | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: UpdateUserDataResult
    /** @deprecated Use `outcome` instead. */
    user: (User | null)
    __typename: 'UpdateUserDataPayload'
}


/** Outcome for the `updateUserData` mutation. */
export interface UpdateUserDataOutcome {
    /** The updated user. */
    user: User
    __typename: 'UpdateUserDataOutcome'
}

export interface UpdateUserDataResult {
    didSucceed: Scalars['Boolean']
    __typename: 'UpdateUserDataResult'
}


/** Payload for the `verifyEmail` mutation. */
export interface VerifyEmailPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (VerifyEmailOutcome | null)
    error: (VerifyEmailErrorEnum | null)
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result: VerifyEmailResult
    /** @deprecated Use `outcome` instead. */
    email: (Scalars['String'] | null)
    __typename: 'VerifyEmailPayload'
}


/** Outcome for the `verifyEmail` mutation. */
export interface VerifyEmailOutcome {
    /**
     * @deprecated Email is no longer returned for this outcome.
     * The email address that was verified.
     */
    email: (Scalars['String'] | null)
    __typename: 'VerifyEmailOutcome'
}


/** Errors for the `verifyEmail` mutation. */
export type VerifyEmailErrorEnum = 'INVALID_EMAIL_VERIFICATION_TOKEN'

export interface VerifyEmailResult {
    didSucceed: Scalars['Boolean']
    inputError: (VerifyEmailInputErrorEnum | null)
    __typename: 'VerifyEmailResult'
}

export type VerifyEmailInputErrorEnum = 'INVALID_EMAIL_VERIFICATION_TOKEN'


/** Payload for the `withdrawPersonalLoan` mutation */
export interface WithdrawPersonalLoanPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (WithdrawPersonalLoanOutcome | null)
    error: (WithdrawPersonalLoanErrorEnum | null)
    __typename: 'WithdrawPersonalLoanPayload'
}


/** Outcome for the `withdrawPersonalLoan` mutation */
export interface WithdrawPersonalLoanOutcome {
    /** An analytics event to be recorded upon success */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'WithdrawPersonalLoanOutcome'
}

export type WithdrawPersonalLoanErrorEnum = 'GENERIC_PERSONAL_LOAN_ERROR' | 'GENERIC_WITHDRAW_PERSONAL_LOAN_ERROR'


/** Payload for the `withdrawPersonalLoanApplication` mutation */
export interface WithdrawPersonalLoanApplicationPayload {
    clientMutationId: (Scalars['String'] | null)
    didSucceed: Scalars['Boolean']
    outcome: (WithdrawPersonalLoanApplicationOutcome | null)
    error: (WithdrawPersonalLoanApplicationErrorEnum | null)
    __typename: 'WithdrawPersonalLoanApplicationPayload'
}

export type WithdrawPersonalLoanApplicationErrorEnum = 'GENERIC_PERSONAL_LOAN_ERROR'


/** Outcome for the `withdrawPersonalLoanApplication` mutation */
export interface WithdrawPersonalLoanApplicationOutcome {
    /** The loan application status */
    status: (LoanApplicationStatusEnum | null)
    /** An analytics event to be recorded upon success */
    successAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'WithdrawPersonalLoanApplicationOutcome'
}

export interface Onboarding {
    /** The ID of this node. */
    id: Scalars['ID']
    /** The internal key of this node. */
    key: (Scalars['String'] | null)
    /** A collection of screens and other information to be used for invest onboarding. */
    onboardingInvest: OnboardingInvest
    /**
     * @deprecated no longer used
     * Onboarding product selection.
     */
    productSelection: (ProductSelection | null)
    /** Due diligence requirements for onboarding a user. */
    dueDiligence: (OnboardingDueDiligence | null)
    /**
     * @deprecated no longer used
     * Onboarding progress interstitial banner messaging.
     */
    progressInterstitial: (OnboardingProgressInterstitial | null)
    /**
     * @deprecated Spend direct onboarding is disabled.
     * Returns true if the feature flag for Spend direct onboarding is enabled for the user.
     */
    spendDirectOnboardingEnabled: Scalars['Boolean']
    /**
     * @deprecated no longer used
     * Returns true if the feature flag for Direct to IRA is enabled for the user
     */
    collectUserGoalsOnboardingEnabled: Scalars['Boolean']
    /** Returns the required agreements for a user to be shown on the Profile Confirmation screen. If null, service is erroring - users will still see these disclosures on the final account opening confirmation screens. */
    profileConfirmationRequiredDocuments: (RequiredDocumentsBundle | null)
    __typename: 'Onboarding'
}


/** Product driven onboarding selection. */
export interface ProductSelection {
    /** Title for the product driven onboarding screen. */
    title: (Scalars['String'] | null)
    /** Set of available product options. */
    products: ((ProductList | null)[] | null)
    __typename: 'ProductSelection'
}


/** Enum set for a Product List. */
export type ProductListIdentifier = 'BORROW_PERSONAL_LOANS' | 'INVEST_INDIVIDUAL' | 'INVEST_RETIREMENT' | 'SPEND_SAVINGS'


/** List of products for direct onboarding. */
export interface ProductList {
    /** Identifier for clients to key off of for custom product behavior. */
    identifier: (ProductListIdentifier | null)
    /** Icon for specific product type. */
    icon: (AppImage | null)
    /** Array of illustration names for the specific product type */
    illustrationName: ((Scalars['String'] | null)[] | null)
    /** Illustration for the specific product type */
    illustration: (AppImage | null)
    /** Header text for specific product type. */
    header: (Scalars['String'] | null)
    /** Subheader text for specific product type. */
    subheader: (Scalars['String'] | null)
    /** Label for the product's call to the action. */
    ctaLabel: (Scalars['String'] | null)
    /** Destination ENUM for product onboarding. Use this value to drive which product onboarding view to show the user. */
    destination: (OnboardingProductSelectionDestination | null)
    /** An analytics event to fire when the given Product is displayed. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** An analytics event to fire when the given Product is clicked. */
    analyticsEventClick: (AppAnalyticsEvent | null)
    /** Disclosures section for the given product. */
    disclosure: (ProductListDisclosure | null)
    __typename: 'ProductList'
}

export interface ProductListDisclosure {
    /** An identifier that clients can key off us for custom disclosures behavior. */
    identifier: (ProductListIdentifier | null)
    /** Label that opens up the disclosure. */
    label: (Scalars['String'] | null)
    /** Array of strings to be rendered as the actual disclosure itself. */
    content: ((Scalars['String'] | null)[] | null)
    __typename: 'ProductListDisclosure'
}

export type OnboardingProductSelectionDestination = 'BEGIN_INVEST_ONBOARDING' | 'BEGIN_IRA_ONBOARDING' | 'BEGIN_PERSONAL_LOANS_ONBOARDING' | 'BEGIN_SAVINGS_ONBOARDING'


/** Onboarding progress interstitial page. */
export interface OnboardingProgressInterstitial {
    /** Banner to be displayed on the progress interstitial page. */
    banner: (InterstitialBanner | null)
    /** When available, promotional copy to be displayed on the progress interstitial page. */
    promotionalText: (OnboardingProgressInterstitialPromoText | null)
    __typename: 'OnboardingProgressInterstitial'
}

export interface InterstitialBanner {
    /** The header for the banner. */
    title: Scalars['String']
    /** The description for the banner. */
    description: Scalars['String']
    /** When available, the link to display in the banner. */
    appLink: (AppLink | null)
    /** When available, the app action to display in the banner. */
    appAction: (AppAction | null)
    /** An optional marketing image shown in the banner. */
    appImage: (AppImage | null)
    /** An optional marketing image shown inline on mobile clients. */
    inlineImage: (AppImage | null)
    __typename: 'InterstitialBanner'
}


/** Promotional copy to be displayed on the progress interstitial page. */
export interface OnboardingProgressInterstitialPromoText {
    /** The text to be displayed. */
    text: (Scalars['String'] | null)
    /** When available, the corresponding tooltip for the promotional copy. */
    tooltip: (OnboardingProgressInterstitialTooltip | null)
    __typename: 'OnboardingProgressInterstitialPromoText'
}


/** When available, the tooltip to be displayed with promotional copy. */
export interface OnboardingProgressInterstitialTooltip {
    /** The icon to be used as the tooltip trigger. */
    icon: AppImage
    /** The text to be used as the tooltip content. */
    text: Scalars['String']
    /** When available, the link to be included as the cta for the tooltip. */
    appLink: (AppLink | null)
    __typename: 'OnboardingProgressInterstitialTooltip'
}


/** Due diligence requirements for onboarding a user. */
export interface OnboardingDueDiligence {
    /** An array of options for the occupation/industry dropdown question. */
    occupationDropdownOptions: (OccupationDropdownOption[] | null)
    __typename: 'OnboardingDueDiligence'
}


/** An option for the occupation/industry dropdown question. */
export interface OccupationDropdownOption {
    /** The description for the option. */
    label: Scalars['String']
    __typename: 'OccupationDropdownOption'
}


/** Enum set for a Product List. */
export type ProductIdentifier = 'BORROW_PERSONAL_LOANS' | 'INVEST_INDIVIDUAL' | 'INVEST_RETIREMENT' | 'SPEND_SAVINGS'


/** List of products for direct onboarding. */
export interface OnboardingProduct {
    /** Identifier for clients to key off of for custom product behavior. */
    identifier: (ProductIdentifier | null)
    /** Icon for specific product type. */
    icon: (AppImage | null)
    /** Array of illustration names for the specific product type */
    illustrationName: ((Scalars['String'] | null)[] | null)
    /** Illustration for the specific product type */
    illustration: (AppImage | null)
    /** Header text for specific product type. */
    header: (Scalars['String'] | null)
    /** Subheader text for specific product type. */
    subheader: (Scalars['String'] | null)
    /** Label for the product's call to the action. */
    ctaLabel: (Scalars['String'] | null)
    /** Destination ENUM for product onboarding. Use this value to drive which product onboarding view to show the user. */
    destination: (OnboardingProductSelectionDestination | null)
    /** An analytics event to fire when the given Product is displayed. */
    analyticsEvent: (AppAnalyticsEvent | null)
    /** An analytics event to fire when the given Product is clicked. */
    analyticsEventClick: (AppAnalyticsEvent | null)
    /** Disclosures section for the given product. */
    disclosure: (ProductDisclosure | null)
    __typename: 'OnboardingProduct'
}

export interface ProductDisclosure {
    /** An identifier that clients can key off us for custom disclosures behavior. */
    identifier: (ProductIdentifier | null)
    /** Label that opens up the disclosure. */
    label: (Scalars['String'] | null)
    /** Array of strings to be rendered as the actual disclosure itself. */
    content: ((Scalars['String'] | null)[] | null)
    __typename: 'ProductDisclosure'
}


/** Contains the various screens and types used for Invest Onboarding. */
export interface OnboardingInvest {
    /** The screen for selecting the invest product (general or retirement) */
    investProductSelectionScreen: InvestProductSelectionScreen
    /** A collection of screens used for IRA onboarding and picking what type of IRA account to open. */
    iraOnboarding: IRAOnboarding
    __typename: 'OnboardingInvest'
}


/** Contains information for the Invest product selection screen. */
export interface InvestProductSelectionScreen {
    /** The title of the invest product selection screen. */
    title: Scalars['String']
    /** The list of invest products you can onboard direct with. */
    productSelection: (ListItem | null)[]
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'InvestProductSelectionScreen'
}


/** Contains screens and types for Invest IRA Onboarding. */
export interface IRAOnboarding {
    /** The screen for selecting how to fund the IRA account after onboarding. */
    iraFundingSelectionScreen: (IRAFundingSelectionScreen | null)
    /** The screen for selecting what type of IRA to onboard and open. */
    iraAccountTypeSelectionScreen: (AccountTypeSelectionScreen | null)
    /** The screen for assisting the user with what type of IRA account to open when rolling over or transfering an existing IRA. */
    iraRolloverTypeSelectionScreen: (IRARolloverTypeSelectionScreen | null)
    /** Returns true if the feature flag for direct to IRA onboarding is enabled for the user. */
    directToIRAOnboardingEnabled: Scalars['Boolean']
    __typename: 'IRAOnboarding'
}


/** Contains information for the IRA Fund Account type screen. */
export interface IRAFundingSelectionScreen {
    /** The title of the IRA funding selection screen. */
    title: Scalars['String']
    /** A collection of options for funding the IRA account. */
    fundingTypes: (ListItem | null)[]
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent: (AppAnalyticsEvent | null)
    __typename: 'IRAFundingSelectionScreen'
}


/** Contains information for the Rollover account Type selection screen. */
export interface IRARolloverTypeSelectionScreen {
    /** An array of disclosures to show. */
    disclosures: (Scalars['String'] | null)[]
    /** Contains the title and copy for the help section. */
    helpSection: (HelpSection | null)
    /** The learn more link */
    learnMoreLink: (AppLink | null)
    /** A collection of options for what IRA account type to open for a rollover or transfer. */
    rolloverTypes: (ListItem | null)[]
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent: (AppAnalyticsEvent | null)
    /** Copy to show under the title. */
    subtitle: Scalars['String']
    /** The title of the IRA account type selection screen. */
    title: Scalars['String']
    __typename: 'IRARolloverTypeSelectionScreen'
}


/** A type that contains the help section information used on various IRA onboarding screens. */
export interface HelpSection {
    /** The title of the help section. */
    title: Scalars['String']
    /** The main copy content for the help section. */
    copy: Scalars['String']
    __typename: 'HelpSection'
}

export interface AccountTypeSelectionScreen {
    /** A collection of the different account types you can choose when opening an account. */
    accountTypes: (ListItem | null)[]
    /** An array of disclosures to show on the screen. */
    disclosures: (Scalars['String'] | null)[]
    /** The help title that sits above the learn more link. */
    helpTitle: Scalars['String']
    /** The learn more link */
    learnMoreLink: (AppLink | null)
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent: (AppAnalyticsEvent | null)
    /** The title of the account type selection screen. */
    title: Scalars['String']
    __typename: 'AccountTypeSelectionScreen'
}


/** A Plus promotional message. */
export interface PlusPromotionalMessage {
    /** An optional title for the message. */
    title: (Scalars['String'] | null)
    /**
     * @deprecated Use `appPill` instead.
     * An optional tag for the title.
     */
    titleTag: (Scalars['String'] | null)
    /** An optional pill for the title. */
    titlePill: (AppPill | null)
    /** A message description. */
    description: Scalars['String']
    /** A shorter version of the message description. */
    shortDescription: Scalars['String']
    /** Optional disclosure text associated with the message. */
    disclosure: (Scalars['String'] | null)
    /** An analytics event to be recorded upon viewing message. */
    displayAnalyticsEvent: (AppAnalyticsEvent | null)
    /** An optional link related to the message. */
    link: (AppLink | null)
    __typename: 'PlusPromotionalMessage'
}

export interface MutationGenqlSelection{
    /** Updates the account-level dividend settings */
    accountConfigurationDividends?: (SetAccountConfigurationDividendSettingsPayloadGenqlSelection & { __args: {input: SetAccountConfigurationDividendSettingsInput} })
    /** Updates an account's symbol-level dividend settings */
    accountConfigurationDividendsForHoldings?: (SetAccountConfigurationDividendSettingsForHoldingsPayloadGenqlSelection & { __args: {input: SetAccountConfigurationDividendSettingsForHoldingsInput} })
    /** Cancels an existing ACH relationship. */
    cancelAchRelationship?: (CancelAchRelationshipPayloadGenqlSelection & { __args: {input: CancelAchRelationshipInput} })
    /** Confirms a pending ACH relationship that was created via deposits. */
    confirmAchRelationshipViaDeposits?: (ConfirmAchRelationshipViaDepositsPayloadGenqlSelection & { __args: {input: ConfirmAchRelationshipViaDepositsInput} })
    /** Creates a new ACH relationship via deposit confirmation. */
    createAchRelationshipViaDeposits?: (CreateAchRelationshipViaDepositsPayloadGenqlSelection & { __args: {input: CreateAchRelationshipViaDepositsInput} })
    /** Creates a new ACH relationship via a linked external account. */
    createAchRelationshipViaLink?: (CreateAchRelationshipViaLinkPayloadGenqlSelection & { __args: {input: CreateAchRelationshipViaLinkInput} })
    /** Submits a Credit Card application for a user. */
    submitCreditCardApplication?: (SubmitCreditCardApplicationPayloadGenqlSelection & { __args: {input: SubmitCreditCardApplicationInput} })
    /** Accepts an approved credit card application offer for a user. Will fail if `CreditCard.activeOffer == null`. */
    acceptCreditCardOffer?: (AcceptCreditCardOfferPayloadGenqlSelection & { __args: {input: AcceptCreditCardOfferInput} })
    /** Attempt to progress an application after the user's credit is unfrozen. */
    continueCreditCardApplicationAfterUserCreditIsUnfrozen?: (ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayloadGenqlSelection & { __args: {input: ContinueCreditCardApplicationAfterUserCreditIsUnfrozenInput} })
    /** Activates a physcial credit card. Accepts the last 4 digits of a credit card which will be validated against the outstanding card. */
    activateCreditCard?: (ActivateCreditCardPayloadGenqlSelection & { __args: {input: ActivateCreditCardInput} })
    /** Set the lock state on a Credit Card. */
    setLockOnCreditCard?: (SetLockOnCreditCardPayloadGenqlSelection & { __args: {input: SetLockOnCreditCardInput} })
    /**
     * @deprecated Waitlist no longer used
     * Adds or removes a user from the Credit Card marketing waitlist.
     */
    setCreditCardWaitlistStatus?: (SetCreditCardWaitlistStatusPayloadGenqlSelection & { __args: {input: SetCreditCardWaitlistStatusInput} })
    updateCreditCardRewardPayoutDestination?: (UpdateCreditCardRewardPayoutDestinationPayloadGenqlSelection & { __args: {input: UpdateCreditCardRewardPayoutDestinationInput} })
    /** Returns necessary encrypted data to complete credit card push provisioning to Apple Pay & Google Pay */
    requestMobilePushProvisioningCertificates?: (RequestMobilePushProvisioningCertificatesPayloadGenqlSelection & { __args: {input: RequestMobilePushProvisioningCertificatesInput} })
    /** Links new funding sources via a Plaid Link token. */
    linkFundingSources?: (LinkFundingSourcesPayloadGenqlSelection & { __args: {input: LinkFundingSourcesInput} })
    /** Links new funding sources via a Plaid Link token. */
    completePlaidIncomeVerification?: (CompletePlaidIncomeVerificationPayloadGenqlSelection & { __args: {input: CompletePlaidIncomeVerificationInput} })
    /** Create ACH relationship with Plaid Link. */
    createAchRelationshipViaFundingSource?: (CreateAchRelationshipViaFundingSourcePayloadGenqlSelection & { __args?: {input?: (CreateAchRelationshipViaFundingSourceInput | null)} })
    /** Confirm micro deposit amounts with Plaid. */
    confirmManualPlaidMicroDeposits?: (ConfirmManualPlaidMicroDepositsPayloadGenqlSelection & { __args?: {input?: (ConfirmManualPlaidMicroDepositsInput | null)} })
    /** Links new funding sources via a Plaid Link token. */
    generatePlaidIncomeLinkToken?: (GeneratePlaidIncomeLinkTokenPayloadGenqlSelection & { __args?: {input?: (GeneratePlaidIncomeLinkTokenInput | null)} })
    /** Links new external accounts via a [Plaid Link](https://github.com/plaid/link) token, then creates an ACH relationship with a single external account based on the specified Plaid account ID. */
    linkAndCreateAchRelationship?: (LinkAndCreateAchRelationshipPayloadGenqlSelection & { __args: {input: LinkAndCreateAchRelationshipInput} })
    /** Reissues new deposits for a pending ACH relationship via deposits. */
    reissueDepositsForAchRelationship?: (ReissueDepositsForAchRelationshipPayloadGenqlSelection & { __args: {input: ReissueDepositsForAchRelationshipInput} })
    /** Open a High Yield Savings Account */
    openHighYieldSavingsAccount?: (OpenHighYieldSavingsAccountMutationPayloadGenqlSelection & { __args: {input: OpenHighYieldSavingsAccountInput} })
    /** Creates a relationship between an external account and product via Transfers service. */
    createFundingSourceRelationship?: (CreateFundingSourceRelationshipPayloadGenqlSelection & { __args: {input: CreateFundingSourceRelationshipInput} })
    /** Sets the direct deposit destination (Account). */
    setDirectDepositDestination?: (SetDirectDepositDestinationPayloadGenqlSelection & { __args: {input: SetDirectDepositDestinationInput} })
    /** Create a transfer instance to move money imminently. */
    createTransferInstance?: (CreateTransferInstancePayloadGenqlSelection & { __args: {input: CreateTransferInstanceInput} })
    /** Create a transfer instance to move money imminently to/from an IRA account. */
    createIraTransfer?: (CreateIraTransferResultGenqlSelection & { __args: {input: CreateIraTransferInput} })
    /**
     * Creates a new, or updates an existing, rule which will create transfer
     * instances on a schedule.
     */
    setScheduledTransferRule?: (SetScheduledTransferRulePayloadGenqlSelection & { __args: {input: SetScheduledTransferRuleInput} })
    /** Updates and/or creates an entire pie tree. */
    updatePieTree?: (UpdatePieTreePayloadGenqlSelection & { __args: {input: UpdatePieTreeInput} })
    /** Registers a new user. */
    registerUser?: (RegisterUserPayloadGenqlSelection & { __args: {input: RegisterUserInput} })
    /** Initiates the transfer of personal loan funds for the user. */
    queueLoanDisbursement?: (QueueLoanDisbursementPayloadGenqlSelection & { __args: {input: QueueLoanDisbursementInput} })
    /** Opens an account. */
    openAccount?: (OpenAccountPayloadGenqlSelection & { __args: {input: OpenAccountInput} })
    /** Opens a custodial account. */
    openCustodialAccount?: (OpenCustodialAccountPayloadGenqlSelection & { __args: {input: OpenCustodialAccountInput} })
    /**
     * @deprecated Use `completeDocumentUploadRequest` instead.
     * Verifies completion of document upload process.
     */
    completeDocumentUpload?: (CompleteDocumentUploadPayloadGenqlSelection & { __args: {input: CompleteDocumentUploadInput} })
    /** Verifies the product agnostic document upload request flow. */
    completeDocumentUploadRequest?: (CompleteDocumentUploadRequestPayloadGenqlSelection & { __args: {input: CompleteDocumentUploadRequestInput} })
    /** Updates a user's profile information. */
    updateProfile?: (UpdateProfilePayloadGenqlSelection & { __args: {input: UpdateProfileInput} })
    /** Links new external accounts via a Plaid Link token. */
    linkExternalAccounts?: (LinkExternalAccountsPayloadGenqlSelection & { __args: {input: LinkExternalAccountsInput} })
    /** Refresh the estimated trading infomration with latest data. */
    refreshEstimatedTrading?: (RefreshEstimatedTradingPayloadGenqlSelection & { __args: {input: RefreshEstimatedTradingInput} })
    /** Creates a new, or updates an existing, smart transfer rule. */
    setSmartTransferRule?: (SetSmartTransferRulePayloadGenqlSelection & { __args: {input: SetSmartTransferRuleInput} })
    /** Set the enabled/disabled status on a transfer rule. */
    setEnabledOnTransferRule?: (SetEnabledOnTransferRulePayloadGenqlSelection & { __args: {input: SetEnabledOnTransferRuleInput} })
    /** Create a temporary link for an account document. */
    createAccountDocumentLink?: (CreateAccountDocumentLinkPayloadGenqlSelection & { __args: {input: CreateAccountDocumentLinkInput} })
    /** Generate token for initializing Plaid connection. */
    generatePlaidLinkItemAddClientToken?: (GeneratePlaidLinkItemAddClientTokenPayloadGenqlSelection & { __args: {input: GeneratePlaidLinkItemAddClientTokenInput} })
    /** Generate a token to initialize the payment client. */
    generatePaymentClientToken?: (GeneratePaymentClientTokenPayloadGenqlSelection & { __args: {input: GeneratePaymentClientTokenInput} })
    /** Generate a presigned S3 url for document upload requests. */
    generatePresignedDocumentUploadRequestUrl?: (GeneratePresignedUrlPayloadGenqlSelection & { __args: {input: GeneratePresignedDocumentUploadRequestUrlInput} })
    /** Generate a presigned S3 url for generic document uploads. */
    generateGenericPresignedDocumentUrl?: (GenerateGenericPresignedDocumentUrlPayloadGenqlSelection & { __args: {input: GenerateGenericPresignedDocumentUrlInput} })
    /**
     * @deprecated Use `generatePresignedDocumentUploadRequestUrl` instead.
     * Generate a presigned S3 url for document uploads.
     */
    generatePresignedUrl?: (GeneratePresignedUrlPayloadGenqlSelection & { __args: {input: GeneratePresignedUrlInput} })
    /** Sets notification preferences. */
    setNotificationPreferences?: (SetNotificationPreferencesPayloadGenqlSelection & { __args: {input: SetNotificationPreferencesInput} })
    /**
     * @deprecated Obsolete, user-entered promo codes are no longer accepted.
     * Obsolete and no longer functional. Always returns null.
     */
    applyPromotionCode?: (ApplyPromotionCodePayloadGenqlSelection & { __args: {input: ApplyPromotionCodeInput} })
    /** Selects an account to be the payments account. */
    selectPaymentsAccount?: (SelectPaymentsAccountPayloadGenqlSelection & { __args: {input: SelectPaymentsAccountInput} })
    /**
     * Move a set of unmanaged holdings into a user's portfolio. "Managed"
     * in this context means the holdings will be acted on by the trading
     * pipeline.
     */
    moveUnmanagedHoldings?: (MoveUnmanagedHoldingsPayloadGenqlSelection & { __args?: {input?: (MoveUnmanagedHoldingsInput | null)} })
    /** Liquidate set of unmanaged holdings by ID's. If successful, this operation will subject the given holdings to our trading pipeline. */
    markUnmanagedHoldingsForLiquidation?: (MarkUnmanagedHoldingsForLiquidationPayloadGenqlSelection & { __args: {input: MarkUnmanagedHoldingsForLiquidationInput} })
    /** Cancel a set of unmanaged holdings by ID's from liquidation. If successful, the given set of UH's will no longer be subject to our trading pipeline. */
    unmarkUnmanagedHoldingsForLiquidation?: (UnmarkUnmanagedHoldingsForLiquidationPayloadGenqlSelection & { __args: {input: UnmarkUnmanagedHoldingsForLiquidationInput} })
    /** Submits an ACAT Transfer Request from an external brokerage to M1 invest account. */
    submitInvestAcatTransfer?: (SubmitInvestAcatTransferPayloadGenqlSelection & { __args: {input: SubmitInvestAcatTransferInput} })
    /** Submit a request to setup AutoPay for a Personal Loan during the origination flow. */
    autoPayApplicationSetUp?: (AutoPayApplicationSetUpPayloadGenqlSelection & { __args: {input: AutoPayApplicationSetUpInput} })
    /** Moves slices from a User's Allocation Pie elsewhere within their Portfolio. */
    moveSlices?: (MoveSlicesPayloadGenqlSelection & { __args: {input: MoveSlicesInput} })
    /**
     * Loops over move slices mutation, then updates the final pie tree at the end.
     * Pie trees in each move must be valid pie trees since they are validated each move.
     */
    moveSlicesBatch?: (MoveSlicesBatchPayloadGenqlSelection & { __args: {input: MoveSlicesBatchInput} })
    /** Archives (or unarchives) a pie. */
    archivePie?: (ArchivePiePayloadGenqlSelection & { __args: {input: ArchivePieInput} })
    createPieShareUrl?: (CreatePieShareUrlPayloadGenqlSelection & { __args: {input: CreatePieShareUrlInput} })
    setMaxCashThreshold?: (SetMaxCashThresholdPayloadGenqlSelection & { __args: {input: SetMaxCashThresholdInput} })
    /** Accept the personal loan for a user. */
    acceptPersonalLoan?: (AcceptPersonalLoanPayloadGenqlSelection & { __args: {input: AcceptPersonalLoanInput} })
    /** Accept a personal loan offer. */
    acceptPersonalLoanOffer?: (AcceptPersonalLoanOfferPayloadGenqlSelection & { __args: {input: AcceptPersonalLoanOfferInput} })
    /** Activate a Plus trial, if eligible. */
    activatePlusTrial?: (ActivatePlusTrialPayloadGenqlSelection & { __args: {input: ActivatePlusTrialInput} })
    /** Archive a transfer rule. */
    archiveTransferRule?: (ArchiveTransferRulePayloadGenqlSelection & { __args: {input: ArchiveTransferRuleInput} })
    /** Authenticates via credentials and produces an access token. */
    authenticate?: (AuthenticatePayloadGenqlSelection & { __args: {input: AuthenticateInput} })
    /** Cancel a pending transfer instance. */
    cancelTransferInstance?: (CancelTransferInstancePayloadGenqlSelection & { __args: {input: CancelTransferInstanceInput} })
    /** Changes an authenticated user's password. */
    changePassword?: (ChangePasswordPayloadGenqlSelection & { __args: {input: ChangePasswordInput} })
    /** Completes the phone verification process. */
    completePhoneVerification?: (CompletePhoneVerificationPayloadGenqlSelection & { __args: {input: CompletePhoneVerificationInput} })
    /** Creates a new profile without need for any accounts. */
    createProfile?: (CreateProfilePayloadGenqlSelection & { __args: {input: CreateProfileInput} })
    /** Create a temporary link for a Spend Checking account document. */
    createSpendAccountDocumentLink?: (CreateSpendAccountDocumentLinkPayloadGenqlSelection & { __args: {input: CreateSpendAccountDocumentLinkInput} })
    /**
     * @deprecated Sunset Checking.
     * Initiate the process of verifying a user's identity, required to use Spend
     * features. Starts an identity verification session and returns verification
     * challenge questions.
     */
    initiateSpendIdentity?: (InitiateSpendIdentityPayloadGenqlSelection & { __args: {input: InitiateSpendIdentityInput} })
    /**
     * @deprecated Sunset Checking.
     * Update a user's Spend identity. Changing values on the Spend account details, including
     * if a user is subject to backup witholding for multiple checking accounts.
     */
    updateSpendIdentity?: (UpdateSpendIdentityPayloadGenqlSelection & { __args: {input: UpdateSpendIdentityInput} })
    /**
     * @deprecated Sunset Checking.
     * Finish the process of verifying a user's identity for Spend Checking. Accepts the
     * verification token and answers to the verification challenge questions
     * returned by `initiateSpendIdentity`.
     */
    verifySpendIdentity?: (VerifySpendIdentityPayloadGenqlSelection & { __args: {input: VerifySpendIdentityInput} })
    /**
     * @deprecated Sunset Checking.
     * Completes the Spend Checking enrollment process by creating the primary Spend Checking account
     * and reconfiguring internal ACH connections.
     */
    completeSpendEnrollment?: (CompleteSpendEnrollmentPayloadGenqlSelection & { __args: {input: CompleteSpendEnrollmentInput} })
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Create a Spend Checking external bank account connection with a bank account that has
     * been verified via an instant link.
     */
    createSpendExternalAccountViaLink?: (CreateSpendExternalAccountViaLinkPayloadGenqlSelection & { __args: {input: CreateSpendExternalAccountViaLinkInput} })
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Initiate the process of connecting an external bank account to a Spend
     * account. Verification is accomplished via micro-deposits.
     */
    initiateSpendExternalAccount?: (InitiateSpendExternalAccountPayloadGenqlSelection & { __args: {input: InitiateSpendExternalAccountInput} })
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Finish the process of connecting an external bank account to a Spend Checking account.
     * Accepts the micro-deposit amounts that were initiated by
     * `initiateSpendExternalAccount`.
     */
    verifySpendExternalAccount?: (VerifySpendExternalAccountPayloadGenqlSelection & { __args: {input: VerifySpendExternalAccountInput} })
    /**
     * @deprecated Banker service deprecation: Mutation no longer in use
     * Archive a Spend external bank account.
     */
    archiveSpendExternalAccount?: (ArchiveSpendExternalAccountPayloadGenqlSelection & { __args: {input: ArchiveSpendExternalAccountInput} })
    /**
     * @deprecated Sunset Checking.
     * Send a check.
     */
    sendCheck?: (SendCheckPayloadGenqlSelection & { __args: {input: SendCheckInput} })
    /** Disables two factor authentication for the user account. */
    disableTwoFactorAuth?: (DisableTwoFactorAuthPayloadGenqlSelection & { __args: {input: DisableTwoFactorAuthInput} })
    /** Marks an announcement context as dismissed. */
    dismissAnnouncements?: (DismissAnnouncementsPayloadGenqlSelection & { __args: {input: DismissAnnouncementsInput} })
    /** Enables two factor authentication for the user account. */
    enableTwoFactorAuth?: (EnableTwoFactorAuthPayloadGenqlSelection & { __args: {input: EnableTwoFactorAuthInput} })
    /** Generate an Atomic access token */
    generateAtomicToken?: (GenerateAtomicTokenPayloadGenqlSelection & { __args: {input: GenerateAtomicTokenInput} })
    /** Generates an idempotency token to be used for identifying unique transactions. */
    generateIdempotencyKey?: (GenerateIdempotencyKeyPayloadGenqlSelection & { __args: {input: GenerateIdempotencyKeyInput} })
    /** Initializes the secret necessary to enable two factor authentication. */
    initializeTwoFactorAuth?: (InitializeTwoFactorAuthPayloadGenqlSelection & { __args: {input: InitializeTwoFactorAuthInput} })
    /** Initialize two factor verification for a user */
    initializeTwoFactorVerification?: (InitializeTwoFactorVerificationPayloadGenqlSelection & { __args: {input: InitializeTwoFactorVerificationInput} })
    /** Initiates the phone verification process. */
    initiatePhoneVerification?: (InitiatePhoneVerificationPayloadGenqlSelection & { __args: {input: InitiatePhoneVerificationInput} })
    /** Initiate the reset password process with a provided email address. */
    initiateResetPassword?: (InitiateResetPasswordPayloadGenqlSelection & { __args: {input: InitiateResetPasswordInput} })
    /** Joins the crypto waitlist for the user. */
    joinCryptoWaitlist?: (JoinCryptoWaitlistPayloadGenqlSelection & { __args: {input: JoinCryptoWaitlistInput} })
    /**
     * @deprecated plus is no longer supported.
     * Sets autorenewal preference for a Plus membership.
     */
    setPlusAutoRenewalPreference?: (SetPlusAutoRenewalPreferencePayloadGenqlSelection & { __args: {input: SetPlusAutoRenewalPreferenceInput} })
    /**
     * @deprecated plus is no longer supported.
     * Create plus membership or update plus membership preferences.
     */
    confirmPlusMembership?: (ConfirmPlusMembershipPayloadGenqlSelection & { __args: {input: ConfirmPlusMembershipInput} })
    /**
     * @deprecated plus is no longer supported.
     * Submit a payment for a Plus membership.
     */
    submitPlusMembershipPayment?: (SubmitPlusMembershipPaymentPayloadGenqlSelection & { __args: {input: SubmitPlusMembershipPaymentInput} })
    /**
     * @deprecated plus is no longer supported.
     * Submit a payment for 1 year of Plus
     */
    submitOneTimePlusPayment?: (SubmitOneTimePlusPaymentPayloadGenqlSelection & { __args: {input: SubmitOneTimePlusPaymentInput} })
    /**
     * @deprecated plus is no longer supported.
     * Set the active Plus membership payment method.
     */
    setActivePlusMembershipPaymentMethod?: (SetActivePlusMembershipPaymentMethodPayloadGenqlSelection & { __args: {input: SetActivePlusMembershipPaymentMethodInput} })
    /** Accepts a promotion campaign. */
    acceptPromotionCampaign?: (AcceptPromotionCampaignPayloadGenqlSelection & { __args: {input: AcceptPromotionCampaignInput} })
    /** Accepts a promotion campaign by promocode. */
    acceptPromotionByPromoCode?: (AcceptPromotionCampaignPayloadGenqlSelection & { __args: {input: AcceptPromotionByPromoCodeInput} })
    /** Authenticates via a refresh token and produces a new access token. */
    reauthenticate?: (ReauthenticatePayloadGenqlSelection & { __args: {input: ReauthenticateInput} })
    /** Marks or unmarks a portfolio slice in the tree for reblance. */
    rebalancePortfolioSlice?: (RebalancePortfolioSlicePayloadGenqlSelection & { __args: {input: RebalancePortfolioSliceInput} })
    /** Renames the account of the given id to a new string value. */
    renameAccount?: (RenameAccountPayloadGenqlSelection & { __args: {input: RenameAccountInput} })
    /**
     * @deprecated Endpoint no longer being used by backend
     * Reports information about a mobile device.
     */
    reportMobileDeviceInfo?: (ReportMobileDeviceInfoPayloadGenqlSelection & { __args: {input: ReportMobileDeviceInfoInput} })
    /** Submits a request to CS to close the current users accounts and mark for deactivation. */
    requestAccountDeactivation?: (RequestAccountDeactivationPayloadGenqlSelection & { __args: {input: RequestAccountDeactivationInput} })
    /** Requests instructions to open an account of an offline-only registration type. */
    requestOfflineOpenAccount?: (RequestOfflineOpenAccountPayloadGenqlSelection & { __args: {input: RequestOfflineOpenAccountInput} })
    /** Request to participate in the referrals program. */
    requestReferralsParticipation?: (RequestReferralsParticipationPayloadGenqlSelection & { __args: {input: RequestReferralsParticipationInput} })
    /**
     * Resends the verification email to the authenticated user's primary email
     * address.
     */
    resendEmailVerification?: (ResendEmailVerificationPayloadGenqlSelection & { __args: {input: ResendEmailVerificationInput} })
    /** Reset a user's password given a valid reset token. */
    resetPassword?: (ResetPasswordPayloadGenqlSelection & { __args: {input: ResetPasswordInput} })
    /** Resubmit a personal loan application after credit freeze */
    resubmitLoanAfterCreditFreeze?: (ResubmitLoanAfterCreditFreezePayloadGenqlSelection & { __args: {input: ResubmitLoanAfterCreditFreezeInput} })
    /** Revokes the given refresh token so that it cannot be used. */
    revokeRefresh?: (RevokeRefreshPayloadGenqlSelection & { __args: {input: RevokeRefreshInput} })
    /** Sends a test push notification. */
    sendTestPushNotification?: (SendTestPushNotificationPayloadGenqlSelection & { __args: {input: SendTestPushNotificationInput} })
    setFullyPaidLendingStatus?: (SetFullyPaidLendingStatusPayloadGenqlSelection & { __args: {input: SetFullyPaidLendingStatusInput} })
    /**
     * @deprecated No longer asking for introduction source
     * Sets introduction source without need to create a profile.
     */
    setIntroductionSource?: (SetIntroductionSourcePayloadGenqlSelection & { __args: {input: SetIntroductionSourceInput} })
    setPortfolioSliceOrder?: (SetPortfolioSliceOrderPayloadGenqlSelection & { __args: {input: SetPortfolioSliceOrderInput} })
    /** Set the preferred Platform Billing payment method */
    setPreferredPlatformPaymentMethod?: (SetPreferredPlatformPaymentMethodPayloadGenqlSelection & { __args: {input: SetPreferredPlatformPaymentMethodInput} })
    /** Sets or unsets a trade order for a portfolio slice. */
    setPreferredTradeWindow?: (SetPreferredTradeWindowPayloadGenqlSelection & { __args: {input: SetPreferredTradeWindowInput} })
    /** Sets the root pie on an investment account. */
    setRootPie?: (SetRootPiePayloadGenqlSelection & { __args: {input: SetRootPieInput} })
    /**
     * @deprecated This mutation is deprecated.
     * Sets users financial goal.
     */
    setUserFinancialGoal?: (SetUserFinancialGoalPayloadGenqlSelection & { __args: {input: SetUserFinancialGoalInput} })
    /** Updates the agreement status for a user. */
    signAgreementBundle?: (SignAgreementBundlePayloadGenqlSelection & { __args: {input: SignAgreementBundleInput} })
    /** Starts an on demand trade window for Crypto. */
    startCryptoOnDemandTradeWindow?: (StartCryptoOnDemandTradeWindowPayloadGenqlSelection & { __args: {input: StartCryptoOnDemandTradeWindowInput} })
    startCustomerSupportConversation?: (StartCustomerSupportConverstionPayloadGenqlSelection & { __args: {input: StartCustomerSupportConversationInput} })
    /** Submit a personal loan application. */
    submitPersonalLoanApplication?: (SubmitPersonalLoanApplicationPayloadGenqlSelection & { __args: {input: SubmitPersonalLoanApplicationInput} })
    /** Submit user feedback form for a user */
    submitUserFeedback?: (SubmitUserFeedbackPayloadGenqlSelection & { __args: {input: SubmitUserFeedbackInput} })
    /** Updates a custodial account beneficiary's legal address */
    updateCustodialAccountBeneficiaryLegalAddress?: (UpdateCustodialAccountBeneficiaryLegalAddressPayloadGenqlSelection & { __args: {input: UpdateCustodialAccountBeneficiaryLegalAddressInput} })
    /** Update a user's email address */
    updateEmail?: (UpdateEmailPayloadGenqlSelection & { __args: {input: UpdateEmailInput} })
    updateFullyPaidLendingStatus?: (UpdateFullyPaidLendingStatusPayloadGenqlSelection & { __args: {input: UpdateFullyPaidLendingStatusInput} })
    /** Updates the list of user data entries for the authenticated user. */
    updateUserData?: (UpdateUserDataPayloadGenqlSelection & { __args: {input: UpdateUserDataInput} })
    /** Verifies an email address associated with the provided token, if it is valid. */
    verifyEmail?: (VerifyEmailPayloadGenqlSelection & { __args: {input: VerifyEmailInput} })
    /** Withdraw a personal loan */
    withdrawPersonalLoan?: (WithdrawPersonalLoanPayloadGenqlSelection & { __args: {input: WithdrawPersonalLoanInput} })
    /** Withdraw a personal loan application */
    withdrawPersonalLoanApplication?: (WithdrawPersonalLoanApplicationPayloadGenqlSelection & { __args: {input: WithdrawPersonalLoanApplicationInput} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetAccountConfigurationDividendSettingsInput {accountId: Scalars['ID'],type: AccountConfigDividendSettingType,transferAccountId?: (Scalars['ID'] | null),clientMutationId?: (Scalars['String'] | null)}

export interface SetAccountConfigurationDividendSettingsForHoldingsInput {accountId: Scalars['ID'],symbol: Scalars['String'],type: AccountConfigDividendSettingType,transferAccountId?: (Scalars['ID'] | null),clientMutationId?: (Scalars['String'] | null)}


/** Payload for the setDirectDepositDestination mutation. */
export interface SetAccountConfigurationDividendSettingsPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    errorMessage?: boolean | number
    outcome?: SetAccountConfigurationDividendSettingsOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetAccountConfigurationDividendSettingsForHoldingsPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    errorMessage?: boolean | number
    outcome?: SetAccountConfigurationDividendSettingsOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetAccountConfigurationDividendSettingsOutcomeGenqlSelection{
    configuration?: AccountConfigurationGenqlSelection
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    successMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CancelAchRelationshipInput {
/** An ID of an account. */
accountId: Scalars['ID'],
/** An ID of an ACH relationship to cancel. */
achRelationshipId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null)}

export interface CancelAchRelationshipPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    clientMutationId?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: CancelAchRelationshipResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `CancelAchRelationship` mutation. */
export interface CancelAchRelationshipResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConfirmAchRelationshipViaDepositsInput {
/** An ID of an account. */
accountId: Scalars['ID'],
/** An ID of an ACH relationship to confirm. */
achRelationshipId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null),
/** A first deposit amount. */
depositAmount1: Scalars['Float'],
/** A second deposit amount. */
depositAmount2: Scalars['Float']}

export interface ConfirmAchRelationshipViaDepositsPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    /** The confirmed ACH relationship. */
    achRelationship?: AchRelationshipViaDepositsGenqlSelection
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The confirmed ACH relationship edge.
     */
    achRelationshipEdge?: AchRelationshipEdgeGenqlSelection
    clientMutationId?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: ConfirmAchRelationshipViaDepositsResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `ConfirmAchRelationshipViaDeposits` mutation. */
export interface ConfirmAchRelationshipViaDepositsResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreateAchRelationshipViaDepositsInput {
/** An ID of an account. */
accountId: Scalars['ID'],
/** A bank account number. */
bankAccountNumber: Scalars['BankAccountNumber'],
/** A bank account routing number. */
bankAccountRoutingNumber: Scalars['BankRoutingNumber'],
/** A type of bank account. */
bankAccountType: ViaDepositsBankAcctTypeEnum,clientMutationId?: (Scalars['String'] | null),
/** A nickname for this account */
nickname: Scalars['String']}

export interface CreateAchRelationshipViaDepositsPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    /** The new ACH relationship. */
    achRelationship?: AchRelationshipViaDepositsGenqlSelection
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The new ACH relationship edge.
     */
    achRelationshipEdge?: AchRelationshipEdgeGenqlSelection
    clientMutationId?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: CreateAchRelationshipViaDepositsResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `CreateAchRelationshipViaDeposits` mutation. */
export interface CreateAchRelationshipViaDepositsResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreateAchRelationshipViaLinkInput {
/** An ID of an account. */
accountId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null),
/** An ID of an external account. Either `externalAccountId` or `plaidAccountId` must be specified. */
externalAccountId?: (Scalars['ID'] | null),
/** The Plaid ID for an external account. Either `externalAccountId` or `plaidAccountId` must be specified. */
plaidAccountId?: (Scalars['String'] | null)}

export interface CreateAchRelationshipViaLinkPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    /** The new ACH relationship. */
    achRelationship?: AchRelationshipViaLinkGenqlSelection
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The new ACH relationship edge.
     */
    achRelationshipEdge?: AchRelationshipEdgeGenqlSelection
    clientMutationId?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: CreateAchRelationshipViaLinkResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `CreateAchRelationshipViaLink` mutation. */
export interface CreateAchRelationshipViaLinkResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SubmitCreditCardApplicationInput {clientMutationId?: (Scalars['String'] | null),
/** User inputted annual income. */
annualIncome: Scalars['Int'],
/** The user has attested to the correctness of their submission. */
userAttestsApplicationData: Scalars['Boolean'],
/** The type of the user's housing. */
housingType: CreditCardCustomerEmploymentInfoHousingTypeEnum,
/** Monthly housing expenses */
monthlyExpenses: Scalars['Int'],
/** The signature associated to the Terms and Conditions `RequiredDocumentsBundle` a user must accept when submitting a credit card application. */
termsAndConditionsSignature: Scalars['String']}

export interface SubmitCreditCardApplicationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SubmitCreditCardApplicationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SubmitCreditCardApplicationOutcomeGenqlSelection{
    /** The application details for the recently submitted application. */
    applicationDetails?: CreditCardApplicationDetailsGenqlSelection
    /** The analytics event that should be fired by clients upon successful application submission. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcceptCreditCardOfferInput {clientMutationId?: (Scalars['String'] | null),
/** The user has attested to reviewing the CHA */
userAttestsCha: Scalars['Boolean']}

export interface AcceptCreditCardOfferPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: AcceptCreditCardOfferOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcceptCreditCardOfferOutcomeGenqlSelection{
    /** The application details for the recently accepted credit card offer. */
    applicationDetails?: CreditCardApplicationDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ContinueCreditCardApplicationAfterUserCreditIsUnfrozenInput {clientMutationId?: (Scalars['String'] | null)}

export interface ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcomeGenqlSelection{
    /** The application details after the user progresses their application once their credit is unfrozen. */
    applicationDetails?: CreditCardApplicationDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ActivateCreditCardInput {clientMutationId?: (Scalars['String'] | null),
/** Last four digits of the card being verified. */
creditCardLastFour: Scalars['String']}

export interface ActivateCreditCardPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ActivateCreditCardOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ActivateCreditCardOutcomeGenqlSelection{
    /** The `CreditCard` type for the recently activated credit card. */
    creditCard?: CreditCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetLockOnCreditCardInput {clientMutationId?: (Scalars['String'] | null),
/** The `id` of the `CreditCard` to lock or unlock. */
creditCardId: Scalars['ID'],
/** Specify `true` to make the card locked, or `false` to make it unlocked. */
setLock: Scalars['Boolean']}

export interface SetLockOnCreditCardPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetLockOnCreditCardOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetLockOnCreditCardOutcomeGenqlSelection{
    /** The updated `CreditCard` type. */
    creditCard?: CreditCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetCreditCardWaitlistStatusInput {clientMutationId?: (Scalars['String'] | null),
/** The desired enrollment status for the user. */
desiredEnrollmentStatus: SetCreditCardWaitlistStatusEnum}

export interface SetCreditCardWaitlistStatusPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetCreditCardWaitlistStatusOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetCreditCardWaitlistStatusOutcomeGenqlSelection{
    /** The confirmation screen content for after the waitlist signup mutation is sent. */
    confirmationContent?: (CreditCardWaitlistConfirmationContentGenqlSelection & { __args?: {phase?: (CreditCardWaitlistConfirmationContentPhase | null)} })
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** Links the user to the current terms and conditions associated with the Credit Card waitlist. */
    waitlistTermsAndConditions?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateCreditCardRewardPayoutDestinationInput {clientMutationId?: (Scalars['String'] | null),
/** The destination transfer participant ID where Credit Card reward payouts will be sent. */
rewardPayoutDestinationId: Scalars['ID']}

export interface UpdateCreditCardRewardPayoutDestinationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: UpdateCreditCardRewardPayoutDestinationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateCreditCardRewardPayoutDestinationOutcomeGenqlSelection{
    /** The ID of the Smart Transfer that was updated with the new destination. */
    rewardsPortal?: CreditCardRewardsPortalScreenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RequestMobilePushProvisioningCertificatesInput {
/** Client mutation Id */
clientMutationId?: (Scalars['String'] | null),
/** User's credit card Id, required for both iOS and Android */
cardId: Scalars['String'],
/** Certificates provided by the Deserve SDK, iOS only */
certificates?: ((Scalars['String'] | null)[] | null),
/** Nonce provided by the Deserve SDK, iOS only */
nonce?: (Scalars['String'] | null),
/** Nonce signature provided by the Deserve SDK, iOS only */
nonceSignature?: (Scalars['String'] | null),
/** walletId provided by the Deserve SDK, Android only */
walletId?: (Scalars['String'] | null),
/** Device Id provided by the Deserve SDK, Android only */
deviceId?: (Scalars['String'] | null)}

export interface RequestMobilePushProvisioningCertificatesPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: RequestMobilePushProvisioningCertificatesOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RequestMobilePushProvisioningCertificatesOutcomeGenqlSelection{
    /** Stringified JSON // iOS should contain: encryptedPassData (as encryptedPayload), activationData, ephemeralPublicKey // Android should contain: opc, userAddress object */
    pushProvisioningCredentials?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `linkFundingSources` mutation. */
export interface LinkFundingSourcesInput {clientMutationId?: (Scalars['String'] | null),
/** The `public_token` generated by Plaid Link. */
plaidLinkPublicToken: Scalars['String']}


/** Payload for the `linkFundingSources` mutation. */
export interface LinkFundingSourcesPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: LinkFundingSourcesOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `linkFundingSources` mutation. */
export interface LinkFundingSourcesOutcomeGenqlSelection{
    /** The funding sources that were linked with the supplied token. */
    linkedFundingSources?: FundingSourceAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `completePlaidIncomeVerification` mutation. */
export interface CompletePlaidIncomeVerificationInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `completePlaidIncomeVerification` mutation. */
export interface CompletePlaidIncomeVerificationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CompletePlaidIncomeVerificationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `completePlaidIncomeVerification` mutation. */
export interface CompletePlaidIncomeVerificationOutcomeGenqlSelection{
    /** Whether or not the Plaid income verification flow was successfully completed. */
    verificationSubmitted?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `createAchRelationshipViaFundingSource` mutation. */
export interface CreateAchRelationshipViaFundingSourceInput {clientMutationId?: (Scalars['String'] | null),
/** Account id. */
accountId: Scalars['ID'],
/** Funding source id. */
fundingSourceId: Scalars['ID']}


/** Payload for the `createAchRelationshipViaFundingSource` mutation. */
export interface CreateAchRelationshipViaFundingSourcePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateAchRelationshipViaFundingSourceOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `createAchRelationshipViaFundingSource` mutation. */
export interface CreateAchRelationshipViaFundingSourceOutcomeGenqlSelection{
    /** ACH relationship id. */
    achRelationshipId?: boolean | number
    /** Ach Relationship. */
    achRelationship?: AchRelationshipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `confirmManualPlaidMicroDesposits` mutation. */
export interface ConfirmManualPlaidMicroDepositsInput {clientMutationId?: (Scalars['String'] | null),plaidPublicToken: Scalars['String'],fundingSourceId: Scalars['String']}


/** Payload for the `confirmManualPlaidMicroDesposits` mutation. */
export interface ConfirmManualPlaidMicroDepositsPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `generatePlaidIncomeLinkToken` mutation. */
export interface GeneratePlaidIncomeLinkTokenInput {clientMutationId?: (Scalars['String'] | null),
/** Boolean dictates if users will be allowed to add multiple income connections. Do not include a funding source id if this value is set to true. */
incomeEnableMultipleItems: Scalars['Boolean'],
/** Funding source id. Include to generate a token for a pre-auth Plaid Income Verification single item flow. When included, incomeEnableMultipleItems should be false. */
fundingSourceId?: (Scalars['String'] | null)}


/** Payload for the `generatePlaidIncomeLinkToken` mutation. */
export interface GeneratePlaidIncomeLinkTokenPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: GeneratePlaidIncomeLinkTokenOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `generatePlaidIncomeLinkToken` mutation. */
export interface GeneratePlaidIncomeLinkTokenOutcomeGenqlSelection{
    /** Token used to connect with Plaid for Plaid Income Verification. */
    plaidIncomeLinkToken?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LinkAndCreateAchRelationshipInput {
/** The ID of the account for the external accounts to be linked with. */
accountId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null),
/** The Plaid identifier for an external account to create an ACH relationship with. */
plaidAccountId: Scalars['String'],
/** The `public_token` generated by Plaid Link. */
plaidLinkPublicToken: Scalars['String']}

export interface LinkAndCreateAchRelationshipPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    /** The new ACH relationship. */
    achRelationship?: AchRelationshipViaLinkGenqlSelection
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The new ACH relationship edge.
     */
    achRelationshipEdge?: AchRelationshipEdgeGenqlSelection
    clientMutationId?: boolean | number
    /**
     * @deprecated Not in use. Will be removed.
     * The new external account edges.
     */
    externalAccountEdges?: ExternalAccountEdgeGenqlSelection
    /** Metadata about the result of executing the mutation. */
    result?: LinkAndCreateAchRelationshipResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `LinkAndCreateAchRelationship` mutation. */
export interface LinkAndCreateAchRelationshipResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReissueDepositsForAchRelationshipInput {
/** An ID of an account. */
accountId: Scalars['ID'],
/** An ID of an ACH relationship for which to reissue deposits. */
achRelationshipId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null)}

export interface ReissueDepositsForAchRelationshipPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    /** The ACH relationship for which deposits were reissued. */
    achRelationship?: AchRelationshipViaDepositsGenqlSelection
    /**
     * @deprecated Use `achRelationship` instead. Will be removed.
     * The ACH relationship edge for which deposits were reissued.
     */
    achRelationshipEdge?: AchRelationshipEdgeGenqlSelection
    clientMutationId?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: ReissueDepositsForAchRelationshipResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `ReissueDepositsForAchRelationship` mutation. */
export interface ReissueDepositsForAchRelationshipResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `openHighYieldSavingsAccount` mutation. */
export interface OpenHighYieldSavingsAccountInput {
/** Client mutation id */
clientMutationId?: (Scalars['String'] | null),
/** The type of savings account (i.e. IndividualSave, JointSaveInitiate, JointSaveCoOwner, JointCashInitiate, JointCashCoOwner) */
accountType?: (Scalars['String'] | null),
/** A custom name for the account */
accountName?: (Scalars['String'] | null),
/** Answers to the customer due diligence questions */
customerDueDiligence?: (SavingsCustomerDueDiligenceResponse[] | null),
/** Answers to the invest due diligence questions */
investDueDiligence?: (InvestDueDiligence | null),
/** The signature associated to the Terms and Conditions `RequiredDocumentsBundle` a user must accept when opening a savings account. */
termsAndConditionsSignature: Scalars['String'],
/** Information about the co-owner(s) of the account */
coOwners?: (SavingsCoOwnerInformation[] | null),
/** The node ID of the savings account invitation, required for a co-owner to accept a shared account invitation */
accountId?: (Scalars['ID'] | null),
/** User's fully paid lending enrollment decision */
fplStatus?: (Scalars['Boolean'] | null)}

export interface SavingsCustomerDueDiligenceResponse {
/** The ID for this Savings due diligence question */
questionId: Scalars['String'],
/** Selected answer(s) for this Savings due diligence question */
selectedAnswers?: (Scalars['String'][] | null)}

export interface InvestDueDiligence {
/** The trusted contact of the account holder */
trustedContact?: (TrustedContactInput | null)}

export interface SavingsCoOwnerInformation {
/** The first name of the co-owner */
firstName: Scalars['String'],
/** The lastName of the co-owner */
lastName: Scalars['String'],
/** The email address of the co-owner */
email: Scalars['String'],
/** The phone number of the co-owner */
phoneNumber: Scalars['String']}


/** Payload for the `openHighYieldSavingsAccount` mutation */
export interface OpenHighYieldSavingsAccountMutationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: OpenHighYieldSavingsAccountOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `openHighYieldSavingsAccount` mutation */
export interface OpenHighYieldSavingsAccountOutcomeGenqlSelection{
    /** The account id for the B2 savings account */
    accountId?: boolean | number
    /** The account opened by the mutation */
    account?: SavingsAccountGenqlSelection
    /** A boolean indicating whether the user has external funding source linked to their Savings Account */
    hasExternalFundingSource?: boolean | number
    /** A boolean indicating whether the user has available funding sources they can connect to their new Savings Account */
    hasAvailableFundingSources?: boolean | number
    /** The initial funding source for the Savings account, this should populate the `from` field for the initial deposit flow */
    initialTransferParticipant?: TransferParticipantGenqlSelection
    /** The Savings account transfer participant, this should populate the `to` field for the initial deposit flow */
    savingsTransferParticipant?: TransferParticipantGenqlSelection
    /** The analytics event for when the mutation successfully creates a savings account */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetDirectDepositDestinationInput {
/** Node id - represents the internal account to be set as the direct deposit destination. */
accountId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null)}


/** Payload for the setDirectDepositDestination mutation. */
export interface SetDirectDepositDestinationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    outcome?: SetDirectDepositDestinationOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetDirectDepositDestinationOutcomeGenqlSelection{
    /** success message for setting direct deposit destination */
    successMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreateFundingSourceRelationshipInput {clientMutationId?: (Scalars['String'] | null),
/** Funding source node id - represents the external account. */
fundingSourceId: Scalars['ID'],
/** Account node id - represents the internal account to be linked. If none provided, BE will handle connecting to the appropriate account. */
accountId?: (Scalars['ID'] | null)}


/** Payload for the createFundingSourceRelationship mutation. */
export interface CreateFundingSourceRelationshipPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    outcome?: CreateFundingSourceRelationshipOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `createFundingSourceRelationship` mutation */
export interface CreateFundingSourceRelationshipOutcomeGenqlSelection{
    /** The M1 product transfer participant - this can be null if due to product specific logic resolving the transfer participant. */
    internalTransferParticipant?: TransferParticipantGenqlSelection
    /** The funding source transfer participant - this represents the external account. */
    fundingSourceTransferParticipant?: TransferParticipantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `createTransferInstance` mutation. */
export interface CreateTransferInstanceInput {clientMutationId?: (Scalars['String'] | null),
/**
 * The participant to transfer money from. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
fromParticipantId: Scalars['ID'],
/**
 * The participant to transfer money to. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
toParticipantId: Scalars['ID'],
/** The dollar amount to transfer. */
amount: Scalars['Float'],
/**
 * When true, and applicable given the from participant, the transfer instance
 * will trigger a total liquidation as the source of funds to transfer.
 */
isLiquidation?: (Scalars['Boolean'] | null),
/** When true, the IRA deposit is a rollover, and contribution limits are not applied. Deposits that put a user over their contribution limit will be rejected unless this rollover flag is true. */
isIraRollover?: (Scalars['Boolean'] | null),
/**
 * The contribution year selection that must be specified when the destination
 * participant is an Invest IRA. Ignored otherwise. If `PRIOR_YEAR` is specified
 * when that option is not available, the contribution is automatically made for
 * the current year.
 */
iraContributionYear?: (IraContributionYearEnum | null),
/**
 * The distribution reason which must be specified when the source participant is
 * an Invest IRA. Ignored otherwise.
 */
iraDistributionReason?: (IraDistributionReasonEnum | null),
/**
 * The amount of Net Income Attributable being reported by the user withdrawing an
 * overcontribution.
 */
niaAmount?: (Scalars['Float'] | null),
/** The uuid of the transfer sent to back end to prevent duplicate transfers. */
idempotencyKey?: (Scalars['String'] | null),
/** Create transfer instance scenario. */
scenario?: (TransferScenarioTypeEnum | null)}


/** Payload for the `createTransferInstance` mutation. */
export interface CreateTransferInstancePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateTransferInstanceOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Container type for handling auto-invest implications on the destination account for this particular transfer */
export interface ToCreateTransferInstancePayloadAutoInvestImplicationsGenqlSelection{
    /**
     * The threshold dollar amount over which any cash will be automatically invested
     * into destination account. When non-null, value will be greater than or equal to
     * zero. When null, the max cash threshold is disabled.
     */
    maxCashThresholdOnDestinationAccount?: boolean | number
    /** The number of pending buy trades estimated as a result of the transfer. If null, estimated trades were unable to be calculated. */
    estimatedBuyTradesDestinationAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `createTransferInstance` mutation. */
export interface CreateTransferInstanceOutcomeGenqlSelection{
    /** The newly-created transfer instance. */
    instance?: TransferInstanceGenqlSelection
    /**
     * When the source participant is an Invest account, estimated trading
     * information for that account, if applicable and available.
     */
    fromInvestEstimatedTrading?: EstimatedTradingGenqlSelection
    /**
     * When the destination participant is an Invest account, estimated trading
     * information for that account, if applicable and available.
     */
    toInvestEstimatedTrading?: EstimatedTradingGenqlSelection
    /** Details of the transfer instance created */
    details?: DetailsGenqlSelection
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** Container type for handling auto-invest data for this particular transfer */
    autoInvestImplications?: ToCreateTransferInstancePayloadAutoInvestImplicationsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DetailsGenqlSelection{
    /** The title for the confirmation page for the transfer instance */
    title?: boolean | number
    /** The illustration for the confirmation page for the transfer instance */
    illustration?: AppImageGenqlSelection
    /** Transfer instance created description */
    description?: boolean | number
    /** Transfer instance link to details */
    detailsLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `createIraTransfer` mutation. */
export interface CreateIraTransferInput {clientMutationId?: (Scalars['String'] | null),
/**
 * The participant to transfer money from. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
fromParticipantId: Scalars['ID'],
/**
 * The participant to transfer money to. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
toParticipantId: Scalars['ID'],
/**
 * When true, and applicable given the from participant, the transfer instance
 * will trigger a total liquidation as the source of funds to transfer.
 */
isLiquidation?: (Scalars['Boolean'] | null),
/** When true, the IRA deposit is a rollover, and contribution limits are not applied. Deposits that put a user over their contribution limit will be rejected unless this rollover flag is true. */
isIraRollover?: (Scalars['Boolean'] | null),
/**
 * The contribution year selection that must be specified when the destination
 * participant is an Invest IRA. Ignored otherwise. If `PRIOR_YEAR` is specified
 * when that option is not available, the contribution is automatically made for
 * the current year.
 */
iraContributionYear?: (IraContributionYearEnum | null),
/**
 * The distribution reason which must be specified when the source participant is
 * an Invest IRA. Ignored otherwise.
 */
iraDistributionReason?: (IraDistributionReasonEnum | null),
/**
 * The amount of Net Income Attributable being reported by the user withdrawing an
 * overcontribution.
 */
niaAmount?: (Scalars['Float'] | null),
/** The dollar amount to transfer - The total amount of the transfer including any net income attributable. */
amount: Scalars['Float'],
/** The amount (in dollars) of funds withheld from an IRA distribution for federal taxes */
federalWithholdingAmount?: (Scalars['Float'] | null),
/** The amount (in dollars) of funds withheld from an IRA distribution for state taxes */
stateWithholdingAmount?: (Scalars['Float'] | null),
/** The uuid of the transfer sent to back end to prevent duplicate transfers. */
idempotencyKey: Scalars['String'],
/** IRA transfer scenario. */
scenario?: (TransferScenarioTypeEnum | null)}


/** Result for the `createIraTransfer` mutation. */
export interface CreateIraTransferResultGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateTransferInstanceOutcomeGenqlSelection
    error?: boolean | number
    errorMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setScheduledTransferRule` mutation. */
export interface SetScheduledTransferRuleInput {clientMutationId?: (Scalars['String'] | null),
/**
 * Specify a `ScheduledTransferRule` ID to update an existing rule. Otherwise, a
 * new scheduled transfer rule is created.
 */
scheduledTransferRuleId?: (Scalars['ID'] | null),
/**
 * The participant to transfer money from. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
fromParticipantId: Scalars['ID'],
/**
 * The participant to transfer money to. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
toParticipantId: Scalars['ID'],
/** The dollar amount that should be transfered. */
amount: Scalars['Float'],
/**
 * The contribution year selection that must be specified when the destination
 * participant is an Invest IRA. Ignored otherwise. If `PRIOR_YEAR` is specified
 * when that option is not available, the contribution is automatically made for
 * the current year.
 */
iraContributionYear?: (IraContributionYearEnum | null),
/**
 * The distribution reason which must be specified when the source participant is
 * an Invest IRA. Ignored otherwise.
 */
iraDistributionReason?: (IraDistributionReasonEnum | null),
/** The desired transfer schedule. */
schedule: RecurrenceScheduleInput,
/** Scheduled transfer rule scenario. */
scenario?: (TransferScenarioTypeEnum | null)}


/** A recurrence schedule input. Exactly one field must be non-null. */
export interface RecurrenceScheduleInput {
/** A monthly schedule. Exactly one field must be non-null. */
monthly?: (MonthlyScheduleInput | null),
/** A week-of-month schedule. Exactly one field must be non-null. */
weekOfMonth?: (WeekOfMonthScheduleInput | null),
/** A biweekly schedule. Exactly one field must be non-null. */
biweekly?: (BiweeklyScheduleInput | null),
/** A weekly schedule. Exactly one field must be non-null. */
weekly?: (WeeklyScheduleInput | null)}


/** Represents a repeating monthly schedule. */
export interface MonthlyScheduleInput {
/** The day of the month. */
dayOfMonth?: (MonthlyScheduleDateEnum | null),
/** Credit card specific AutoPay payment values (use autoPayPaymentValue instead). */
creditCardPaymentValue?: (CreditCardPaymentValueEnum | null),
/** Payment values for creating an AutoPay instance. */
autoPayPaymentValue?: (AutoPayPaymentValueEnum | null)}


/** Represents a repeating week-of-month schedule. */
export interface WeekOfMonthScheduleInput {
/** The week of the month. */
weekOfMonth: WeekOfMonthScheduleWeekEnum,
/** The day of the week. */
dayOfWeek: WeeklyScheduleDayEnum}


/** A biweekly schedule input. */
export interface BiweeklyScheduleInput {
/** The day of the week. */
dayOfWeek: WeeklyScheduleDayEnum,
/** True if the schedule is for even weeks, false for odd weeks. */
isEvenWeeks: Scalars['Boolean']}


/** Represents a repeating weekly schedule. */
export interface WeeklyScheduleInput {
/** The day of the week. */
dayOfWeek: WeeklyScheduleDayEnum}


/** Payload for the `setScheduledTransferRule` mutation. */
export interface SetScheduledTransferRulePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetScheduledTransferRuleOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setScheduledTransferRule` mutation. */
export interface SetScheduledTransferRuleOutcomeGenqlSelection{
    /** The newly-created or now-updated scheduled transfer rule. */
    rule?: ScheduledTransferRuleGenqlSelection
    /** Details of the transfer schedule created */
    details?: DetailsGenqlSelection
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdatePieTreeInput {clientMutationId?: (Scalars['String'] | null),
/** An optional flag, to be included when creating or updating a Crypto pie. */
isCrypto?: (Scalars['Boolean'] | null),
/** An optional label for the pie at the root of the tree. If another pie is already has the label, it will be replaced. */
label?: (PieLabelEnum | null),
/** The serialized pie tree. */
serializedTree: Scalars['String'],
/** When true, it skips the waitForEstimation check.  This is generally used when adding a shared pie.  Default is false */
skipTradeEstimation?: (Scalars['Boolean'] | null)}

export interface UpdatePieTreePayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** The updated or created pie node at the root of the tree. */
    pie?: UserPieGenqlSelection
    /** Metadata about the result of executing the mutation. */
    result?: UpdatePieTreeResultGenqlSelection
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `UpdatePieTree` mutation. */
export interface UpdatePieTreeResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The account category. */
    accountCategory?: boolean | number
    /** The account configuration */
    configuration?: AccountConfigurationGenqlSelection
    /**
     * @deprecated Use BorrowAccount instead.
     * Legacy signal for if an account is marginable.
     */
    canBorrow?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    /** The account origination */
    originator?: boolean | number
    /** The registration type of the account. */
    registration?: boolean | number
    /** The current status for the account. */
    status?: boolean | number
    /** True if the account is active: either NEW or OPENED status. */
    isActive?: boolean | number
    /** True if the account is rejected. */
    isRejected?: boolean | number
    /** The document upload content and requirements */
    documentUpload?: DocumentUploadGenqlSelection
    /** True when trading is paused for the account for some reason. */
    isTradingPaused?: boolean | number
    /** True when trading is paused because of incoming ACAT */
    isTradingPausedWithAcat?: boolean | number
    /** True when the account is a Custodial Account and the beneficiary has reached the age of majority. */
    hasBeneficiaryReachedAgeOfMaturity?: boolean | number
    /** The trading window preference of the account. */
    preferredTradeWindow?: boolean | number
    /** The feature flag for preferredTradeWindow. */
    hasPreferredTradeWindowAccess?: boolean | number
    /** The current trading status of the account. */
    trading?: AccountTradingStatusGenqlSelection
    /** If trading for the account is paused, information about the pause. */
    tradingPause?: AccountTradingPauseGenqlSelection
    /**
     * @deprecated Use `name` instead.
     * A nickname for the account.
     */
    nickname?: boolean | number
    /** The account number. */
    number?: boolean | number
    /** True if the account is a crypto account, false otherwise. */
    isCryptoAccount?: boolean | number
    /** True if the account is considered a custodial account, false otherwise. */
    isCustodialAccount?: boolean | number
    /** True if the account is current direct deposit destination */
    directDepositDestinationPill?: AppPillGenqlSelection
    /** When the account is a custodial account, this description will provide the UGMA or UTMA designation for the account. */
    custodialAccountDescription?: boolean | number
    /** True if the account is considered a retirement account, false otherwise. */
    isRetirement?: boolean | number
    /**
     * True if the account is currently marked for liquidation. While liquidating,
     * some funding functions are not available.
     */
    isLiquidating?: boolean | number
    /** True if the account currently holds cash or investments. */
    isFunded?: boolean | number
    /**
     * @deprecated Replaced by `setupChecklist`.
     * True if the user should be prompted to connect an external bank.
     */
    shouldPromptForExternalBankConnection?: boolean | number
    /** True if the user should be prompted to create a transfer or schedule. */
    shouldPromptForTransfer?: boolean | number
    /**
     * @deprecated Replaced by `hasPendingTransferInstances`.
     * True if the account currently has a pending transfer. Only one transfer may be
     * pending at a time.
     */
    hasPendingTransfer?: boolean | number
    /**
     * @deprecated Replaced by `pendingTransferInstances`.
     * The current pending ACH transfer, if there is one. Value is null when there is
     * currently no pending transfer.
     */
    pendingTransfer?: AchTransferGenqlSelection
    /**
     * A signed dollar amount that will be imminently transfered to or from the
     * account at the next trading opportunity. Positive amounts are deposits into
     * the account; negative amounts are withdrawals.
     */
    imminentPendingCashFlowForOrders?: boolean | number
    /** The account balance. */
    balance?: AccountBalanceGenqlSelection
    /** Borrow information for this account, if applicable and eligible. */
    borrowAccount?: BorrowAccountGenqlSelection
    /** If applicable, a setup checklist to display for this account. */
    setupChecklist?: SetupChecklistGenqlSelection
    /**
     * True when a portfolio has been set for this account. Use this field to
     * determine if a null value for `rootPortfolioSlice` is because a portfolio has
     * not been set vs it has been set, but there was an error resolving that field.
     */
    hasPortfolio?: boolean | number
    /** If the account has no portfolio set, options for creating one. */
    setPortfolioOptions?: SetPortfolioOptionsGenqlSelection
    /**
     * The root portfolio slice that defines the investment composition for the
     * account. Value is null when a root pie has not yet been set for the account.
     */
    rootPortfolioSlice?: RootPortfolioSliceGenqlSelection
    /** A list of portfolio slices that currently have buy orders set. */
    portfolioSlicesWithBuyOrders?: PortfolioSliceGenqlSelection
    /** A list of portfolio slices that currently have sell orders set. */
    portfolioSlicesWithSellOrders?: PortfolioSliceGenqlSelection
    /** A list of portfolio slices that currently have rebalances set. */
    portfolioSlicesWithRebalances?: PortfolioSliceGenqlSelection
    /**
     * Estimated information about trading that will occur during the next trading
     * window for this account. Estimated trades are based on portfolio activity and
     * are based on current prices. The most recently generated estimated trading
     * information will be returned. Value is null if the estimated trades feature is
     * unavailable or disabled.
     */
    estimatedTrading?: EstimatedTradingGenqlSelection
    /** A history of activities for the account. */
    investActivity?: InvestActivityGenqlSelection
    /**
     * The threshold dollar amount over which any cash will be automatically invested
     * into the portfolio. When non-null, value will be greater than or equal to
     * zero. When null, the max cash threshold is disabled.
     */
    maxCashThreshold?: boolean | number
    /**
     * The minimum dollar amount required to activate auto-invest. Cash balances must
     * exceed the `maxCashThreshold` by this amount in order for auto-invest to
     * trigger.
     */
    autoInvestTriggerMinimum?: boolean | number
    /** The minimum dollar amount required for buy trades to execute. */
    minimumBuyTradeAmount?: boolean | number
    /** The minimum deposit amount for the initial deposit into this Invest account. */
    minimumInitialDeposit?: boolean | number
    /** The maximum deposit amount for the initial deposit into this Invest account. */
    maximumInitialDeposit?: boolean | number
    /**
     * A summary of account funding over time. Value is null if data is currently
     * unavailable.
     */
    fundingTotals?: AccountFundingTotalsGenqlSelection
    /**
     * A summary of IRA contributions over time. Value is null if the account is not
     * a retirement account, or if the data is currently unavailable.
     */
    iraContributionTotals?: IraContributionTotalsGenqlSelection
    /**
     * A summary of IRA contributions limits. Value is null if the account is not
     * a retirement account, or if the data is currently unavailable.
     */
    iraContributionLimits?: IraContributionLimitsGenqlSelection
    /** List of applicable distribution reasons for an IRA account */
    iraDistributionReasons?: boolean | number
    /** Whether the account allows an external funding relationship to be configured. */
    allowsExternalFunding?: boolean | number
    /** Retrieve all external accounts linked to this investment account. */
    externalAccounts?: (ExternalAccountConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null), 
    /** Deprecated. Has no effect. */
    onlyActive?: (Scalars['Boolean'] | null)} })
    /**
     * The most recent ACH relationship. Value is `null` when there have been no ACH
     * relationships.
     */
    lastAchRelationship?: AchRelationshipGenqlSelection
    /** MOFO Account open tax lots */
    taxLots?: (AccountTaxLotsConnectionGenqlSelection & { __args: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), lotType: LotTypeEnum} })
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    /** If the account is a Custodial Account, this field contains the custodial account beneficiary information. */
    custodialAccountBeneficiary?: CustodialAccountBeneficiaryGenqlSelection
    /** Received Securities entry point for an Account. Returns null if this is not an Invest Account. */
    receivedSecurities?: ReceivedSecuritiesGenqlSelection
    /** @deprecated Use `iraWithholding field on TransferParticipantDetails` instead. */
    iraWithholding?: IraWithholdingGenqlSelection
    /** Entry point for Move Slices. The given Account must be of type Invest and have a Portfolio set. Null otherwise. */
    moveSlices?: MoveSlicesGenqlSelection
    /** Banner used to display information about the account to the user */
    informationalBanner?: InformationBannerGenqlSelection
    /** A string that should display the account type along with the account number. */
    accountTypeWithNumberDescriptor?: boolean | number
    /** Ira actions - conversion & recharacterization entry point */
    fundingActions?: FundingActionsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundingActionsGenqlSelection{
    title?: RichTextContentGenqlSelection
    cards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** ie pre-Approved, declined, in progress */
export interface LoanApplicationStatusGenqlSelection{
    /** Status for the loan application. */
    status?: boolean | number
    /**
     * @deprecated Field never implemented and not necessary.
     * Description for the loan application status.
     */
    statusDescription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowDashboardGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** An array of the content cards for the primary Borrow overview marketing screen. */
    marketingCards?: MarketingCardGenqlSelection
    /** An array of the footnotes for the primary Borrow overview marketing screen. */
    footnotes?: boolean | number
    /** Link to a reference informational page for content comparing Margin and Personal loans. */
    marginPersonalLoanInfoLink?: AppLinkGenqlSelection
    /** M1 Bank disclosure content for the Borrow marketing screen. */
    bankDisclosure?: boolean | number
    /** Design & marketing assets. */
    assets?: BorrowMarketingDesignAssetsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowMarketingScreenV2GenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The header for the borrow marketing screen. */
    header?: boolean | number
    /** The bank disclosure for the borrow marketing screen. */
    bankDisclosure?: BorrowBankDisclosureGenqlSelection
    /** Link to a reference informational page for content comparing Margin and Personal loans. */
    marginPersonalLoanInfoLink?: AppLinkGenqlSelection
    /** An array of the content cards for the borrow marketing screen. */
    productMarketingCards?: ProductMarketingCardGenqlSelection
    /** An array of the disclosures for the borrow marketing screen. */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** A nullable modal for users with more than one eligible invest account to select which one they want used for a margin loan */
    marginLoanModal?: MarginLoanModalGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowBankDisclosureGenqlSelection{
    /** The text for the borrow bank disclosure */
    text?: boolean | number
    /** The icon for the borrow bank disclosure */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginLoanModalGenqlSelection{
    /** A title for the margin loan modal */
    title?: boolean | number
    /** A subtitle for the margin loan modal */
    subtitle?: boolean | number
    /** An array of eligible invest accounts a margin loan */
    marginLoanAccounts?: MarginLoanAccountGenqlSelection
    /** The CTA label for the margin loan modal */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginLoanAccountGenqlSelection{
    /** The transferParticipantId of a transferParticipant for the margin loan modal */
    transferParticipantId?: boolean | number
    /** The transferParticipantName of a transferParticipant for the margin loan modal */
    transferParticipantName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowMarketingDesignAssetsGenqlSelection{
    equalHousingIcon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoansGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Umbrella type for application flow */
    applicationFlow?: PersonalLoanApplicationFlowGenqlSelection
    /** Entry point for the Personal Loans Direct flow. */
    applicationFlowDirect?: PersonalLoanDirectGenqlSelection
    /** Information about the active application for the user. */
    activeApplication?: PersonalLoanApplicationDetailsGenqlSelection
    /** A personal loan application. */
    application?: (PersonalLoanApplicationDetailsGenqlSelection & { __args?: {applicationId?: (Scalars['ID'] | null)} })
    /** Umbrella type for application flow */
    disbursementFlow?: (PersonalLoanDisbursementFlowGenqlSelection & { __args?: {loanId?: (Scalars['ID'] | null)} })
    /** A connection of loans for the user. */
    loans?: (PersonalLoanConnectionGenqlSelection & { __args?: {filterByStatus?: ((PersonalLoanStatusEnum | null)[] | null)} })
    /** Returns true if the user has the feature flag for AutoPay enabled. */
    isPersonalLoansAutoPayEnabled?: boolean | number
    /** Applink to drive navigation to Personal Loans */
    applyForPersonalLoanCta?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanApplicationFlowGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Information for the landing page */
    landingPage?: PersonalLoanLandingPageGenqlSelection
    /** The optional documents for the view terms and conditions landing page. */
    optionalDocuments?: RequiredDocumentsBundleGenqlSelection
    /** The required documents for the view terms and conditions landing page. */
    requiredDocuments?: RequiredDocumentsBundleGenqlSelection
    /** The required disclosures for the profile review page. */
    requiredDisclosures?: RequiredDocumentsBundleGenqlSelection
    /** What the user is requesting the loan for. */
    loanPurposeOptions?: LoanPurposeConnectionGenqlSelection
    /** Details about the restrictions around a loan amount. */
    loanMinAndMaxDetails?: LoanMinAndMaxDetailsGenqlSelection
    /** Options for the duration of the loan term. */
    loanTermOptions?: LoanTermOptionGenqlSelection
    /** Content for the view loan terms screen after choosing an offer. */
    viewLoanTerms?: PersonalLoanViewTermsGenqlSelection
    /** Viewed pill for the personal loan application flow. */
    viewedPill?: AppPillGenqlSelection
    /** Not viewed pill for the personal loan application flow. */
    notViewedPill?: AppPillGenqlSelection
    /** Loan declined error screens for post-submission application states . */
    loanDeclinedErrorScreen?: PersonalLoanDeclinedErrorScreenGenqlSelection
    /** Loan ineligibility screen for ineligible applicants. */
    loanIneligibilityScreen?: PersonalLoanIneligibilityScreenGenqlSelection
    /** Loan application manual review screen for applicants requiring further manual review. */
    loanManualReviewScreen?: PersonalLoanApplicationManualReviewScreenGenqlSelection
    /** Information about how the user's income sources. */
    loanIncomeSources?: boolean | number
    /** True if additional questions should be included in origination */
    hasAdditionalOriginationQuestions?: boolean | number
    /** Required flag to determine if the user should be asked for annual income within the PL application flow. */
    shouldAskForAnnualIncome?: boolean | number
    /**
     * Questions used to drive the Personal Loan in-app flow.
     * Clients should poll this field to retrieve up-to-date questions to surface to the user within this flow.
     */
    questions?: PersonalLoanQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanDeclinedErrorScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The title for the loan decline error screen. */
    title?: boolean | number
    /** The subtitle for the loan decline error screen. */
    subtitle?: boolean | number
    /** List of credit bureaus the user will need to contact to unfreeze their credit report. */
    bureaus?: boolean | number
    /** The text for the optional check box on the loan decline error screen. */
    checkBoxText?: boolean | number
    /** An analytics event for following the step into the re-submit application flow. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The destination AppLink for the loan decline error screen. */
    ctaLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanIneligibilityScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The title for the loan ineligibility screen. */
    title?: boolean | number
    /** The subtitle for the loan ineligibility screen. */
    subtitle?: boolean | number
    /**
     * @deprecated Use eligibilityCriteriaLink instead.
     * The reasons for ineligibility.
     */
    reasons?: boolean | number
    /** The link for eligibility criteria */
    eligibilityCriteriaLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanApplicationManualReviewScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The title for the manual review screen. */
    title?: boolean | number
    /** The content for the manual review screen. */
    content?: boolean | number
    /** The cta link for the manual review screen */
    ctaLink?: AppLinkGenqlSelection
    /** The illustration for the manual review screen */
    illustration?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanDisbursementFlowGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Flag to determine if the given loan has any valid external accounts to disburse to. */
    hasDisbursementOption?: boolean | number
    /** Content to drive the view for prompting the user to connect their bank. */
    promptForBankConnection?: PersonalLoansPromptForBankConnectionGenqlSelection
    /** Information to be displayed on the Review Loan Screen. */
    reviewLoanScreen?: ReviewLoanScreenGenqlSelection
    /** Content for the loan disbursement of funds. */
    loanDisbursement?: PersonalLoanDisbursementGenqlSelection
    /** An analytics event to be fired upon loan acceptance completion before disbursement. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** Content for the post-disbursement AutoPay setup screen. */
    autoPaySetup?: PersonalLoansAutoPaySetupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoansAutoPaySetupGenqlSelection{
    /** Title for the set up AutoPay screen. */
    title?: boolean | number
    /** Subtitle for the set up AutoPay screen. */
    subtitle?: boolean | number
    /** List of valid transfer participants for setting up AutoPay for a personal loan. */
    autoPayAccountList?: TransferParticipantGenqlSelection
    /** App informational card with AutoPay details. */
    autoPayInformationalCard?: AppInformationalMessageCardGenqlSelection
    /**
     * @deprecated Field was a part of older designs but is no longer used`.
     * Payment schedule table values for the set up AutoPay screen.
     */
    paymentSchedule?: PersonalLoanPaymentScheduleEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanLandingPageGenqlSelection{
    /** Information for the bullet points to display on the screen */
    bulletPoints?: PersonalLoanBulletPointGenqlSelection
    /** A required disclaimer for the loan application. */
    loanDisclaimer?: boolean | number
    /** An analytics event for opening the `Terms of Use` document on the personal loans application landing page. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanBulletPointGenqlSelection{
    /**
     * @deprecated No longer included in designs. Clients should omit
     * The icon to display as the bullet point.
     */
    icon?: AppImageGenqlSelection
    /** The copy to display for the bullet point. */
    copy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanTermOptionGenqlSelection{
    /** Length of the loan term in months. */
    value?: boolean | number
    /** String description of the value, formatted in years and months. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanDisbursementGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Title for the loan funds disbursement screen. */
    title?: boolean | number
    /** Subtitle for the loan funds disbursement screen. */
    subtitle?: boolean | number
    /** List of valid transfer destination participants for the loan funds disbursement. */
    destinationList?: TransferParticipantGenqlSelection
    /**
     * @deprecated Removing, no longer displaying to user.
     * Disclaimer text for time limit rescinding.
     */
    disclaimerText?: boolean | number
    /** Continue button CTA for the loan funds disbursement screen. */
    continueCta?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoansPromptForBankConnectionGenqlSelection{
    /** AppImage for this screen. */
    image?: AppImageGenqlSelection
    /** Header content for this screen. */
    header?: boolean | number
    /** Subheader content for this screen. */
    subheader?: boolean | number
    /** Image associated with the subheader. */
    subheaderImage?: AppImageGenqlSelection
    /** AppLink for the main CTA. If null, render a generic error. */
    primaryContinueLink?: AppLinkGenqlSelection
    /** AppLink for the secondary CTA. If null, render a generic error. */
    secondaryContinueLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanViewTermsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Title for the view loan terms screen. */
    title?: boolean | number
    /** Subtitle for the view loan terms screen. */
    subtitle?: boolean | number
    /** The text for the cta on the view loan terms screen. */
    continueCta?: boolean | number
    /**
     * @deprecated The UI this field supported has been removed.
     * The checkbox agreement text for the cta on the view loan terms screen.
     */
    checkBoxText?: boolean | number
    /** The header for all loan documents on the view loan terms screen */
    viewLoanDocumentsHeader?: boolean | number
    /**
     * @deprecated Use `viewLoanDocumentsHeader` instead.
     * The header for the loan agreement on the view loan terms screen
     */
    viewLoanAgreementHeader?: boolean | number
    /**
     * @deprecated Use `viewLoanDocumentsHeader` instead.
     * The header for the additional documents on the view loan terms screen
     */
    viewAdditionalTermsHeader?: boolean | number
    /** Chart entry values for the view loan terms screen. */
    loanDetails?: PersonalLoanViewTermsTableEntryGenqlSelection
    /** An error message to display if the user has not viewed the T&Cs. */
    notViewedErrorMessage?: PersonalLoanViewTermsDocumentsErrorGenqlSelection
    /** Viewed pill for the document set. */
    viewedPill?: AppPillGenqlSelection
    /** Not viewed pill for the document set. */
    notViewedPill?: AppPillGenqlSelection
    /** Loan agreement document for the view loan terms screen. */
    loanAgreement?: RequiredDocumentsBundleGenqlSelection
    /** Loan agreement document for the view loan terms screen. */
    dynamicLoanAgreementPresignedUrl?: AppLinkGenqlSelection
    /** Additional loan terms documents for the view loan terms screen. */
    additionalTerms?: RequiredDocumentsBundleGenqlSelection
    /** Payment schedule table values for the view loans term screen. */
    paymentSchedule?: PersonalLoanPaymentScheduleEntryGenqlSelection
    /**
     * @deprecated Field is no longer used, all details returned in `paymentSchedule`.
     * Final payment table values for the view loans term screen.
     */
    finalPayment?: PersonalLoanPaymentScheduleEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanViewTermsTableEntryGenqlSelection{
    /** Title for the view loan terms table entry */
    title?: boolean | number
    /** Subtitle for the view loan terms table entry */
    subtitle?: boolean | number
    /** Loan value for the view loan terms table entry */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanViewTermsDocumentsErrorGenqlSelection{
    /** Copy to display. */
    copy?: boolean | number
    /** Icon to display. */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanPaymentScheduleEntryGenqlSelection{
    /** Label for the payment schedule table entry. */
    label?: boolean | number
    /** Value for the payment schedule table entry. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanPurposeConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: LoanPurposeEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanPurposeEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: LoanPurposeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** What the loan will be utilized for. */
export interface LoanPurposeGenqlSelection{
    /** The title for the option. */
    title?: boolean | number
    /** The icon for the option. */
    icon?: AppImageGenqlSelection
    /** The subtitle for the option. */
    subtitle?: boolean | number
    /** The corresponding enum for the loan purpose. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanMinAndMaxDetailsGenqlSelection{
    /** The minimum amount that can be requested for a personal loan. */
    minAmount?: boolean | number
    /** The maximum amount that can be requested for a personal loan. */
    maxAmount?: boolean | number
    /** A description of the minimum and maximum amounts that can be requested for a personal loan. */
    rangeDescription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanApplicationDetailsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The application id for the application */
    applicationId?: boolean | number
    /** The loan application status. */
    status?: LoanApplicationStatusGenqlSelection
    /** Credit check disclaimer */
    creditCheckDisclaimer?: boolean | number
    /** Information about the loan offers for the application. */
    applicationOffers?: PreApprovalLoanApplicationOfferConnectionGenqlSelection
    /** Analytics event to be logged upon application submission completion. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The loan associated with the active application. */
    loan?: PersonalLoanGenqlSelection
    /**
     * @deprecated Should be replaced with loanDisclosure for updated PL origination flows.
     * The disclosure text to be displayed on the loan application offers page.
     */
    disclosureFooter?: boolean | number
    /**
     * The title for the select offer screen
     * ex: Fantastic! Here are your pre-approved offers:
     */
    loanTitle?: boolean | number
    /**
     * The subtitle for the select offer screen
     * ex: Offers are good for 30 days, or you can withdraw your application now.
     */
    loanSubtitle?: RichTextContentGenqlSelection
    /**
     * The dislosure to show to the user on the re-designed select offer screen
     * ex: Offers from B2 Bank, NA, Member FDIC, Equal Opportunity Lender. Offers aren't guaranteed and are subject to verification through M1's credit model and hard credit check.\n\nM1 is not a bank.
     */
    loanDisclosure?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PreApprovalLoanApplicationOfferConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: PreApprovalLoanApplicationOfferEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PreApprovalLoanApplicationOfferEdgeGenqlSelection{
    node?: PreApprovalLoanApplicationOfferGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PreApprovalLoanApplicationOfferGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** An id for the application associated with the offer. */
    applicationId?: boolean | number
    /** The loan offer amount. */
    amount?: boolean | number
    /** The loan offer amount formatted. */
    formattedAmount?: boolean | number
    /** The APR for the loan offer. */
    annualPercentageRate?: boolean | number
    /** The monthly payment for the loan offer. */
    monthlyPayment?: boolean | number
    /** The monthly payment for the loan offer, formatted in USD. */
    formattedMonthlyPayment?: boolean | number
    /** The duration of the loan in months. */
    monthlyDuration?: boolean | number
    /** The duration of the loan in years and months. */
    formattedMonthlyDuration?: boolean | number
    /** The short description of the loan details. */
    shortLoanDetailDescription?: boolean | number
    /**
     * Returns the loan amount, percentage, and duration in a formatted string
     * ex: $XX,XXX / XX% APR / X years and Y months
     */
    offerTitle?: boolean | number
    /**
     * Returns the number of monthly payments and payment amount in a formatted string
     * ex: That's XX monthly payments of $XXX.
     */
    offerSubtitle?: boolean | number
    /**
     * The amount and description of the loan
     * ex: formattedValue: $24,000, formattedSubtitle: Loan amount
     */
    formattedAmountInfo?: PersonalLoanOfferValueGenqlSelection
    /**
     * The formatted monthly payment and description
     * ex: formattedValue: $609, formattedSubtitle: monthly payment
     */
    formattedMonthlyPaymentInfo?: PersonalLoanOfferValueGenqlSelection
    /**
     * The formatted APR and description
     * ex: formattedValue: 18%, formattedSubtitle: APR
     */
    formattedAnnualPercentageInfo?: PersonalLoanOfferValueGenqlSelection
    /**
     * The formatted term length and description
     * ex: formattedValue: 5 yrs, formattedSubtitle: Term
     */
    formattedDurationInfo?: PersonalLoanOfferValueGenqlSelection
    /**
     * An optional app pill that adds extra marketing flavor to the offer
     * ex: Lowest monthly payment
     */
    marketingPill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanOfferValueGenqlSelection{
    /**
     * Formatted value
     * ex: $24,000
     */
    formattedValue?: boolean | number
    /**
     * The description text that goes along with the formatted value
     * ex: Loan amount
     */
    formattedSubtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: PersonalLoanEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: PersonalLoanGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Status for the loan application. */
    status?: boolean | number
    /** The formatted principal balance. */
    formattedPrincipalBalance?: LoanDetailValueGenqlSelection
    /**
     * @deprecated Clients should use the loan `status` to determine routing
     * Check whether the user has accepted the loan
     */
    hasAcceptedLoan?: boolean | number
    /** Loan details to be displayed. */
    subHeaderDetails?: LoanDetailValueGenqlSelection
    /** Check whether the loan is active */
    isActive?: boolean | number
    /** Returns the instance of AutoPay for the specific loan, if it exists. */
    autoPayInstance?: ScheduledTransferRuleGenqlSelection
    /** Loan details to be displayed. */
    additionalDetails?: LoanDetailValueGenqlSelection
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    /** Late payment warning message if the loan is past due. */
    paymentWarningMessage?: boolean | number
    /** (Mobile only) Loan quick actions. */
    quickActions?: QuickActionLinkGenqlSelection
    /** AppLinks to be displayed on the manage loan and overview pages. */
    links?: PersonalLoanAdditionalLinksGenqlSelection
    /** Manage Loan Actions */
    manageLoanActions?: ManageLoanActionSectionGenqlSelection
    /** Personal loan transactions to be displayed on the overview screen. */
    transactions?: (LoanTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** The account category. */
    accountCategory?: boolean | number
    /** Boolean for mobile clients to use on the overview Borrow menu to indicate a late personal loan. */
    isLatePersonalLoan?: boolean | number
    /** Boolean for mobile clients to use on the overview Borrow menu to indicate a personal loan that has failed disbursement. */
    isFailedDisbursementPersonalLoan?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    /** A message to be displayed on the loan overview screen. */
    autoPayMessage?: BorrowPromotionalMessageGenqlSelection
    /** Design assets. */
    assets?: PersonalLoanDesignAssetsGenqlSelection
    /** Details for the Personal Loan Product Landing Page */
    personalLoanProductLandingPage?: PersonalLoanProductLandingPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanProductLandingPageGenqlSelection{
    /** The title for the Personal Loan Product Landing Page */
    title?: boolean | number
    /** The header for the Personal Loan Product Landing Page */
    header?: ProductAccountLandingPageHeaderGenqlSelection
    /** The account details for the Personal Loan Product Landing Page */
    accountDetails?: TabularDataItemGenqlSelection
    /** An array of informational banners for the Personal Loan Product Landing Page */
    banners?: InformationBannerGenqlSelection
    /** The graph details for the Personal Loan Product Landing Page */
    graphDetails?: PersonalLoanLandingPageGraphDetailsGenqlSelection
    /** The details for the Loan Details card on the Personal Loan Product Landing Page (Web only) */
    loanDetails?: TabularDataSectionGenqlSelection
    /** An array of the disclosures for the Personal Loan Product Landing Page */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** The mobile floating action button details for the Personal Loan Product Landing Page */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** Common transactions to be displayed on the Personal Loan Product Landing Page */
    transactions?: (CommonTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Copy to be displayed when there are no transactions on the Personal Loan Product Landing Page */
    transactionsEmptyState?: CommonTransactionsEmptyStateGenqlSelection
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards?: AppCardGenqlSelection
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanLandingPageGraphDetailsGenqlSelection{
    /** The title for the Product Account Graph Details */
    title?: boolean | number
    /** The percentage for the Product Account Graph */
    percentage?: boolean | number
    /** The upperLimit for the Product Account Graph */
    upperLimitAmount?: boolean | number
    /** The currentAmount for the Product Account Graph */
    currentAmount?: boolean | number
    /** The description for the Product Account Graph Details */
    description?: boolean | number
    /** The tooltip for the Product Account Graph Details */
    tooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanCommonTransactionMetadataGenqlSelection{
    /** The ID on Personal Common Transaction Metadata */
    id?: boolean | number
    /** The amount paid to principal on Personal Loan Common Transaction Metadata */
    toPrincipal?: boolean | number
    /** The amount paid to interest on Personal Loan Common Transaction Metadata */
    toInterest?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanDesignAssetsGenqlSelection{
    equalHousingIcon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanAdditionalLinksGenqlSelection{
    /** AppLink to be displayed on the manage loan details screen. */
    viewDocuments?: AppLinkGenqlSelection
    /** AppLink to be displayed on the SCRA contact support screen. */
    scraContactSupport?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanTransactionEntryConnectionGenqlSelection{
    total?: boolean | number
    pageInfo?: PageInfoGenqlSelection
    edges?: LoanTransactionEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanTransactionEntryEdgeGenqlSelection{
    cursor?: boolean | number
    node?: LoanTransactionEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanTransactionEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The title of this loan transaction activity entry. */
    title?: boolean | number
    /** The type of this loan transaction activity entry. */
    paymentType?: boolean | number
    /** The status of this loan transaction activity entry. */
    status?: AppPillGenqlSelection
    /** The formatted date for this loan transaction activity entry. */
    activityDate?: boolean | number
    /** The AppImage icon for this loan transaction activity entry. */
    icon?: AppImageGenqlSelection
    /** Principal paid for this loan transaction activity entry. */
    principalPaid?: boolean | number
    /** Interest paid for this loan transaction activity entry. */
    interestPaid?: boolean | number
    /** Total amount paid for this loan transaction activity entry. */
    totalPaid?: boolean | number
    /** Information for the loan transaction activity entry details view. */
    details?: LoanTransactionEntryDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanTransactionEntryDetailsGenqlSelection{
    /** Amount for the transaction entry details screen. */
    amount?: boolean | number
    /** Transaction status pill for the details screen. */
    statusPill?: AppPillGenqlSelection
    /** Indicator if the given payment has failed. */
    isFailed?: boolean | number
    /** Array of optional additional details for the loan transaction entry details screen. */
    additionalDetails?: LoanTransactionEntryDetailsItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information and message for a Borrow account. */
export interface BorrowPromotionalMessageGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Title for the Borrow promotional message. */
    title?: boolean | number
    /** Body text for the Borrow promotional message. */
    body?: boolean | number
    /** Link for the Borrow promotional message. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanTransactionEntryDetailsItemGenqlSelection{
    /** Label for the loan transaction entry details item. */
    label?: boolean | number
    /** Value for the loan transaction entry details item. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ManageLoanActionSectionGenqlSelection{
    /** Title for the manage loan category */
    title?: boolean | number
    /** Array of loan actions for a specific category */
    loanActions?: ManageLoanActionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ManageLoanActionGenqlSelection{
    /** Icon for the action. */
    icon?: AppImageGenqlSelection
    /** Title for the action. */
    title?: boolean | number
    /** Subtitle for the action. */
    subtitle?: boolean | number
    /** Link for the action. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoanDetailValueGenqlSelection{
    /** Value formatted as a string. */
    value?: boolean | number
    /** The title for the loan detail. */
    title?: boolean | number
    /** The icon for the loan detail. */
    icon?: AppImageGenqlSelection
    /** The tooltip for the loan detail, if required. */
    tooltip?: LoanTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QuickActionLinkGenqlSelection{
    /** The icon for the quick action link. */
    icon?: AppImageGenqlSelection
    /** The deeplink for the quick action. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Tooltip to be used for loan detail information. */
export interface LoanTooltipGenqlSelection{
    icon?: AppImageGenqlSelection
    copy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information to be displayed on the Review Loan Screen */
export interface ReviewLoanScreenGenqlSelection{
    /** Information about the loan terms to display. */
    details?: ReviewLoanDetailGenqlSelection
    /** Congratulatory copy to display. */
    customizedMessage?: boolean | number
    /** Returns an app link to the document center. */
    loanAgreementDocLink?: AppLinkGenqlSelection
    /** Information about the AutoPay details for the user, if applicable. */
    autoPayDetails?: ReviewLoanDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReviewLoanDetailGenqlSelection{
    /** Label for the loan detail. */
    label?: boolean | number
    /** Value for the loan detail. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanDirectGenqlSelection{
    /** Status for a user's active application. Null if no application currently exists. */
    activeApplicationStatus?: boolean | number
    /**
     * Questions used to drive the PersonalLoanDirect flow.
     * Clients should poll this field to retrieve up-to-date questions to surface to the user within this flow.
     */
    questions?: PersonalLoanDirectQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanDirectQuestionGenqlSelection{
    /**
     * An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis.
     * This field serves as the ID for the given question which is why it is required.
     */
    questionType?: boolean | number
    /** Title screen for the question. */
    title?: boolean | number
    /** Subtitle copy of the given question. */
    subtitle?: boolean | number
    /** Footer copy of the given question. */
    footer?: boolean | number
    /** Links required for CTAs if outside of the app */
    link?: AppLinkGenqlSelection
    /** Image to display on personal loan direct question page if there is one */
    image?: AppImageGenqlSelection
    /** Copy to be rendered for the continue CTA. */
    continueLabel?: boolean | number
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel?: boolean | number
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType?: boolean | number
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonalLoanQuestionGenqlSelection{
    /**
     * An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis.
     * This field serves as the ID for the given question which is why it is required.
     */
    questionType?: boolean | number
    /** Title screen for the question. */
    title?: boolean | number
    /** Subtitle copy of the given question. */
    subtitle?: boolean | number
    /** Footer copy of the given question. */
    footer?: boolean | number
    /** Copy to be rendered for the continue CTA. */
    continueLabel?: boolean | number
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel?: boolean | number
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType?: boolean | number
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionDetailsGenqlSelection{
    /** The transaction ID */
    id?: boolean | number
    /** The header for a Common Transaction Details instance */
    header?: boolean | number
    /** The description for a Common Transaction Details instance */
    description?: RichTextContentGenqlSelection
    /** The status on a Common Transaction */
    status?: boolean | number
    /** The primary details information for a Common Transaction instance */
    primaryDetails?: CommonTransactionPrimaryInfoGenqlSelection
    /** The array of detail sections for a Common Transaction Details instance */
    detailSections?: CommonTransactionDetailSectionGenqlSelection
    /** The link for a Common Transaction Details instance (ex: 'Report an issue with this transaction') */
    link?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionPrimaryInfoGenqlSelection{
    /** The amount details for a Common Transaction Primary Info section */
    amount?: CommonTransactionPrimaryInfoAmountGenqlSelection
    /** The status details for a Common Transaction Primary Info section */
    status?: CommonTransactionPrimaryInfoStatusGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionPrimaryInfoAmountGenqlSelection{
    /** The label for a Common Transaction Primary Info Amount section */
    label?: boolean | number
    /** The value for a Common Transaction Primary Info Amount section */
    value?: CommonTransactionAmountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionPrimaryInfoStatusGenqlSelection{
    /** The label for a Common Transaction Primary Info Status section */
    label?: boolean | number
    /** The pill for a Common Transaction Primary Info Status section */
    pill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionDetailSectionGenqlSelection{
    /** The header for a Common Transaction Detail Section (ex: 'Payment Breakdown') */
    header?: boolean | number
    /** The details array for a Common Transaction Detail Section */
    details?: CommonTransactionDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionDetailGenqlSelection{
    /** The label for a Common Transaction Detail (ex: 'To principal') */
    label?: boolean | number
    /** The value for a Common Transaction Detail */
    value?: CommonTransactionDetailValueGenqlSelection
    /** The metadata for a Common Transaction Detail as an array of strings (ex: for address, phone number, and website) */
    metadata?: boolean | number
    /** The pill for a Common Transaction Detail (ex: Rewards tier pill) */
    pill?: AppPillGenqlSelection
    /** The reward tier pill for a Credit Card Common Transaction Detail */
    rewardTierPill?: CreditCardRewardsAppPillGenqlSelection
    /** The disclaimers for a Common Transaction Detail (ex: Rewards tier pill) */
    disclaimers?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionDetailValueGenqlSelection{
    /** The icon for a Common Transaction Detail Value */
    icon?: AppImageGenqlSelection
    /** The text for a Common Transaction Detail Value */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionEntryConnectionGenqlSelection{
    /** Information to aid in pagination */
    pageInfo?: PageInfoGenqlSelection
    /** The table headers for a Common Transactions table */
    tableHeaders?: CommonTransactionHeaderGenqlSelection
    /** The transaction edges of a Common Transaction Connection */
    edges?: CommonTransactionEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionHeaderGenqlSelection{
    /** The title of a Common Transaction table header */
    title?: boolean | number
    /** The alignment of a Common Transaction table header/cells in the column */
    align?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionEntryEdgeGenqlSelection{
    /** A cursor for use in pagination */
    cursor?: boolean | number
    /** The transaction node of a Common Transaction */
    node?: CommonTransactionEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The icon for a Common Transaction */
    icon?: AppImageGenqlSelection
    /** The title for a Common Transaction */
    title?: boolean | number
    /** The subtitle for a Common Transaction */
    subtitle?: boolean | number
    /** The amount for a Common Transaction */
    amount?: CommonTransactionAmountGenqlSelection
    /** The status for a Common Transaction */
    status?: boolean | number
    /** The pill for a Common Transaction */
    pill?: AppPillGenqlSelection
    /** The metadata for a Common Transaction */
    metadata?: CommonTransactionMetadataGenqlSelection
    /** The additional details for a Common Transaction */
    details?: CommonTransactionDetailsGenqlSelection
    /** The group the Common Transaction belongs to (will help clients with grouping logic) */
    groupBy?: boolean | number
    /** If available, a URL to a logo image that represents the Common Transaction */
    logoUrl?: boolean | number
    on_CommonTransaction?: CommonTransactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionAmountGenqlSelection{
    /** The color for a Common Transaction Amount */
    color?: boolean | number
    /** The text for a Common Transaction Amount */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionMetadataGenqlSelection{
    /** The ID of the Common Transaction Metadata */
    id?: boolean | number
    on_PersonalLoanCommonTransactionMetadata?: PersonalLoanCommonTransactionMetadataGenqlSelection
    on_CreditCardCommonTransactionMetadata?: CreditCardCommonTransactionMetadataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The icon for a Common Transaction */
    icon?: AppImageGenqlSelection
    /** The title for a Common Transaction */
    title?: boolean | number
    /** The subtitle for a Common Transaction */
    subtitle?: boolean | number
    /** The amount for a Common Transaction */
    amount?: CommonTransactionAmountGenqlSelection
    /** The status for a Common Transaction */
    status?: boolean | number
    /** The pill for a Common Transaction */
    pill?: AppPillGenqlSelection
    /** The metadata for a Common Transaction */
    metadata?: CommonTransactionMetadataGenqlSelection
    /** The additional details for a Common Transaction */
    details?: CommonTransactionDetailsGenqlSelection
    /** The group the Common Transaction belongs to (will help clients with grouping logic) */
    groupBy?: boolean | number
    /** If available, a URL to a logo image that represents the Common Transaction */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CommonTransactionsEmptyStateGenqlSelection{
    /** The title of the transactions empty state */
    title?: RichTextContentGenqlSelection
    /** The subtitle of the transactions empty state */
    subtitle?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Credit Card feature flag. If `true`, show credit card related features. If `false`, hide them from UI. */
    isEnabled?: boolean | number
    /** Returns information pertinent to a user's eligibility to apply for a Credit Card. */
    isEligible?: boolean | number
    /**
     * @deprecated Waitlist no longer used
     * Returns true if the user is already enrolled and on the Credit Card marketing waitlist.
     */
    isOnCreditCardWaitlist?: boolean | number
    /** Returns true if the virtual cards feature flag is enabled. */
    isVirtualCardsAvailable?: boolean | number
    /** True if there is at least one active Credit Card account. */
    hasActiveAccount?: boolean | number
    /** True if there is at least one suspended Credit Card account. */
    hasSuspendedAccount?: boolean | number
    /** True if there is at least one terminated Credit Card account. */
    hasClosedAccount?: boolean | number
    /** True if the user has AutoPay enabled. */
    isAutoPayEnabled?: boolean | number
    /** True if the user meets the criteria to engage in push provisioning. */
    isEligibleForPushProvisioning?: boolean | number
    /** Returns the user's current AutoPay instance, if it exists. */
    autoPayInstance?: ScheduledTransferRuleGenqlSelection
    /** Applicant's information that will be used when submitting the Credit Card application. */
    applicantInformation?: CreditCardApplicantInformationGenqlSelection
    /** Returns the documents and agreements that a user must accept to in order to apply for a credit card. */
    termsAndConditions?: RequiredDocumentsBundleGenqlSelection
    /**
     * @deprecated Waitlist no longer used
     * Links the user to the current terms and conditions associated with the Credit Card waitlist.
     */
    waitlistTermsAndConditions?: AppLinkGenqlSelection
    /**
     * @deprecated Use `activeApplication` instead.
     * An array of credit card application ID's for the user.
     */
    applicationsForUser?: CreditCardApplicationDetailsConnectionGenqlSelection
    /** Will return an instance of `CreditCardApplicationDetails` if the user has an active credit card application. */
    activeApplication?: CreditCardApplicationDetailsGenqlSelection
    /** Will return an instance of `CreditCardActiveOffer` if a user has an active credit card offer available to them. */
    activeOffer?: CreditCardActiveOfferGenqlSelection
    /**
     * @deprecated Use `activeAccount` instead.
     * Will return a list of `CreditCardAccount`s, or `null` if a user does not have any accounts.
     */
    accounts?: CreditCardAccountConnectionGenqlSelection
    /** Will return an instance of `CreditCardAccount` if the user has an active or suspended credit card account. */
    activeAccount?: CreditCardAccountGenqlSelection
    /**
     * @deprecated Waitlist confirmation screen no longer used
     * All copy relating to the Credit Card waitlist confirmation screen.
     */
    creditCardWaitlistConfirmation?: (CreditCardWaitlistConfirmationContentGenqlSelection & { __args?: {phase?: (CreditCardWaitlistConfirmationContentPhase | null)} })
    /**
     * @deprecated Waitlist marketing screen no longer used
     * All copy relating to the initial Credit Card waitlist screen.
     */
    creditCardWaitlistMarketingScreen?: CreditCardWaitlistMarketingScreenGenqlSelection
    /** Content for the Credit Card Onboarding flow. */
    onboardingContent?: CreditCardOnboardingContentGenqlSelection
    /** Content for the terminated Credit Card account screen when a user's account has been deleted. */
    closedAccountContent?: CreditCardClosedAccountContentGenqlSelection
    /** Content for the suspended or closed Credit Card account banner when a user's account still exists but is in one of these two suspended states. */
    suspendedAccountContent?: CreditCardSuspendedAccountContentGenqlSelection
    /** Content for the Manage Card screen. */
    manageCard?: CreditCardManageCardScreenGenqlSelection
    /** Content for the Manage Card Details screen. */
    manageCardDetails?: (CreditCardManageCardDetailsScreenGenqlSelection & { __args?: {creditCardId?: (Scalars['String'] | null)} })
    /** Content for the Rewards Portal screen. */
    rewardsPortal?: CreditCardRewardsPortalScreenGenqlSelection
    /** A breakdown of rewards programs for a user by owned or unowned securities. */
    rewardsProgramBreakdownByOwnedOrUnowned?: (CreditCardRewardsProgramBreakdownGenqlSelection & { __args: {ownershipStatus: CreditCardOwnersRewardsProgramHighlightLinkEnum} })
    /**
     * @deprecated Marketing banner abandoned
     * Content for the Credit Card marketing banner.
     */
    creditCardWaitlistMarketingBanner?: CreditCardWaitlistMarketingBannerGenqlSelection
    /**
     * @deprecated No longer used by clients. Will be removed.
     * All copy related to just the Credit Card apply now screen.
     */
    creditCardApplyNowMarketingScreen?: CreditCardApplyNowMarketingScreenGenqlSelection
    /** Agreements that the user signed up for during Credit Card onboarding. */
    userAcceptedCreditCardAgreements?: UserAcceptedCreditCardAgreementsGenqlSelection
    /**
     * @deprecated Early access banner content no longer used
     * Content for the Early Access disclosure for early Credit Card users.
     */
    earlyAccessContent?: CreditCardEarlyAccessContentGenqlSelection
    /**
     * @deprecated Autopay is live for users
     * Content for the banner that announces that Credit Card AutoPay is coming soon.
     */
    autoPayComingSoonBannerContent?: boolean | number
    /** Content for the Select Reward Destination screen. */
    selectRewardDestinationContent?: CreditCardSelectRewardDestinationContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserAcceptedCreditCardAgreementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Onboarding documents the user agreed to upon signing up for the Credit Card. */
    onboardingCreditCardAgreements?: AgreementBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardApplicantInformationGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Applicant's full name. */
    fullName?: boolean | number
    /** Applicant's date of birth. */
    dateOfBirth?: boolean | number
    /** Last four of applicant's SSN. */
    ssnLastFour?: boolean | number
    /** Applicant's email address. */
    email?: boolean | number
    /** Applicant's phone number. */
    phoneNumber?: boolean | number
    /** Applicant's formatted mailing address. */
    legalResidence?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardApplicationDetailsConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CreditCardApplicationDetailsEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardApplicationDetailsEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: CreditCardApplicationDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardApplicationDetailsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The status of a user's credit card application. */
    status?: boolean | number
    /** For approved or accepted applicants, this will be the APR for the given credit card application. */
    annualPercentageRate?: boolean | number
    /** For approved or accepted applicants, this will be the Credit Limit for the given credit card application. */
    creditLimit?: boolean | number
    /** For approved applicants, this will be the date in which the Credit Card offer expires. */
    expirationDate?: boolean | number
    /** For rejected applicants, this will be the date in which the user can submit another Credit Card application. */
    nextApplicationEligibilityDate?: boolean | number
    /** Cardholder Agreement specific to the user, available when the user has an offer. */
    cardholderAgreement?: RequiredDocumentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardActiveOfferGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Credit limit for the active offer. */
    creditLimit?: boolean | number
    /** APR for the active offer. */
    annualPercentageRate?: boolean | number
    /** For approved applicants, this will be the date in which the Credit Card offer expires. */
    expirationDate?: boolean | number
    /** Cardholder Agreement specific to the user, available when the user has an offer. */
    cardholderAgreement?: RequiredDocumentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardAccountConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CreditCardAccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardAccountEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: CreditCardAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The status of the Credit Card account. */
    status?: boolean | number
    /** Will return `true` if the user's active account has had a credit card issued and the credit card has not yet been activated. */
    hasUnactivatedCard?: boolean | number
    /** The Credit Card account's APR. */
    annualPercentageRate?: boolean | number
    /** The Credit Card account's credit limit. */
    creditLimit?: boolean | number
    /** The account's current balance. */
    currentBalance?: boolean | number
    /** The account's available credit. */
    availableCredit?: boolean | number
    /** The minimum payment amount due for the current statement period. */
    minimumPaymentAmount?: boolean | number
    /** The due date for the account's current statement period. */
    paymentDueDate?: boolean | number
    /**
     * Will return a list of `CreditCard`s or `null` if there are no cards associated to the account. Optional input
     * to filter based on card type (physical or virtual), default will return both.
     */
    cards?: (CreditCardConnectionGenqlSelection & { __args?: {cardType?: (CreditCardTypeEnum | null)} })
    /** Will return the user's last issued `CreditCard` or `null` if there isn't one. */
    activeCard?: CreditCardGenqlSelection
    /**
     * @deprecated Use creditCardProductLandingPage.transactions instead.
     * Will return a list of settled `SpendActivityEntry`s or `null` if there are no settled transactions associated ot the account.
     */
    pendingTransactions?: (CreditCardTransactionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /**
     * @deprecated Use creditCardProductLandingPage.transactions instead.
     * Will return a list of settled `SpendActivityEntry`s or `null` if there are no settled transactions associated ot the account.
     */
    settledTransactions?: (CreditCardTransactionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    /** The remaining statement balance for the active Credit Card account. */
    remainingStatementBalance?: boolean | number
    /**
     * @deprecated Checking account marketing card is no longer used.
     * The Spend promotional message for checking accounts to be displayed on the Credit Card screen.
     */
    checkingMarketingCard?: SpendPromotionalMessageGenqlSelection
    /** Details for the Credit Card Product Landing Page */
    creditCardProductLandingPage?: CreditCardProductLandingPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOnboardingContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Content for the Start Application Screen */
    startApplicationScreen?: CreditCardOnboardingStartApplicationScreenGenqlSelection
    /** Content for the Application Status Screen */
    applicationStatusScreen?: CreditCardOnboardingApplicationStatusScreenGenqlSelection
    /** AppLink for Document Upload Status */
    uploadDocumentLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOnboardingStartApplicationScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Page title. */
    title?: boolean | number
    /** Page header. */
    header?: boolean | number
    /** Label for onboarding overview conent. */
    label?: boolean | number
    /** Onboarding overview content. */
    content?: boolean | number
    /** Disclaimer for onboarding overview content. */
    disclaimer?: boolean | number
    /** Copy for the CTA. */
    buttonLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOnboardingApplicationStatusScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Page title. */
    title?: boolean | number
    /** Page header. */
    header?: boolean | number
    /** Content for step 1 (of 3). */
    stepOne?: CreditCardOnboardingApplicationStatusStepOneGenqlSelection
    /** Content for step 2 (of 3). */
    stepTwo?: CreditCardOnboardingApplicationStatusStepTwoGenqlSelection
    /** Content for step 3 (of 3). */
    stepThree?: CreditCardOnboardingApplicationStatusStepThreeGenqlSelection
    /** Copy for the additional content. */
    additionalContent?: boolean | number
    /** Copy for the footer content. */
    footer?: boolean | number
    /** Copy for the CTA. */
    buttonLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOnboardingApplicationStatusStepOneGenqlSelection{
    /** The icon for this section */
    icon?: AppImageGenqlSelection
    /** The title for this section */
    title?: boolean | number
    /** The content for the body of this section */
    body?: boolean | number
    /** The content for the body of this section */
    details?: CreditCardActiveOfferGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOnboardingApplicationStatusStepTwoGenqlSelection{
    /** The icon for this section */
    icon?: AppImageGenqlSelection
    /** The title for this section */
    title?: boolean | number
    /** The content for the body of this section */
    cardholderAgreement?: RequiredDocumentGenqlSelection
    /** The pill to indicate a document has been viewed */
    viewedPill?: AppPillGenqlSelection
    /** The pill to indicate a document has NOT been viewed */
    notViewedPill?: AppPillGenqlSelection
    /** The icon for this section error */
    errorIcon?: AppImageGenqlSelection
    /** The copy for this section error */
    errorMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOnboardingApplicationStatusStepThreeGenqlSelection{
    /** The icon for this section */
    icon?: AppImageGenqlSelection
    /** The title for this section */
    title?: boolean | number
    /** The content for the body of this section */
    termsAndConditions?: RequiredDocumentsBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardManageCardDetailsScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Will return `true` if a the queried card is currently locked. */
    isCardLocked?: boolean | number
    /** Mange Card Screen title. */
    pageTitle?: boolean | number
    /** Details pertaining to the user's Credit Card */
    manageCardDetailsSection?: ManageCardDetailsSectionGenqlSelection
    /** Manage Card Actions */
    manageCardActionsSection?: ManageCardActionSectionGenqlSelection
    /** Credit Card details for digital wallet push provisioning */
    digitalWalletPushProvisioningCredentials?: DigitalWalletPushProvisioningCredentialsGenqlSelection
    /** Page content for manage card digital wallet (mobile only) */
    digitalWalletPageContent?: DigitalWalletPageContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardManageCardScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Will return `true` if a user has activated their card. */
    hasCardBeenActivated?: boolean | number
    /** Will return an optional `AppPill` to be displayed on the card image. */
    cardPill?: AppPillGenqlSelection
    /** Mange Card Screen title. */
    pageTitle?: boolean | number
    /** Details pertaining to the user's Credit Card */
    primaryCardDetails?: boolean | number
    /** A list of credit card details. */
    cardDetails?: CreditCardDetailGenqlSelection
    /** Manage Card Actions */
    manageCardActions?: ManageCardActionSectionGenqlSelection
    /**
     * @deprecated Pattern retired in favor of new design with section headers, see manageCardActions (type ManageCardActionSection) instead
     * Card Actions
     */
    cardActions?: CreditCardManageCardActionGenqlSelection
    /** Credit Card details for digital wallet push provisioning */
    digitalWalletPushProvisioningCredentials?: DigitalWalletPushProvisioningCredentialsGenqlSelection
    /** Page content for manage card digital wallet (mobile only) */
    digitalWalletPageContent?: DigitalWalletPageContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DigitalWalletPageContentGenqlSelection{
    /** Digital wallet page title */
    title?: boolean | number
    /** Digital wallet content header */
    header?: boolean | number
    /** Digital wallet content subHeader */
    subheader?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardDetailGenqlSelection{
    /** Card Detail label. */
    label?: boolean | number
    /** Card Detail value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardManageCardActionGenqlSelection{
    /** Icon for the action. */
    icon?: AppImageGenqlSelection
    /** Title for the action. */
    title?: boolean | number
    /** Subtitle for the action. */
    subtitle?: boolean | number
    /** Link for the action. */
    destination?: boolean | number
    /** Label for web button. */
    buttonLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ManageCardActionSectionGenqlSelection{
    /** Title for the manage card section */
    title?: boolean | number
    /** Array of card actions for a specific section */
    cardActions?: CreditCardManageCardActionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ManageCardDetailsSectionGenqlSelection{
    /** Title for the manage card details section */
    title?: boolean | number
    /** Array of card details */
    cardDetails?: boolean | number
    /** Preview image for card */
    cardImage?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DigitalWalletPushProvisioningCredentialsGenqlSelection{
    /** The ID of this node */
    id?: boolean | number
    /** The internal key of this node */
    key?: boolean | number
    /** The relevant card ID */
    cardId?: boolean | number
    /** The name on the user's card */
    cardholderName?: boolean | number
    /** The last four numbers of the relevant card */
    lastFour?: boolean | number
    /** The name of the payment network (i.e. VISA) */
    paymentNetworkName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsPortalScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Content for the Rewards Portal Summary component. */
    summary?: CreditCardRewardsSummaryGenqlSelection
    /** Standard Rewards overview section. */
    standardRewardsOverview?: CreditCardStandardRewardsProgramOverviewGenqlSelection
    /** Owners Rewards overview section. */
    ownersRewardsOverview?: CreditCardOwnersRewardsProgramOverviewGenqlSelection
    /** An array of AppLinks for documents to display on the Rewards Portal. */
    documents?: AppLinkGenqlSelection
    /** Temporary way of querying for the Rewards Details scren content by `programId`. */
    rewardsDetails?: (CreditCardRewardsDetailsScreenGenqlSelection & { __args: {programId: Scalars['String']} })
    /**
     * @deprecated Lens built details screen before overview screen. Once overview screen is constructed, each Program will have a unique Node ID to use when navigating to the Rewards Details page.
     * Temporary Node ID to use when querying for Owners Rewards on the Rewards Details screen.
     */
    ownersRewardsDetailsNodeId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsSummaryGenqlSelection{
    /** Estimated rewards payout information for the current rewards cycle. */
    currentCycleRewardsEstimate?: CreditCardRewardsOverviewGenqlSelection
    /** Rewards payout information for the lifetime of the user's credit card account. */
    lifetimeRewardsOverview?: CreditCardRewardsOverviewGenqlSelection
    /** Information pertaining to the payout location for credit card rewards. */
    rewardsPayoutLocation?: CreditCardRewardsPayoutLocationOverviewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsOverviewGenqlSelection{
    /** Rewards overview label. */
    label?: boolean | number
    /** Optional tooltip copy for a rewards overview section. */
    tooltipContent?: CreditCardRewardsOverviewTooltipContentGenqlSelection
    /** Optional `AppPill` for display when a user has reached the maximum reward amount for a given reward cycle. */
    pill?: AppPillGenqlSelection
    /** Rewards overview value. */
    value?: boolean | number
    /** Optional subtitle. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardClosedAccountContentGenqlSelection{
    /** Title for the terminated Credit Card account screen. */
    title?: boolean | number
    /** Subtitle for the terminated Credit Card account screen. */
    subtitle?: boolean | number
    /** Phone number to contact Deserve on the terminated Credit Card account screen. */
    phoneNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardSuspendedAccountContentGenqlSelection{
    /** Content for the suspended Credit Card account banner. */
    content?: boolean | number
    /** Phone number to contact Deserve on the suspended Credit Card account screen. */
    phoneNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsOverviewTooltipContentGenqlSelection{
    /** Tooltip title. Should be `null` on web. */
    title?: boolean | number
    /** Tooltip content. */
    content?: boolean | number
    /** Tooltip `AppLink`. Should be `null` on web. */
    link?: AppLinkGenqlSelection
    /** Tooltip icon. */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsPayoutLocationOverviewGenqlSelection{
    /** Rewards payout location label. */
    label?: boolean | number
    /** Icon for rewards payout location. */
    icon?: AppImageGenqlSelection
    /** Description of the payout account. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardStandardRewardsProgramOverviewGenqlSelection{
    /** Standard Rewards title. */
    title?: boolean | number
    /** Standard Rewards program highlights. */
    highlights?: CreditCardStandardRewardsProgramHighlightsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardStandardRewardsProgramHighlightsGenqlSelection{
    /** Standard Rewards program icon. */
    icon?: AppImageGenqlSelection
    /** Standard Rewards program description. */
    description?: boolean | number
    /** ID to use when navigating to the Rewards Details screen. If ID is `null`, do not allow users to navigate. */
    creditCardRewardsDetailsScreenId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOwnersRewardsProgramOverviewGenqlSelection{
    /** Rewards Program Title */
    title?: boolean | number
    /** Tooltip icon and content for the Owners Rewards Program Overview. */
    tooltip?: CreditCardOwnersRewardsProgramOverviewTooltipContentGenqlSelection
    /** Highlights related to the given rewards program used to display a general overview to the user. */
    highlights?: CreditCardOwnersRewardsProgramHighlightsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOwnersRewardsProgramOverviewTooltipContentGenqlSelection{
    /** Owners Rewards Program Overview tooltip icon. */
    icon?: AppImageGenqlSelection
    /** Owners Rewards Program Overview tooltip copy. */
    copy?: boolean | number
    /** Owners Rewards Program Overview tooltip link. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOwnersRewardsProgramHighlightsGenqlSelection{
    /** Optional title for the Rewards Program Highlight section. */
    title?: boolean | number
    /** Navigation link for the Rewards Program Highlight section. */
    link?: CreditCardOwnersRewardsProgramHighlightLinkGenqlSelection
    /** Array of programs in the owners rewards highlight list. */
    programs?: CreditCardRewardsProgramOverviewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardOwnersRewardsProgramHighlightLinkGenqlSelection{
    /** String to be displayed to clients. */
    title?: boolean | number
    /** Enum used for navigation. */
    destination?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsDetailsScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Page title. */
    title?: boolean | number
    /** Overview item for the Current Rewards Cycle Details Screen. */
    programOverview?: CreditCardRewardsProgramOverviewGenqlSelection
    /** Header for display above the transaction list. */
    header?: boolean | number
    /** Optional content for display above the transaction list. */
    content?: boolean | number
    /** Transactions for the given reward cycle for the reward program. */
    relatedTransactions?: CreditCardTransactionConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsProgramOverviewGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The URL for the Security's Logo, if available. */
    securityLogoUrl?: boolean | number
    /** An optional `AppImage`, to be used in place of the `securityLogoUrl` to support Dark Mode on mobile clients for non-security logo reward program overviews (i.e. standard rewards). */
    logoAppImage?: AppImageGenqlSelection
    /** Rewards Item title. */
    title?: boolean | number
    /** Rewards Item value. */
    value?: boolean | number
    /** Optional ID that, when present, should be used when navigating to the Credit Card Rewards Details Screen. */
    creditCardRewardsDetailsScreenId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardTransactionConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CreditCardTransactionEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardTransactionEdgeGenqlSelection{
    cursor?: boolean | number
    /** The item at the end of the edge */
    node?: SpendActivityEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardTransactionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The status of this activity entry. */
    status?: AppPillGenqlSelection
    /** The legacy date for this activity entry. */
    date?: boolean | number
    /** The formatted date for this activity entry. */
    activityDate?: boolean | number
    /** The AppImage icon for this activity entry. */
    icon?: AppImageGenqlSelection
    /** A short summary description for this transaction. */
    summary?: boolean | number
    /** A friendly description for this activity entry which must be displayed to users. */
    description?: boolean | number
    /** The merchant name where the activity entry occured. */
    merchant?: boolean | number
    /** A short description of the activity entry category. */
    categoryLabel?: boolean | number
    /** A boolean value for whether or not the transaction is void. */
    isVoided?: boolean | number
    /** A signed dollar amount associated with this activity, if applicable. */
    amount?: boolean | number
    /** Further details for this activity entry. */
    details?: SpendActivityEntryDetailsGenqlSelection
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was made.
     */
    transactionDate?: boolean | number
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was settled.
     */
    settledDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardWaitlistConfirmationContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The main title of the Credit Card waitlist confirmation screen. */
    title?: boolean | number
    /** The subtitle of the Credit Card waitlist confirmation screen. */
    subtitle?: boolean | number
    /** The Plus marketing section title of the Credit Card waitlist confirmation screen. */
    plusMarketingTitle?: boolean | number
    /** The Plus marketing section copy of the Credit Card waitlist confirmation screen. */
    plusMarketingCopy?: boolean | number
    /** The Plus trial section copy of the Credit Card waitlist confirmation screen. */
    plusTrialCopy?: boolean | number
    /** The Plus-related button copy, if applicable, on the Credit Card waitlist confirmation screen. */
    plusCtaCopy?: boolean | number
    /** A link to the informational content page for Credit Card. */
    learnMoreLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsProgramBreakdownGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Rewards Program Breakdown title. */
    title?: boolean | number
    /** Rewards Program Breakdown subtitle. */
    subtitle?: boolean | number
    /** Array of programs in the owners rewards highlight list. */
    programs?: CreditCardRewardsProgramOverviewConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsProgramOverviewConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CreditCardRewardsProgramOverviewEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsProgramOverviewEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: CreditCardRewardsProgramOverviewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardWaitlistMarketingBannerGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Marketing banner abandoned.
     * The headline for the Credit Card marketing banner.
     */
    bannerHeadline?: boolean | number
    /**
     * @deprecated Marketing banner abandoned.
     * The copy for the Credit Card marketing banner.
     */
    bannerCopy?: boolean | number
    /**
     * @deprecated Marketing banner abandoned.
     * The AppLink for the Credit Card marketing banner.
     */
    bannerLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardEarlyAccessContentGenqlSelection{
    /** Credit Card Early Access Banner icon. */
    icon?: AppImageGenqlSelection
    /** Credit Card Early Access Banner title. */
    title?: boolean | number
    /** Credit Card Early Access Banner content. */
    content?: boolean | number
    /** Credit Card Early Access Banner link. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardSelectRewardDestinationContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Title. */
    title?: boolean | number
    /** Description. */
    description?: boolean | number
    /** Dropdown placeholder. */
    placeholder?: boolean | number
    /** A list of valid reward payout locations. */
    destinationOptions?: CreditCardRewardDestinationOptionGenqlSelection
    /** Button Label. */
    buttonLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardDestinationOptionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Transfer Participant display name. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardWaitlistMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The main title of the Credit Card marketing screen. */
    title?: boolean | number
    /** The subtitle of the Credit Card marketing screen. */
    subtitle?: boolean | number
    /** The main copy for the Credit Card marketing screen. */
    mainCopy?: boolean | number
    /** The title for the Plus marketing section of the Credit Card marketing screen. */
    plusCopyTitle?: boolean | number
    /** The body copy for the Plus marketing section of the Credit Card marketing screen. */
    plusCopyBody?: boolean | number
    /** The waitlist message copy for the Credit Card marketing screen. */
    waitlistCopy?: boolean | number
    /** Button copy relating to the Credit Card marketing screen. */
    confirmationCtaCopy?: boolean | number
    /** Primary Credit Card marketing CTA label, typically "Apply Now". */
    primaryCta?: ConfirmationCtaLabelDestinationGenqlSelection
    /** The first tool tip copy for the Credit Card marketing screen. */
    firstTooltipCopy?: boolean | number
    /** The second tool tip copy for the Credit Card marketing screen. */
    secondTooltipCopy?: boolean | number
    /** The third tool tip copy for the Credit Card marketing screen. */
    thirdTooltipCopy?: boolean | number
    /** The final marketing header text for the Credit Card marketing screen. */
    finalMarketingHeader?: boolean | number
    /** The final marketing subheader text for the Credit Card marketing screen. */
    finalMarketingSubHeader?: boolean | number
    /** The additional links to be added on to the Credit Card apply now marketing screen. */
    additionalInfoLinks?: AppLinkGenqlSelection
    /** A link to the informational content page for Credit Card. */
    learnMoreLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardMarketingPerkGenqlSelection{
    /** The title that summarizes a perk of the Credit Card. */
    title?: boolean | number
    /** The description of a perk of the Credit Card. */
    description?: boolean | number
    /** The tooltip with more details about a perk of the Credit Card. */
    tooltip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardApplyNowMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The primary title for the Credit Card apply now screen as an array of strings. */
    title?: boolean | number
    /** The tooltip for the primary title of the Credit Card apply now screen. */
    titleTooltip?: boolean | number
    /** The subtitle for the Credit Card apply now screen. */
    subtitle?: boolean | number
    /** An array of perks that describe the features of the Credit Card. */
    perks?: CreditCardMarketingPerkGenqlSelection
    /** The label for the primary CTA button to allow users to apply now. */
    primaryCtaLabel?: boolean | number
    /** The additional links to be added on to the Credit Card apply now marketing screen. */
    additionalInfoLinks?: AppLinkGenqlSelection
    /** A link to the informational content page for Credit Card. */
    learnMoreLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConfirmationCtaLabelDestinationGenqlSelection{
    /** The label to display for the Credit Card marketing CTA button. */
    buttonLabel?: boolean | number
    /** The associated destination enum value to send users when they click the Credit Card marketing CTA button. */
    destination?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardProductLandingPageGenqlSelection{
    /** The title for the Credit Card Product Landing Page */
    title?: boolean | number
    /** The header for the Credit Card Product Landing Page */
    header?: ProductAccountLandingPageHeaderGenqlSelection
    /** The account details for the Credit Card Product Landing Page */
    accountDetails?: TabularDataItemGenqlSelection
    /** An array of informational banners for the Credit Card Product Landing Page */
    banners?: InformationBannerGenqlSelection
    /** The graph details for the Credit Card Product Landing Page */
    graphDetails?: CreditCardLandingPageGraphDetailsGenqlSelection
    /** A card with a value prop display and related details for the Credit Card Product Landing Page */
    valuePropCard?: ValuePropCardGenqlSelection
    /** A card with credit card details and actions */
    detailsCard?: CreditCardLandingPageDetailsCardGenqlSelection
    /** An array of the disclosures for the Credit Card Product Landing Page */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** The mobile floating action button details for the Credit Card Product Landing Page */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** Credit card transactions for the Credit Card Product Landing Page */
    transactions?: (CommonTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Copy to be displayed when there are no transactions on the Credit Card Product Landing Page */
    transactionsEmptyState?: CommonTransactionsEmptyStateGenqlSelection
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards?: AppCardGenqlSelection
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardLandingPageGraphDetailsGenqlSelection{
    /** (Web only) The title for the Credit Card Graph Details */
    title?: boolean | number
    /** (Mobile only) The tooltip for the Credit Card Graph Details */
    tooltip?: AppTooltipGenqlSelection
    /** The credit limit for the Credit Card Graph */
    creditLimit?: boolean | number
    /** The current balance for the Credit Card Graph */
    currentBalance?: boolean | number
    /** The percentage for the Credit Card Graph */
    percentage?: boolean | number
    /** The description for the Credit Card Graph Details */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardLandingPageDetailsCardGenqlSelection{
    /** The title for the Credit Card Details Card */
    title?: boolean | number
    /** Returns copy when the user's card is activated and the user can lock or unlock their card; Clients should not show the label OR switch if this is null */
    lockCardLabel?: boolean | number
    /** The details about the Credit Card */
    details?: TabularDataItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardCommonTransactionMetadataGenqlSelection{
    /** The ID on Credit Card Common Transaction Metadata */
    id?: boolean | number
    /** The reward tier pill on Credit Card Common Transaction Metadata */
    rewardTierPill?: CreditCardRewardsAppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Crypto feature flag. If true, show crypto related features. If false, hide them from UI. */
    isEnabled?: boolean | number
    /** Boolean for checking if the user is eligible to use crypto or create a crypto account. */
    isEligible?: boolean | number
    /**
     * @deprecated Crypto waitlist is deprecated.
     * Whether the waitlist phase has started or not.
     */
    isWaitlistEligible?: boolean | number
    /**
     * @deprecated Crypto waitlist is deprecated.
     * Whether the user is in the crypto waitlist or not.
     */
    isOnCryptoWaitlist?: boolean | number
    /** Returns a list of Crypto Assets for the Crypto research tab. */
    screenCrypto?: (CryptoScreenerConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), sort?: (CryptoSortOptionInput[] | null)} })
    /** Returns a list of Crypto System Pies. */
    screenCryptoSystemPies?: (CryptoSystemPiesConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Boolean for if the user has a crypto account. */
    hasCryptoAccount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoSystemPiesConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CryptoSystemPiesConnectionEdgeGenqlSelection
    /** Total number of crypto system pies. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoSystemPiesConnectionEdgeGenqlSelection{
    /** The item at the end of the edge. */
    node?: CryptoSystemPieGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoSystemPieGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** An identifier for this system pie that is stable across development environments. */
    key?: boolean | number
    /** A boolean flag that is true if the pie contains crypto slices. */
    containsCrypto?: boolean | number
    /** A disclosure statement for this pie. */
    disclosure?: boolean | number
    /** The time that this node was created in ISO 8601 format. */
    created?: boolean | number
    /** The time that this node was last modified in ISO 8601 format. */
    modified?: boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive?: boolean | number
    /** The name of this pie. */
    name?: boolean | number
    /** The description of this pie. */
    description?: boolean | number
    /** The list of slices that belong to this pie. */
    slices?: SliceGenqlSelection
    /** A summary description of the slices in this pie. */
    summary?: { __args: {includeHtml?: (Scalars['Boolean'] | null), includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {onlyAccountId?: (Scalars['ID'] | null)} })
    /** The chart data for the crypto system pie. Intraday is ignored for pies */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis?: PieAnalysisGenqlSelection
    /** True if the pie belongs to the viewing user. */
    isOwnPie?: boolean | number
    /** The current status of the system pie. */
    status?: boolean | number
    /** A list of methodology details used to create this pie. Value will be null when no information is available. */
    methodology?: boolean | number
    /** A description of the frequency at which the composition of this pie is updated. Value will be null when no information is available. */
    updateFrequency?: boolean | number
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl?: boolean | number
    /** If available, a URL to a feature image that represents the pie. The best-fitting image to the requested width/height constraints will be returned, but specific dimensions are not guaranteed. */
    featureUrl?: { __args: {width?: (Scalars['Int'] | null), height?: (Scalars['Int'] | null)} } | boolean | number
    /** Performance information for the system pie. */
    performance?: PiePerformanceGenqlSelection
    /**
     * A list of states that where this pie is restricted and shouldn't be allowed.
     * Ex. NY restricts trading of certain coins so if NY was in the restrictions array
     * we shouldn't display this pie to user in the state of NY
     */
    restrictions?: boolean | number
    /** An array of AppPills that match any restrictions the pie might have. */
    restrictionPills?: AppPillGenqlSelection
    /** Experimental. Generates an edit model representation of the pie. */
    editModel?: { __args: {mode?: (PieEditModelModeEnum | null)} } | boolean | number
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals?: PieFundamentalsGenqlSelection
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance?: (BacktestedPiePerformanceGenqlSelection & { __args: {period: PieHistoricalPeriodEnum} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoSortOptionInput {
/** A sort type. */
type: CryptoSortTypeEnum,
/** A sort direction. */
direction: SortDirectionEnum}

export interface CryptoScreenerConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CryptoScreenerEdgeGenqlSelection
    /** Total number of cryptocurrencies */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoScreenerEdgeGenqlSelection{
    /** The item at the end of the edge. */
    node?: CryptoAssetGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CryptoAssetGenqlSelection{
    /** Legacy ID which, when decoded, resolves to `CRYPTO:ID`. Used for legacy Pie functionality. */
    legacyId?: boolean | number
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    /** Indicates if this crypto asset is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive?: boolean | number
    /** The current status of the crypto asset. */
    status?: boolean | number
    /** The ticker symbol for this crypto asset. */
    symbol?: boolean | number
    /** The name of the crypto asset. */
    name?: boolean | number
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {onlyAccountId?: (Scalars['ID'] | null)} })
    /** The category path for this secuirty in the category hierarchy. An empty list means that the crypto asset is currently uncategorized. */
    category?: boolean | number
    /** The name of the market or exchange on which the crypto asset is listed. Value is null when data is unavailable. */
    market?: boolean | number
    /** Profile information for the crypto asset. Value is null when data is unavailable. */
    profile?: SecurityProfileGenqlSelection
    /**
     * @deprecated Not used for Crypto
     * Fundamentals data for the crypto asset. Value is null when data is unavailable.
     */
    fundamentals?: FundamentalsGenqlSelection
    /** Latest-available delayed market quote data for the crypto asset. Value is null when data is unavailable. */
    quote?: QuoteGenqlSelection
    /** Latest-available delayed market quote data for the crypto asset. Value is null when data is unavailable. */
    latestQuote?: QuoteGenqlSelection
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange?: (PriceChangeGenqlSelection & { __args: {period: HistoricalQuotePeriodEnum} })
    /** The chart data for the crypto asset */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {range?: (TimeRangeInput | null), initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** A time-series of historical quote data for the crypto asset. Value is null when market data is unavailable. */
    historicalQuotes?: (HistoricalQuoteGenqlSelection & { __args?: {period?: (HistoricalQuotePeriodEnum | null), range?: (TimeRangeInput | null), interval?: (TimeIntervalEnum | null), dailyInChronologicalOrder?: (Scalars['Boolean'] | null)} })
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes?: (IntradayQuoteTimeSeriesGenqlSelection & { __args?: {period?: (IntradayQuotePeriodEnum | null), interval?: (IntradayQuoteIntervalEnum | null), isCrypto?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this crypto asset, sorted in reverse chronological order.
     */
    news?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** A list of news stories related to this crypto asset, sorted in reverse chronological order. */
    securityNews?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** True IF the crypto asset is marginable. Always false for crypto assets. */
    isMarginable?: boolean | number
    /** The maintenance margin requirement for a given crypto asset */
    maintenanceMargin?: boolean | number
    /** Icon representing mergin eligibility */
    marginEligibleIcon?: AppImageGenqlSelection
    /** tooltip to display margin requirement content */
    marginRequirementTooltip?: SecurityMarginTooltipGenqlSelection
    /** tooltip to display margin requirement content */
    marginEligibileTooltip?: SecurityMarginTooltipGenqlSelection
    /** App Pill to be displayed for the crypto asset */
    securityPill?: AppPillGenqlSelection
    /** The market capitalization, calculated using a recent share price. */
    marketCap?: boolean | number
    /** Measures how many times a coin changes hands over a given time frame */
    volume?: boolean | number
    /** The total number of coins or tokens that are actively available for trade and are being used in the market and in general public. */
    circulatingSupply?: boolean | number
    /** The maximum number of coins that will ever be created. */
    maxSupply?: boolean | number
    /** Rate of return for the given time period. */
    performanceSummary?: { __args: {timePeriod: CryptoPerformanceSummaryTimePeriodEnum} }
    /** Date cryptocurrency was created */
    createdDate?: boolean | number
    /** The type of the cryptocurrency coin */
    coinType?: boolean | number
    /** Status of the cryptocurrency's development */
    developmentStatus?: boolean | number
    /** String that describes if the coin is open source or not */
    openSource?: boolean | number
    /** How the cryptocurrency is structured */
    orgStructure?: boolean | number
    /** The hash algorithm for the cryptocurrency */
    hashAlgorithm?: boolean | number
    /** The link to the whitepaper for the cryptocurrency */
    whitepaperLink?: AppLinkGenqlSelection
    /** The icon to display for the whitepaper link */
    whitepaperIcon?: AppImageGenqlSelection
    /** The high value in the last 52 weeks */
    week52High?: boolean | number
    /** The low value in the last 52 weeks */
    week52Low?: boolean | number
    /** The average volume in the last 10 days */
    avgVolumeLast10Days?: boolean | number
    /** The average volume in the last 30 days */
    avgVolumeLast30Days?: boolean | number
    /** The average volume in the last 90 days */
    avgVolumeLast90Days?: boolean | number
    /** The annualized percent change over the past year */
    percentChangeAnnualized1Year?: boolean | number
    /** The list of restrictions that the coin may have for the user. If null, there are no restrictions. */
    restrictions?: boolean | number
    /** A pill representing the restrictions that the coin may have for the user. If null, there are no restrictions. Region eligibility trumps plus restrictions. */
    restrictionPill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundScreenerConnectionGenqlSelection{
    /** The current hierarchical category level. */
    currentCategory?: FundSubCategoryGenqlSelection
    /** A list of edges. */
    edges?: FundScreenerEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The next hierarchical level of sub-categories. */
    subCategories?: FundSubCategoryGenqlSelection
    /** The approximate total number of edges in the connection. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection sub-category. */
export interface FundSubCategoryGenqlSelection{
    /** The category path in the category hierarchy. */
    category?: boolean | number
    /** The approximate total number of edges within the sub-category. */
    count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface FundScreenerEdgeGenqlSelection{
    /** A cursor for use in pagination */
    cursor?: boolean | number
    /** The item at the end of the edge */
    node?: FundGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sort option. */
export interface FundSortOptionInput {
/** A sort direction. */
direction: SortDirectionEnum,
/** A sort type. */
type: FundSortTypeEnum}


/** A limit option. */
export interface FundLimitOptionInput {
/** Whether the limit should be inclusive of the minimum and/or maximum values. Default is true. */
inclusive?: (Scalars['Boolean'] | null),
/** A maximum limit. */
max?: (Scalars['Float'] | null),
/** A minimum limit. */
min?: (Scalars['Float'] | null),
/** A limit type. */
type: FundLimitTypeEnum}

export interface FundingSourcesGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Flag to determine if account has any funding sources. */
    hasFundingSources?: boolean | number
    /** Retrieve all funding sources linked to this investment account. */
    fundingSourcesGroup?: (FundingSourceConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection to a list of funding sources group. */
export interface FundingSourceConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: FundingSourceEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundingSourceEdgeGenqlSelection{
    /** The item at the end of the edge. */
    node?: FundingSourceAccountGenqlSelection
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundingSourceAccountGenqlSelection{
    /** The id of this node. */
    id?: boolean | number
    /** Funding source status. */
    status?: boolean | number
    /** Funding source routing number. */
    routingNumber?: boolean | number
    /** Funding source external name. */
    externalName?: boolean | number
    /** Funding source account number. */
    accountNumber?: boolean | number
    /** Funding source creation date. */
    createdAt?: boolean | number
    /** Funding source last updated date. */
    updatedAt?: boolean | number
    /** Funding source verification type - used to differentiate how the funding source was verified. */
    verificationType?: boolean | number
    /** Logo URL for the funding source. */
    logoUrl?: boolean | number
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewPromotionsGenqlSelection{
    /** The header for the home overview promotions section */
    header?: RichTextContentGenqlSelection
    /** Promotional cards to be shown in a carousel */
    cards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DividendsGenqlSelection{
    /**
     * The cacheId is a composite key of the accountId and period and helps
     * cache the data on the FE.
     */
    cacheId?: boolean | number
    /** A type containing summary information about a PortfolioSlice's dividends. */
    dividendSummary?: DividendSummaryGenqlSelection
    /** Contains performance data for the PortfolioSlice's dividends. */
    dividendPerformance?: DividendDataPointGenqlSelection
    /** A connection of DividendPositions that are currently in the user account. */
    currentPositions?: (PositionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** A connection of upcoming dividends. */
    upcomingDividends?: (UpcomingDividendsConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Disclosure for portfolio dividends page. */
    disclosure?: AppRichTextDisclosureLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpcomingDividendsConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: UpcomingDividendEdgeGenqlSelection
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpcomingDividendEdgeGenqlSelection{
    /** The node at the end edge. */
    node?: UpcomingDividendGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpcomingDividendGenqlSelection{
    /** The ex date for the upcoming dividend formatted as Jan 1st, 2024 or Jan, 2024 depending on the status. */
    exDividendDate?: boolean | number
    /** The payment date for the upcoming dividend formatted as Jan 1st 2024, or Jan, 2024 depending on the status. */
    payDate?: boolean | number
    /** The security that is paying the dividend. */
    security?: SecurityGenqlSelection
    /** The number of shares the user owns of the security. */
    numOfShares?: boolean | number
    /** The amount per share the user will receive. */
    dividendPerShare?: boolean | number
    /** The total amount the user will receive. */
    paymentAmount?: boolean | number
    /** An AppPill representing the status of the dividend. */
    dividendStatus?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DividendSummaryGenqlSelection{
    /** The total amount of dividend income earned for the user's account */
    totalIncomeEarned?: boolean | number
    /** The total amount of dividends credited to the user's account for the time range */
    totalPaidForTimeRange?: boolean | number
    /** The total amount of dividends expected to be credited to the user's account for the time range */
    totalUpcomingForTimeRange?: boolean | number
    /** The total amount of confirmed upcoming dividends, basically upcoming dividends with a status of 'pending'. */
    totalConfirmedForTimeRange?: boolean | number
    /** The average amount of dividend income per month. */
    averageMonthlyIncome?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DividendTopEarnerGenqlSelection{
    /**
     * @deprecated Utilize `securityRef` instead.
     * The security that is paying the dividend.
     */
    security?: PositionGenqlSelection
    /** A reference to the security that paid out the dividends. */
    securityRef?: SecurityReferenceGenqlSelection
    /** The amount of dividend income earned for the user's account in the data point's time period. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DividendDataPointGenqlSelection{
    groupedBy?: boolean | number
    label?: boolean | number
    paid?: boolean | number
    total?: boolean | number
    pending?: boolean | number
    upcoming?: boolean | number
    topEarners?: DividendTopEarnerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundFundamentalsGenqlSelection{
    /** A description of the relative asset allocations within the fund. */
    assetAllocations?: FundAllocationInfoGenqlSelection
    /**
     * @deprecated Obsolete. Use `category` on `Fund` instead.
     * The fund category.
     */
    category?: boolean | number
    /** A description of the fund. */
    description?: boolean | number
    /** The inception date of the fund. */
    inceptionDate?: boolean | number
    /** True if the fund is an index fund; false otherwise. Value is null when unknown. */
    isIndexFund?: boolean | number
    /** The net expense ratio, expressed as a percentage. */
    netExpenseRatio?: boolean | number
    /** A numeric grading of the net expense ratio, from 1-5 (from low to high). */
    netExpenseRatioGrade?: boolean | number
    /** The net expense ratio bucketized into five levels, from low to high. */
    netExpenseRatioLevel?: boolean | number
    /** The fund performance for the most recent one year. Value is null when the time period predates the fund. */
    performance1y?: FundPerformanceInfoGenqlSelection
    /** The fund performance for the most recent three years. Value is null when the time period predates the fund. */
    performance3y?: FundPerformanceInfoGenqlSelection
    /** The fund performance for the most recent five years. Value is null when the time period predates the fund. */
    performance5y?: FundPerformanceInfoGenqlSelection
    /** The fund performance for the most recent ten years. Value is null when the time period predates the fund. */
    performance10y?: FundPerformanceInfoGenqlSelection
    /** The fund performance since inception. Value is null when data is not available. */
    performanceSinceInception?: FundPerformanceInfoGenqlSelection
    /** Information about the top two fund holdings. */
    topHoldings?: FundHoldingInfoGenqlSelection
    /** The total amount of assets managed in the fund. */
    totalAssets?: boolean | number
    /** The total number of holdings. */
    totalNumberOfHoldings?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about an asset allocation within a fund. */
export interface FundAllocationInfoGenqlSelection{
    /** The name of the asset type. */
    name?: boolean | number
    /** The asset allocation, expressed as a percentage. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a fund's performance over a period of time. */
export interface FundPerformanceInfoGenqlSelection{
    /** The net-asset-value annual return. */
    annualReturnNav?: boolean | number
    /** The as-of date for the performance figure. */
    asOfDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a specific fund holding. */
export interface FundHoldingInfoGenqlSelection{
    /** The name of the holding. */
    name?: boolean | number
    /** The number of shares held. */
    quantity?: boolean | number
    /** The stock symbol of the holding. */
    symbol?: boolean | number
    /** The portion of the fund designated to the holding, expressed as a percentage. */
    weighting?: boolean | number
    /** The URL of the holding's logo. */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a fund security. */
export interface FundGenqlSelection{
    /** The category path for this secuirty in the category hierarchy. An empty list means that the security is currently uncategorized. */
    category?: boolean | number
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** The category path for this fund in the category hierarchy. An empty list means that the fund is currently uncategorized. */
    fundCategory?: boolean | number
    /** Information about fund document filings. Value is null when data is not available. */
    fundFilings?: FundFilingsGenqlSelection
    /** Fund fundamentals data. Value is null when data is not available. */
    fundFundamentals?: FundFundamentalsGenqlSelection
    /** Fundamentals data for the security. Value is null when data is unavailable. */
    fundamentals?: FundamentalsGenqlSelection
    /** A time-series of historical quote data for the security. Value is null when market data is unavailable. */
    historicalQuotes?: (HistoricalQuoteGenqlSelection & { __args?: {
    /** This flag exists to correct a legacy issue. By default, for daily intervals only, data will be returned in reverse chronological order (which is inconsistent with the rest of the API). Clients should opt-in to receiving daily data in chronological order by setting this argument to true. This argument will eventually be removed once all clients are corrected to expect daily data in chronological order. */
    dailyInChronologicalOrder?: (Scalars['Boolean'] | null), 
    /** An interval length over which to aggregate the quote data. Default is days. Dividend and split data is not aggregated if an interval longer than days is selected. */
    interval?: (TimeIntervalEnum | null), 
    /** A preset time range option. Supercedes `range` if both are specified. */
    period?: (HistoricalQuotePeriodEnum | null), 
    /** A time range over which to retrieve historical quotes. Default is one month. */
    range?: (TimeRangeInput | null)} })
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes?: (IntradayQuoteTimeSeriesGenqlSelection & { __args?: {
    /** An interval length over which to aggregate the quote data. Default is one hour. */
    interval?: (IntradayQuoteIntervalEnum | null), 
    /** Whether or not the security is a crypto currency. */
    isCrypto?: (Scalars['Boolean'] | null), 
    /** A time period over which to retrieve intraday quotes. Default is today. */
    period?: (IntradayQuotePeriodEnum | null)} })
    /** Indicates if this security is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive?: boolean | number
    /** True IF the security is marginable */
    isMarginable?: boolean | number
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    latestQuote?: QuoteGenqlSelection
    /** The maintenance margin requirement for a given security */
    maintenanceMargin?: boolean | number
    /** tooltip to display margin requirement content */
    marginEligibileTooltip?: SecurityMarginTooltipGenqlSelection
    /** Icon representing mergin eligibility */
    marginEligibleIcon?: AppImageGenqlSelection
    /** tooltip to display margin requirement content */
    marginRequirementTooltip?: SecurityMarginTooltipGenqlSelection
    /** The name of the market or exchange on which the security is listed. Value is null when data is unavailable. */
    market?: boolean | number
    /** The name of the security. */
    name?: boolean | number
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this security, sorted in reverse chronological order.
     */
    news?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange?: (PriceChangeGenqlSelection & { __args: {
    /** A preset time range option. */
    period: HistoricalQuotePeriodEnum} })
    /** Profile information for the security. Value is null when data is unavailable. */
    profile?: SecurityProfileGenqlSelection
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    quote?: QuoteGenqlSelection
    /** A list of news stories related to this security, sorted in reverse chronological order. */
    securityNews?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** App Pill to be displayed for the security */
    securityPill?: AppPillGenqlSelection
    /** The current status of the security. */
    status?: boolean | number
    /** The ticker symbol for this security. */
    symbol?: boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Filings information specific to funds. */
export interface FundFilingsGenqlSelection{
    /** The most recent available document filed for Rule 485(b). Value is null when unavailable. */
    last485b?: SecurityFilingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A security document filed with the SEC. */
export interface SecurityFilingGenqlSelection{
    /** A description of the document. Value is null when unavailable. */
    description?: boolean | number
    /** The filing date of the document. Value is null when unavailable. */
    filingDate?: boolean | number
    /** The document group associated with the document type. Value is null when unavailable. */
    group?: boolean | number
    /** A URL to an HTML version of the document. */
    htmlUrl?: boolean | number
    /** The number of pages in the document. Value is null when unavailable. */
    pages?: boolean | number
    /** A URL to a PDF version of the document. */
    pdfUrl?: boolean | number
    /** The document type. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundamentalsGenqlSelection{
    /** The unique identifier of the Node. */
    id?: boolean | number
    /** The date and time that the fundamentals were retrieved. */
    asOfTime?: boolean | number
    /** The market capitalization, calculated using a recent share price. */
    marketCap?: boolean | number
    /** Display shortened market capitalization, calculated using a recent share price. */
    marketCapShort?: boolean | number
    /** The number of shares outstanding. */
    sharesOutstanding?: boolean | number
    /** Shortened number of shares outstanding. */
    sharesOutstandingShort?: boolean | number
    /** The earnings per share for the latest fiscal period earnings. */
    eps?: boolean | number
    /** The current price divided by the latest earnings per share. */
    peRatio?: boolean | number
    /** A numeric grading of the P/E ratio, from 1-5 (from low to high). */
    peRatioGrade?: boolean | number
    /** The P/E ratio bucketized into five levels, from low to high. */
    peRatioLevel?: boolean | number
    /** The date on which the 52-week high price occurred. */
    week52HighDate?: boolean | number
    /** The 52-week high price. */
    week52HighPrice?: boolean | number
    /** The date on which the 52-week low price occurred. */
    week52LowDate?: boolean | number
    /** The 52-week low price. */
    week52LowPrice?: boolean | number
    /** The 52-week range */
    week52range?: boolean | number
    /** The forward annual dividend rate amount. */
    dividendRate?: boolean | number
    /** The dividend yield, expressed as a percentage. */
    dividendYield?: boolean | number
    /** The dividend frequency. */
    dividendFrequency?: boolean | number
    /** The price to sales ratio. */
    priceToSales?: boolean | number
    /** The 5 year beta - the security risk vs market risk */
    beta?: boolean | number
    /** Display shortened average daily volume */
    averageDailyVolumeShort?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an equity security. */
export interface EquityGenqlSelection{
    /** The category path for this secuirty in the category hierarchy. An empty list means that the security is currently uncategorized. */
    category?: boolean | number
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Fundamentals data for the security. Value is null when data is unavailable. */
    fundamentals?: FundamentalsGenqlSelection
    /** A time-series of historical quote data for the security. Value is null when market data is unavailable. */
    historicalQuotes?: (HistoricalQuoteGenqlSelection & { __args?: {
    /** This flag exists to correct a legacy issue. By default, for daily intervals only, data will be returned in reverse chronological order (which is inconsistent with the rest of the API). Clients should opt-in to receiving daily data in chronological order by setting this argument to true. This argument will eventually be removed once all clients are corrected to expect daily data in chronological order. */
    dailyInChronologicalOrder?: (Scalars['Boolean'] | null), 
    /** An interval length over which to aggregate the quote data. Default is days. Dividend and split data is not aggregated if an interval longer than days is selected. */
    interval?: (TimeIntervalEnum | null), 
    /** A preset time range option. Supercedes `range` if both are specified. */
    period?: (HistoricalQuotePeriodEnum | null), 
    /** A time range over which to retrieve historical quotes. Default is one month. */
    range?: (TimeRangeInput | null)} })
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes?: (IntradayQuoteTimeSeriesGenqlSelection & { __args?: {
    /** An interval length over which to aggregate the quote data. Default is one hour. */
    interval?: (IntradayQuoteIntervalEnum | null), 
    /** Whether or not the security is a crypto currency. */
    isCrypto?: (Scalars['Boolean'] | null), 
    /** A time period over which to retrieve intraday quotes. Default is today. */
    period?: (IntradayQuotePeriodEnum | null)} })
    /** Indicates if this security is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive?: boolean | number
    /** True IF the security is marginable */
    isMarginable?: boolean | number
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    latestQuote?: QuoteGenqlSelection
    /** The maintenance margin requirement for a given security */
    maintenanceMargin?: boolean | number
    /** tooltip to display margin requirement content */
    marginEligibileTooltip?: SecurityMarginTooltipGenqlSelection
    /** Icon representing mergin eligibility */
    marginEligibleIcon?: AppImageGenqlSelection
    /** tooltip to display margin requirement content */
    marginRequirementTooltip?: SecurityMarginTooltipGenqlSelection
    /** The name of the market or exchange on which the security is listed. Value is null when data is unavailable. */
    market?: boolean | number
    /** The name of the security. */
    name?: boolean | number
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this security, sorted in reverse chronological order.
     */
    news?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange?: (PriceChangeGenqlSelection & { __args: {
    /** A preset time range option. */
    period: HistoricalQuotePeriodEnum} })
    /** Profile information for the security. Value is null when data is unavailable. */
    profile?: SecurityProfileGenqlSelection
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    quote?: QuoteGenqlSelection
    /** A list of news stories related to this security, sorted in reverse chronological order. */
    securityNews?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** App Pill to be displayed for the security */
    securityPill?: AppPillGenqlSelection
    /** The current status of the security. */
    status?: boolean | number
    /** The ticker symbol for this security. */
    symbol?: boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about invest product */
export interface InvestMarketingGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Header content */
    headerContent?: InvestMarketingContentGenqlSelection
    /** invest marketing disclaimer */
    disclaimer?: InvestMarketingContentGenqlSelection
    /** A collection of disclosures to display on the screen. */
    disclosures?: InvestMarketingDisclosuresGenqlSelection
    /** invest account checklist */
    checklist?: InvestMarketingChecklistGenqlSelection
    /** invest account details */
    details?: InvestMarketingDetailsGenqlSelection
    /**
     * @deprecated This is the old deprecated open account cta. Clients should use the new openAccountCtaLinks instead.
     * call to action for invest marketing content
     */
    openAccountCta?: AppLinkGenqlSelection
    /** A collection of open account cta links to be displayed on the invest marketing page. */
    openAccountCtaLinks?: AppLinkGenqlSelection
    /** Set of available product options for onboarding to invest. */
    products?: OnboardingProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Invest account marketing details */
export interface InvestMarketingDetailsGenqlSelection{
    /** how invest works */
    howItWorks?: InvestMarketingContentGenqlSelection
    /** invest account benefits */
    benefits?: InvestMarketingContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Invest marketing content */
export interface InvestMarketingContentGenqlSelection{
    /** invest marketing content title */
    title?: boolean | number
    /** invest marketing image */
    image?: AppImageGenqlSelection
    /** invest marketing description */
    description?: boolean | number
    /**
     * @deprecated use `marketingTooltipCopy` that supports an array of strings
     * invest marketing tooltip
     */
    tooltipCopy?: boolean | number
    /** Invest marketing tooltip as an array of strings rendered as paragraphs in the tooltip */
    marketingTooltipCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Invest account access */
export interface InvestMarketingChecklistGenqlSelection{
    /** checklist title */
    title?: boolean | number
    /** invest checklist content */
    checklistContent?: InvestMarketingContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains information for the Disclosures Link and modal content for invest marketing. */
export interface InvestMarketingDisclosuresGenqlSelection{
    /** The title for the disclosures Link */
    title?: boolean | number
    /** The contents for the disclosures modal that the link opens. */
    contents?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** New Invest Marketing Screen content. Will replace the above types once clients are using it. */
export interface InvestMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The header for the invest marketing screen. */
    header?: boolean | number
    /** The footer for the invest marketing screen. */
    footer?: boolean | number
    /** An array of the content cards for the invest marketing screen. */
    productMarketingCards?: ProductMarketingCardGenqlSelection
    /** An array of the disclosures for the invest marketing screen. */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestProductLandingPageGenqlSelection{
    /** Unimplemented */
    title?: boolean | number
    /** Unimplemented */
    header?: ProductAccountLandingPageHeaderGenqlSelection
    /** Unimplemented */
    accountDetails?: TabularDataItemGenqlSelection
    /** Unimplemented */
    banners?: InformationBannerGenqlSelection
    /** Unimplemented */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** Unimplemented */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** Unimplemented */
    transactions?: (CommonTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Unimplemented */
    transactionsEmptyState?: CommonTransactionsEmptyStateGenqlSelection
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards?: AppCardGenqlSelection
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestFullyPaidLendingDisclosureGenqlSelection{
    /** Security lending disclosure introduction */
    introduction?: boolean | number
    /** Security lending disclosure review title */
    reviewTitle?: boolean | number
    /** Security lending disclosure review body */
    reviewBody?: boolean | number
    /** Security lending disclosure body */
    disclosureBody?: boolean | number
    /** Security lending disclosure title */
    disclosureTitle?: boolean | number
    /** Security lending disclosure opt in text */
    optInText?: boolean | number
    /** Security lending disclosure opt in default value */
    optInDefault?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSlicePendingCashFlowGenqlSelection{
    /** The time when the pending cash flow estimate was calculated. */
    asOfTime?: boolean | number
    /**
     * The cash flow dollar amount. Negative values indicate outflows, positive
     * values indicate inflows.
     */
    cashFlow?: boolean | number
    /**
     * When true, the estimated amount is uncertain, and the value indicates
     * direction only.
     */
    directionOnly?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSliceInvestmentsGenqlSelection{
    /** List of positions allocated to a portfolio slice. */
    allocatedPositions?: (AllocatedPositionConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /**
     * @deprecated This is a temporary workaround for Relay. It will be removed when it is no longer needed. Clients should use `allocatedPositions` instead if possible.
     * This is a temporary workaround for Relay. Returns the same data as the
     * `allocatedPositions` connection, but as a plain list.
     */
    allocatedPositionsList?: AllocatedPositionGenqlSelection
    /**
     * The summarized total cost basis of the investment assets. Value is null if
     * cost information is unavailable.
     */
    totalCost?: TotalInvestmentsCostGenqlSelection
    /**
     * The summarized total value of the investment assets. Value is null if price
     * information is temporarily unavailable.
     */
    totalValue?: TotalInvestmentsValueGenqlSelection
    /**
     * The summarized total unrealized gain of the investment assets. Value is null
     * if total cost or total value information is unavailable.
     */
    totalUnrealizedGain?: TotalInvestmentsGainGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AllocatedPositionConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: AllocatedPositionEdgeGenqlSelection
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AllocatedPositionEdgeGenqlSelection{
    cursor?: boolean | number
    node?: AllocatedPositionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A position with a fraction that is allocated to a portfolio slice. */
export interface AllocatedPositionGenqlSelection{
    /** The portion of the full position that is allocated to a portfolio slice. */
    allocation?: boolean | number
    /**
     * The portion of the full position that is allocated to a portfolio slice,
     * represented as a percentage. Rounded to two decimal places. Zero indicates
     * that the allocation portion is less than 0.01%.
     */
    allocationPercent?: boolean | number
    /** The full position. */
    position?: PositionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSliceOrderStatusGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * True when the current order status is locked, and changes are not permitted.
     * If and only if the value is true, the `lockReason` will be `UNLOCKED`.
     */
    isLocked?: boolean | number
    /** The specific order status lock reason. */
    lockReason?: boolean | number
    /** True when this portfolio slice has an order set. */
    isSetOnSelf?: boolean | number
    /** True when a descendant of this portfolio slice has an order set. */
    isSetInDescendants?: boolean | number
    /** Equal to `isSetOnSelf || isSetInDescendants`. */
    isSetOnSelfOrInDescendants?: boolean | number
    /**
     * The signed total of all buy orders existing in descendants. Value will always
     * be either zero or positive. Does not include any order set on this slice.
     */
    netDescendantBuyOrderAmount?: boolean | number
    /**
     * The signed total of all sell orders existing in descendants. Value will always
     * be either zero or negative. Does not include any order set on this slice.
     */
    netDescendantSellOrderAmount?: boolean | number
    /**
     * The sum of the signed values `netDescendantBuyOrderAmount` and
     * `netDescendantSellOrderAmount`.
     */
    netDescendantOrderAmount?: boolean | number
    /**
     * Details about the portfolio slice order set on this slice, when present. Value
     * is null when there is no portfolio slice order set on this slice.
     */
    order?: PortfolioSliceOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a trading order for a portfolio slice. */
export interface PortfolioSliceOrderGenqlSelection{
    /**
     * The signed cash flow requested by this order. Positive values indicate buys
     * and negative values indicate sells. Value will not be zero.
     */
    cashFlow?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSlicePerformanceGenqlSelection{
    /**
     * @deprecated Now redundant. Use the dates associated with `startValue` and `endValue` instead.
     * The time span over which the performance data is calculated.
     */
    timeSpan?: PerformanceTimeSpanGenqlSelection
    /**
     * The value at the start of the time period over which performance is
     * calculated.
     */
    startValue?: PerformancePointValueGenqlSelection
    /** The value at the end of the time period over which performance is calculated. */
    endValue?: PerformancePointValueGenqlSelection
    /**
     * The money-weighted rate of return for this portfolio slice for the time
     * period, as a percentage.
     */
    moneyWeightedRateOfReturn?: boolean | number
    /**
     * The total gain for the portfolio slice, caluclated by summing the capital gain
     * and the earned dividends.
     */
    totalGain?: boolean | number
    /** The capital gain for this portfolio slice over the time period. */
    capitalGain?: boolean | number
    /**
     * @deprecated Renamed for clarity. Use `earnedDividends` instead.
     * The total amount of dividends earned by this portfolio slice over the time
     * period. Dividends are earned on the ex-date.
     */
    cumulativeDividends?: boolean | number
    /**
     * The total amount of dividends earned by this portfolio slice over the time
     * period. Dividends are earned on the ex-date.
     */
    earnedDividends?: boolean | number
    /**
     * The net total cash flow into or out-of this portfolio slice over the time
     * period.
     */
    netCashFlow?: boolean | number
    /**
     * The number of earned dividends associated with this portfolio slice over the
     * time period.
     */
    earnedDividendCount?: boolean | number
    /**
     * The number of cash flows associated with this portfolio slice over the time
     * period.
     */
    cashFlowCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the time span over which performance is calculated. */
export interface PerformanceTimeSpanGenqlSelection{
    /** The start time of the span. */
    start?: boolean | number
    /** The end time of the span. */
    end?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The value of a portfolio slice at a specific point in time. */
export interface PerformancePointValueGenqlSelection{
    /** The date associated with the value. */
    date?: boolean | number
    /** The value. Value is null when unavailable. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSliceRebalanceStatusGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * True when the current rebalance status is locked, and changes are not
     * permitted. If and only if the value is true, the `lockReason` will be
     * `UNLOCKED`.
     */
    isLocked?: boolean | number
    /** The specific rebalance status lock reason. */
    lockReason?: boolean | number
    /** True when this portfolio slice has a rebalance set. */
    isSetOnSelf?: boolean | number
    /** True when a descendant of this portfolio slice has a rebalance set. */
    isSetInDescendants?: boolean | number
    /** Equal to `isSetOnSelf || isSetInDescendants`. */
    isSetOnSelfOrInDescendants?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection of brokarage account positions. */
export interface PositionConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: PositionEdgeGenqlSelection
    /** The total number of positions in the connection. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The position edge. */
export interface PositionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The node at the end of the edge. */
    node?: PositionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An investment in a single security. */
export interface PositionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Dividend Information for the position. */
    dividends?: PositionDividendsGenqlSelection
    /** The Invest account that owns this position. */
    investAccount?: AccountGenqlSelection
    /**
     * @deprecated Use `investAccount` instead.
     * The account that owns this position.
     */
    account?: AccountGenqlSelection
    /** The security that is held. */
    positionSecurity?: PositionSecurityReferenceGenqlSelection
    /** Fully paid lending program entry from the position ledger. */
    fullyPaidLending?: PositionFullyPaidLendingGenqlSelection
    /**
     * @deprecated Use `positionSecurity` instead.
     * The security that is held.
     */
    security?: SecurityGenqlSelection
    /** The share quantity currently held. */
    quantity?: boolean | number
    /** The cost basis of this position, if available. */
    cost?: PositionCostGenqlSelection
    /**
     * The value of this postion. Value is null when price information is
     * unavailable.
     */
    value?: PositionValueGenqlSelection
    /**
     * The unrealized gain from this position. Value is null when cost or value are
     * unavailable.
     */
    unrealizedGain?: PositionGainGenqlSelection
    /** Marginability information for this position. */
    marginability?: PositionMarginabilityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sort option. */
export interface PositionSortOptionInput {
/** A sort type. */
type: PositionSortTypeEnum,
/** A sort direction. */
direction: SortDirectionEnum}

export interface PositionDividendsGenqlSelection{
    /** The amount earned from dividends in the last 12 months returned as a formatted string. */
    lastTwelveMonthsPaid?: boolean | number
    /** The average cost per share returned as a formatted string. */
    averageCost?: boolean | number
    /** The dividend yield of the position. */
    dividendYield?: boolean | number
    /** The frequency with which dividends are disbursed. */
    dividendFrequency?: boolean | number
    /** The yield on cost for the dividend position. */
    yieldOnCost?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a security that may or may not be supported. */
export interface PositionSecurityReferenceGenqlSelection{
    /** The best-available descriptor for the security. */
    descriptor?: boolean | number
    /** The symbol of the security, if known. */
    symbol?: boolean | number
    /** The security, if available. */
    security?: SecurityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Fully paid lending program from position ledger. */
export interface PositionFullyPaidLendingGenqlSelection{
    /** The quantity of the stock loan. */
    quantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The cost basis of a position. */
export interface PositionCostGenqlSelection{
    /** The cost basis. */
    cost?: boolean | number
    /** The cost divided by the total quanity. */
    averageSharePrice?: boolean | number
    /**
     * @deprecated Defunct, always returns false.
     * Indicates if this cost basis is currently an estimation due to recent trades.
     */
    isEstimated?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The value of a position. */
export interface PositionValueGenqlSelection{
    /** The value. */
    value?: boolean | number
    /** The timestamp of the price used to calculate the position value. */
    priceDate?: boolean | number
    /**
     * The portion of overall investment asset value that this position represents,
     * as a percentage. Value is null when the total investment value is unavailable.
     */
    percentOfTotal?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The unrealized gain from a position. */
export interface PositionGainGenqlSelection{
    /** The difference between the current value and the cost basis. */
    gain?: boolean | number
    /** The percent difference between the current value and the cost basis. */
    gainPercent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Marginability information for a postion. */
export interface PositionMarginabilityGenqlSelection{
    /** True if the position is marginable. */
    isMarginable?: boolean | number
    /** The maintenance equity percentage that this position requires. */
    maintenanceEquityRequirementPercent?: boolean | number
    /** The dollar amount this position contributes to total required equity. */
    maintenanceEquityRequirement?: boolean | number
    /**
     * If the indicated dollar amount were sold, the amount by which the maintenance
     * equity requirement would be reduced.
     */
    maintenanceEquityRequirementReductionBySelling?: { __args: {
    /** The sell amount. */
    sellAmount: Scalars['Float']} }
    /** The valuation as-of date for the equity requirement amount. */
    asOfDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a security. */
export interface SecurityReferenceGenqlSelection{
    /** The ID of the node. */
    id?: boolean | number
    /** The best-available descriptor for the security. */
    descriptor?: boolean | number
    /** The symbol of the security, if known. */
    symbol?: boolean | number
    /** The security, if available. */
    security?: SecurityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginHealthGenqlSelection{
    id?: boolean | number
    /** Margin health title. */
    title?: boolean | number
    /** The information banner for the margin health */
    banner?: InformationBannerGenqlSelection
    /** Current health score. */
    currentScore?: MarginDetailGenqlSelection
    /** An array of health thresholds. */
    thresholds?: MarginHealthThresholdGenqlSelection
    /** Button to take users to view account holdings. Intended for use by web clients. */
    viewHoldingsButton?: AppButtonGenqlSelection
    /** Link to take users to view account holdings. Intended for use by mobile clients. */
    viewHoldingsLink?: AppLinkGenqlSelection
    /** Link to help center article with more information about health score. */
    learnMoreLink?: AppLinkGenqlSelection
    /** Breakdown of margin balance and distance to margin call. */
    breakdown?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginAvailableToBorrowGenqlSelection{
    /** Available to borrow title. */
    title?: boolean | number
    /** Details of available to borrow - withdrawal and reinvest. */
    additionalDetails?: AvailableToBorrowDetailsGenqlSelection
    /** Current margin loan balance detail. */
    currentBalanceDetail?: MarginDetailGenqlSelection
    /** Withdrawable limit details */
    withdrawableMaxDetail?: MarginDetailGenqlSelection
    /** Reinvest limit details */
    investableMaxDetail?: MarginDetailGenqlSelection
    /** Breakdown of margin balance and impact of available to borrow. */
    breakdown?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginHealthThresholdGenqlSelection{
    /** Maximum threshold for the health score band. */
    thresholdMax?: boolean | number
    /** Minimum threshold for the health score band. Clients may only need thresholdMax to create bands. */
    thresholdMin?: boolean | number
    /** Health score text color - liquid semantic color naming used. */
    color?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginProductLandingPageGenqlSelection{
    /** The title for the Margin Product Landing Page */
    title?: boolean | number
    /** The header for the Margin Product Landing Page */
    header?: ProductAccountLandingPageHeaderGenqlSelection
    /** The account details for the Margin Product Landing Page */
    accountDetails?: TabularDataItemGenqlSelection
    /** An array of informational banners for the Margin Product Landing Page */
    banners?: InformationBannerGenqlSelection
    /** An array of the disclosures for the Margin Product Landing Page */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** The floating action button details for the Margin Product Landing Page (mobile only) */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** Margin transactions for the Margin Product Landing Page */
    transactions?: (CommonTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Copy to be displayed when there are no transactions on the Margin Product Landing Page */
    transactionsEmptyState?: CommonTransactionsEmptyStateGenqlSelection
    /** Margin landing page primary CTA (web only) */
    primaryCta?: AppNavigationItemGenqlSelection
    /** Margin landing page secondary CTA */
    secondaryCta?: AppLinkGenqlSelection
    /** Margin Health section. */
    health?: MarginHealthGenqlSelection
    /** Available to borrow section. */
    availableToBorrow?: MarginAvailableToBorrowGenqlSelection
    /** Margin loan interest. */
    loanInterest?: MarginLoanInterestGenqlSelection
    /** Text for how billing works. */
    howBillingWorks?: MarginDetailGenqlSelection
    /** CTA to view activity. (web only) */
    activityCta?: AppButtonGenqlSelection
    /** CTA to view statements. (web only) */
    statementsCta?: AppButtonGenqlSelection
    /** A list of Borrow bills. Sorted in reverse chronological order. */
    statements?: (BorrowBillConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** A history of Borrow activity. Sorted in reverse chronological order. */
    activity?: (BorrowActivityEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards?: AppCardGenqlSelection
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginDetailGenqlSelection{
    /** Label for the value. */
    label?: boolean | number
    /** Formatted value of the label. */
    labelValue?: boolean | number
    /** Numeric value of the label. */
    numericValue?: boolean | number
    /** Primary or background color of the label, if applicable - liquid semantic color naming used. */
    backgroundColor?: boolean | number
    /** Secondary or foreground color of the label, if applicable - liquid semantic color naming used. */
    foregroundColor?: boolean | number
    /** Tooltip to include additional context. */
    tooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginLoanInterestGenqlSelection{
    /** Title of the interest rate section. */
    title?: boolean | number
    /** A list of interest rate and billing details. */
    listItems?: ListItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AvailableToBorrowDetailsGenqlSelection{
    /** Title of available to borrow details. */
    title?: boolean | number
    /** Description of available to borrow details. */
    description?: RichTextContentGenqlSelection
    /** Reinvest limit detail. */
    investableMaxDetail?: MarginDetailGenqlSelection
    /** Withdrawable limit as a detail. */
    withdrawableMaxDetail?: MarginDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NetWorthGenqlSelection{
    /** The ID of this node */
    id?: boolean | number
    /** Chartable data for the net worth over time */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Chartable data for the live, most up-to-date, net worth */
    liveNetWorth?: ChartableSliceDatumGenqlSelection
    /** Tooltip for more info about net worth */
    disclosuresTooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a sliceable or portfolio slice that has chartable data. */
export interface ChartableSliceGenqlSelection{
    /** A time-series of chart data for the sliceable or portfolio slice. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is 5 years. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** The ID of this node. */
    id?: boolean | number
    on_CryptoSystemPie?: CryptoSystemPieGenqlSelection
    on_CryptoAsset?: CryptoAssetGenqlSelection
    on_Fund?: FundGenqlSelection
    on_Equity?: EquityGenqlSelection
    on_NetWorth?: NetWorthGenqlSelection
    on_ChildPortfolioSlice?: ChildPortfolioSliceGenqlSelection
    on_RootPortfolioSlice?: RootPortfolioSliceGenqlSelection
    on_SharedPie?: SharedPieGenqlSelection
    on_SystemPie?: SystemPieGenqlSelection
    on_UserPie?: UserPieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ChildPortfolioSliceGenqlSelection{
    /** The account that owns this portfolio slice. */
    account?: AccountGenqlSelection
    /** Child portfolio slice landing page content */
    investProductLandingPage?: InvestProductLandingPageGenqlSelection
    /** Information about manual orders for this slice - buying power, slice value and trade window. Value is null when manual order information is unavailable. */
    manualOrderBreakdown?: (ManualOrderBreakdownGenqlSelection & { __args?: {orderDirection?: (ManualPortfolioSliceOrderTypeEnum | null)} })
    /** The buying power for this portfolio slice - cash, margin & total. Value is null when the balance breakdown is temporarily unavailable. */
    buyingPower?: PortfolioSliceBuyingPowerGenqlSelection
    /** The portfolio slices in the ancestry path for this slice. */
    ancestors?: PortfolioSliceGenqlSelection
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is 10 years. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Children slices of this slice. */
    children?: ChildPortfolioSliceGenqlSelection
    /** Former children slices of this slice. Upon next trading window, the holdings allocated to each former slice will be reallocated. */
    deallocatedChildren?: DeallocatedChildGenqlSelection
    /** The estimated change in value that will occur at the next trading window, due to deposits, withdrawals, rebalances, or allocation changes. Postive value indicates buy, negative value indicates sell, and zero indicates no trades. Value is null when no estimate is available. */
    estimatedValueChange?: boolean | number
    /** The ID of this node. */
    id?: boolean | number
    /** Information about the investments allocated to this portfolio slice. Value is null when allocated position information is unavailable. */
    investments?: PortfolioSliceInvestmentsGenqlSelection
    /** True if this is the root portfolio slice for an account. */
    isRootSlice?: boolean | number
    /** A historical time-series of market value snapshots for this portfolio slice. */
    netCashFlows?: (ValueSnapshotGenqlSelection & { __args?: {
    /** the type of cash flows for a portfolio slice */
    filter?: (NetCashFlowFilterEnum | null), 
    /** The historical time period over which to retrieve values, anchored by the present. */
    period?: (ValueHistoryPeriodEnum | null)} })
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    orderStatus?: PortfolioSliceOrderStatusGenqlSelection
    /**
     * @deprecated Functionality has been removed. Will be removed in the future.
     * Information about a pending cash flow for this slice, if there is one. Value is null when there are no pending cash flows.
     */
    pendingCashFlow?: PortfolioSlicePendingCashFlowGenqlSelection
    /** The percent allocation of this slice, as an integer between 0-100 inclusive. */
    percentage?: boolean | number
    /** Performance information for this portfolio slice. Value is null when performance information is unavailable. The period must be large enough to accomodate the start and end dates provided, any range ending over a year ago will require a period of MAX. */
    performance?: (PortfolioSlicePerformanceGenqlSelection & { __args: {
    /** The final date included in performance calculations. */
    endDate?: (Scalars['String'] | null), 
    /** The time period over which to calculate performance, anchored by the present. */
    period: PortfolioSlicePerformancePeriodEnum, 
    /** The first date included in performance calculations, an `endDate` is also required. Note: the `period` should be large enough to encompass the start and end dates. */
    startDate?: (Scalars['String'] | null)} })
    /** The percent portion of value this slice represents relative to all investment holdings. Value is null when market data is unavailable. */
    portionOfAllValuePercent?: boolean | number
    /** The percent portion of value this slice represents relative to the parent pie value. Value is null when the parent pie value is zero, the parent pie is unallocated, or when market data is unavailable. */
    portionOfParentValuePercent?: boolean | number
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    rebalanceStatus?: PortfolioSliceRebalanceStatusGenqlSelection
    /** The root portfolio slice at the top of the ancestry path for this slice. */
    rootAncestor?: RootPortfolioSliceGenqlSelection
    /** The target percent portion of value this slice represents relative to all investment holdings. Value is null when market data is unavailable. */
    targetPortionOfAllValuePercent?: boolean | number
    /** The target value for this slice, equal to the total parent pie value times the slice percentage. Value is null when the parent pie is unallocated, or when market data is unavailable. */
    targetValue?: boolean | number
    /** The difference between the current value and the target value. Positive numbers are overweight, and negative numbers are underweight. Value is null when the parent pie is unallocated, or when market data is unavailable. */
    targetValueDiff?: boolean | number
    /** The actual value of this slice divided by its target value. Value is null when the parent pie is unallocated, or when market data is unavailable. */
    targetValuePercent?: boolean | number
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to?: SliceableGenqlSelection
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value?: PortfolioSliceValueGenqlSelection
    /**
     * @deprecated Use `chartData` instead
     * A historical time-series of market value snapshots for this portfolio slice.
     */
    valueHistory?: (ValueSnapshotGenqlSelection & { __args: {
    /** The historical time period over which to retrieve values, anchored by the present. */
    period: ValueHistoryPeriodEnum} })
    /**
     * @deprecated Superceded by `rebalanceStatus`, use that field instead.
     * If true, this slice is currently marked for rebalancing at the next trade window.
     */
    willRebalance?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a former child of a portfolio slice. */
export interface DeallocatedChildGenqlSelection{
    /** The percent portion of value this slice represents relative to all investment holdings. Value is null when market data is unavailable. */
    portionOfAllValuePercent?: boolean | number
    /** The percent portion of value this slice represents relative to the parent pie value. Value is null when the parent pie value is zero, or when market data is unavailable. */
    portionOfParentValuePercent?: boolean | number
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to?: SliceableGenqlSelection
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value?: PortfolioSliceValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieGenqlSelection{
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis?: PieAnalysisGenqlSelection
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance?: (BacktestedPiePerformanceGenqlSelection & { __args: {
    /** A preset time range option. */
    period: PieHistoricalPeriodEnum} })
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Indicates if this pie contains crypto. */
    containsCrypto?: boolean | number
    /** The time that this node was created in ISO 8601 format. */
    created?: boolean | number
    /** The description of this pie. */
    description?: boolean | number
    /** A disclosure statement for this pie. */
    disclosure?: boolean | number
    /** Experimental. Generates an edit model representation of the pie. */
    editModel?: { __args: {
    /** An output mode for the edit model. Default value is `NO_CLONE`. */
    mode?: (PieEditModelModeEnum | null)} } | boolean | number
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals?: PieFundamentalsGenqlSelection
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive?: boolean | number
    /** True if the pie belongs to the viewing user. */
    isOwnPie?: boolean | number
    /** The time that this node was last modified in ISO 8601 format. */
    modified?: boolean | number
    /** The name of this pie. */
    name?: boolean | number
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** The list of slices that belong to this pie. */
    slices?: SliceGenqlSelection
    /** A summary description of the slices in this pie. */
    summary?: { __args: {
    /** When provided and true, the string will include Markdown formatting. Currently only includes `**`. */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    on_CryptoSystemPie?: CryptoSystemPieGenqlSelection
    on_SharedPie?: SharedPieGenqlSelection
    on_SystemPie?: SystemPieGenqlSelection
    on_UserPie?: UserPieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RootPortfolioSliceGenqlSelection{
    /** The account that owns this portfolio slice. */
    account?: AccountGenqlSelection
    /** Root portfolio slice landing page content */
    investProductLandingPage?: InvestProductLandingPageGenqlSelection
    /** Information about manual orders for this slice - buying power, slice value and trade window. Value is null when manual order information is unavailable. */
    manualOrderBreakdown?: (ManualOrderBreakdownGenqlSelection & { __args?: {orderDirection?: (ManualPortfolioSliceOrderTypeEnum | null)} })
    /** The buying power for this portfolio slice - cash, margin & total. Value is null when the balance breakdown is temporarily unavailable. */
    buyingPower?: PortfolioSliceBuyingPowerGenqlSelection
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is 10 years. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Children slices of this slice. */
    children?: ChildPortfolioSliceGenqlSelection
    /** Former children slices of this slice. Upon next trading window, the holdings allocated to each former slice will be reallocated. */
    deallocatedChildren?: DeallocatedChildGenqlSelection
    /** The ID of this node. */
    id?: boolean | number
    /** Information about the investments allocated to this portfolio slice. Value is null when allocated position information is unavailable. */
    investments?: PortfolioSliceInvestmentsGenqlSelection
    /** True if this is the root portfolio slice for an account. */
    isRootSlice?: boolean | number
    /** A historical time-series of portfolio slice cash flows */
    netCashFlows?: (ValueSnapshotGenqlSelection & { __args?: {
    /** the type of cash flows for a portfolio slice */
    filter?: (NetCashFlowFilterEnum | null), 
    /** The historical time period over which to retrieve values, anchored by the present. */
    period?: (ValueHistoryPeriodEnum | null)} })
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    orderStatus?: PortfolioSliceOrderStatusGenqlSelection
    /**
     * @deprecated Functionality has been removed. Will be removed in the future.
     * Information about a pending cash flow for this slice, if there is one. Value is null when there are no pending cash flows.
     */
    pendingCashFlow?: PortfolioSlicePendingCashFlowGenqlSelection
    /** Performance information for this portfolio slice. Value is null when performance information is unavailable. The period must be large enough to accomodate the start and end dates provided, any range ending over a year ago will require a period of MAX. */
    performance?: (PortfolioSlicePerformanceGenqlSelection & { __args: {
    /** The final date included in performance calculations. */
    endDate?: (Scalars['String'] | null), 
    /** The time period over which to calculate performance, anchored by the present. */
    period: PortfolioSlicePerformancePeriodEnum, 
    /** The first date included in performance calculations, an `endDate` is also required. Note: the `period` should be large enough to encompass the start and end dates. */
    startDate?: (Scalars['String'] | null)} })
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    rebalanceStatus?: PortfolioSliceRebalanceStatusGenqlSelection
    /** Points to the pie that composes this slice. */
    to?: UserPieGenqlSelection
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value?: PortfolioSliceValueGenqlSelection
    /**
     * @deprecated Use `chartData` instead
     * A historical time-series of market value snapshots for this portfolio slice.
     */
    valueHistory?: (ValueSnapshotGenqlSelection & { __args: {
    /** The historical time period over which to retrieve values, anchored by the present. */
    period: ValueHistoryPeriodEnum} })
    /**
     * @deprecated Superceded by `rebalanceStatus`, use that field instead.
     * If true, this slice is currently marked for rebalancing at the next trade window.
     */
    willRebalance?: boolean | number
    /** The stringified model for the slice */
    stringifiedModel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SharedPieGenqlSelection{
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis?: PieAnalysisGenqlSelection
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance?: (BacktestedPiePerformanceGenqlSelection & { __args: {
    /** A preset time range option. */
    period: PieHistoricalPeriodEnum} })
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Indicates if this pie contains crypto. */
    containsCrypto?: boolean | number
    /** The time that this node was created in ISO 8601 format. */
    created?: boolean | number
    /** The description of this pie. */
    description?: boolean | number
    /** A disclosure statement for this pie. */
    disclosure?: boolean | number
    /** Experimental. Generates an edit model representation of the pie. */
    editModel?: { __args: {
    /** An output mode for the edit model. Default value is `NO_CLONE`. */
    mode?: (PieEditModelModeEnum | null)} } | boolean | number
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals?: PieFundamentalsGenqlSelection
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** Indicates if the sliceable is currently active and available to be added to pies, and does not contain any delisted or inactive securities. */
    isActive?: boolean | number
    /** True if the pie belongs to the viewing user. */
    isOwnPie?: boolean | number
    /** The time that this node was last modified in ISO 8601 format. */
    modified?: boolean | number
    /** The name of the sliceable. */
    name?: boolean | number
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** The type of the sliceable. */
    type?: boolean | number
    /** The list of slices that belong to this pie. */
    slices?: SliceGenqlSelection
    /** A summary description of the slices in this pie. */
    summary?: { __args: {
    /** When provided and true, the string will include Markdown formatting. Currently only includes `**`. */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SliceGenqlSelection{
    /** The percent allocation of this slice, as an integer between 0-100 inclusive. */
    percentage?: boolean | number
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to?: SliceableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SliceableGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** Indicates if the sliceable is currently active and available to be added to pies. */
    isActive?: boolean | number
    /** The name of the sliceable. */
    name?: boolean | number
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** The type of the sliceable. */
    type?: boolean | number
    on_CryptoSystemPie?: CryptoSystemPieGenqlSelection
    on_CryptoAsset?: CryptoAssetGenqlSelection
    on_Fund?: FundGenqlSelection
    on_Equity?: EquityGenqlSelection
    on_SharedPie?: SharedPieGenqlSelection
    on_SystemPie?: SystemPieGenqlSelection
    on_UserPie?: UserPieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SliceableConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SliceableEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The approximate total number of edges in the connection. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SliceableEdgeGenqlSelection{
    /** A cursor for use in pagination */
    cursor?: boolean | number
    /** A list of search match highlights. */
    highlights?: SliceableSearchHighlightGenqlSelection
    /** The item at the end of the edge */
    node?: SliceableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SystemPieGenqlSelection{
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis?: PieAnalysisGenqlSelection
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance?: (BacktestedPiePerformanceGenqlSelection & { __args: {
    /** A preset time range option. */
    period: PieHistoricalPeriodEnum} })
    /** The category path for this system pie in the category hierarchy. An empty list means that the system pie is currently uncategorized. */
    categorization?: boolean | number
    /** Details about each category in the category path. */
    categorizationDetails?: SystemPieCategoryDetailsGenqlSelection
    /**
     * @deprecated Obsolete and will eventually be removed. Use the hierarchical `categorization` field instead.
     * The categorization of this pie.
     */
    category?: boolean | number
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Indicates if this pie contains crypto. */
    containsCrypto?: boolean | number
    /** The time that this node was created in ISO 8601 format. */
    created?: boolean | number
    /** The description of this pie. */
    description?: boolean | number
    /** A disclosure statement for this pie. */
    disclosure?: boolean | number
    /** Experimental. Generates an edit model representation of the pie. */
    editModel?: { __args: {
    /** An output mode for the edit model. Default value is `NO_CLONE`. */
    mode?: (PieEditModelModeEnum | null)} } | boolean | number
    /** If available, a URL to a feature image that represents the pie. The best-fitting image to the requested width/height constraints will be returned, but specific dimensions are not guaranteed. */
    featureUrl?: { __args: {
    /** Requested minimum height for the image. Default is `200`. */
    height?: (Scalars['Int'] | null), 
    /** Requested minimum width for the image. Default is `500`. */
    width?: (Scalars['Int'] | null)} } | boolean | number
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals?: PieFundamentalsGenqlSelection
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of historical performance for the system pie.
     */
    historicalPerformance?: (HistoricalPiePerformanceGenqlSelection & { __args?: {
    /** An interval length over which to aggregate the performance data. Default is days. */
    interval?: (TimeIntervalEnum | null), 
    /** A preset time range option. Supercedes `range` if both are specified. */
    period?: (PieHistoricalPeriodEnum | null), 
    /** A time range over which to retrieve historical performance. Default is one month. */
    range?: (TimeRangeInput | null)} })
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive?: boolean | number
    /** True if the pie belongs to the viewing user. */
    isOwnPie?: boolean | number
    /** An identifier for this system pie that is stable across development environments. */
    key?: boolean | number
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl?: boolean | number
    /** A list of methodology details used to create this pie. Value will be null when no information is available. */
    methodology?: boolean | number
    /** The time that this node was last modified in ISO 8601 format. */
    modified?: boolean | number
    /** The name of this pie. */
    name?: boolean | number
    /** Performance information for the system pie. */
    performance?: PiePerformanceGenqlSelection
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /**
     * @deprecated Superceded by the `riskGrade` field on `PiePerformance`. This value will always be null.
     * A numeric risk grading for this pie, from 1-5 (from least to most risky). Value will be null if unavailble.
     */
    riskGrade?: boolean | number
    /** The list of slices that belong to this pie. */
    slices?: SliceGenqlSelection
    /** The current status of the system pie. */
    status?: boolean | number
    /** A summary description of the slices in this pie. */
    summary?: { __args: {
    /** When provided and true, the string will include Markdown formatting. Currently only includes `**`. */
    includeMarkdown?: (Scalars['Boolean'] | null), includeHtml?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    /** A description of the frequency at which the composition of this pie is updated. Value will be null when no information is available. */
    updateFrequency?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SystemPieScreenerConnectionGenqlSelection{
    /** The current hierarchical category level. */
    currentCategory?: SystemPieSubCategoryGenqlSelection
    /** A list of edges. */
    edges?: SystemPieScreenerEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The next hierarchical level of sub-categories. */
    subCategories?: SystemPieSubCategoryGenqlSelection
    /** The approximate total number of edges in the connection. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SystemPieScreenerEdgeGenqlSelection{
    /** A cursor for use in pagination */
    cursor?: boolean | number
    /** The item at the end of the edge */
    node?: SystemPieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection sub-category. */
export interface SystemPieSubCategoryGenqlSelection{
    /** The category path in the category hierarchy. */
    category?: boolean | number
    /** Details about the system pie sub-category. */
    categoryDetails?: SystemPieCategoryDetailsGenqlSelection
    /** The approximate total number of edges within the sub-category. */
    count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sort option. */
export interface SystemPieSortOptionInput {
/** A sort direction. */
direction: SortDirectionEnum,
/** A sort type. */
type: SystemPieSortTypeEnum}


/** A limit option. */
export interface SystemPieLimitOptionInput {
/** Whether the limit should be inclusive of the minimum and/or maximum values. Default is true. */
inclusive?: (Scalars['Boolean'] | null),
/** A maximum limit. */
max?: (Scalars['Float'] | null),
/** A minimum limit. */
min?: (Scalars['Float'] | null),
/** A limit type. */
type: SystemPieLimitTypeEnum}


/** A time length. */
export interface TimeLengthInput {
/** An amount of time in the unit specified. */
amount: Scalars['Int'],
/** A time length unit. */
unit: TimeLengthUnitEnum}


/** A time range. */
export interface TimeRangeInput {
/** An end date to anchor the end of the range. Must be in the format `YYYY-MM-DD`. */
end?: (Scalars['String'] | null),
/** Whether the range should be inclusive of the start/end dates. Default is true. */
inclusive?: (Scalars['Boolean'] | null),
/** A fixed length of time for the range. Ignored if both `start` and `end` are also specified. */
length?: (TimeLengthInput | null),
/** A start date to anchor the beginning of the range. Must be in the format `YYYY-MM-DD`. */
start?: (Scalars['String'] | null)}

export interface UserPieGenqlSelection{
    /** Analysis on the composition of this pie. Value is null if the pie has greater than 500 securities, or when analysis is unavilable. */
    analysis?: PieAnalysisGenqlSelection
    /** A list of ancestry paths for this pie. */
    ancestors?: UserPieGenqlSelection
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * A time-series of backtested performance for the pie. Value is null if no backtested performance is available.
     */
    backtestedPerformance?: (BacktestedPiePerformanceGenqlSelection & { __args: {
    /** A preset time range option. */
    period: PieHistoricalPeriodEnum} })
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Indicates if this pie contains crypto. */
    containsCrypto?: boolean | number
    /** The time that this node was created in ISO 8601 format. */
    created?: boolean | number
    /** The description of this pie. */
    description?: boolean | number
    /** A disclosure statement for this pie. */
    disclosure?: boolean | number
    /** Experimental. Generates an edit model representation of the pie. */
    editModel?: { __args: {
    /** An output mode for the edit model. Default value is `NO_CLONE`. */
    mode?: (PieEditModelModeEnum | null)} } | boolean | number
    /**
     * @deprecated Superceded by the `analysis` field, use that instead.
     * Aggregated fundamentals data for the pie. Value is null when fundamentals data is unavailable.
     */
    fundamentals?: PieFundamentalsGenqlSelection
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** Indicates if this pie is currently active and available to be added to other pies. */
    isActive?: boolean | number
    /**
     * @deprecated Deprecated in favor of `isActive`. Use that field instead.
     * True if the pie is currently archived.
     */
    isArchived?: boolean | number
    /** True if the pie belongs to the viewing user. */
    isOwnPie?: boolean | number
    /** The time that this node was last modified in ISO 8601 format. */
    modified?: boolean | number
    /** The name of this pie. */
    name?: boolean | number
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** Experimental. Generates an share token to be used for cloning this pie to another user. Descriptions are not included. Value is null when the pie is not eligable for tokenization. */
    shareToken?: boolean | number
    /** The list of slices that belong to this pie. */
    slices?: SliceGenqlSelection
    /** A summary description of the slices in this pie. */
    summary?: { __args: {
    /** When provided and true, the string will include Markdown formatting. Currently only includes `**`. */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserPieConnectionGenqlSelection{
    /** A list of edges. */
    edges?: UserPieEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserPieEdgeGenqlSelection{
    /** A cursor for use in pagination */
    cursor?: boolean | number
    /** The item at the end of the edge */
    node?: UserPieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PiePerformanceGenqlSelection{
    /** The date on which the performance figures were calculated. */
    asOfDate?: boolean | number
    /** The five-year total return. */
    returnFiveYearPercent?: boolean | number
    /** The one-month total return. */
    returnOneMonthPercent?: boolean | number
    /** The one-year total return. */
    returnOneYearPercent?: boolean | number
    /** The three-year total return. */
    returnThreeYearPercent?: boolean | number
    /** The year-to-date total return. */
    returnYearToDatePercent?: boolean | number
    /** A numeric risk grading for this pie, from 1-5 (from least to most risky). Value will be null if unavailble. */
    riskGrade?: boolean | number
    /** A risk level value for this pie, which corresponds to the numeric risk grade. Value will be null if unavailble. */
    riskLevel?: boolean | number
    /** The volatility of the pie. */
    volatility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** UI Information for Plus specific pages */
    pages?: PlusPagesGenqlSelection
    /** True if a user is eligible to activate a Plus trial membership. */
    isEligibleForPlusTrial?: boolean | number
    /** When `hasPlus` is true, information about the user's membership. */
    membershipStatus?: PlusMembershipStatusGenqlSelection
    /** The Plus benefits that the user has taken advantage of */
    benefitsUsed?: PlusBenefitsUsedGenqlSelection
    /** The plus benefits that the user has taken advantage of. To be displayed on renewal intercept page. */
    benefitsUsedIntercept?: PlusBenefitsUsedForInterceptGenqlSelection
    /** The current list of all plus benefits. */
    benefitsAll?: PlusBenefitsAllGenqlSelection
    /** A list of highlighted plus benefits. */
    highlightedBenefits?: PlusBenefitStandardGenqlSelection
    /** Details about the user's Plus billing information. */
    billing?: PlusBillingGenqlSelection
    /** Plus information for use during onboarding. */
    onboarding?: PlusOnboardingGenqlSelection
    /** Borrow rate discount percent. Difference between Plus and Basic borrow rate percents */
    borrowRateDiscountPercent?: boolean | number
    /** Spend Checking interest rate percent description. */
    spendInterestRatePercentShortDescription?: boolean | number
    /** Spend Checking cash back rate percent. */
    spendCashBackRatePercent?: boolean | number
    /** Information about pricing for new Plus members. */
    newMembershipPricing?: PlusNewMembershipPricingGenqlSelection
    /** Information about renewal pricing for exisiting Plus members. */
    renewalMembershipPricing?: PlusMembershipRenewalPricingGenqlSelection
    /** True if the user has M1 Plus benefits. Value is null when unknown. */
    hasPlus?: boolean | number
    /**
     * @deprecated Use `PlusPages.upsellPage` instead
     * The content for the upsell page
     */
    upsellPage?: (PlusUpsellPageGenqlSelection & { __args?: {product?: (TransferParticipantTypeEnum | null)} })
    /**
     * @deprecated Not used in clients
     * True if the user has previously had M1 Plus benefits.
     */
    hasExpiredPlusSubscription?: boolean | number
    /**
     * @deprecated Not used in clients
     * True if the user has an active Plus membership or has previously had M1 Plus benefits.
     */
    hasActiveOrExpiredPlusSubscription?: boolean | number
    /**
     * @deprecated Grace Period is being removed
     * True if the user is currently in the grace period after Plus membership has expired.
     */
    isInPlusRenewalGracePeriod?: boolean | number
    /**
     * @deprecated Should not be used in clients - may have been used for 5/23/23 Plus Pricing Changes release
     * The current list of all plus benefits.
     */
    basicBenefitsAll?: BasicBenefitsAllGenqlSelection
    /**
     * @deprecated Not used in clients
     * The minimum account value required for trading in multiple windows.
     */
    investMinAccountValueForMultipleDailyWindows?: boolean | number
    /**
     * @deprecated Not used in clients
     * Spend Checking interest rate percent disclaimer.
     */
    spendInterestRatePercentDisclaimer?: boolean | number
    /**
     * @deprecated Not used in clients (kinda hard to tell but it's not actually used in web, just the description)
     * Spend Checking interest rate percent.
     */
    spendInterestRatePercent?: boolean | number
    /**
     * @deprecated Not used in clients
     * Spend Checking interest rate percent disclaimer tooltip.
     */
    spendInterestRatePercentDisclaimerTooltipCopy?: boolean | number
    /**
     * @deprecated Not used in clients
     * Spend Checking cash back rate percent description.
     */
    spendCashBackRatePercentShortDescription?: boolean | number
    /**
     * @deprecated Not used in clients
     * Spend Checking cash back rate percent disclaimer.
     */
    spendCashBackRatePercentDisclaimer?: boolean | number
    /**
     * @deprecated Not used in clients
     * Multiplier for our Spend Checking interest rate vs national average.
     */
    spendInterestRateNationalAverageMultiplier?: boolean | number
    /**
     * @deprecated Not used in clients
     * Initial state for the Plus benefit calculator.
     */
    benefitCalculatorInitialState?: PlusBenefitCalculatorInitialStateGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for Plus Marketing screen placement.
     */
    plusPromotionForScreen?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated Not used in clients
     * An optional Plus promotional message for Plus Billing screen.
     */
    plusPromotionForBillingScreen?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated Not used in clients
     * An optional Plus promotional message for Plus Membershipscreen.
     */
    plusPromotionForMembershipScreen?: PlusPromotionalMessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusPagesGenqlSelection{
    /** Plus information for the edit payment method screen */
    editPaymentMethodPage?: PlusEditPaymentMethodPageGenqlSelection
    /**
     * @deprecated Plus has been sunsetted and upsells removed
     * The content for the upsell page
     */
    upsellPage?: (PlusUpsellPageGenqlSelection & { __args?: {product?: (TransferParticipantTypeEnum | null)} })
    /** The main plus membership page with information about Plus */
    plusMembershipPage?: PlusMembershipPageGenqlSelection
    /** The confirmation page for joining Plus */
    trialConfirmationPage?: PlusTrialConfirmationPageGenqlSelection
    /** The view all benefits screen */
    viewAllBenefitsScreen?: PlusViewAllBenefitsScreenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusTrialConfirmationPageGenqlSelection{
    /** The page title of the join Plus page */
    pageTitle?: boolean | number
    /** The icon to be displayed at top of the join confirmation */
    icon?: AppImageGenqlSelection
    /** The title of subscription amount */
    title?: boolean | number
    /** The subtitle of renewal duration */
    subtitle?: boolean | number
    /** The disclaimer explaining plus billing */
    disclaimer?: boolean | number
    /** The cta for confirming the Plus memebership */
    cta?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageGenqlSelection{
    /** The header of the membership page for non-plus users */
    marketingHeader?: PlusMembershipPageMarketingHeaderGenqlSelection
    /** The header of the membership page for plus users */
    header?: PlusMembershipPageHeaderGenqlSelection
    /** The section with the options for payment for plus */
    paymentOptionsSection?: PlusMembershipPagePaymentOptionsSectionGenqlSelection
    /** The section of the Plus Membership Page with membership details */
    membershipDetailsSection?: PlusMembershipPageMembershipDetailsSectionGenqlSelection
    /** The section of Plus Membership that lists the plus billing activity */
    billingHistorySection?: PlusMembershipPageBillingHistorySectionGenqlSelection
    /** The section of the plus membership page that lists benefits */
    benefitsSection?: PlusMembershipPageBenefitsSectionGenqlSelection
    /** A testimonial about plus */
    testimonial?: TestimonialGenqlSelection
    /** View referrals terms link */
    termsLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TestimonialGenqlSelection{
    /** A quote by the person giving the testimonial */
    quote?: boolean | number
    /** The name or description of the person giving the testimonial */
    witness?: boolean | number
    /** An optional disclaimer to accompany the testimonial */
    disclaimer?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageMarketingHeaderGenqlSelection{
    /** The title for the marketing header */
    title?: boolean | number
    /** The illustration to be displayed in the header */
    illustration?: AppImageGenqlSelection
    /** cta button text */
    ctaLabel?: boolean | number
    /** Disclosure text for the m1 plus terms */
    disclosureText?: RichTextContentGenqlSelection
    /** The upsell for why the user should sign up for plus */
    membershipUpsell?: PlusMembershipDetailsUpsellGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageHeaderGenqlSelection{
    /** Title copy */
    title?: boolean | number
    /** Header icon */
    icon?: AppImageGenqlSelection
    /** Header subtitles */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPagePaymentOptionsSectionGenqlSelection{
    /** Header for flexible payment options */
    header?: boolean | number
    /** Options for plus payment on the plus membership page */
    options?: PlusMembershipPagePaymentOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPagePaymentOptionGenqlSelection{
    /** primary string of the payment option */
    primary?: boolean | number
    /** optional additional string of payment option */
    secondary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageMembershipDetailsSectionGenqlSelection{
    /** The header of the Plus Membership Details Section */
    header?: boolean | number
    /** An array of details about the user's plus membership */
    details?: PlusMembershipPageMembershipDetailGenqlSelection
    /** A link to the edit payment method page */
    editLink?: AppLinkGenqlSelection
    /** The icon for the edit link */
    editLinkIcon?: AppImageGenqlSelection
    /** The label for the auto-renew toggle - clients should not show the label OR switch if this is null */
    autoRenewLabel?: boolean | number
    /** A paragraph of content that can provide context to the user's plus membership */
    content?: boolean | number
    /** A list of disclosures for Plus */
    disclosures?: AppDisclosureLinkGenqlSelection
    /** A list of links for Plus */
    links?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageMembershipDetailGenqlSelection{
    /** The label for the detail */
    label?: boolean | number
    /** The value for the detail */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageBillingHistorySectionGenqlSelection{
    /** Billing history table title */
    title?: boolean | number
    /** Information about the user's Plus membership billing activity. */
    billingActivity?: (PlusBillHistoryEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageBenefitsSectionGenqlSelection{
    /** The optional icon for the benefits section */
    icon?: AppImageGenqlSelection
    /** The title of the benefits section */
    title?: boolean | number
    /** The optional subtitle of the benefits section */
    subtitle?: boolean | number
    /** Copy for the button that routes to view all benefits screen */
    buttonCopy?: boolean | number
    /** The list of benefits for plus depending on the plus status of the user and what benefits they've used */
    benefitsList?: PlusMembershipPageBenefitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusViewAllBenefitsScreenGenqlSelection{
    /** The title of the view all benefits screen */
    title?: boolean | number
    /** An array of subtitles */
    subtitle?: boolean | number
    /** Icon shown above the subtitles */
    icon?: AppImageGenqlSelection
    /** Copy for the button that routes back to plus details page */
    buttonCopy?: boolean | number
    /** The list of the 4 standard/core plus benefits */
    benefitsList?: PlusMembershipPageBenefitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusMembershipPageBenefitGenqlSelection{
    /** The title of the benefit */
    title?: boolean | number
    /** The optional subtitle of the benefit */
    subtitle?: boolean | number
    /** The optional icon for the benefit */
    icon?: AppImageGenqlSelection
    /** The description of the benefit */
    description?: boolean | number
    /** The optional tooltip of the benefit shown beside the title */
    tooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusEditPaymentMethodPageGenqlSelection{
    /** The header at top of edit payment method screen */
    header?: boolean | number
    /** The title for the edit payment method screen */
    title?: boolean | number
    /** The subtitle of the edit payment method screen */
    subtitle?: boolean | number
    /** The available billing cycles for the user */
    billingCycles?: PlusEditPaymentMethodPageBillingCyclesGenqlSelection
    /** The payment methods section with content describing the payment methods available to the user */
    paymentMethods?: PlusEditPaymentMethodPagePaymentMethodsGenqlSelection
    /** The pill next to the default payment method on the edit payment method screen */
    selectedPaymentMethodPill?: AppPillGenqlSelection
    /** The disclosures for the edit payment method screen */
    disclosures?: AppDisclosureLinkGenqlSelection
    /** The confimation cta on the submit button for edit payment method screen */
    confirmationCta?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusEditPaymentMethodPageBillingCyclesGenqlSelection{
    /** The header of the billing cycle options */
    header?: boolean | number
    /** The options of the billing cycle */
    cycles?: PlusEditPaymentMethodPageBillingCycleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusEditPaymentMethodPageBillingCycleGenqlSelection{
    /** The title of the billing cycle */
    title?: boolean | number
    /** The subtitle of the billing cycle */
    subtitle?: boolean | number
    /** The pill text for the billing cycle */
    pill?: AppPillGenqlSelection
    /** Whether the billing cycle is default or not */
    isDefault?: boolean | number
    /** The enum type for the billing cycle */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusEditPaymentMethodPagePaymentMethodsGenqlSelection{
    /** The header for the payment methods section */
    header?: boolean | number
    /** The payment methods for the user */
    methods?: PlusEditPaymentMethodPagePaymentMethodGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusEditPaymentMethodPagePaymentMethodGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The title of the payment method */
    title?: boolean | number
    /** The subtitle of the payment method */
    subtitle?: boolean | number
    /** The icon for the payment method */
    icon?: AppImageGenqlSelection
    /** Whether the payment method is default or not */
    isDefault?: boolean | number
    /** The enum type for the payment method */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusUpsellPageGenqlSelection{
    /** The title of the upsell page */
    title?: boolean | number
    /** Terms for plus */
    terms?: RichTextContentGenqlSelection
    /** The experience choices for plus */
    experiences?: PlusUpsellExperienceGenqlSelection
    /** The label for the CTA button */
    ctaLabel?: boolean | number
    /** The illustration for the page */
    illustration?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusUpsellExperienceGenqlSelection{
    /** An enum indicating the type of experience */
    type?: boolean | number
    /** The name that describes the plus experience */
    title?: boolean | number
    /** The icon for the title of the plus experience */
    titleIcon?: AppImageGenqlSelection
    /** The subtitle for the plus experience */
    subtitle?: boolean | number
    /**
     * @deprecated use `subtitleTooltipV2` instead
     * The tooltip for the subtitle
     */
    subtitleTooltip?: boolean | number
    /** The tooltip for the subtitle - uses the new tooltip component */
    subtitleTooltipV2?: AppTooltipGenqlSelection
    /** The title for the list of benefits for the plus experience */
    benefitsTitle?: boolean | number
    /** The list of benefits for the plus experience */
    benefits?: PlusBenefitStandardGenqlSelection
    /** A link to more information about the plus benefits */
    benefitsLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about billing for Plus memberships. */
export interface PlusBillingGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Information about the user's Plus membership billing activity. */
    billingActivity?: (PlusBillHistoryEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Information about all payment methods for on platform billing. */
    paymentMethodOptionsOnPlatform?: PlusBillingPaymentMethodOptionsGenqlSelection
    /** The disclaimer for plus payment option to auto-renew. */
    disclaimer?: PlusBillingDisclaimerGenqlSelection
    /** An array of AppLinks with links for support articles. */
    supportLinks?: AppLinkGenqlSelection
    /** A string to display auto renewal disclaimer text on clients */
    autoRenewalDisclaimerSubHeader?: boolean | number
    /** A string to display one time payment disclaimer text on clients */
    oneTimePaymentDisclaimer?: boolean | number
    /** a string to display one time payment cta text on clients */
    oneTimePaymentCTAText?: boolean | number
    /**
     * @deprecated This is from before we could handle on platform billing. Use `PlusBilling.paymentMethodOptionsOnPlatform` instead
     * Information about all payment methods.
     */
    paymentMethodOptions?: PlusPaymentMethodOptionsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about Plus for use during the onboarding funnel. */
export interface PlusOnboardingGenqlSelection{
    /**
     * @deprecated Not used in clients, use `Plus.benefitsAll` instead
     * A list of Plus only benefits.
     */
    plusBenefitsList?: PlusBenefitForOnboardingGenqlSelection
    /** Invest product plus upsell */
    investPlusUpsell?: PlusOnboardingUpsellGenqlSelection
    /**
     * @deprecated Spend is being deprecated
     * Invest product plus upsell
     */
    spendPlusUpsell?: PlusOnboardingUpsellGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusOnboardingUpsellGenqlSelection{
    /** Plus Upsell Header */
    plusUpsellHeader?: PlusUpsellHeaderGenqlSelection
    /** Plus Upsell Title */
    plusUpsellTitle?: PlusUpsellTitleGenqlSelection
    /** List of Plus product benefits */
    plusUpsellBenefits?: PlusUpsellBenefitGenqlSelection
    /** Upsell disclaimer */
    plusUpsellDisclaimer?: boolean | number
    /** Plus Trial Disclaimer */
    plusUpsellTrialDisclaimer?: PlusUpsellTrialDisclaimerGenqlSelection
    /** Plus Trial link */
    plusTrialEnrollmentText?: boolean | number
    /** Plus skip trial link */
    skipPlusTrialEnrollmentText?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Plus Upsell Header text and tooltip */
export interface PlusUpsellHeaderGenqlSelection{
    header?: boolean | number
    tooltip?: PlusBenefitTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Plus Upsell title and icon */
export interface PlusUpsellTitleGenqlSelection{
    title?: boolean | number
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of product benefits to be shown during Plus onboarding. */
export interface PlusUpsellBenefitGenqlSelection{
    /** A description of product plus benenfit */
    description?: boolean | number
    /** Benefit available without M1 Plus */
    standardBenefit?: boolean | number
    /** Benefit available with M1 Plus */
    plusBenefit?: boolean | number
    /** Benefit accessibility text available without M1 Plus */
    standardBenefitLabel?: boolean | number
    /** Benefit accessibility text available with M1 Plus */
    plusBenefitLabel?: boolean | number
    /** Benefit Tooltip */
    tooltip?: PlusBenefitTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Trial disclaimer with link */
export interface PlusUpsellTrialDisclaimerGenqlSelection{
    /** Trial disclaimer text */
    text?: boolean | number
    /** Trial disclaimer link */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payment method for new on platform billing. */
export interface PlusBillingPaymentMethodGenqlSelection{
    /** The id for this node. */
    id?: boolean | number
    /** Label describing the payment method. */
    label?: boolean | number
    /** Account value or account information depending on the type. */
    description?: boolean | number
    /** AppPill that displays for user to easily see the account's status. */
    status?: AppPillGenqlSelection
    /** The icon that will be rendered on the clients. */
    icon?: AppImageGenqlSelection
    /**
     * @deprecated Credit Card payments are no longer supported. Will return false
     * value for clients to check if payment method is Braintree
     */
    isBraintreePayment?: boolean | number
    /** A warning message that shows up on the confirm payment screen. */
    warning?: AppInformationalMessageCardGenqlSelection
    /**
     * @deprecated One Time payments are no longer supported. Will return false
     * When false, the account balance / cash balance are below the price to renew Plus
     */
    isOneTimePaymentMethodValid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the various on platform billing options */
export interface PlusBillingPaymentMethodOptionsGenqlSelection{
    /** Returns the current payment method for the plus subscription. */
    currentPaymentMethod?: PlusBillingPaymentMethodGenqlSelection
    /** Returns all available payment methods for plus subscription. */
    allPaymentOptions?: PlusBillingPaymentMethodGenqlSelection
    /** Message to show if the user has no available payment methods */
    paymentOptionsUnavailableMessage?: AppInformationalMessageCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The disclaimer and tooltip for auto-renew plus payment. */
export interface PlusBillingDisclaimerGenqlSelection{
    /** The message shown to the user for the disclaimer. */
    text?: boolean | number
    /** The tooltip for the disclaimer to display. */
    tooltip?: PlusBillingDisclaimerTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusBillingDisclaimerTooltipGenqlSelection{
    /** The icon entry point to the disclaimer tooltip. */
    icon?: AppImageGenqlSelection
    /** An array of strings to be parsed by the client */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusBillHistoryEntryConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: PlusBillHistoryEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlusBillHistoryEntryEdgeGenqlSelection{
    cursor?: boolean | number
    node?: PlusBillHistoryEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a Plus billing period that has ended. */
export interface PlusBillHistoryEntryGenqlSelection{
    /** A description about the bill. */
    title?: boolean | number
    /** Information about the payment method that was charged. */
    subTitle?: boolean | number
    /** A "pill" communicating payment status for this entry. */
    statusPill?: AppPillGenqlSelection
    /** The date on which the transaction was executed. */
    chargeDate?: boolean | number
    /** The total amount charged. */
    amountDescription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of copy and tooltip explaining the free trial period and membership details. */
export interface PlusMembershipDetailsUpsellGenqlSelection{
    /** Copy for the title. */
    title?: boolean | number
    /**
     * @deprecated use `tooltipV2` instead
     * A tooltip description of plus membership.
     */
    tooltip?: PlusBenefitTooltipGenqlSelection
    /** The tooltip description of plus membership - uses the new AppTooltip component */
    tooltipV2?: AppTooltipGenqlSelection
    /** Copy for the subtitle. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Array to render a list of all plus benefits */
export interface PlusBenefitsAllGenqlSelection{
    /** An Array of PlusBenefitStandard objects. */
    benefits?: PlusBenefitStandardGenqlSelection
    /** One plus benefit to be highlighted in designs. */
    highlightedBenefit?: (PlusBenefitStandardGenqlSelection & { __args?: {
    /**
     * When provided and true, the string will include Markdown formatting.
     * Currently only includes `**`.
     */
    includeMarkdown?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object to render a list of the plus benefits used by the user */
export interface PlusBenefitsUsedGenqlSelection{
    /** The title text for container showing benefits. */
    title?: boolean | number
    /** The text for the button to view all plus benefits. */
    viewAllButton?: boolean | number
    /** An Array of PlusBenefit objects. */
    benefits?: PlusBenefitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object showing plus benefits used to be displayed when a user is turning off auto-renew. */
export interface PlusBenefitsUsedForInterceptGenqlSelection{
    /** The title for the modal showing the benefits. */
    title?: boolean | number
    /** The text for the modal showing all benefits. */
    ctaText?: boolean | number
    /**
     * @deprecated Use `ctaText` instead.
     * The subtitle with a link for the modal showing the benefits.
     */
    subtitle?: AppLinkGenqlSelection
    /** An array of PlusBenefits that the user has taken advantage of. */
    benefits?: PlusBenefitGenqlSelection
    /** The text to be rendered on the primary action button. */
    primaryButton?: boolean | number
    /** The text to be rendered on the secondary action button. */
    secondaryButton?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Benefits of plus membership to display on renewals page */
export interface PlusBenefitGenqlSelection{
    /** The plus benefit title */
    title?: boolean | number
    /** The benefit offered */
    benefit?: boolean | number
    /** The name of the benefit being used */
    icon?: AppImageGenqlSelection
    /** The subtext displayed for this PlusBenefit */
    subtext?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Standard Benefits of plus membership to display */
export interface PlusBenefitStandardGenqlSelection{
    /** The plus benefit title */
    title?: boolean | number
    /** The benefit offered */
    benefit?: boolean | number
    /** The icon of the standard benefit */
    icon?: AppImageGenqlSelection
    /**
     * @deprecated use `tooltipV2` instead
     * The tooltip of the standard benefit
     */
    tooltip?: PlusBenefitTooltipGenqlSelection
    /** The tooltip of the standard benefit - uses the new AppTooltip component */
    tooltipV2?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A reference to a tooltip for display on a plus benefit. */
export interface PlusBenefitTooltipGenqlSelection{
    /** The icon entry point to the plus benefit tooltip */
    icon?: AppImageGenqlSelection
    /** An array of strings to be parsed by the client */
    text?: boolean | number
    /** An link to display as the tooltip CTA */
    appLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about pricing for Plus renewals. */
export interface PlusMembershipRenewalPricingGenqlSelection{
    /**
     * @deprecated Credit card payments are deprecated.
     * A description of the membership price billing agreement.
     */
    priceAgreement?: boolean | number
    /** A description of the membership price. */
    priceTeaser?: boolean | number
    /** A long description of the membership price. */
    priceDescription?: boolean | number
    /** A long description of the renewal date/price. */
    renewalDescription?: boolean | number
    /**
     * @deprecated Should not be used by clients (for credit card payments which are deprecated)
     * An itemized summary for payment confirmation. Required for iOS.
     */
    paymentSummary?: PlusMembershipPaymentSummaryGenqlSelection
    /**
     * @deprecated Not used in clients
     * A "pill" communicating promotional pricing for plus renewal pricing.
     */
    priceHighlightPill?: AppPillGenqlSelection
    /** A boolean that lets the client know if this is promotional renewal pricing. */
    isPromotional?: boolean | number
    /** The default price without promotional discounts. */
    defaultPricingText?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about Plus membership pricing. */
export interface PlusNewMembershipPricingGenqlSelection{
    /**
     * @deprecated Leftover from 5/23 release by Plus Pricing project, clients should not use this anymore
     * A short description for the standard, full-cost membership price.
     */
    standardPriceShortDescription?: boolean | number
    /** A short description for the standard free trial duration. */
    standardFreeTrialDurationDescription?: boolean | number
    /**
     * @deprecated Only used for Braintree, which is deprecated
     * A description of the membership price billing agreement.
     */
    priceAgreement?: boolean | number
    /** A short summary of the membership price. */
    priceTeaser?: boolean | number
    /**
     * @deprecated Not used in clients
     * A long description of the membership price.
     */
    priceDescription?: boolean | number
    /**
     * @deprecated Not used in clients
     * A short summary of the renewal date/price.
     */
    renewalTeaser?: boolean | number
    /** A long description of the renewal date/price. */
    renewalDescription?: boolean | number
    /** Copy describing additional details about renewals and managing membership. */
    renewalAdditionalDetailsCopy?: boolean | number
    /**
     * @deprecated Should not be used by clients (for credit card payments which are deprecated)
     * An itemized summary for payment confirmation.
     */
    paymentSummary?: PlusMembershipPaymentSummaryGenqlSelection
    /** A set of copy + tooltip to explain plus membership details. */
    membershipDetailsUpsell?: PlusMembershipDetailsUpsellGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Status infomration about a Plus membership. */
export interface PlusMembershipStatusGenqlSelection{
    /** The date the membership started. */
    memberSince?: boolean | number
    /** The next renewal date. */
    nextRenewal?: boolean | number
    /** The next bill date, which may be the same as the renewal date, or 7 days after if the user is in the grace period after Plus membership expiration. */
    nextBillDate?: boolean | number
    /** True when the user has autorenewal turned on for their Plus membership. */
    hasAutoRenewalEnabled?: boolean | number
    /** The next plus year from current plus expiration */
    nextPlusYear?: boolean | number
    /** True when user auto renew is off and if date is within 14 days of renewal date. Or within 30 of lapsed plus subscription. */
    showRenewPlusNowCta?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. Information about the various payment types. */
export interface PlusPaymentMethodOptionsGenqlSelection{
    /**
     * @deprecated Credit card as a payment option is deprecated. This will return null.
     * Information about the card payment method option.
     */
    cardPaymentOption?: PlusPaymentMethodGenqlSelection
    /**
     * @deprecated This is from before we could handle on platform billing. Moving forward use paymentMethodOptionsOnPlatform
     * Information about Spend Checking as a payment method option.
     */
    spendPaymentOption?: PlusPaymentMethodGenqlSelection
    /**
     * @deprecated This is from before we could handle on platform billing. Moving forward use paymentMethodOptionsOnPlatform
     * Information about the currently active payment method.
     */
    activePaymentMethod?: PlusPaymentMethodGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. Information about the Plus payment method. */
export interface PlusPaymentMethodGenqlSelection{
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * The payment type.
     */
    paymentMethodType?: boolean | number
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Label describing the payment method.
     */
    label?: boolean | number
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Extended version of the label describing the payment method.
     */
    extendedLabel?: boolean | number
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Label describing the payment method.
     */
    description?: boolean | number
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * If Spend Checking is unavailable, a message about why.
     */
    spendUnavailableMessage?: PlusSpendPaymentUnavailableMessageGenqlSelection
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Information about whether or not this payment option is eligible as a payment option.
     */
    isAvailablePaymentOption?: boolean | number
    /**
     * @deprecated Use `paymentMethodOptionsOnPlatform` instead
     * Information about whether or not this payment option is available as a new payment method.
     */
    isNewPaymentOption?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. A list of Plus benefits to be shown during onboarding. */
export interface PlusBenefitForOnboardingGenqlSelection{
    /** An icon that corresponds with the benefit. */
    icon?: AppImageGenqlSelection
    /** A description of the Plus benefit. */
    description?: boolean | number
    /** The tooltip for the Plus benefit. */
    tooltip?: PlusBenefitTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. Initial state for the Plus benefit calculator. */
export interface PlusBenefitCalculatorInitialStateGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Initial value for average yearly checking balance. */
    avgYearlyCheckingBalance?: boolean | number
    /** Initial value for average monthly card purchases. */
    avgMonthlyCardPurchases?: boolean | number
    /** Initial value for average yearly borrow balance. */
    avgYearlyBorrowBalance?: boolean | number
    /** True when the initial values are based on current user balances. */
    isBasedOnViewingUserUsage?: boolean | number
    /** True when the initial values are based on common user balances. */
    isBasedOnCommonUserUsage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. Messaging to display if Spend Checking is ineligible as a Plus Membership payment. */
export interface PlusSpendPaymentUnavailableMessageGenqlSelection{
    /** An optional message description. */
    description?: { __args: {
    /**
     * When provided and true, the string will include Markdown formatting.
     * Currently only includes `**`.
     */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Optional title. */
    title?: boolean | number
    /** Optional link. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. An itemized summary for Plus membership payments. */
export interface PlusMembershipPaymentSummaryGenqlSelection{
    /** A list of payment items. */
    items?: PlusMembershipPaymentSummaryItemGenqlSelection
    /** The total payment dollar amount: a sum of all payment item amounts. */
    total?: boolean | number
    /** The name of the payee. */
    payeeName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. A Plus membership payment summary item. */
export interface PlusMembershipPaymentSummaryItemGenqlSelection{
    /** The title of the payment item. */
    title?: boolean | number
    /** The signed dollar amount of the payment item. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. An array to render a list of all basic benefits */
export interface BasicBenefitsAllGenqlSelection{
    /** An Array of PlusBenefit objects. */
    benefits?: BasicBenefitStandardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated. A benefit for basic memberships */
export interface BasicBenefitStandardGenqlSelection{
    /** The benefit title */
    title?: boolean | number
    /** A description of the benefit */
    description?: boolean | number
    /** A link for the benefit */
    appLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ProductAccountLandingPageGenqlSelection{
    /** The title for a Product Account Landing Page */
    title?: boolean | number
    /** The header for a Product Account Landing Page */
    header?: ProductAccountLandingPageHeaderGenqlSelection
    /** The account details for a Product Account Landing Page */
    accountDetails?: TabularDataItemGenqlSelection
    /** An array of informational banners for a Product Account Landing Page */
    banners?: InformationBannerGenqlSelection
    /** An array of the disclosures for a Product Account Landing Page */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** The mobile floating action button details for a Product Account Landing Page (mobile only) */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** Common transactions to be displayed on a Product Account Landing Page */
    transactions?: (CommonTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Copy to be displayed when there are no transactions on a Product Account Landing Page */
    transactionsEmptyState?: CommonTransactionsEmptyStateGenqlSelection
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards?: AppCardGenqlSelection
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards?: AppCardGenqlSelection
    on_PersonalLoanProductLandingPage?: PersonalLoanProductLandingPageGenqlSelection
    on_CreditCardProductLandingPage?: CreditCardProductLandingPageGenqlSelection
    on_InvestProductLandingPage?: InvestProductLandingPageGenqlSelection
    on_MarginProductLandingPage?: MarginProductLandingPageGenqlSelection
    on_EarnProductLandingPage?: EarnProductLandingPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ProductAccountLandingPageHeaderGenqlSelection{
    /** The value for a Product Account Landing Page Header */
    value?: boolean | number
    /** The title for a Product Account Landing Page Header */
    title?: boolean | number
    /** The icon for a Product Account Landing Page Header */
    icon?: AppImageGenqlSelection
    /** The tooltip for a Product Account Landing Page Header */
    tooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PromotionsGenqlSelection{
    campaign?: (PromotionCampaignGenqlSelection & { __args: {
    /** Promotion key */
    promotionKey: Scalars['PromotionCampaignKey']} })
    /** Returns a promotional document bundle specific to the user and the documents they have agreed to. */
    promotionsAgreements?: RequiredDocumentsBundleGenqlSelection
    /** Sign up page content */
    signUpPage?: PromotionSignUpPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PromotionCampaignGenqlSelection{
    /** Promotion acceptance screen */
    acceptanceScreen?: AppInfoPageGenqlSelection
    /** Promotion campaign ID - if the promotion key doesn't include the campaign ID, lens will fetch from promotions service. */
    campaignId?: boolean | number
    /** Document bundle associated with the campaign */
    documentBundle?: RequiredDocumentsBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityDetailsGenqlSelection{
    /** Current Qoute */
    currentQuote?: CurrentQuoteGenqlSelection
    /** M1 value prop Card */
    marketingCard?: ProductMarketingCardGenqlSelection
    /** A time-series of historical quote chart data. */
    historicalQuotes?: (ChartableSliceDatumGenqlSelection & { __args?: {
    /** An interval length over which to aggregate the quote data. Default is days. */
    interval?: (TimeIntervalEnum | null), 
    /**
     * A preset time range option. Supercedes `range` if both are specified.
     * Default is 5 years.
     */
    period?: (HistoricalQuotePeriodEnum | null)} })
    /** A time-series of chart data for the security. */
    intradayQuotes?: (ChartableSliceDatumGenqlSelection & { __args?: {
    /**
     * An interval length over which to aggregate the quote data.
     * Default is 5 minutes.
     */
    interval?: (IntradayQuoteIntervalEnum | null), 
    /** Whether or not the security is a crypto currency. */
    isCrypto?: (Scalars['Boolean'] | null), 
    /**
     * A time period over which to retrieve intraday quotes.
     * Default is latest week.
     */
    period?: (IntradayQuotePeriodEnum | null)} })
    /** Key Data */
    keyData?: TabularDataSectionGenqlSelection
    /** Popular comparisons for the security. Based on security type, industry & sector. */
    popularSecurities?: (PopularSecuritiesGenqlSelection & { __args?: {limit?: (Scalars['Float'] | null)} })
    /** Price */
    price?: TabularDataSectionGenqlSelection
    /** Profile */
    profile?: SecurityDetailsProfileGenqlSelection
    /** Related categories */
    relatedCategories?: TabularDataSectionGenqlSelection
    /** Market News */
    marketNews?: (SecurityMarketNewsGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** Fund Allocation - breakdown of fund's asset allocation */
    allocation?: TabularDataSectionGenqlSelection
    /** Top holdings */
    topHoldings?: SecurityTopHoldingsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CurrentQuoteGenqlSelection{
    /** Current quote price change in dollars, percentage & timestamp */
    changeText?: TextGenqlSelection
    /** Delayed Quote Text */
    delayedQuoteText?: boolean | number
    /** Logo URL */
    logoUrl?: boolean | number
    /** Security name */
    name?: boolean | number
    /** Current Price */
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PopularSecuritiesGenqlSelection{
    /** Popular securities section title */
    title?: boolean | number
    /** Popular securities */
    securities?: PopularSecurityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PopularSecurityGenqlSelection{
    /** Logo URL */
    logoUrl?: boolean | number
    /** Security name */
    name?: boolean | number
    /** Security symbol */
    symbol?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityDetailsProfileGenqlSelection{
    /** Security profile Description */
    description?: boolean | number
    /** Security tabular data */
    tabularData?: TabularDataSectionGenqlSelection
    /** Security profile sec website link */
    secLink?: AppLinkGenqlSelection
    /** Security profile website url - each is different and unable to use AppLinkUrl type */
    websiteUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityTopHoldingsGenqlSelection{
    /** Top holdings title */
    title?: boolean | number
    /** Top holdings information */
    topHoldings?: FundHoldingInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityMarketNewsGenqlSelection{
    /** Security news section title */
    title?: boolean | number
    /** Security news articles */
    articles?: NewsConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SaveGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Returns true if the user has the feature flag for savings enabled. */
    isSavingsEnabled?: boolean | number
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasDirectToHYSA?: boolean | number
    /** B2 Savings Accounts */
    savings?: SavingsGenqlSelection
    /** Whether the user is eligible to open more than one individual high-yield savings accounts */
    isMultipleAccountsEligible?: boolean | number
    /** Whether the user is eligible to open a joint high-yield savings account */
    isJointAccountsEligible?: boolean | number
    /** Whether the user is eligible to open an individual cash account */
    isCashAccountsEligible?: boolean | number
    /** Whether the user is eligible to open a joint high-yield cash account */
    isJointCashAccountsEligible?: boolean | number
    /**
     * Whether the user is eligible to onboard to any type of Save account; This field checks a combination
     * of feature flags and eligibility fields to determine if a user should have access to Save onboarding
     */
    isEligibleToOnboard?: boolean | number
    /**
     * The CTA displayed when a user is eligible to onboard to any type of Save account; A `null` response
     * indicates that the user is not eligible to add any Save products
     */
    addSaveAccountCta?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** A list of available Savings accounts */
    savingsAccounts?: SavingsAccountConnectionGenqlSelection
    /** Whether the user has a Savings account or not */
    hasSavingsAccounts?: boolean | number
    /** Whether the user currently has a funded savings account */
    hasFundedSavingsAccount?: boolean | number
    /** Whether the user has a Joint HYSA Invitation or not, i.e. is an invitee/recipient */
    hasJointAccountInvitation?: boolean | number
    /**
     * @deprecated use SavingsAccount.hasExternalFundingSourceLink instead
     * Whether the user has external funding source links to use for a Savings account
     */
    hasExternalFundingSourceLink?: boolean | number
    /** Returns content for savings onboarding. */
    onboarding?: SavingsOnboardingGenqlSelection
    /** The plus APY for plus users */
    plusAnnualPercentageYield?: boolean | number
    /** The standard APY for non-plus users */
    annualPercentageYield?: boolean | number
    /** Agreements for all `Save` products; agreements will default to HYSA unless otherwise specified */
    savingsAgreements?: (SavingsAgreementsGenqlSelection & { __args: {
    /** The Save onboarding value used to denote which onboarding flow the user is in (e.g. `IndividualSave`, `JointSaveInitiate`, `IndividualCash`) */
    onboardingValue?: (Scalars['String'] | null), 
    /** The type of account (e.g. `type: SAVE` or `type: CASH`) */
    accountType?: (SaveAccountTypeEnum | null)} })
    /** Disclosure for the Savings account */
    disclosure?: SavingsDisclosureGenqlSelection
    /**
     * @deprecated no fixed value for all accounts.
     * FDIC Insurance Amount
     */
    fdicInsuranceAmount?: boolean | number
    /** The Joint HYSA Invitations for the user, if applicable. If no invitations, this returns null */
    jointAccountInvitationsList?: SavingsJointAccountInvitationConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsJointAccountInvitationConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: SavingsJointAccountInvitationEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsJointAccountInvitationEdgeGenqlSelection{
    cursor?: boolean | number
    node?: SavingsJointAccountInvitationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsJointAccountInvitationGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The first name of the user who sent the invitation */
    firstName?: boolean | number
    /** The last name of the user who sent the invitation */
    lastName?: boolean | number
    /** The email of the user who sent the invitation */
    email?: boolean | number
    /** The phone number of the user who sent the invitation */
    phoneNumber?: boolean | number
    /** The name of the account that the user was invited to join */
    accountName?: boolean | number
    /** The expiration date of the invitation as an ISO String */
    expirationDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAgreementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Savings e-sign agreement to be shown to users. */
    eSignAgreement?: AgreementDocumentGenqlSelection
    /** The bundle of agreements for Savings. */
    agreements?: AgreementBundleGenqlSelection
    /** The required agreements for a savings account. */
    requiredAgreements?: RequiredDocumentsBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: SavingsAccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountEdgeGenqlSelection{
    cursor?: boolean | number
    node?: SavingsAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The account category. */
    accountCategory?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    /** The status of the Savings account */
    status?: SavingsAccountStatusGenqlSelection
    /** The type of account (i.e. "SAVE") */
    accountType?: boolean | number
    /** The account number of the Savings account */
    accountNumber?: boolean | number
    /** The routing number of the Savings account */
    routingNumber?: boolean | number
    /** The annual percentage yield of this specific Savings account */
    annualPercentageYield?: boolean | number
    /** Whether the account is funded or not */
    isFunded?: boolean | number
    /** The balances of the Savings account */
    balances?: SavingsAccountBalancesGenqlSelection
    /** The interest values of the Savings account */
    interest?: SavingsAccountInterestGenqlSelection
    /** The transfer values of the Savings account */
    transfers?: SavingsAccountTransfersGenqlSelection
    /** The minimum deposit amount for the initial deposit into this Savings account */
    minimumInitialDeposit?: boolean | number
    /** The maximum deposit amount for the initial deposit into this Savings account */
    maximumInitialDeposit?: boolean | number
    /** The funding source from which the Savings account should transfer money for the first time */
    initialTransferParticipant?: TransferParticipantGenqlSelection
    /** The transactions for the Savings account */
    transactions?: (SavingsTransactionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), 
    /** A filter mode for the transactions. Default is `ALL`. */
    mode?: (SavingsTransactionModeEnum | null)} })
    /** Returns true if the user has an external funding source linked to their Savings account */
    hasExternalFundingSourceLink?: boolean | number
    /** Returns the account ownership type - JOINT or INDIVIDUAL */
    ownershipType?: boolean | number
    /** The expiration date for an account in a pending state, the owner(s) must complete the necessary steps to activate the account or the account will expire */
    expirationDate?: boolean | number
    /** Details for the Earn Product Landing Page */
    earnProductLandingPage?: EarnProductLandingPageGenqlSelection
    /** The header information of the account for client UI */
    header?: SavingsAccountHeaderGenqlSelection
    /** The details of the account for client UI */
    accountDetails?: SavingsAccountDetailsGenqlSelection
    /** If applicable, a checklist of steps for the user to complete for product onboarding. */
    setupChecklist?: SetupChecklistGenqlSelection
    /** The link for funding the Savings account - null if already funded */
    fundAccountLink?: AppLinkGenqlSelection
    /**
     * @deprecated Field consolidated, use pendingActionsBanners instead
     * A banner for identity verification information
     */
    docUploadBanner?: InformationBannerGenqlSelection
    /**
     * @deprecated Field consolidated, use pendingActionsBanners instead
     * A banner for transfer status information, such as a pending transfer that is not showing from Bank Teller yet
     */
    transferStatusBanner?: InformationBannerGenqlSelection
    /** An array of informational banners notifying the user of pending actions (i.e. identity verification, pending joint account, transfer status) */
    banners?: InformationBannerGenqlSelection
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    /** The Spend promotional message to be displayed on the Savings transactions screen. */
    marketingCard?: SpendPromotionalMessageGenqlSelection
    /** Copy to be displayed when there are no transactions. */
    transactionsEmptyState?: TransactionsEmptyStateGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransactionsEmptyStateGenqlSelection{
    /** The title of the empty state */
    title?: boolean | number
    /** The subtitle of the empty state */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** A friendly description of the account status. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountBalancesGenqlSelection{
    /** The pending balance for the Savings account */
    pendingBalance?: boolean | number
    /** The available balance for the Savings account */
    availableBalance?: boolean | number
    /** The sum value of the available and pending balances */
    currentBalance?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountInterestGenqlSelection{
    /** The year to date interest earned for the Savings account */
    yearToDateEarned?: boolean | number
    /** The total interest earned for the Savings account */
    totalEarned?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountTransfersGenqlSelection{
    /** The transfer limits for the Savings account */
    limits?: SavingsAccountTransferLimitsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountTransferLimitsGenqlSelection{
    /** The monthly transfer limit for the Savings account */
    monthlyLimit?: boolean | number
    /** The daily incoming cash transfer limit for the Savings account */
    dailyIncomingCashLimit?: boolean | number
    /** The daily outgoing cash transfer limit for the Savings account */
    dailyOutgoingCashLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountHeaderGenqlSelection{
    /** The name of the Savings account */
    name?: boolean | number
    /** The balance information for the balance section in the UI */
    balanceSection?: SavingsBalanceSectionGenqlSelection
    /** The interest information for the interest section in the UI */
    interestSection?: SavingsInterestSectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsBalanceSectionGenqlSelection{
    /** The label of the available Savings balance */
    label?: boolean | number
    /** The label of the current Savings balance */
    currentBalanceLabel?: boolean | number
    /** The value of the available Savings balance */
    balance?: boolean | number
    /** The sum value of the available and pending balances */
    currentBalance?: boolean | number
    /** An explainer tooltop for the available balance value */
    balanceTooltip?: boolean | number
    /** An explainer tooltip for the current balance value */
    currentBalanceTooltip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsInterestSectionGenqlSelection{
    /** The total interest earned for the Savings account */
    interestEarned?: boolean | number
    /** The associated icon with the interest earned copy */
    interestEarnedIcon?: AppImageGenqlSelection
    /** The plus upsell link for non-plus users */
    plusLink?: AppLinkGenqlSelection
    /** The plus upsell icon for non-plus users */
    plusLinkIcon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountDetailsGenqlSelection{
    /** The UI sections of the account details for the Savings account */
    sections?: SavingsAccountDetailSectionGenqlSelection
    /** Additional information for the savings account */
    additionalInfo?: boolean | number
    /** Disclosure for the Savings account */
    disclosure?: SavingsDisclosureGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountDetailSectionGenqlSelection{
    /** The header text for the account detail section */
    header?: boolean | number
    /** The optional AppLink for the account detail section */
    link?: AppLinkGenqlSelection
    /** The optional icon for the link in the account detail section */
    linkIcon?: AppImageGenqlSelection
    /** The rows of details for the account detail section */
    details?: SavingsAccountDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountDetailGenqlSelection{
    /** The label of the account detail */
    label?: boolean | number
    /** The value of the account detail */
    value?: boolean | number
    /** A boolean denoting if the value is copyable. If this is true, the clients should render a copy button. */
    copyable?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsDisclosureGenqlSelection{
    /**
     * @deprecated Use `SavingsDisclosure.paragraphs` instead
     * The text for the disclosure link modal/dialogue
     */
    text?: boolean | number
    /** The link text for the disclosure link */
    linkText?: boolean | number
    /** The text for the disclosure link modal/dialogue as an array of paragraphs */
    paragraphs?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsOnboardingGenqlSelection{
    /** The joint account invitation page */
    accountInvitationPage?: JointAccountInvitationPageGenqlSelection
    /** The account naming page */
    nameAccountPage?: SavingsNameAccountPageGenqlSelection
    /** Returns Customer Due Diligence questions and answers. */
    customerDueDiligenceQuestions?: (SavingsCustomerDueDiligenceQuestionsGenqlSelection & { __args?: {
    /**
     * The Earn onboarding value is used to denote which onboarding flow the user is in (e.g. `IndividualSave`, `JointSaveInitiate`, `IndividualCash`)
     * Returns customized set of CDD questions based on the onboarding value & Invest status. Default returns Banking CDD only.
     */
    onboardingValue?: (Scalars['String'] | null)} })
    /** The page for selecting the type of HYSA to open */
    accountTypePage?: SavingsAccountTypePageGenqlSelection
    /** The page that informs the user they've been invited to a joint HYSA */
    jointInvitedPage?: AppInfoPageGenqlSelection
    /** A field that returns the joint invitation onboarding value, JointSaveCoOwner or JointCashCoOwner, depending on whether the account type is Cash or Save */
    jointInvitedPageOnboardingValue?: boolean | number
    /**
     * @deprecated Deprecated due to changes in design
     * The page that informs the user they've almost completed creating joint HYSA pending other user acceptance
     */
    jointInitiatorSuccessPage?: AppInfoPageGenqlSelection
    /**
     * @deprecated Deprecated due to changes in design
     * The page that informs the user they've completed creating joint HYSA
     */
    jointInvitedSuccessPage?: AppInfoPageGenqlSelection
    /** The page shown after the confirmation screen when a user needs to connect a bank. If no accountId is passed, this default to HYSA-centric copy, disclosures etc. */
    connectBankPage?: (AppInfoPageGenqlSelection & { __args?: {accountId?: (Scalars['ID'] | null)} })
    /** The page that informs the user they've completed funding or skipped funding for individual or joint accounts */
    fundingCompletePage?: (AppInfoPageGenqlSelection & { __args: {accountId: Scalars['ID']} })
    /** Security lending disclosures */
    fullyPaidLendingDisclosure?: (InvestFullyPaidLendingDisclosureGenqlSelection & { __args?: {onboardingValue?: (Scalars['String'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsAccountTypePageGenqlSelection{
    /** The title of the Savings account type page */
    title?: boolean | number
    /** The list of account types from which to choose */
    accountTypes?: ListItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface JointAccountInvitationPageGenqlSelection{
    /** Title text for the joint account invitation screen */
    title?: boolean | number
    /** Subtitle text for the joint account invitation screen */
    subtitle?: boolean | number
    /**
     * @deprecated Use primaryCtaButton
     * CTA label copy for the joint account invitation screen
     */
    primaryCtaLabel?: boolean | number
    /** CTA button for joint account invitation screen */
    primaryCtaButton?: AppButtonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsNameAccountPageGenqlSelection{
    /** Title text of the account naming screen */
    title?: boolean | number
    /** Subtitle text of the account naming screen */
    subtitle?: boolean | number
    /**
     * @deprecated Use primaryCtaButton instead
     * Primary cta label text of the account naming screen
     */
    primaryCtaLabel?: boolean | number
    /**
     * @deprecated Use secondaryCtaButton instead
     * Secondary cta label text of the account naming screen
     */
    secondaryCtaLabel?: boolean | number
    /** Primary CTA Button with label text and analytics */
    primaryCtaButton?: AppButtonGenqlSelection
    /** Secondary CTA Button with label text and analytics */
    secondaryCtaButton?: AppButtonGenqlSelection
    /** Placeholder text for name account input */
    inputPlaceholder?: boolean | number
    /** Name of the input field for name account input */
    inputFieldName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsCustomerDueDiligenceQuestionsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Returns CDD questions and answers required by B2 for user onboarding. */
    questions?: SavingsDueDiligenceQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsDueDiligenceQuestionGenqlSelection{
    /** The question id for an instance of a CDD question. */
    questionId?: boolean | number
    /** The question label for an instance of a CDD question. */
    questionLabel?: boolean | number
    /** The answer type for an instance of a CDD question. */
    answerType?: boolean | number
    /** The acceptable answers for an instance of a CDD question. */
    answers?: SavingsCustomerDueDiligenceAnswerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsCustomerDueDiligenceAnswerGenqlSelection{
    /** The answer id for an answer of a CDD question. */
    answerId?: boolean | number
    /** The answer label for an answer of a CDD question. */
    answerLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsTransactionConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: SavingsTransactionEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsTransactionEdgeGenqlSelection{
    cursor?: boolean | number
    node?: SavingsTransactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SavingsTransactionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A status AppPill for this transaction. */
    status?: AppPillGenqlSelection
    /** The date this transaction was created. */
    date?: boolean | number
    /** The activity date for this transaction. */
    activityDate?: boolean | number
    /** The Savings icon for this transaction. */
    icon?: AppImageGenqlSelection
    /** A short summary description for this transaction. */
    summary?: boolean | number
    /** A friendly description for this transaction which must be displayed to users. */
    description?: boolean | number
    /** The merchant name where the activity entry occured. */
    merchant?: boolean | number
    /** The category label for this transaction. */
    categoryLabel?: boolean | number
    /** A boolean to indicate whether this transaction is voided or not. */
    isVoided?: boolean | number
    /**
     * The signed dollar amount associated with this transaction. Postive amounts are
     * cash flows into a Savings account, and negative amounts are cash flows out.
     */
    amount?: boolean | number
    /** Further details for this activity entry. */
    details?: SpendActivityEntryDetailsGenqlSelection
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date this transaction was settled, if applicable.
     */
    settledDate?: boolean | number
    /** @deprecated Utilize appropriate field from `SpendActivityEntry` type. */
    transactionDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EarnProductLandingPageGenqlSelection{
    /** The title for the Earn Product Landing Page */
    title?: boolean | number
    /** The header for the Earn Product Landing Page */
    header?: ProductAccountLandingPageHeaderGenqlSelection
    /** The account details for the Earn Product Landing Page */
    accountDetails?: TabularDataItemGenqlSelection
    /** An array of informational banners for the Earn Product Landing Page */
    banners?: InformationBannerGenqlSelection
    /** A card with a value prop display and related details for the Earn Product Landing Page */
    valuePropCard?: ValuePropCardGenqlSelection
    /** A card with details about the user's Earn account for the Earn Product Landing Page */
    accountDetailsCard?: EarnAccountDetailsCardGenqlSelection
    /** Disclaimers to be displayed below the value prop card for the Earn Product Landing Page */
    disclaimers?: boolean | number
    /** An array of the disclosures for the Earn Product Landing Page */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** The mobile floating action button details for a Product Account Landing Page */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** Account transactions for the Earn Product Landing Page */
    transactions?: (CommonTransactionEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Copy to be displayed when there are no transactions on the Earn Product Landing Page */
    transactionsEmptyState?: CommonTransactionsEmptyStateGenqlSelection
    /** Card(s) to be shown for promotions that may require additional action or just be less important */
    promotionCards?: AppCardGenqlSelection
    /** Card(s) to be shown in a more prominent location (such as closer to the top of the page) for active or more important promotions, these may or may not require additional actions */
    priorityPromotionCards?: AppCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EarnAccountDetailsCardGenqlSelection{
    /** Title for the card */
    title?: boolean | number
    /** Details for the card */
    details?: DetailsGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DetailsGroupGenqlSelection{
    /** Header for the group of details */
    header?: boolean | number
    /** Rows of details for the group */
    rows?: DetailRowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DetailRowGenqlSelection{
    /** The label that defines the row */
    label?: boolean | number
    /** The tooltip for the label */
    tooltip?: AppTooltipGenqlSelection
    /** A static string value to provide detail for the row */
    value?: boolean | number
    /** Option to provide a masked value */
    valueMasked?: boolean | number
    /** An icon for the row */
    icon?: AppImageGenqlSelection
    /** Option to provide a clicked state icon, option to provide a clicked value */
    iconClicked?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityGenqlSelection{
    /** The category path for this security in the category hierarchy. An empty list means that the security is currently uncategorized. */
    category?: boolean | number
    /** A time-series of chart data for the security. */
    chartData?: (ChartableSliceDataGenqlSelection & { __args?: {
    /** A time range over which to retrieve chart data. Default is one month. */
    range?: (TimeRangeInput | null), 
    /** The initial amount invested value to use for backtesting. If not provided, the initial value will be 100. */
    initialValueForBacktesting?: (Scalars['Float'] | null)} })
    /** Fundamentals data for the security. Value is null when data is unavailable. */
    fundamentals?: FundamentalsGenqlSelection
    /** A time-series of historical quote data for the security. Value is null when market data is unavailable. */
    historicalQuotes?: (HistoricalQuoteGenqlSelection & { __args?: {
    /** This flag exists to correct a legacy issue. By default, for daily intervals only, data will be returned in reverse chronological order (which is inconsistent with the rest of the API). Clients should opt-in to receiving daily data in chronological order by setting this argument to true. This argument will eventually be removed once all clients are corrected to expect daily data in chronological order. */
    dailyInChronologicalOrder?: (Scalars['Boolean'] | null), 
    /** An interval length over which to aggregate the quote data. Default is days. Dividend and split data is not aggregated if an interval longer than days is selected. */
    interval?: (TimeIntervalEnum | null), 
    /** A preset time range option. Supercedes `range` if both are specified. */
    period?: (HistoricalQuotePeriodEnum | null), 
    /** A time range over which to retrieve historical quotes. Default is one month. */
    range?: (TimeRangeInput | null)} })
    /** The ID of this node. */
    id?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** A time-series of quote data with intraday resolution. Value is null when data is unavailable. */
    intradayQuotes?: (IntradayQuoteTimeSeriesGenqlSelection & { __args?: {
    /** An interval length over which to aggregate the quote data. Default is one hour. */
    interval?: (IntradayQuoteIntervalEnum | null), 
    /** Whether or not the security is a crypto currency. */
    isCrypto?: (Scalars['Boolean'] | null), 
    /** A time period over which to retrieve intraday quotes. Default is today. */
    period?: (IntradayQuotePeriodEnum | null)} })
    /** Indicates if this security is currently active and available to be added to pies. True when the `status` is `ACTIVE`, false otherwise. */
    isActive?: boolean | number
    /** True IF the security is marginable */
    isMarginable?: boolean | number
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    latestQuote?: QuoteGenqlSelection
    /** The maintenance margin requirement for a given security */
    maintenanceMargin?: boolean | number
    /** tooltip to display margin requirement content */
    marginEligibileTooltip?: SecurityMarginTooltipGenqlSelection
    /** Icon representing mergin eligibility */
    marginEligibleIcon?: AppImageGenqlSelection
    /** tooltip to display margin requirement content */
    marginRequirementTooltip?: SecurityMarginTooltipGenqlSelection
    /** The name of the market or exchange on which the security is listed. Value is null when data is unavailable. */
    market?: boolean | number
    /** The name of the security. */
    name?: boolean | number
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of news stories related to this security, sorted in reverse chronological order.
     */
    news?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** A list of portfolio locations where this sliceable appears. */
    portfolioLinks?: (PortfolioSliceGenqlSelection & { __args?: {
    /** When provided, filter for portfolio locations only within the specified account. */
    onlyAccountId?: (Scalars['ID'] | null)} })
    /** The percent difference in price compared to a historical point. Value is null when data is unavailable. */
    priceChange?: (PriceChangeGenqlSelection & { __args: {
    /** A preset time range option. */
    period: HistoricalQuotePeriodEnum} })
    /** Profile information for the security. Value is null when data is unavailable. */
    profile?: SecurityProfileGenqlSelection
    /** Latest-available delayed market quote data for the security. Value is null when data is unavailable. */
    quote?: QuoteGenqlSelection
    /** A list of news stories related to this security, sorted in reverse chronological order. */
    securityNews?: (NewsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** App Pill to be displayed for the security */
    securityPill?: AppPillGenqlSelection
    /** The current status of the security. */
    status?: boolean | number
    /** The ticker symbol for this security. */
    symbol?: boolean | number
    /** The type of the sliceable. */
    type?: boolean | number
    on_CryptoAsset?: CryptoAssetGenqlSelection
    on_Fund?: FundGenqlSelection
    on_Equity?: EquityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityScreenerConnectionGenqlSelection{
    /** The current hierarchical category level. */
    currentCategory?: SecuritySubCategoryGenqlSelection
    /** A list of edges. */
    edges?: SecurityScreenerEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The next hierarchical level of sub-categories. */
    subCategories?: SecuritySubCategoryGenqlSelection
    /** The approximate total number of edges in the connection. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SecurityScreenerEdgeGenqlSelection{
    /** A cursor for use in pagination */
    cursor?: boolean | number
    /** The item at the end of the edge */
    node?: SecurityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection sub-category. */
export interface SecuritySubCategoryGenqlSelection{
    /** The category path in the category hierarchy. */
    category?: boolean | number
    /** The approximate total number of edges within the sub-category. */
    count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A limit option. */
export interface SecurityLimitOptionInput {
/** Whether the limit should be inclusive of the minimum and/or maximum values. Default is true. */
inclusive?: (Scalars['Boolean'] | null),
/** A maximum limit. */
max?: (Scalars['Float'] | null),
/** A minimum limit. */
min?: (Scalars['Float'] | null),
/** A limit type. */
type: SecurityLimitTypeEnum}


/** A sort option. */
export interface SecuritySortOptionInput {
/** A sort direction. */
direction: SortDirectionEnum,
/** A sort type. */
type: SecuritySortTypeEnum}

export interface SliceableSearchHighlightGenqlSelection{
    /** The type of highlight match. */
    match?: boolean | number
    /** The full text of the matching field, with the highlight locations indicated. The highlights will be delimeted by the starting token `<em>` and the ending token `</em>`. There will be at least one highlight. */
    snippet?: boolean | number
    /** A list of highlight locations specified as substring indices within the full text of the matching field. (Note that these are NOT indices within the `snippet` string.) */
    substrings?: SearchHighlightSubstringGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A highlight substring location. */
export interface SearchHighlightSubstringGenqlSelection{
    /** The zero-based beginning index of the highlight within the full text. */
    beginIndex?: boolean | number
    /** The zero-based index BEFORE which the highlight ends within the full text. */
    endIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The header for the Spend marketing screen. */
    header?: boolean | number
    /** An array of the content cards for the Spend marketing screen. */
    productMarketingCards?: ProductMarketingCardGenqlSelection
    /**
     * @deprecated Use the `disclosureLinks` field instead.
     * The link to the cardholder terms page for the Spend marketing screen.
     */
    cardholderTermsLink?: AppLinkGenqlSelection
    /** An array of disclosure links for Spend marketing screen footer. */
    disclosureLinks?: AppLinkGenqlSelection
    /** An array of the disclosures for the Spend marketing screen. */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface HistoricalPiePerformanceGenqlSelection{
    /** The date for the historical value. */
    date?: boolean | number
    /** The return at that point in the chosen period. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BacktestedPiePerformanceGenqlSelection{
    /** The date for the historical value. */
    date?: boolean | number
    /** The return at that point in the chosen period. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SystemPieCategoryDetailsGenqlSelection{
    /** A description of the category. */
    description?: boolean | number
    /** A disclosure for the category. */
    disclosure?: boolean | number
    /** If available, a URL to a feature image that represents the category. The best-fitting image to the requested width/height constraints will be returned, but specific dimensions are not guaranteed. */
    featureUrl?: { __args: {
    /** Requested minimum height for the image. Default is `200`. */
    height?: (Scalars['Int'] | null), 
    /** Requested minimum width for the image. Default is `500`. */
    width?: (Scalars['Int'] | null)} } | boolean | number
    /** The key for the category. */
    key?: boolean | number
    /** If available, a URL to a logo image that represents the category. */
    logoUrl?: boolean | number
    /** The name for the category. */
    name?: boolean | number
    /** A list of suitability suggestions for this category. Value will be null when no information is available. */
    suitability?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransfersGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** True if the user is eligible to use smart transfers. */
    isEligibleForSmartTransfers?: boolean | number
    /** True if the onboarding material for Smart Transfers is available to the user. */
    isOnboardingForSmartTransfersAvailable?: boolean | number
    /**
     * True if the user is both eligible and ready to use smart transfers.
     * To be ready, users must have Plus and either a Checking or Savings account.
     */
    isReadyForSmartTransfers?: boolean | number
    /** A set of options for choosing the focal point of a new smart transfer. */
    newSmartTransferFocusOptionSet?: NewSmartTransferFocusOptionSetGenqlSelection
    /** Returns information about available transfer participants. */
    participants?: (TransferParticipantListGenqlSelection & { __args?: {
    /** Filter for participants allowed in the provided type of transfer. */
    transferType?: (TransferTypeEnum | null), 
    /** Filter for participants allowed to be on the provided side. */
    forSide?: (TransferParticipantSideEnum | null), 
    /** Filter for participants allowed to be opposite the provided one. */
    withOppositeParticipantId?: (Scalars['ID'] | null), 
    /**
     * Deprecated. Use `transferType`, `forSide`, and `withOppositeParticipantId`
     * instead.
     */
    withContraParticipant?: (ContraTransferParticipantInput | null)} })
    /** Valid transfer participant groups for a user. */
    participantGroups?: (TransferParticipantGroupsGenqlSelection & { __args?: {
    /**
     * Scenario type filters out participants that are not valid.
     * Note that as of 01-24-2024, only PAYMENT + MOVE_MONEY_TRANSFER are
     * supported by this field resolver.
     */
    transferScenario?: (TransferScenarioTypeEnum | null)} })
    /** Fetch transfer details for the user to review before confirming. */
    transferValidation?: (TransferValidationGenqlSelection & { __args: {input: TransferValidationInput} })
    /**
     * @deprecated Use defaultAmountPills instead
     * An array of default amounts to use for transfers.
     */
    defaultAmounts?: boolean | number
    /**
     * @deprecated Use defaultAmountPills instead
     * The default amounts for the initial funding screen for an Invest account.
     */
    investInitialDepositDefaultAmounts?: boolean | number
    /**
     * @deprecated Use defaultAmountPills instead
     * The default amounts for the initial funding screen for a Save account.
     */
    saveInitialDepositDefaultAmounts?: boolean | number
    /** The default amount pills for the various create transfer and initial deposit screens. */
    defaultAmountPills?: (AppPillGenqlSelection & { __args: {transferScenario: TransferScenarioTypeEnum} })
    /** The promotional text for the initial deposit screen. */
    investInitialDepositPromotionalText?: InvestInitialDepositPromotionalTextGenqlSelection
    /** A set of requirements specific to some specified transfer information. */
    requirements?: (TransferRequirementsGenqlSelection & { __args?: {
    /** The type of transfer. */
    transferType?: (TransferTypeEnum | null), 
    /** The participant money is flowing from. */
    fromParticipantId?: (Scalars['ID'] | null), 
    /** The participant money is flowing to. */
    toParticipantId?: (Scalars['ID'] | null), 
    /** The requested transfer amount. Optional. */
    amount?: (Scalars['Float'] | null), 
    /** The Transfer scenario */
    scenario?: (TransferScenarioTypeEnum | null)} })
    /** Details about a proposed recurrence schedule. */
    scheduleDetails?: (RecurrenceScheduleGenqlSelection & { __args?: {
    /** The proposed recurrence schedule parameters. */
    schedule?: (RecurrenceScheduleInput | null)} })
    /** The list of all ACAT transfer instances matching the given arguments. */
    acatInstances?: (AcatTransferInstanceGenqlSelection & { __args?: {accountId?: (Scalars['ID'] | null), accountNumber?: (Scalars['String'] | null), type?: (AcatTransferInstanceTypeEnum | null)} })
    /** The list of all transfer instances. */
    allInstances?: (TransferInstanceConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** The list of past, non-pending transfer instances. */
    pastInstances?: (TransferInstanceConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** The list of currently-pending transfer instances. */
    pendingInstances?: (TransferInstanceGenqlSelection & { __args?: {
    /** Filter for only pending instances created manually (vs by a rule). */
    onlyManuallyCreated?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `smartTransferRules` and `scheduledTransferRules` instead.
     * The list of transfer rules.
     */
    rules?: TransferRuleGenqlSelection
    /** A list of smart transfer rules. */
    smartTransferRules?: SmartTransferRuleGenqlSelection
    /** A list of scheduled transfer rules. */
    scheduledTransferRules?: (ScheduledTransferRuleGenqlSelection & { __args?: {
    /** Optional filter that returns scheduled transfers to/from the given account. Default returns all scheduled transfer rules for user. */
    accountId?: (Scalars['ID'] | null), 
    /** Optional filter that returns only enabled transfer rules if true. Default returns ENABLED and DISABLED statuses of scheduled transfer rules. ARCHIVED status is not returned. */
    enabledOnly?: (Scalars['Boolean'] | null)} })
    /**
     * Given an ISO 8601 timestamp, returns whether it occurs in an even week or an
     * odd week. If a timezone offset is not specified, it is assumed to be UTC. For
     * assistance in creating biweekly scheduled transfer rules.
     */
    isEvenWeek?: { __args: {date: Scalars['String']} }
    /** Information about rollovers into Invest accounts. */
    rollovers?: InvestRolloversGenqlSelection
    /**
     * @deprecated Use `MoveMoney.plusPromotion` instead
     * An optional Plus promotional message for the Move Money screen.
     */
    plusPromotionForMoveMoneyScreen?: PlusPromotionalMessageGenqlSelection
    /** Transfers form links - takes two optional arguments - source participant id & transfer scenario */
    formLinks?: (AppLinkGenqlSelection & { __args?: {scenario?: (TransferScenarioTypeEnum | null), fromParticipantId?: (Scalars['ID'] | null), toParticipantId?: (Scalars['ID'] | null)} })
    /**
     * An AppLink that directs the user to more information about which distribution
     * reasons they can choose. TODO - deprecate once payment work is complete.
     */
    iraDistributionReasonFAQ?: AppLinkGenqlSelection
    /**
     * An AppLink that directs the user to more information about what an overcontribution
     * means. TODO - deprecate once payment work is complete.
     */
    iraOvercontributionFAQ?: AppLinkGenqlSelection
    /** An AppLink that directs the user to learn more about Net Income Attributable. TODO - deprecate once payment work is complete. */
    niaLearnMore?: AppLinkGenqlSelection
    /**
     * A disclaimer shown to users explaining what nia (Net Income Attributable) is
     * and how to calculate it.
     */
    niaDisclaimer?: TransfersDisclaimerGenqlSelection
    /** A disclaimer shown to users explaining what nia withholding is and how it */
    niaWithholdingDisclaimer?: TransfersDisclaimerGenqlSelection
    /** Feature flag for enhanced IRA distributions */
    enhancedIraDistribution?: boolean | number
    /** Active funding source - "one to rule them all" connected external bank account */
    activeFundingSource?: FundingSourceAccountGenqlSelection
    /** Returns true if the user is eligible to update their funding source connection */
    isEligibleForFundingSourceUpdate?: boolean | number
    /** Returns data associated with the initial funding onboarding flow for an account. */
    initialFunding?: InitialFundingGenqlSelection
    /**
     * @deprecated Use `MoveMoneyV2` instead.
     * The contents of the Move Money screen
     * 
     * `previousRouteName` is a web construct that is used for a few pieces of logic
     * * Appended to the link in the MoveMoneyOption so web knows where to return the user
     * * `previousRouteName`s that include `borrow` OR `transfers` with an active Personal Loan will include a MoveMoneyOption for loan payments
     * * `backButtonLabel` has some logic to determine what to display based on the `previousRouteName`
     *   * For now, this is only needed on web
     */
    moveMoney?: (MoveMoneyGenqlSelection & { __args: {type: MoveMoneyType, previousRouteName?: (Scalars['String'] | null)} })
    moveMoneyV2?: MoveMoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A disclaimer shown on the transfers page. Includes disclaimer text and an
 * optional tooltip.
 */
export interface TransfersDisclaimerGenqlSelection{
    /** The message shown to the user for the disclaimer. */
    text?: boolean | number
    /** The tooltip for the disclaimer to display. */
    tooltip?: TransfersDisclaimerTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The tooltip displayed on the TransfersDisclaimer object. Adds context to the
 * disclaimer text.
 */
export interface TransfersDisclaimerTooltipGenqlSelection{
    /** The icon entry point to the disclaimer tooltip. */
    icon?: AppImageGenqlSelection
    /** An array of strings to be parsed by the client */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyV2GenqlSelection{
    /** The ID of this node */
    id?: boolean | number
    /** Participants eligible to receive a wire transfer. */
    wireTransferParticipants?: TransferParticipantListGenqlSelection
    /** Wire instructions for a user to follow for a given account. */
    wireInstructions?: (MoveMoneyWireInstructionsGenqlSelection & { __args: {accountId: Scalars['ID']} })
    /** Simple options for moving money */
    listItems?: MoveMoneyListItemsGenqlSelection
    /** Call to action for moving money */
    callToAction?: MoveMoneyCallToActionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyCallToActionGenqlSelection{
    /** Call to action title */
    title?: boolean | number
    /** Call to action icon */
    icon?: AppImageGenqlSelection
    /** Call to action link */
    link?: AppLinkGenqlSelection
    /** Call to action - action type */
    action?: AppActionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyGenqlSelection{
    /** The ID of this node */
    id?: boolean | number
    /** The internal key of this node */
    key?: boolean | number
    /** Screen title copy. */
    title?: boolean | number
    /** Subtitle for the Move Money screen */
    subtitle?: boolean | number
    /** The label for the back button if the client requires it */
    backButtonLabel?: boolean | number
    /** Categories of options for moving money */
    categories?: MoveMoneyCategoryGenqlSelection
    /** An optional Plus promotional message for the Move Money screen */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated Use `MoveMoneyV2` field instead.
     * Participants eligible to receive a wire transfer.
     */
    wireTransferParticipants?: TransferParticipantListGenqlSelection
    /**
     * @deprecated Use `MoveMoneyV2` field instead.
     * Wire instructions for a user to follow for a given account.
     */
    wireInstructions?: (MoveMoneyWireInstructionsGenqlSelection & { __args: {accountId: Scalars['ID']} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyListItemsGenqlSelection{
    /** Primary options for moving money */
    primaryOptions?: ListItemGenqlSelection
    /** Secondary options for moving money */
    secondaryOptions?: ListItemGenqlSelection
    /** Direct Deposit options */
    directDepositOptions?: ListItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyCategoryGenqlSelection{
    /** Category label */
    label?: boolean | number
    /** List of options for a Move Money category */
    options?: MoveMoneyOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyOptionGenqlSelection{
    /** Move Money Option icon */
    icon?: AppImageGenqlSelection
    /** Move Money Option title */
    title?: boolean | number
    /** Optional `AppPill` to display for the move money option */
    pill?: AppPillGenqlSelection
    /** Move Money Option subtitle */
    subtitle?: boolean | number
    /** The link to go to when clicking the option */
    link?: AppLinkGenqlSelection
    /** The user data to be saved for the user on click */
    userDataEntries?: UserDataEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveMoneyWireInstructionsGenqlSelection{
    /** Title for the Move Money wire instructions screen. */
    title?: boolean | number
    /** Subtitle for the Move Money wire instructions screen. */
    subtitle?: boolean | number
    /** Header for the account info. */
    accountHeader?: boolean | number
    /** Label for the user's account. */
    accountLabel?: boolean | number
    /** Illustration to display on the page. */
    illustration?: AppImageGenqlSelection
    /** Informational values for the Move Money wire instructions screen. */
    wireInstructionValues?: WireInstructionFieldGenqlSelection
    /** Helpful tips for the Move Money wire instructions screen. */
    helpfulTips?: boolean | number
    /** Contact us link for the Move Money wire instructions screen. */
    contactUsLink?: AppLinkGenqlSelection
    /** Wire Transfer FAQ link for the Move Money wire instructions screen. */
    wireTransferFAQLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WireInstructionFieldGenqlSelection{
    /** Title for the wire instruction field. */
    title?: boolean | number
    /** Value for the wire instruction field. */
    value?: boolean | number
    /** Optional array of values for line formatting on mobile clients. */
    optionalValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of requirements for transfers between a particular participant pair. */
export interface TransferRequirementsGenqlSelection{
    /** True when the transfer destination requires a special initial deposit. */
    requiresInitialDeposit?: boolean | number
    /** The minimum transfer amount. When there is no minimum, value is null. */
    minTransferAmount?: boolean | number
    /** The minimum transfer error message to be displayed when the transfer amount is less than the minimum. */
    minTransferAmountErrorMessage?: boolean | number
    /** The maximum transfer amount. When there is no maximum, value is null. */
    maxTransferAmount?: boolean | number
    /** The maximum transfer error message to be displayed when the transfer amount is greater than the maximum. */
    maxTransferAmountErrorMessage?: boolean | number
    /** A link that accompanies maximum transfer error messaging, if applicable for the transfer participant(s). Clients should show this if the maximum transfer amount is exceeded and it is not null. */
    maxTransferAmountErrorLink?: AppLinkGenqlSelection
    /** Message to display for the AutoPay view if the user's statement date is today. */
    autoPayDueDateMessage?: boolean | number
    /** True when the prior-year IRA contribution option should be presented. */
    isIraContributionYearRequired?: boolean | number
    /** True when an IRA distribution reason must be specified. */
    isIraDistributionReasonRequired?: boolean | number
    /** True when an IRA contribution year must be specified. */
    isIraRolloverOptionRequired?: boolean | number
    /** True when an IRS contribution limit must be specified. */
    isIraContributionLimitRequired?: boolean | number
    /** True when the transfer will depend on sells completing first. */
    dependsOnSells?: boolean | number
    /** True when the transfer amount is greater than cash available for withdrawal (CAFW). */
    amountIsGreaterThanCashAvailable?: boolean | number
    /** True when the transfer will depend on holds expiring first. */
    dependsOnHolds?: boolean | number
    /** A description of the projected timing for the transfer, if available. */
    timingDescription?: boolean | number
    /** A link to be displayed on the transfer overview screen before submission. */
    transferOverviewLink?: AppLinkGenqlSelection
    /** A short summary message regarding the proposed transfer. */
    summaryMessage?: boolean | number
    /** A flexible message regarding the details of the proposed transfer. */
    detailsMessage?: TransferDetailsMessageGenqlSelection
    /** True if the transfer can be set as a scheduled rule. */
    canBeScheduledRule?: boolean | number
    /** The due date for the payment account, if applicable. */
    transferDueDateLabel?: boolean | number
    /** A list of potential amounts to be selected for a payment transfer. */
    transferAmountPresets?: TransferAmountPresetOptionGenqlSelection
    /** Returns true if the destination for the transfer is a loan. */
    isLoanPaymentTransfer?: boolean | number
    /** Returns true if the destination account for the transfer is a Credit Card account. */
    isCreditCardPaymentTransfer?: boolean | number
    /** Informational content relating to AutoPay for Credit Card. */
    autoPayInformationContent?: boolean | number
    /** Returns if the user current has AutoPay enabled for Credit Card. */
    hasAutoPayEnabled?: boolean | number
    /** Amount preset options available for scheduled transfers. */
    scheduledTransferAmountPresets?: ScheduledTransferPresetOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferAmountPresetOptionGenqlSelection{
    /** A label for the transfer amount preset option. */
    label?: boolean | number
    /** A value for the transfer amount preset option. */
    value?: boolean | number
    /** A description of the transfer amount preset option. */
    description?: { __args: {
    /**
     * When provided and true, the string will include Markdown formatting.
     * Currently only includes `**`.
     */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ScheduledTransferPresetOptionGenqlSelection{
    /** A label for the scheduled transfer preset option. */
    label?: boolean | number
    /** A value for the scheduled transfer preset option. */
    value?: boolean | number
    /** A payment indicator for the scheduled transfer preset option. */
    indicator?: boolean | number
    /** A description of the scheduled transfer preset option. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer details message. */
export interface TransferDetailsMessageGenqlSelection{
    /** An optional icon for the message. */
    icon?: AppImageGenqlSelection
    /** An optional title for the message. */
    title?: boolean | number
    /** An optional tag for the title. */
    titleTag?: boolean | number
    /** An optional description tooltip relevant to the transfer. */
    descriptionTooltip?: TransferDetailsMessageTooltipGenqlSelection
    /** An optional list of named value items. */
    items?: TransferDetailsMessageItemGenqlSelection
    /** An optional message description. */
    description?: boolean | number
    /** An optional link related to the message. */
    link?: AppLinkGenqlSelection
    /** An analytics event to be recorded upon viewing the message. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** A transfer suggestion link related to the message. */
    transferSuggestionLink?: TransferSuggestionLinkGenqlSelection
    /** True if the message relates to Plus. */
    isPlusRelated?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a link to a suggested set of transfer inputs. */
export interface TransferSuggestionLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The suggested set of transfer inputs. */
    suggestion?: TransferSuggestionGenqlSelection
    /** An analytics event for following the link. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A suggested set of transfer inputs. */
export interface TransferSuggestionGenqlSelection{
    /** The type of transfer. */
    transferType?: boolean | number
    /** The participant money is flowing from. */
    fromParticipant?: TransferParticipantGenqlSelection
    /** The participant money is flowing to. */
    toParticipant?: TransferParticipantGenqlSelection
    /** The transfer amount. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer details message item. */
export interface TransferDetailsMessageItemGenqlSelection{
    /** A title for the value. */
    title?: boolean | number
    /** The value. */
    value?: boolean | number
    /** An optional description of the item. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferDetailsMessageTooltipGenqlSelection{
    /** Tooltip trigger. */
    icon?: AppImageGenqlSelection
    /** Content body for the tooltip. */
    tooltipBody?: TransferDetailsMessageTooltipBodyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferDetailsMessageTooltipBodyGenqlSelection{
    /** A title for the tooltip content. */
    title?: boolean | number
    /** A subtitle for the tooltip content. */
    subtitle?: boolean | number
    /** A numbered list for the tooltip content. */
    numberedList?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: TransferInstanceEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceEdgeGenqlSelection{
    cursor?: boolean | number
    node?: TransferInstanceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceDetailsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Transfer Instance Details Screen title. */
    title?: boolean | number
    /** Transfer Instance amount label. */
    amountLabel?: boolean | number
    /** Formatted transfer instance amount. */
    amount?: boolean | number
    /** Transfer Instance Details Screen pill. */
    pill?: AppPillGenqlSelection
    /**
     * @deprecated Use `additionalDetails` instead.
     * Timestamps corresponding to the active transfer instance. Can be one or many. Typically correspond to date and time of transfer events.
     */
    timeStamps?: TransferInstanceDetailAdditionalDetailGenqlSelection
    /** Additional details are any combination of label and content that provides additional context for the active transfer instance. */
    additionalDetails?: TransferInstanceDetailAdditionalDetailGenqlSelection
    /** Steps for the Transfer Instance. */
    steps?: TransferInstanceStepsGenqlSelection
    /** Transfer Instance Details Screen special message. Appears at the bottom of the Transfer Details Screen and typically provides color on timing, cancelation status, lack of email verification, etc. */
    transferSpecificMessage?: TransferInstanceDetailsMessageGenqlSelection
    /** Transfer Instance Details Screen messaging and link that direct a user to a support article that answers some common transfers questions. */
    transferTimingMessage?: TransferInstanceTimingMessageGenqlSelection
    /** When returned, this indicates that the transfer instance is cancelable and provides the copy and additional details needed for the Cancel Transfer CTA. */
    ifCancelable?: TransferInstanceDetailsCancelTransferGenqlSelection
    /** When returned, this is a disclaimer to display below the trasnfer instance details. */
    disclaimer?: TransferInstanceDetailsDisclaimerGenqlSelection
    /**
     * An array of objects containing information on partially applied transfer credits. This
     * comes up for transfers where we don't credit the user 100% of the transfer.
     */
    outstandingTransferCredits?: OutstandingTransferCreditsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceDetailAdditionalDetailGenqlSelection{
    /** Label for a transfer instance additional detail. */
    label?: boolean | number
    /** Additional detail related to the transfer instance. */
    value1?: boolean | number
    /** Additional detail related to the transfer instance. */
    value2?: boolean | number
    /** Additional detail related to the transfer instance. */
    value3?: boolean | number
    /** Additional detail related to the transfer instance. */
    value4?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceStepsGenqlSelection{
    /** Label to display above Transfer Instance Steps. */
    label?: boolean | number
    /** Source of the transfer, to be shown as the first step. */
    from?: TransferParticipantGenqlSelection
    /** Chronological steps for the given transfer. */
    steps?: TransferInstanceStepGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceDetailsMessageGenqlSelection{
    /** Icon to display for the transfer detail message. */
    icon?: AppImageGenqlSelection
    /** Transfer detail message title. */
    title?: boolean | number
    /** Transfer detail message description. */
    description?: boolean | number
    /** Link for the transfer detail message. */
    link?: AppLinkGenqlSelection
    /** Link copy for verify email CTA. */
    verifyEmailCta?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceTimingMessageGenqlSelection{
    /** Icon to display for the transfer detail message. */
    icon?: AppImageGenqlSelection
    /** Link for the transfer timing CTA. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceDetailsCancelTransferGenqlSelection{
    /** Copy for the Cancel Transfer CTA. */
    cancelCtaCopy?: boolean | number
    /** Copy for the Confirm Cancel Transfer dialog. */
    cancelDialogCopy?: boolean | number
    /** Copy for the Confirm option on the Confirm Cancel Transfer dialog. */
    cancelDialogConfirmCtaCopy?: boolean | number
    /** Copy for the Cancel option on the Confirm Cancel Transfer dialog. */
    cancelDialogCancelCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferInstanceDetailsDisclaimerGenqlSelection{
    /** Copy to display for the disclaimer. */
    disclaimerCopy?: boolean | number
    /** Phone number to be linked to in disclaimerCopy */
    phoneNumber?: boolean | number
    /** Optional `AppLink` to be included with the disclaimer. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of options for choosing the focal point of a new smart transfer. */
export interface NewSmartTransferFocusOptionSetGenqlSelection{
    /** The list of options. */
    options?: NewSmartTransferFocusOptionGenqlSelection
    /** The options footer. */
    optionsFooter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An option for choosing the focal point and trigger of a smart transfer. */
export interface NewSmartTransferFocusOptionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The name of the option. */
    name?: boolean | number
    /** An optional description of the option. */
    description?: boolean | number
    /** True if the option is enabled for the user. */
    isEnabled?: boolean | number
    /** When `isEnabled` is false, an optional reason description. */
    disabledReasonDescription?: boolean | number
    /** A summary of how many available participants remain. */
    utilizationSummary?: boolean | number
    /** A list of available focus participants for this option. */
    focusParticipants?: TransferParticipantListGenqlSelection
    /** Requirements for editing a smart transfer created with this option. */
    editRequirements?: (SmartTransferRuleEditRequirementsGenqlSelection & { __args: {
    /** The selected focus participant. */
    focusParticipantId: Scalars['ID']} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Requirements for editing a smart transfer. */
export interface SmartTransferRuleEditRequirementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The focus option informing these edit requirements. */
    focusOption?: NewSmartTransferFocusOptionGenqlSelection
    /** The focus participant informing these edit requirements. */
    focusParticipant?: TransferParticipantGenqlSelection
    /** Descriptive preamble text setting up the trigger threshold input. */
    balanceThresholdPreamble?: boolean | number
    /** A short, descriptive label describing the "add new contra participant entry" action. */
    contraParticipantEntryAdditionLabel?: boolean | number
    /** Descriptive preamble text setting up the contra participant list input. */
    contraParticipantListPreamble?: boolean | number
    /** Requirements for editing the trigger applied to this smart transfer. */
    balanceTriggerEditRequirements?: SmartTransferBalanceTriggerEditRequirementsGenqlSelection
    /** Indicate whether the option to add an entry should be shown. */
    shouldShowContraParticipantEntryAddition?: { __args: {contraParticipantEntries: SmartTransferContraParticipantEntryInput[]} }
    /** Indicate whether the option to reorder entries should be shown. */
    shouldShowContraParticipantEntryReordering?: { __args: {contraParticipantEntries: SmartTransferContraParticipantEntryInput[]} }
    /** Options for choosing an additional contra participant entry. */
    newContraParticipantEntryOptionSet?: (NewSmartTransferContraParticipantEntryOptionSetGenqlSelection & { __args?: {
    /** The insertion context, if there is an existing list. */
    insertionContext?: (SmartTransferContraParticipantEntryInsertionContextInput | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Requirements for editing a smart transfer balance trigger. */
export interface SmartTransferBalanceTriggerEditRequirementsGenqlSelection{
    /** The type of balance trigger. */
    balanceTriggerType?: boolean | number
    /** The lowest option for trigger balance threshold, if any. */
    minBalanceTriggerThreshold?: boolean | number
    /** The highest option for trigger balance threshold, if any. */
    maxBalanceTriggerThreshold?: boolean | number
    /** An optional description about when the trigger will take action. */
    timingMessage?: (SmartTransferTriggerTimingMessageGenqlSelection & { __args?: {
    /** The balance trigger input from the user, if present. */
    balanceTrigger?: (SmartTransferBalanceTriggerInput | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A message about when a smart transfer will trigger. */
export interface SmartTransferTriggerTimingMessageGenqlSelection{
    /** The message description. */
    description?: boolean | number
    /** An optional link related to the message. */
    link?: AppLinkGenqlSelection
    /** The type of the message. */
    messageType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The insertion context for a new contra participant entry. */
export interface SmartTransferContraParticipantEntryInsertionContextInput {
/** The existing ordered list of contra participant entries. */
contraParticipantEntries: SmartTransferContraParticipantEntryInput[],
/** The zero-based index at which a new participant is being inserted. */
newEntryInsertionIndex: Scalars['Int']}


/** A set of options for choosing an additional contra participant entry. */
export interface NewSmartTransferContraParticipantEntryOptionSetGenqlSelection{
    /** The list of options. */
    options?: NewSmartTransferContraParticipantEntryOptionGenqlSelection
    /** A specific singular option. Temporary for Phase 1. */
    singularOption?: NewSmartTransferContraParticipantEntryOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A contra participant option. */
export interface NewSmartTransferContraParticipantEntryOptionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The name of the option. */
    name?: boolean | number
    /** An optional description of the option. */
    description?: boolean | number
    /** A list of available contra participants for this option. */
    contraParticipants?: TransferParticipantListGenqlSelection
    /** Requirements for editing the contra participant entry. While "contraParticipantId" is optional to allow for easier query patterns, resolving the field requires passing an ID. */
    editRequirements?: (SmartTransferContraParticipantEntryEditRequirementsGenqlSelection & { __args?: {
    /** The selected contra participant. */
    contraParticipantId?: (Scalars['ID'] | null)} })
    /** The title of the option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Requirements for editing a contra participant entry. */
export interface SmartTransferContraParticipantEntryEditRequirementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The TransferParticipant for this contra participant entry. */
    contraParticipant?: TransferParticipantGenqlSelection
    /** A short label describing the direction of funds through on the contra participant. */
    contraParticipantLabel?: boolean | number
    /** A flexible message regarding the details of the potential transfer. */
    detailsMessage?: TransferDetailsMessageGenqlSelection
    /** Descriptive preamble text setting up the fulfillment condition input. */
    fulfillmentConditionOptionSetPreamble?: boolean | number
    /** The option title text for display when none is selected. */
    fulfillmentConditionOptionEmptyTitle?: boolean | number
    /** The option description text for display when none is selected. */
    fulfillmentConditionOptionEmptyDescription?: boolean | number
    /** Descriptive preamble text setting up the fulfillment condition list. */
    fulfillmentConditionOptionSetListingPreamble?: boolean | number
    /** Options for choosing a fulfillment condition for this entry. */
    fulfillmentConditionOptionSet?: SmartTransferFulfillmentConditionOptionSetGenqlSelection
    /** A short title describing the edit requirements. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of fulfillment condition options. */
export interface SmartTransferFulfillmentConditionOptionSetGenqlSelection{
    /** The list of options. */
    options?: SmartTransferFulfillmentConditionOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A fulfillment condition option. */
export interface SmartTransferFulfillmentConditionOptionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The title of the option. */
    title?: boolean | number
    /** An optional description of the option. */
    description?: boolean | number
    /** Requirements for editing the fulfillment condition with this option. */
    fulfillmentConditionRequirements?: SmartTransferFulfillmentConditionEditRequirementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Requirements for editing a smart transfer fulfillment condition. */
export interface SmartTransferFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    on_SmartTransferIndefiniteFulfillmentConditionEditRequirements?: SmartTransferIndefiniteFulfillmentConditionEditRequirementsGenqlSelection
    on_SmartTransferCashBalanceCapFulfillmentConditionEditRequirements?: SmartTransferCashBalanceCapFulfillmentConditionEditRequirementsGenqlSelection
    on_SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements?: SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsGenqlSelection
    on_SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements?: SmartTransferIraYearlyFundingFulfillmentConditionEditRequirementsGenqlSelection
    on_SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements?: SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirementsGenqlSelection
    on_SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements?: SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirementsGenqlSelection
    on_SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements?: SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for an indefinite fulfillment condition. */
export interface SmartTransferIndefiniteFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for a cash balance cap fulfillment condition. */
export interface SmartTransferCashBalanceCapFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    /** The lowest option for cap amount, if any. */
    minCapAmount?: boolean | number
    /** The highest option for cap amount, if any. */
    maxCapAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for a funding per period fulfillment condition. */
export interface SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    /** List of funding period options for this fulfillment condition. */
    fundingPeriods?: SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOptionGenqlSelection
    /** The lowest option for balance threshold, if any. */
    minFundingAmount?: boolean | number
    /** The highest option for balance threshold, if any. */
    maxFundingAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOptionGenqlSelection{
    /** User-facing label for the option. */
    label?: boolean | number
    /** API-facing value for the option. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for an IRA yearly contribution max fulfillment condition. */
export interface SmartTransferIraYearlyFundingFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for an IRA funding per period max fulfillment condition. */
export interface SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    /** The lowest option for balance threshold, if any. */
    minFundingAmount?: boolean | number
    /** The highest option for balance threshold, if any. */
    maxFundingAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for an credit borrowed fulfillment condition. */
export interface SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    /** Minimum Borrow account amount condition should run to. */
    minBorrowedAmount?: boolean | number
    /** Maximum Borrow account amount condition should run to. */
    maxBorrowedAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurator for a credit utilization cap fulfillment condition. */
export interface SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirementsGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /**
     * @deprecated Unnecessary. Do not use.
     * A description suitable for including within a descriptive sentence.
     */
    inlineDescription?: boolean | number
    /** Minimum Borrow account utilization condition should run to. */
    minUtilization?: boolean | number
    /** Maximum Borrow account utilization condition should run to. */
    maxUtilization?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specification of one side of a transfer participant pair. */
export interface ContraTransferParticipantInput {
/** The side of the transaction that the participant exists on. */
side: TransferParticipantSideEnum,
/** The ID of the transfer participant. */
participantId: Scalars['ID']}


/** Information about a list of transfer participants. */
export interface TransferParticipantListGenqlSelection{
    /** True if the list has zero participants. */
    isEmpty?: boolean | number
    /** True if the list has exactly one participant. */
    isSingle?: boolean | number
    /** The list of transfer participants. */
    list?: TransferParticipantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Transfer groups are separated by transfer type.
 * ie: one-time or scheduled (AKA recurring)
 */
export interface TransferParticipantGroupsGenqlSelection{
    /** Eligible transfer participant pairs for one-time transfers. */
    oneTime?: TransferParticipantGroupGenqlSelection
    /** Eligible transfer participant pairs for scheduled (AKA recurring) transfers. */
    scheduled?: TransferParticipantGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer participant group contains eligible transfer pairs. */
export interface TransferParticipantGroupGenqlSelection{
    /** The list of eligible source transfer participants + pairs. */
    sourceParticipants?: TransferParticipantDetailsGenqlSelection
    /** The list of eligible destination transfer participants + pairs. */
    destinationParticipants?: TransferParticipantDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferParticipantDetailsGenqlSelection{
    /**
     * The account that is fetched by a composite key of
     * participantType and transferParticipantId.
     */
    account?: TransferParticipantGenqlSelection
    /**
     * @deprecated Access the registration from the above account sibling resolver instead.
     * The registration account type
     */
    registration?: boolean | number
    /** The list of eligible relationship pairs. */
    relationships?: TransferParticipantRelationshipGenqlSelection
    iraWithholding?: IraWithholdingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An eligible transfer participant pair and details relevant to that pair
 * (ie: min/max, timing message, etc)
 */
export interface TransferParticipantRelationshipGenqlSelection{
    /** Minimum amount required for transfer */
    min?: boolean | number
    /** Minimum amount error message */
    minErrorMessage?: boolean | number
    /** Maximum amount required for transfer */
    max?: boolean | number
    /** Maximum amount error message */
    maxErrorMessage?: boolean | number
    /** The default amount pills for the various create transfer screens. */
    amountPills?: AppPillGenqlSelection
    /** The source transfer participant. */
    source?: TransferParticipantGenqlSelection
    /** The list of eligible relationship pairs. */
    destination?: TransferParticipantGenqlSelection
    /** Whether the relationship is eligible for a scheduled transfer */
    isScheduledTransferSupported?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A participant in a transfer of money. */
export interface TransferParticipantGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    on_Account?: AccountGenqlSelection
    on_PersonalLoan?: PersonalLoanGenqlSelection
    on_CreditCardAccount?: CreditCardAccountGenqlSelection
    on_FundingSourceAccount?: FundingSourceAccountGenqlSelection
    on_SavingsAccount?: SavingsAccountGenqlSelection
    on_AchRelationshipViaDeposits?: AchRelationshipViaDepositsGenqlSelection
    on_AchRelationshipViaLink?: AchRelationshipViaLinkGenqlSelection
    on_BorrowAccount?: BorrowAccountGenqlSelection
    on_SpendAccount?: SpendAccountGenqlSelection
    on_PhysicalCheck?: PhysicalCheckGenqlSelection
    on_SpendExternalAccount?: SpendExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatTransferInstanceDetailsMessageGenqlSelection{
    /** Icon to display for the transfer detail message. */
    icon?: AppImageGenqlSelection
    /** Transfer detail message title. */
    title?: boolean | number
    /** Transfer detail message description. */
    description?: boolean | number
    /** Link for the transfer detail message. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatTransferInstanceDetailsGenqlSelection{
    /** The title for the ACAT transfer instance details screen. */
    title?: boolean | number
    /** The status AppPill for the ACAT transfer instance details. */
    pill?: AppPillGenqlSelection
    /** The account steps for the user's specific ACAT transfer. */
    steps?: AcatTransferInstanceStepGenqlSelection
    /** The optional transfer specific message for an ACAT transfer. */
    transferSpecificMessage?: AcatTransferInstanceDetailsMessageGenqlSelection
    /**
     * @deprecated Use `supportTicketNumber` instead.
     * The ticket number for the ACAT transfer.
     */
    zendeskTicketNumber?: boolean | number
    /** The ticket number for the ACAT transfer. */
    supportTicketNumber?: boolean | number
    /** An explainer for what happens next for the ACAT transfer. */
    nextSteps?: AcatTransferInstanceDetailsExplainerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatTransferInstanceDetailsExplainerGenqlSelection{
    /** The title for the ACAT transfer instance details explainer. */
    title?: boolean | number
    /** The next steps for the ACAT transfer instance details explainer. */
    steps?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatTransferInstanceStepGenqlSelection{
    /** The title for the ACAT transfer instance step. */
    title?: boolean | number
    /** The subtitle for the ACAT transfer instance step. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatTransferInstanceStatusGenqlSelection{
    /** The code for this status. */
    code?: boolean | number
    /** Whether the transfer instance is pending or not. */
    isPending?: boolean | number
    /** Whether the transfer instance is completed or not. */
    isCompleted?: boolean | number
    /** Whether the transfer instance is failed or not. */
    isFailed?: boolean | number
    /** Whether the transfer instance needs more information or not. */
    isNeedingInformation?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A discrete instance of an internal ACAT transfer. */
export interface AcatTransferInstanceGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The formatted start date for this ACAT transfer. */
    startDate?: boolean | number
    /** The formatted end date for this ACAT transfer. */
    endDate?: boolean | number
    /** The source account for this ACAT transfer. */
    source?: boolean | number
    /** The destination account for this ACAT transfer. */
    destination?: AccountGenqlSelection
    /** Designation of either full or partial for this ACAT transfer. */
    type?: boolean | number
    /** The total amount value for this ACAT transfer. */
    amount?: boolean | number
    /** Additional details for this ACAT transfer. */
    details?: AcatTransferInstanceDetailsGenqlSelection
    /** The status of this ACAT transfer. */
    status?: AcatTransferInstanceStatusGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A discrete instance of a transfer of money between two participants. */
export interface TransferInstanceGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The transfer instance status. */
    status?: TransferInstanceStatusGenqlSelection
    /** The title for this transfer instance. */
    title?: boolean | number
    /** An optional description for this transfer instance. */
    description?: boolean | number
    /** The time when the transfer instance was started. */
    startDate?: boolean | number
    /**
     * The time when the transfer instance ended. When the instance has not yet
     * ended, the value is null.
     */
    endDate?: boolean | number
    /**
     * The amount of money being transferred. When the exact amount is currently
     * unknown, the value is null.
     */
    amount?: boolean | number
    /**
     * True when the origin of the money being transferred is the liquidation of an
     * Invest account.
     */
    isLiquidation?: boolean | number
    /** True when the transfer is a sent check from Spend Checking. */
    isCheck?: boolean | number
    /** True when the transfer is a Credit Card payment. */
    isCreditCardPayment?: boolean | number
    /** True when the transfer is a Personal Loan payment. */
    isPersonalLoanPayment?: boolean | number
    /** True when the transfer is a Credit Card AutoPay payment. */
    isCreditCardAutoPayInstance?: boolean | number
    /** A card with additional important transfer information, if available. */
    additionalInfoCard?: AppInformationalMessageCardGenqlSelection
    /** True when the transfer is a Personal Loan AutoPay payment. */
    isPersonalLoanAutoPayInstance?: boolean | number
    /**
     * When the destination participant is an Invest IRA, the contribution year
     * option that was specified for the transfer by the user. Value could be null
     * when the transfer is an IRA contribution but the year option is unknown.
     */
    iraContributionYear?: boolean | number
    /**
     * When the source participant is an Invest IRA, the distribution reason that was
     * was specified for the transfer by the user. Value could be null when the
     * transfer is an IRA distribution but the distribution reason is unknown.
     */
    iraDistributionReason?: boolean | number
    /**
     * True when the IRA distribution reason requires verification to be completed
     * before the transfer can be completed.
     */
    iraDistributionReasonRequiresVerification?: boolean | number
    /** True when the transfer currently depends on sells completing first. */
    dependsOnSells?: boolean | number
    /** True when the transfer amount is greater than cash available for withdrawal (CAFW). */
    amountIsGreaterThanCashAvailable?: boolean | number
    /** True when the transfer currently depends on holds expiring first. */
    dependsOnHolds?: boolean | number
    /** A description of the projected timing for the transfer, if available. */
    timingDescription?: boolean | number
    /** The location that money is being transferred from. */
    from?: TransferParticipantGenqlSelection
    /** The location that money is being transferred to. */
    to?: TransferParticipantGenqlSelection
    /**
     * @deprecated Deprecated on `TransferInstance` and now lives on `TransferInstanceDetails`.
     * In some cases, the movement of money from one participant to another involves
     * moving the money through other intermediary accounts first. This is an ordered
     * list of steps that comprise the overall transfer. Only available when the
     * instance is loaded independently, outside of a list.
     */
    steps?: TransferInstanceStepGenqlSelection
    /** Content and necessary variables for the Transfer Details screen. */
    details?: TransferInstanceDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer instance status. */
export interface TransferInstanceStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** True when it is possible to cancel the transfer. */
    isCancelable?: boolean | number
    /** True when the transfer is pending (not in any terminal state). */
    isPending?: boolean | number
    /** True when the transfer has completed successfully. */
    isComplete?: boolean | number
    /** True when the transfer has been canceled. */
    isCanceled?: boolean | number
    /** True when the transfer has failed. */
    isFailed?: boolean | number
    /** True when the transfer is in any terminal state. */
    isEnded?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer instance step. */
export interface TransferInstanceStepGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The transfer instance step staus. */
    status?: TransferInstanceStepStatusGenqlSelection
    /** The title for this transfer instance step. */
    title?: boolean | number
    /** The time when the transfer instance step was started. */
    startDate?: boolean | number
    /**
     * The time when the transfer instance step ended. When the step has not yet
     * ended, the value is null.
     */
    endDate?: boolean | number
    /** The intermediary destination location. */
    to?: TransferParticipantGenqlSelection
    /** Enum that determines the UI of the arrow to display between steps. */
    arrow?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer instance step status. */
export interface TransferInstanceStepStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** True when the step is pending (not in any terminal state). */
    isPending?: boolean | number
    /** True when the step is in any teriminal state. */
    isEnded?: boolean | number
    /** True when the step did complete successfully. */
    isCompleted?: boolean | number
    /** A friendly description of the current status. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A rule used by the system for creating transfer instances automatically. */
export interface TransferRuleGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled?: boolean | number
    /** The title for the rule. */
    title?: boolean | number
    /**
     * @deprecated Deprecated on interface because not all `TransferRule`s have the same concept of `from` and `to`.
     * The location that money should be transferred from.
     */
    from?: TransferParticipantGenqlSelection
    /**
     * @deprecated Deprecated on interface because not all `TransferRule`s have the same concept of `from` and `to`.
     * The location that money should be transferred to.
     */
    to?: TransferParticipantGenqlSelection
    /**
     * @deprecated Deprecated on interface because this concept does not apply to all `TransferRule`s.
     * The transfer instance created from this rule most recently.
     */
    latestInstance?: TransferInstanceGenqlSelection
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance?: boolean | number
    on_SmartTransferRule?: SmartTransferRuleGenqlSelection
    on_ScheduledTransferRule?: ScheduledTransferRuleGenqlSelection
    on_OtherTransferRule?: OtherTransferRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer rule that creates instances based on a set of conditions. */
export interface SmartTransferRuleGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Message explaining why the rule might not be in a nominal state. */
    cautionStatusMessage?: boolean | number
    /** Is the user allowed to edit the rule? */
    isEditingEnabled?: boolean | number
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled?: boolean | number
    /** True when clients should disallow user toggling of the pause/unpause switch. */
    isPauseToggleDisabled?: boolean | number
    /** The title for the rule. */
    title?: boolean | number
    /** A description of the rule. */
    description?: boolean | number
    /** A longer, full description of the rule. */
    fullDescription?: boolean | number
    /**
     * @deprecated Not relevant for `SmartTransferRule`. Only present to implement `TransferRule` until this field is removed.
     * Not in use. Always returns null.
     */
    from?: TransferParticipantGenqlSelection
    /**
     * @deprecated Not relevant for `SmartTransferRule`. Only present to implement `TransferRule` until this field is removed.
     * Not in use. Always returns null.
     */
    to?: TransferParticipantGenqlSelection
    /**
     * @deprecated Not relevant for `SmartTransferRule`. Only present to implement `TransferRule` until this field is removed.
     * The transfer instance created from this rule most recently.
     */
    latestInstance?: TransferInstanceGenqlSelection
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance?: boolean | number
    /** A list of transfer instances created from this rule. */
    instances?: (TransferInstanceConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** True if there are any transfer instances created from this rule. */
    hasInstances?: boolean | number
    /** A description of how many transfers have been created. */
    transferCountDescription?: boolean | number
    /** The total dollar amount transferred since the rule was created. */
    totalTransferAmount?: boolean | number
    /** The participant at the focus of the smart transfer. */
    focusParticipant?: TransferParticipantGenqlSelection
    /** The trigger condition for the smart transfer. */
    balanceTrigger?: SmartTransferBalanceTriggerGenqlSelection
    /** The ordered list of contra participant entries (opposite the focus). */
    contraParticipantEntries?: SmartTransferContraParticipantEntryGenqlSelection
    /** The first element in `contraParticipantEntries`. Temporary for Phase 1. */
    initialContraParticipantEntry?: SmartTransferContraParticipantEntryGenqlSelection
    /** A set of requirements for editing this smart transfer. */
    editRequirements?: SmartTransferRuleEditRequirementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A smart transfer balance trigger. */
export interface SmartTransferBalanceTriggerGenqlSelection{
    /** The type of balance trigger. */
    balanceTriggerType?: boolean | number
    /** The amount at which the trigger fires. */
    balanceThreshold?: boolean | number
    /** For under-balance triggers, the optional refill target balance amount. */
    underBalanceRefillTarget?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A contra participant entry in a smart transfer. */
export interface SmartTransferContraParticipantEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The title for this contra participant entry. */
    title?: boolean | number
    /** The transfer instance created from this entry most recently. */
    latestInstance?: TransferInstanceGenqlSelection
    /** A list of transfer instances created from this entry. */
    instances?: (TransferInstanceConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** True if there are any transfer instances created from this entry. */
    hasInstances?: boolean | number
    /** A description of how many transfers have been created. */
    transferCountDescription?: boolean | number
    /** The total dollar amount transferred since the entry was created. */
    totalTransferAmount?: boolean | number
    /** The contra participant. */
    contraParticipant?: TransferParticipantGenqlSelection
    /** Configuration for editing this contra participant entry. */
    editRequirements?: SmartTransferContraParticipantEntryEditRequirementsGenqlSelection
    /** The condition under which when money will stop flowing. */
    fulfillmentCondition?: SmartTransferFulfillmentConditionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A smart transfer fulfillment condition. */
export interface SmartTransferFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    on_SmartTransferIndefiniteFulfillmentCondition?: SmartTransferIndefiniteFulfillmentConditionGenqlSelection
    on_SmartTransferCashBalanceCapFulfillmentCondition?: SmartTransferCashBalanceCapFulfillmentConditionGenqlSelection
    on_SmartTransferFundingPerPeriodFulfillmentCondition?: SmartTransferFundingPerPeriodFulfillmentConditionGenqlSelection
    on_SmartTransferIraYearlyFundingFulfillmentCondition?: SmartTransferIraYearlyFundingFulfillmentConditionGenqlSelection
    on_SmartTransferIraFundingPerPeriodFulfillmentCondition?: SmartTransferIraFundingPerPeriodFulfillmentConditionGenqlSelection
    on_SmartTransferCreditBorrowedCapFulfillmentCondition?: SmartTransferCreditBorrowedCapFulfillmentConditionGenqlSelection
    on_SmartTransferCreditUtilizationCapFulfillmentCondition?: SmartTransferCreditUtilizationCapFulfillmentConditionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the indefinite fulfillment condition. */
export interface SmartTransferIndefiniteFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the cash balance cap fulfillment condition. */
export interface SmartTransferCashBalanceCapFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    /** The cash balance cap amount. */
    capAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the funding per period fulfillment condition. */
export interface SmartTransferFundingPerPeriodFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    /** The funding amount. */
    fundingAmount?: boolean | number
    /** The time period. */
    fundingPeriod?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SmartTransferIraYearlyFundingFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SmartTransferIraFundingPerPeriodFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    /** The funding amount. */
    fundingAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SmartTransferCreditBorrowedCapFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    /** Borrow account amount condition will run to. */
    borrowAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SmartTransferCreditUtilizationCapFulfillmentConditionGenqlSelection{
    /** The type of fulfillment condition. */
    fulfillmentConditionType?: boolean | number
    /** A summary description of the fulfillment condition. */
    summary?: boolean | number
    /** "Borrow account utilization condition should run to. */
    utilization?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer rule that creates instances on a defined schedule. */
export interface ScheduledTransferRuleGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled?: boolean | number
    /** True, when the schedule is an instance of Credit Card AutoPay and false otherwise. */
    isCreditCardAutoPay?: boolean | number
    /** True, when the schedule is an instance of Personal Loan AutoPay and false otherwise. */
    isPersonalLoanAutoPay?: boolean | number
    /** A label for the scheduled transfer from the list view. */
    scheduledTransferListLabel?: boolean | number
    /** The preset value for the transfer schedule, if applicable. */
    schedulePresetIndicator?: boolean | number
    /** The title for the rule. */
    title?: boolean | number
    /** The location that money should be transferred from. */
    from?: TransferParticipantGenqlSelection
    /** The location that money should be transferred to. */
    to?: TransferParticipantGenqlSelection
    /** The transfer instance created from this rule most recently. */
    latestInstance?: TransferInstanceGenqlSelection
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance?: boolean | number
    /** Optional memo for the transfer schedule if applicable */
    memo?: boolean | number
    /** Recipient information for a check schedule. */
    sendCheckRecipient?: SendCheckRecipientEditRequirementsGenqlSelection
    /** The amount that should be transferred. */
    amount?: boolean | number
    /**
     * When the destination participant is an Invest IRA, the contribution year
     * option that was specified for the transfer rule by the user.
     */
    iraContributionYear?: boolean | number
    /**
     * When the source participant is an Invest IRA, the distribution reason that was
     * was specified for the transfer rule by the user.
     */
    iraDistributionReason?: boolean | number
    /**
     * True when the IRA distribution reason requires verification to be completed
     * before the transfer can be completed.
     */
    iraDistributionReasonRequiresVerification?: boolean | number
    /** A specification of the recurrence schedule. */
    schedule?: RecurrenceScheduleGenqlSelection
    /** The time when the rule was created. */
    createdDate?: boolean | number
    /** The time when the rule was last modified. */
    lastModifiedDate?: boolean | number
    /** The additional details for the given scheduled transfer. */
    additionalDetails?: ScheduledTransferRuleAdditionalDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ScheduledTransferRuleAdditionalDetailGenqlSelection{
    /** Label for the additional transfer rule detail. */
    label?: boolean | number
    /** Array of potential additional detail values to be displayed on the transfer rule detail. */
    values?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer rule of an unknown type. */
export interface OtherTransferRuleGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /**
     * True when the rule is currently enabled, and instances will be created. When
     * false, the rule is temporarily paused.
     */
    isEnabled?: boolean | number
    /** The title for the rule. */
    title?: boolean | number
    /**
     * @deprecated Deprecated on interface because not all `TransferRule`s have the same concept of `from` and `to`.
     * The location that money should be transferred from.
     */
    from?: TransferParticipantGenqlSelection
    /**
     * @deprecated Deprecated on interface because not all `TransferRule`s have the same concept of `from` and `to`.
     * The location that money should be transferred to.
     */
    to?: TransferParticipantGenqlSelection
    /**
     * @deprecated Deprecated on interface because this concept does not apply to all `TransferRule`s.
     * The transfer instance created from this rule most recently.
     */
    latestInstance?: TransferInstanceGenqlSelection
    /** True if there is currently a pending transfer instance from this rule. */
    hasPendingInstance?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestInitialDepositPromotionalTextGenqlSelection{
    /** The required promotional text header */
    header?: boolean | number
    /** The required promotional text body */
    text?: boolean | number
    /** The optional promotional text CTA */
    offersCta?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferValidationInput {
/**
 * The participant to transfer money from. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
sourceId: Scalars['ID'],
/**
 * The participant to transfer money to. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
destinationId: Scalars['ID'],
/** The dollar amount to transfer. */
amount: Scalars['Float'],
/**
 * The contribution year selection that must be specified when the destination
 * participant is an Invest IRA.
 */
iraContributionYear?: (IraContributionYearEnum | null),
/** The federal withholding specified by the user for an IRA distribution. */
federalWithholding?: (Scalars['Float'] | null),
/** The state withholding specified by the user for an IRA distribution. */
stateWithholding?: (Scalars['Float'] | null),
/** The type of withholding specified by the user for an IRA distribution. It can either be a percentage or dollar value. */
withholdingType?: (IraStateWithholdingTypeEnum | null),
/**
 * The dollar NIA (ie: Net Income Attributable) amount for an IRA transfer.
 * This value is only required for IRA distributions with a distribution reason of:
 * EXCESS_REMOVAL_BEFORE_TAX_DEADLINE
 */
niaAmount?: (Scalars['Float'] | null),
/**
 * If the transfer is a scheduled (AKA "recurring") transfer, those details
 * will be forwarded here.
 */
schedule?: (RecurrenceScheduleInput | null),
/** Transfer scenario */
scenario?: (TransferScenarioTypeEnum | null)}

export interface TransferValidationGenqlSelection{
    /** The title for the transfer validation screen. */
    title?: boolean | number
    /** The source participant for the transfer */
    sourceParticipant?: TransferParticipantGenqlSelection
    /** The destination participant for the transfer */
    destinationParticipant?: TransferParticipantGenqlSelection
    /**
     * The amount of money being transferred.
     * If it is an IRA distribution, the amount is the requested amount
     * less the federal and state withholding.
     */
    amount?: boolean | number
    /** Text shown with the amount */
    amountText?: boolean | number
    /** Whether the transfer qualifies as a liquidation. */
    isLiquidation?: boolean | number
    /** The line items associated with the transfer amount */
    amountLineItems?: TransferAmountLineItemGenqlSelection
    /**
     * The primary CTA button with a type associated with it that will be used
     * to determine the correct mutation to call.
     */
    primaryButton?: AppActionGenqlSelection
    /** The secondary CTA button */
    secondaryButton?: AppButtonGenqlSelection
    /** Primary messages are related to disclaimers and timing information. */
    primaryMessages?: TransferValidationMessageGenqlSelection
    /**
     * Secondary messages were originally intended for timing information,
     * but are not being populated at the moment.
     * As of 2/22/24, we decided to roll secondary messages into primary messages,
     * due to the styling being identical.
     * We are keeping this field to potentially use in the future.
     * The intention is that this field would be used if additional messages
     * were required in the future, with different styling than primaryMessages.
     */
    secondaryMessages?: TransferValidationMessageGenqlSelection
    /** Text associated with CTA buttons */
    ctaText?: RichTextContentGenqlSelection
    /** Validation disclosure content */
    disclosureContent?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferValidationMessageGenqlSelection{
    /** The type of validation message */
    type?: boolean | number
    /** Text associated with the message */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransferAmountLineItemGenqlSelection{
    /** The key for the line item */
    key?: boolean | number
    /** The label for the line item */
    label?: boolean | number
    /** The amount for the line item */
    value?: boolean | number
    /** The formatted dollar value for the line item */
    formattedValue?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ValueSnapshotGenqlSelection{
    /** The date and time of the snapshot, in ISO 8601 format. */
    asOf?: boolean | number
    /** The abolute dollar amount. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewerGenqlSelection{
    /** Content for screens that come before login & sign up, when the user is not yet Authenticated. */
    unauthenticated?: UnauthenticatedGenqlSelection
    /** List of all available accounts. */
    accounts?: (AccountConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), 
    /** When true, filter the list for only crypto accounts. */
    filterCryptoOnly?: (Scalars['Boolean'] | null), 
    /** When true, filter the list for only those accounts that are eligible to be selected as the payments account. The currently selected payments account may be included. Takes precendence over other filter arguments. */
    filterForPaymentsEligibility?: (Scalars['Boolean'] | null), 
    /** When true, filter the list for only retirement accounts. */
    filterForRetirementOnly?: (Scalars['Boolean'] | null), 
    /** When true, filter valid accounts for ACAT destinations. */
    filterForValidAcatDestinations?: (Scalars['Boolean'] | null), 
    /** When provided and non-empty, filter the list to include only accounts with a specified originator. */
    filterOriginator?: (AccountOriginatorEnum[] | null), 
    /** When provided and non-empty, filter the list to include only accounts with a specified registration. */
    filterRegistration?: ((BrokerAccountRegistrationEnum | null)[] | null), 
    /** When provided and non-empty, filter the list to include only accounts with a specified status. The default value is `[NEW, OPENED, REJECTED]`. */
    filterStatus?: (AccountStatusEnum[] | null), first?: (Scalars['Int'] | null)} })
    /** active security symbols */
    activeSecuritySymbols?: boolean | number
    /** Fetches an object given its ID */
    anyNode?: (NodeGenqlSelection & { __args: {
    /** The ID of an object */
    id: Scalars['ID']} })
    /** Fetches multiple objects given their IDs */
    anyNodes?: (NodeGenqlSelection & { __args: {ids: Scalars['ID'][]} })
    /** Borrow. */
    borrow?: BorrowGenqlSelection
    /** Entrypoint for Contact Us screen */
    contactUs?: ContactUsGenqlSelection
    /** Credit card. */
    credit?: CreditGenqlSelection
    /** Crypto. */
    crypto?: CryptoGenqlSelection
    /** Entry point for Document Upload Requests screen. */
    documentUploadRequestsCenter?: DocumentUploadRequestsCenterGenqlSelection
    /** A list of documents for all accounts. Value is null if documents are temporarily unavailable. */
    documents?: (DocumentConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), 
    /** The type of documents to include. */
    documentType?: (DocumentTypeFilterEnumType | null), 
    /** End date, inclusive, in YYYY-MM-DD format. */
    endDate?: (Scalars['String'] | null), 
    /** A document filter setting. Default is to include all document types. */
    filter?: (DocumentFilterInput | null), first?: (Scalars['Int'] | null), 
    /** A list of options to sort by. Default is by date descending, then type descending, then account descending. */
    sort?: (DocumentSortOptionInput[] | null), 
    /** Start date, inclusive, in YYYY-MM-DD format. */
    startDate?: (Scalars['String'] | null)} })
    /** HYSA and Cash Accounts */
    earn?: EarnGenqlSelection
    /** Email verification page copy and illustration */
    emailVerificationPage?: EmailVerificationPageGenqlSelection
    /** Feature flags for this viewer. Value will be null if the feature flag system is temporarily unavailable. */
    featureFlags?: FeatureFlagsGenqlSelection
    /** Feedback Form in Settings */
    feedbackForm?: FeedbackFormGenqlSelection
    /** Funding sources from external accounts */
    fundingSources?: FundingSourcesGenqlSelection
    /** The ID of this node. */
    id?: boolean | number
    /** Invest. */
    invest?: InvestGenqlSelection
    /** Information about current IRS regulations. */
    irsRegulations?: IrsRegulationsGenqlSelection
    /** Value is `true` when the user is authenticated, `false` otherwise. */
    isAuthenticated?: boolean | number
    /** The latest agreement bundle. */
    latestAgreements?: AgreementBundleGenqlSelection
    /** Information about markets. */
    markets?: MarketsGenqlSelection
    /** Net worth data */
    netWorth?: NetWorthGenqlSelection
    /** Notifications. */
    notifications?: NotificationsGenqlSelection
    /** Onboarding */
    onboarding?: OnboardingGenqlSelection
    /** Overview. */
    overview?: OverviewGenqlSelection
    /**
     * @deprecated Use sharedPie instead.
     * Experimental. Attempt to read a pie edit model from a pie share token. Value will be null if token is not valid.
     */
    pieEditModelForShareToken?: { __args: {
    /** A pie share token. */
    shareToken: Scalars['String']} }
    sharedPie?: (SharedPieGenqlSelection & { __args: {
    /** A pie share token. */
    shareToken: Scalars['String']} })
    /** Plus. */
    plus?: PlusGenqlSelection
    /** Retrieve profile information for the viewer. Value is null if no profile information has been established. */
    profile?: ProfileGenqlSelection
    /** Authenticated Promotions */
    promotions?: PromotionsGenqlSelection
    /** Attempt to read a serialized pie edit model. Value will be null if the edit model input is not valid. */
    readPieEditModel?: (PieEditModelGenqlSelection & { __args: {
    /** A serialized pie edit model. */
    editModel: Scalars['String']} })
    /** Information about referrals get and give amounts, along with referral title for a unauthenticated visitors. */
    referralOffer?: ReferralOfferGenqlSelection
    /** Research. */
    research?: ResearchGenqlSelection
    /** B2 Savings Accounts */
    save?: SaveGenqlSelection
    /** Returns funds that match the selection criteria. */
    screenFunds?: (FundScreenerConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), 
    /** A path within the fund category hierarchy to filter results by. Default is no filter. */
    filterCategory?: (Scalars['String'][] | null), 
    /** A list of security statuses to filter results by. Default is only active securities. */
    filterStatuses?: (SecurityStatusEnum[] | null), first?: (Scalars['Int'] | null), 
    /** A list of options to limit results by. Default is no limits. */
    limit?: (FundLimitOptionInput[] | null), 
    /** A list of options to sort results by. Default is an undefined sort. */
    sort?: (FundSortOptionInput[] | null)} })
    /** Returns securities that match the selection criteria. */
    screenSecurities?: (SecurityScreenerConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), 
    /** A path within the security category hierarchy to filter results by. Default is no filter. */
    filterCategory?: (Scalars['String'][] | null), 
    /** A list of security statuses to filter results by. Default is only active securities. */
    filterStatuses?: (SecurityStatusEnum[] | null), 
    /** A list of security types to filter results by. Default is no filter. */
    filterTypes?: (SecurityTypeEnum[] | null), first?: (Scalars['Int'] | null), 
    /** A list of options to limit results by. Default is no limits. */
    limit?: (SecurityLimitOptionInput[] | null), 
    /** A list of options to sort results by. Default is an undefined sort. */
    sort?: (SecuritySortOptionInput[] | null)} })
    /** Returns system pies that match the selection criteria. */
    screenSystemPies?: (SystemPieScreenerConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), 
    /** A path within the system pie category hierarchy to filter results by. Default is no filter. */
    filterCategory?: (Scalars['String'][] | null), 
    /** A list of system pie statuses to filter results by. Default is only active system pies. */
    filterStatuses?: (SystemPieStatusEnum[] | null), first?: (Scalars['Int'] | null), 
    /** A list of options to limit results by. Default is no limits. */
    limit?: (SystemPieLimitOptionInput[] | null), 
    /** A list of options to sort results by. Default is an undefined sort. */
    sort?: (SystemPieSortOptionInput[] | null)} })
    /** Returns securities that match the selection criteria. */
    searchSliceables?: (SliceableConnectionGenqlSelection & { __args: {after?: (Scalars['String'] | null), 
    /** A list of sliceable statuses to filter results by. Default is only active sliceables. */
    filterStatuses?: (SliceableStatusEnum[] | null), 
    /** A list of sliceable types to filter results by. Default is no filter. */
    filterTypes?: (SliceableTypeEnum[] | null), first?: (Scalars['Int'] | null), 
    /** Free-form query text used to search for sliceables. */
    query: Scalars['String']} })
    /** Retrieve securities by their symbols. */
    securities?: (SecurityGenqlSelection & { __args: {symbols: Scalars['String'][]} })
    /** Security details is used for pages.m1.com security details pages. */
    securityDetails?: (SecurityDetailsGenqlSelection & { __args: {symbol: Scalars['String']} })
    /** Settings. */
    settings?: SettingsGenqlSelection
    /** Sets of sliceables for showcase display. Value is null when the showcase is disabled. */
    sliceableShowcase?: SliceableShowcaseGenqlSelection
    /** Spend Checking. */
    spend?: SpendGenqlSelection
    /** Support. */
    support?: SupportGenqlSelection
    /** Retrieve system pie by their key. */
    systemPiesByKey?: (SystemPieGenqlSelection & { __args: {keys: Scalars['String'][]} })
    /** Transfers. */
    transfers?: TransfersGenqlSelection
    /** The current user. Value is null when unauthenticated. */
    user?: UserGenqlSelection
    /** Retrieve all available user pies. */
    userPies?: (UserPieConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), before?: (Scalars['String'] | null), first?: (Scalars['Int'] | null), 
    /** Indicates whether query is for Crypto pies or not. */
    isCrypto?: (Scalars['Boolean'] | null), last?: (Scalars['Int'] | null)} })
    /** Announcements. */
    announcements?: AnnouncementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QueryGenqlSelection{
    /** Information for a specific client type and version. Value is null if the client is not recognized. */
    client?: (ClientInfoGenqlSelection & { __args: {
    /** A client identifier. Expected format is: `${type}/${semver}`. Takes precedence over client identifers sent outside the query. (Like the `X-Client-Id` HTTP header.) */
    id?: (Scalars['String'] | null), 
    /** A client type identifier. */
    type?: (Scalars['String'] | null), 
    /** A client version string. */
    version?: (Scalars['String'] | null)} })
    viewer?: ViewerGenqlSelection
    /** Fetches an object given its ID */
    node?: (NodeGenqlSelection & { __args: {
    /** The ID of an object */
    id: Scalars['ID']} })
    /** Fetches multiple objects given their IDs */
    nodes?: (NodeGenqlSelection & { __args: {ids: Scalars['ID'][]} })
    system?: SystemInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `registerUser` mutation. */
export interface RegisterUserInput {clientMutationId?: (Scalars['String'] | null),
/** A username. */
username: Scalars['String'],
/** A password. */
password: Scalars['String'],
/** An optional referrer code. */
referrerCode?: (Scalars['String'] | null),
/** An optional affiliate code. */
affiliateCode?: (Scalars['String'] | null),
/** Optional information about the referring marketing campaign, if available. */
attribution?: (CampaignAttributionInput | null),
/** Optional promotion code to apply to the user. */
promoCode?: (Scalars['String'] | null),
/** The signature associated with the Terms and Conditions a user must accept when signing up with a promo code. */
promoCodeBundleSignature?: (Scalars['String'] | null)}


/** Information about a referring campaign. */
export interface CampaignAttributionInput {
/** The referrer (`utm_source`). */
source: Scalars['String'],
/** The marketing medium (`utm_medium`). */
medium: Scalars['String'],
/** The campaign name (`utm_campaign`). */
campaign: Scalars['String'],
/** The paid term (`utm_term`). */
term?: (Scalars['String'] | null),
/** The content identifier (`utm_content`). */
content?: (Scalars['String'] | null)}


/** Payload for the `registerUser` mutation. */
export interface RegisterUserPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: RegisterUserOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: RegisterUserResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    username?: boolean | number
    /** @deprecated Use `outcome` instead. */
    accessToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    refreshToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    expiresIn?: boolean | number
    /** @deprecated Use `outcome` instead. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `registerUser` mutation. */
export interface RegisterUserOutcomeGenqlSelection{
    /** The username of this user. */
    username?: boolean | number
    /** The access token. */
    accessToken?: boolean | number
    /** The refresh token. */
    refreshToken?: boolean | number
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    /** Outcome screen content after a user registers with a promoCode. */
    promotionSignUpOutcomePage?: AppInfoPageGenqlSelection
    /** The event to track for analytics. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RegisterUserResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `queueLoanDisbursement` mutation. */
export interface QueueLoanDisbursementInput {clientMutationId?: (Scalars['String'] | null),
/** The loan ID for the personal loan being disbursed. */
loanId: Scalars['String'],
/** The transfer participant ID for the desired disbursement account destination. */
transferParticipantId: Scalars['String']}


/** Payload for the `queueLoanDisbursement` mutation. */
export interface QueueLoanDisbursementPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: QueueLoanDisbursementOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `queueLoanDisbursement` mutation. */
export interface QueueLoanDisbursementOutcomeGenqlSelection{
    /** Analytics event for the successful distribution of personal loan funds. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `openAccount` mutation. */
export interface OpenAccountInput {clientMutationId?: (Scalars['String'] | null),
/** Registation type of investment account to open. */
registration: OnlineAccountRegistrationEnum,
/** The social security number of the primary account holder. Only required when a user profile does not exist yet. */
primarySsn?: (Scalars['SocialSecurityNumber'] | null),
/** The social security number of the secondary account holder. Only required for joint accounts. */
secondarySsn?: (Scalars['SocialSecurityNumber'] | null),
/** No longer applicable. Stop sending this input so that it can be removed. */
beneficiarySsns?: (Scalars['SocialSecurityNumber'][] | null),
/**
 * Information about the primary account holder. Required if this is the first
 * account with a primary account holder; ignored otherwise.
 */
primary?: (NewAccountHolderInput | null),
/**
 * Information about the secondary account holder. Required for joint accounts if
 * this is the first account with a secondary account holder; ignored otherwise.
 */
secondary?: (NewAccountHolderInput | null),
/**
 * Suitability information about the applicant(s). Required if this is the first
 * account with a primary account holder; ignored otherwise.
 */
suitability?: (SuitabilityProfileInput | null),
/** Optionally set the root pie for the account. Default is opening the account with no root pie set. */
rootPieId?: (Scalars['ID'] | null),
/** The user has opted-into receive information about initial transfers. Default is false. */
transferInfoOptIn?: (Scalars['Boolean'] | null),
/** Superceded by `signature` input. Stop sending a value for this so that it can be removed. */
eSigned?: (Scalars['Boolean'] | null),
/**
 * The signature of the agreement bundle. If not provided, then `eSigned` must be
 * specified and `true`. In the future `eSigned` will be removed and this field
 * will be required.
 */
signature?: (Scalars['String'] | null),
/** Information about the user's trusted account. */
trustedContact?: (TrustedContactInput | null),
/** Optional fully paid lending status - Not all account registration types are eligible. For Apex cleared accounts - FPL status must be updated before initiating account opening. */
fplStatus?: (Scalars['Boolean'] | null)}


/** Input for the `openCustodialAccount` mutation. */
export interface OpenCustodialAccountInput {clientMutationId?: (Scalars['String'] | null),
/** Information about the custodial account holder (beneficiary). */
custodialAccountBeneficiary: NewCustodialAccountBeneficiaryInput,
/** The custodial account beneficiary's social security number */
custodialAccountBeneficiarySsn: Scalars['SocialSecurityNumber'],
/** The signature of the agreement bundle. */
signature: Scalars['String']}


/** Payload for the `openAccount` mutation. */
export interface OpenAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: OpenAccountOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: OpenAccountResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    viewer?: ViewerGenqlSelection
    /** @deprecated Use `outcome` instead. */
    accountEdge?: AccountEdgeGenqlSelection
    /** @deprecated Use `outcome` instead. */
    account?: AccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `openAccount` mutation. */
export interface OpenAccountOutcomeGenqlSelection{
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    /** Retrieve the newly-created account. */
    account?: AccountGenqlSelection
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OpenAccountResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for the `openCustodialAccount` mutation. */
export interface OpenCustodialAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: OpenCustodialAccountOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `openCustodialAccount` mutation. */
export interface OpenCustodialAccountOutcomeGenqlSelection{
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    /** Retrieve the newly-created account. */
    account?: AccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `updateProfile` mutation. */
export interface UpdateProfileInput {clientMutationId?: (Scalars['String'] | null),
/** Updated profile information. */
profile: ProfileInput,
/** The initial product for a given user when they were onboarded. This value can be null to leave the corresponding BE value in-tact. */
productSelection?: (ProductListIdentifier | null)}


/** Payload for the `updateProfile` mutation. */
export interface UpdateProfilePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: UpdateProfileOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: UpdateProfileResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    viewer?: ViewerGenqlSelection
    /** @deprecated Use `outcome` instead. */
    profile?: ProfileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `updateProfile` mutation. */
export interface UpdateProfileOutcomeGenqlSelection{
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    /** Retrieve the updated profile. */
    profile?: ProfileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateProfileResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CompleteDocumentUploadRequestInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the associated document upload request. */
documentUploadRequestId: Scalars['ID']}

export interface CompleteDocumentUploadRequestPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CompleteDocumentUploadInput {clientMutationId?: (Scalars['String'] | null),
/** The associated service for the uploaded document. */
associatedService?: (DocumentAssociatedService | null),
/** The business purpose for the uploaded document. */
businessPurpose?: (DocumentBusinessPurpose | null)}

export interface CompleteDocumentUploadPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `linkExternalAccounts` mutation. */
export interface LinkExternalAccountsInput {clientMutationId?: (Scalars['String'] | null),
/** The `public_token` generated by Plaid Link. */
plaidLinkPublicToken: Scalars['String'],
/**
 * Use an Invest account ID to specify an identity with which to associate the
 * linked accounts. Only use this when linking accounts for use with a specific
 * Invest account. Otherwise, omit and the linked accounts will be associated
 * with the authenticated user.
 */
accountId?: (Scalars['ID'] | null)}


/** Payload for the `linkExternalAccounts` mutation. */
export interface LinkExternalAccountsPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: LinkExternalAccountsOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: LinkExternalAccountsResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    account?: AccountGenqlSelection
    /** @deprecated Use `outcome` instead. */
    externalAccountEdges?: ExternalAccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `linkExternalAccounts` mutation. */
export interface LinkExternalAccountsOutcomeGenqlSelection{
    /** The external accounts that were linked with the supplied token. */
    linkedExternalAccounts?: ExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LinkExternalAccountsResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `refreshEstimatedTrading` mutation. */
export interface RefreshEstimatedTradingInput {clientMutationId?: (Scalars['String'] | null),
/** The `EstimatedTrading` ID that should be refreshed. */
estimatedTradingId: Scalars['ID']}


/** Payload for the `refreshEstimatedTrading` mutation. */
export interface RefreshEstimatedTradingPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: RefreshEstimatedTradingOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: RefreshEstimatedTradingResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    estimatedTrading?: EstimatedTradingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `refreshEstimatedTrading` mutation. */
export interface RefreshEstimatedTradingOutcomeGenqlSelection{
    /** The updated estimated trading information. */
    estimatedTrading?: EstimatedTradingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RefreshEstimatedTradingResultGenqlSelection{
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setSmartTransferRule` mutation. */
export interface SetSmartTransferRuleInput {clientMutationId?: (Scalars['String'] | null),
/**
 * Specify a `SmartTransferRule` ID to update an existing rule. Otherwise, a new
 * smart transfer rule is created.
 */
existingSmartTransferRuleId?: (Scalars['ID'] | null),
/**
 * The `TransferParticipant` that is the focus of the rule. Required when
 * creating a new smart transfer, and ignored otherwise.
 */
focusParticipantId?: (Scalars['ID'] | null),
/** The trigger for the smart transfer to take action. */
balanceTrigger: SmartTransferBalanceTriggerInput,
/** An ordered list of contra participant entries for the smart transfer. */
contraParticipantEntries: SmartTransferContraParticipantEntryInput[],
/** Smart transfer rule scenario. */
scenario?: (TransferScenarioTypeEnum | null)}


/** Input for creating an smart transfer balance trigger. */
export interface SmartTransferBalanceTriggerInput {
/** The type of balance trigger. */
balanceTriggerType: SmartTransferBalanceTriggerTypeEnum,
/** The amount at which the trigger fires. */
balanceThreshold: Scalars['Float'],
/** For under-balance triggers, the optional refill target balance amount. */
underBalanceRefillTarget?: (Scalars['Float'] | null)}


/** A single smart transfer contra participant entry. */
export interface SmartTransferContraParticipantEntryInput {
/**
 * Provide a `SmartTransferContraParticipantEntry` ID to update an existing
 * contra particiant entry. Otherwise, a new contra participant entry is created.
 */
existingContraParticipantEntryId?: (Scalars['ID'] | null),
/**
 * The contra `TransferParticipant`. Required when creating a new contra
 * participant entry. When `existingContraParticipantEntryId` is provided, this
 * input is not necessary. If both `existingContraParticipantEntryId` and
 * `contraParticipantId` are provided and `existingContraParticipantEntryId`
 * refers to an entry with a different contra participant, it is an error.
 */
contraParticipantId?: (Scalars['ID'] | null),
/** The fulfillment condition for this contra participant entry. */
fulfillmentCondition: SmartTransferFulfillmentConditionInput}


/** Input for specifying a fulfillment condition. */
export interface SmartTransferFulfillmentConditionInput {
/** The type of fulfillment condition. */
fulfillmentConditionType: SmartTransferFulfillmentConditionTypeEnum,
/** Required for `CASH_BALANCE_CAP`. The cash balance cap amount. */
capAmount?: (Scalars['Float'] | null),
/** Required for `FUNDING_PER_PERIOD`. The max funding amount. */
fundingAmount?: (Scalars['Float'] | null),
/** Required for `FUNDING_PER_PERIOD`. Also used for all `IRA_{{ PERIOD }}_FUNDING_PER_PERIOD`. The time period. */
fundingPeriod?: (SmartTransferFundingTimePeriodEnum | null),
/** Required for `CREDIT_BORROWED_CAP`. The Borrow cap amount. */
borrowAmount?: (Scalars['Float'] | null),
/** Required for `CREDIT_UTILIZATION_CAP`. The percent Borrow utilization. */
borrowUtilization?: (Scalars['Int'] | null)}


/** Payload for the `setSmartTransferRule` mutation. */
export interface SetSmartTransferRulePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetSmartTransferRuleOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setSmartTransferRule` mutation. */
export interface SetSmartTransferRuleOutcomeGenqlSelection{
    /** The newly-created or now-updated smart transfer rule. */
    rule?: SmartTransferRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setEnabledOnTransferRule` mutation. */
export interface SetEnabledOnTransferRuleInput {clientMutationId?: (Scalars['String'] | null),
/**
 * The ID of the `TransferRule` to enable or disable. Must be an ID for a type
 * that implements the `TransferRule` interface.
 */
transferRuleId: Scalars['ID'],
/** The enabled status to set on the rule. */
isEnabled: Scalars['Boolean']}


/** Payload for the `setEnabledOnTransferRule` mutation. */
export interface SetEnabledOnTransferRulePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetEnabledOnTransferRuleOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setEnabledOnTransferRule` mutation. */
export interface SetEnabledOnTransferRuleOutcomeGenqlSelection{
    /** The updated transfer rule. */
    rule?: TransferRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `createAccountDocumentLink` mutation. */
export interface CreateAccountDocumentLinkInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the account document. */
accountDocumentId: Scalars['ID']}


/** Payload for the `createAccountDocumentLink` mutation. */
export interface CreateAccountDocumentLinkPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateAccountDocumentLinkOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `createAccountDocumentLink` mutation. */
export interface CreateAccountDocumentLinkOutcomeGenqlSelection{
    /** The temporary URL to the document. It will expire after time. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** "Input for the `generatePlaidLinkItemAddClientToken` mutation. */
export interface GeneratePlaidLinkItemAddClientTokenInput {clientMutationId?: (Scalars['String'] | null),fundingSourceId?: (Scalars['String'] | null),automatedMicroEnabled?: (Scalars['Boolean'] | null),sameDayMicroEnabled?: (Scalars['Boolean'] | null)}


/** Payload for the `generatePlaidLinkItemAddClientToken` mutation. */
export interface GeneratePlaidLinkItemAddClientTokenPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: GeneratePlaidLinkItemAddClientTokenOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `generatePaymentClientToken` mutation. */
export interface GeneratePlaidLinkItemAddClientTokenOutcomeGenqlSelection{
    /** Token used to connect to establish an ACH relationship via Plaid. */
    plaidLinkItemAddToken?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `generatePaymentClientToken` mutation. */
export interface GeneratePaymentClientTokenInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `generatePaymentClientToken` mutation. */
export interface GeneratePaymentClientTokenPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: GeneratePaymentClientTokenOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `generatePaymentClientToken` mutation. */
export interface GeneratePaymentClientTokenOutcomeGenqlSelection{
    /** Token used to initialize the payment client. Expires after 24 hours. */
    clientToken?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `generatePresignedDocumentUploadRequestUrl` mutation. */
export interface GeneratePresignedDocumentUploadRequestUrlInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the document upload request. */
documentUploadRequestId: Scalars['ID'],
/**
 * The Document type a user claims to be uploading.
 * This value is to be derived from the `DocumentUploadOption` the user selected.
 * This value is intentionally typed as a String instead of an Enum to allow BE the flexibility to add/remove values without any FE changes.
 */
documentType: Scalars['String'],
/** The file name for the document as defined by the user. */
fileName: Scalars['String']}


/**
 * Input for the `generateGenericPresignedDocumentUrl` mutation.
 * Note: This input is similar to `GeneratePresignedUrlInput` but with optional fields.
 */
export interface GenerateGenericPresignedDocumentUrlInput {clientMutationId?: (Scalars['String'] | null),
/**
 * Optional information about the business purpose that the document upload is related to.
 * It is optional due to being added after the initial implementation.
 */
businessPurpose?: (DocumentBusinessPurpose | null),
/**
 * Optional information about the service that the document upload is associated with.
 * It is optional due to being added after the initial implementation.
 */
associatedService?: (DocumentAssociatedService | null),
/** The file name for the document as defined by the user. */
fileName: Scalars['String']}


/** Input for the `generatePresignedUrl` mutation. */
export interface GeneratePresignedUrlInput {clientMutationId?: (Scalars['String'] | null),
/** Information about the business purpose that the document upload is related to. */
businessPurpose: DocumentBusinessPurpose,
/** Information about the type of the document to upload. */
documentType: DocumentUploadKindEnum,
/** Information about the service that the document upload is associated with. */
associatedService: DocumentAssociatedService,
/** The file name for the document as defined by the user. */
fileName: Scalars['String']}


/** Payload for the `generatePresignedUrl` mutation. */
export interface GeneratePresignedUrlPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    outcome?: GeneratePresignedUrlOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for the `generateGenericPresignedDocumentUrl` mutation. */
export interface GenerateGenericPresignedDocumentUrlPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    outcome?: GenerateGenericPresignedDocumentUrlOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `generatePresignedUrl` mutation. */
export interface GeneratePresignedUrlOutcomeGenqlSelection{
    /** Presigned S3 url for upload. Will expire shortly after it's created. */
    presignedUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `generateGenericPresignedDocumentUrl` mutation. */
export interface GenerateGenericPresignedDocumentUrlOutcomeGenqlSelection{
    /** The timeout in seconds of the idempotency constraints for limiting file uploads. */
    idempotencyTimeout?: boolean | number
    /** Presigned S3 url for upload. Will expire shortly after it's created. */
    presignedUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setNotificationPreferences` mutation. */
export interface SetNotificationPreferencesInput {clientMutationId?: (Scalars['String'] | null),
/** Transfer completion notification preferences. Null means no changes. */
transferCompletion?: (TransferCompletionNotificationPreferencesInput | null),
/** Invest activity notification preferences. Null means no changes. */
investActivity?: (InvestActivityNotificationsPreferencesInput | null),
/** Spend Checking transaction notification preferences. Null means no changes. */
spendTransaction?: (SpendTransactionNotificationPreferencesInput | null)}


/** Preferences for transfer completion notifications. */
export interface TransferCompletionNotificationPreferencesInput {
/** Send via push notification. Send null to leave unchanged. */
sendViaPush?: (Scalars['Boolean'] | null),
/** Send via email. Send null to leave unchanged. */
sendViaEmail?: (Scalars['Boolean'] | null)}


/** Preferences for Invest activity notifications. */
export interface InvestActivityNotificationsPreferencesInput {
/** Send via push notification. Send null to leave unchanged. */
sendViaPush?: (Scalars['Boolean'] | null),
/** Send via email. Send null to leave unchanged. */
sendViaEmail?: (Scalars['Boolean'] | null)}


/** Preferences for Spend Checking transaction notifications. */
export interface SpendTransactionNotificationPreferencesInput {
/** Send via push notification. Send null to leave unchanged. */
sendViaPush?: (Scalars['Boolean'] | null),
/** Send via email. Send null to leave unchanged. */
sendViaEmail?: (Scalars['Boolean'] | null)}


/** Payload for the `setNotificationPreferences` mutation. */
export interface SetNotificationPreferencesPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetNotificationPreferencesOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setNotificationPreferences` mutation. */
export interface SetNotificationPreferencesOutcomeGenqlSelection{
    /** The updated preferences. */
    preferences?: NotificationPreferencesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `applyPromotionCode` mutation. */
export interface ApplyPromotionCodeInput {clientMutationId?: (Scalars['String'] | null),code: Scalars['String']}


/** Payload for the `applyPromotionCode` mutation. */
export interface ApplyPromotionCodePayloadGenqlSelection{
    clientMutationId?: boolean | number
    result?: ApplyPromotionCodeResultGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApplyPromotionCodeResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `markUnmanagedHoldingsForLiquidation` mutation. */
export interface MarkUnmanagedHoldingsForLiquidationInput {clientMutationId?: (Scalars['String'] | null),
/** An array of umanaged holding ids to be marked for liquidation. */
unmanagedHoldingIds: Scalars['ID'][]}


/** Outcome for the `markUnmanagedHoldingsForLiquidation` mutation. */
export interface MarkUnmanagedHoldingsForLiquidationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** A flag representing whether or not the mutation was succesful. */
    didSucceed?: boolean | number
    /** Retrieve the newly updated Account. */
    account?: AccountGenqlSelection
    /** Copy to be rendered that describes an error detected during the mutation. This can be due to either a complete or partial error. */
    errorMessage?: boolean | number
    /** Copy to be rendered if the mutation succeeds. */
    successMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `unmarkUnmanagedHoldingsForLiquidation` mutation. */
export interface UnmarkUnmanagedHoldingsForLiquidationInput {clientMutationId?: (Scalars['String'] | null),
/** An array of unmanaged holding ids to be unmarked. */
unmanagedHoldingIds: Scalars['ID'][]}


/** Outcome for the `unmarkUnmanagedHoldingsForLiquidation` mutation. */
export interface UnmarkUnmanagedHoldingsForLiquidationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** A flag representing whether or not the mutation was succesful. */
    didSucceed?: boolean | number
    /** Retrieve the newly updated Account. */
    account?: AccountGenqlSelection
    /** Copy to be rendered that describes an error detected during the mutation. This can be due to either a complete or partial error. */
    errorMessage?: boolean | number
    /** Copy to be rendered if the mutation succeeds. */
    successMessage?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `moveSlices` mutation. */
export interface MoveSlicesInput {clientMutationId?: (Scalars['String'] | null),
/** A serialized representation of the Source Pie from which slices are being moved from. */
sourcePieSerialized: Scalars['String'],
/** A serialized representation of the Destination Pie tree for which slices are being moved to. */
destinationPieSerialized: Scalars['String'],
/** A list of PortfolioSliceIds that represent each Slice from which value is being moved from with a Source Pie. */
moveSliceIds: Scalars['ID'][],
/** The PortfolioSliceId of the Source Pie from which value is being moved from. */
sourcePiePortfolioSliceId: Scalars['ID'],
/** The PortfolioSliceId of the Destination Pie which the value is being moved to. */
destinationPiePortfolioSliceId: Scalars['ID'],
/** A serialized representation of the Source Pie as it exists in the database, excluding changes that have been made within the Move Slices flow. */
sourcePieBeforeUpdatesSerialized: Scalars['String']}

export interface MoveSlicesBatchInput {clientMutationId?: (Scalars['String'] | null),
/** Array of moves to be applied in order */
moves: MoveSlicesInput[],
/** The final state of the valid pie tree, inclusive of all edits, when the user clicks save */
finalPieTreeInput: UpdatePieTreeInput}


/** Outcome for the `moveSlices` mutation. */
export interface MoveSlicesPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** Boolean that represents success state of the mutation. Considers both complete and partial errors. */
    didSucceed?: boolean | number
    /** Retrieve the newly updated Account. */
    account?: AccountGenqlSelection
    /** Copy to rendered if the mutation was successful, null otherwise. If non-null, neither a complete nor partial error was detected. */
    successMessage?: boolean | number
    /** Copy to be rendered if the mutation was unsuccessful, null otherwise. If non-null, either a complete or partial error was detected. */
    errorMessage?: boolean | number
    /** A descriptive error code that is intentionally defined as a String instead of an Enum to support future flexibility. For client messaging, rely on 'errorMessage'. */
    errorCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesBatchPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: MoveSlicesBatchOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesBatchOutcomeGenqlSelection{
    clientMutationId?: boolean | number
    /** The updated or created pie node at the root of the tree. */
    pie?: UserPieGenqlSelection
    /** Metadata about the result of executing the mutation. */
    result?: UpdatePieTreeResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `submitInvestAcatTransfer` mutation. */
export interface SubmitInvestAcatTransferInput {clientMutationId?: (Scalars['String'] | null),
/** The ID for the brokerage node (`InvestAcatWizardContraParticipant`) that the user selected in the ACAT Wizard flow. */
externalBrokerageId: Scalars['ID'],
/** The user inputted account number for the account to be transferred to M1. */
originAccountNumber: Scalars['String'],
/** The internal account ID for which to transfer funds to. */
destinationAccountId: Scalars['ID'],
/** Boolean for whether the submitted transfer is a partial ACAT or full ACAT */
isPartial?: (Scalars['Boolean'] | null),
/** Cash amount to transfer during partial ACAT */
cashAmount?: (Scalars['Float'] | null),
/** The assets to be transferred during a partial ACAT */
assets?: (InvestAcatAssetInput[] | null)}

export interface InvestAcatAssetInput {
/** The symbol of the asset to be transferred. */
symbol: Scalars['String'],
/** The quantity of the asset to be transferred. */
quantity?: (Scalars['Int'] | null)}


/** Outcome for the `submitInvestAcatTransfer` mutation. */
export interface SubmitInvestAcatTransferPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    /** Copy to be rendered that describes an error detected during the mutation. This can be due to either a complete or partial error. */
    errorMessage?: boolean | number
    /** The toast to be displayed as part of the mutation - if this is null, do not show a toast */
    toast?: AppToastGenqlSelection
    outcome?: SubmitInvestAcatTransferOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SubmitInvestAcatTransferOutcomeGenqlSelection{
    /** An analytics event to be fired upon the completion of the `submitInvestAcatTransfer` mutation. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `AutoPayApplicationSetUp` mutation. */
export interface AutoPayApplicationSetUpInput {clientMutationId?: (Scalars['String'] | null),
/** The id of the specific loan to have AutoPay set up for. */
loanId: Scalars['ID'],
/** The id of the transfer participant account to set up AutoPay to withdraw from. */
transferParticipantId: Scalars['ID']}


/** Payload for the `autoPayApplicationSetUp` mutation. */
export interface AutoPayApplicationSetUpPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: AutoPayApplicationSetUpOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `autoPayApplicationSetup` mutation. */
export interface AutoPayApplicationSetUpOutcomeGenqlSelection{
    /** An analytics event to be fired upon the completion of the `autoPayApplicationSetup` mutation. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `moveUnmanagedHoldings` mutation. */
export interface MoveUnmanagedHoldingsInput {clientMutationId?: (Scalars['String'] | null),
/** An array of umanaged holding ids that will be moved. */
unmanagedHoldingIds: Scalars['ID'][],
/**
 * The Portfolio Slice Id of the parent Pie a given set of unmanaged holdings will be moved to.
 * Note this slice does not represent the actual slice(s) holdings will be moved to, but the slice of the parent pie.
 * Lens will handle calculating the final slice path for each unmanaged holding.
 */
parentPortfolioSliceId: Scalars['ID']}


/** Outcome for the `moveUnmanagedHoldings` mutation. */
export interface MoveUnmanagedHoldingsPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** A flag representing whether or not the mutation was succesful. */
    didSucceed?: boolean | number
    /** Retrieve the newly updated Account. */
    account?: AccountGenqlSelection
    /** Represents copy that should be rendered if an error occured during the mutation. This returns a non-null if the error detected was partial or complete. */
    errorMessage?: boolean | number
    /** Copy to be rendered if the mutation succeeds and no partial errors were detected */
    successMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `selectPaymentsAccount` mutation. */
export interface SelectPaymentsAccountInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the account to select. */
accountId: Scalars['ID']}


/** Payload for the `selectPaymentsAccount` mutation. */
export interface SelectPaymentsAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SelectPaymentsAccountOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: SelectPaymentsAccountResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `selectPaymentsAccount` mutation. */
export interface SelectPaymentsAccountOutcomeGenqlSelection{
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SelectPaymentsAccountResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ListableAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The account category. */
    accountCategory?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    on_Account?: AccountGenqlSelection
    on_PersonalLoan?: PersonalLoanGenqlSelection
    on_SavingsAccount?: SavingsAccountGenqlSelection
    on_BorrowAccount?: BorrowAccountGenqlSelection
    on_SpendAccount?: SpendAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Configurations and settings for invest accounts */
export interface AccountConfigurationGenqlSelection{
    dividends?: AccountConfigurationDividendsGenqlSelection
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The CTA associated with the account-level dividend configuration settings */
export interface AccountConfigurationDividendsCtaGenqlSelection{
    label?: boolean | number
    value?: boolean | number
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountConfigurationDividendsGenqlSelection{
    cta?: AccountConfigurationDividendsCtaGenqlSelection
    /** Footer text to display on the AccountConfigurationDividends screen. */
    footerText?: boolean | number
    /** The heading text associated with account-level dividend configuration settings */
    heading?: boolean | number
    subheading?: boolean | number
    contextualLink?: AppLinkGenqlSelection
    selectedSettingType?: boolean | number
    settings?: AccountConfigDividendSettingGenqlSelection
    holdings?: (AccountConfigurationDividendsHoldingsGenqlSelection & { __args?: {symbols?: (Scalars['String'][] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Holding-level node for dividend investment settings */
export interface AccountConfigurationDividendsHoldingsGenqlSelection{
    /** The PositionReference of the holding */
    position?: PositionSecurityReferenceGenqlSelection
    /** The dividend investment settings for the holding */
    settings?: AccountConfigDividendSettingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A dividend investment configuration setting */
export interface AccountConfigDividendSettingGenqlSelection{
    /** If the setting is associated with transfer participants, they are here */
    accounts?: AccountConfigDividendTransferAccountGenqlSelection
    /** An associated link for the setting */
    contextualLink?: AppLinkGenqlSelection
    /** The description of the account-level setting */
    description?: boolean | number
    /** Whether the setting is available for selection */
    disabled?: boolean | number
    /** Optional text associated with the setting */
    helperText?: boolean | number
    /** The human readable label for the setting */
    label?: boolean | number
    /** Whether this setting is selected for the given holding */
    selected?: boolean | number
    /** The associated value for the setting */
    value?: boolean | number
    /** A human readable label for the given setting's value */
    valueLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountConfigDividendTransferAccountGenqlSelection{
    selected?: boolean | number
    transferParticipant?: TransferParticipantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OutstandingTransferCreditsGenqlSelection{
    /** The id of the account the transfer was made on */
    accountId?: boolean | number
    /** The date the partial amount was credited */
    created?: boolean | number
    /** The amount of the total transfer that was credited */
    creditedAmount?: boolean | number
    /** The id of the partial transfer credit record */
    id?: boolean | number
    /** The date this record was last updated */
    lastModified?: boolean | number
    /** The amount still outstanding/pending that will be credited once the transfer is complete */
    outstandingAmount?: boolean | number
    /** The status of the partial credit */
    status?: boolean | number
    /** The total amount of the transfer */
    totalAmount?: boolean | number
    /** The id of the crypto broker ach transfer */
    transferId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesGenqlSelection{
    /** Label for the main Move Slices CTA. */
    moveSlicesLabel?: boolean | number
    /** Boolean value that represents the enabled/disabled state for the Move Slices CTA. */
    enableMoveSlices?: boolean | number
    /** Type for rendering information about Pending Orders in relation to Move Slices. */
    pendingOrdersContent?: MoveSlicesPendingOrdersContentGenqlSelection
    /** Type for rendering helpful tutorial information in relation to Move Slices. */
    moveSlicesTutorialContent?: MoveSlicesTutorialContentGenqlSelection
    /**
     * Type for rendering the Move to Pie view for the Move Slices feature.
     * Accepts a list of Portfolio Slice Ids that a user intends to Move.
     */
    moveToPieContent?: (MoveSlicesMoveToPieContentGenqlSelection & { __args: {portfolioSliceIdsToMove: Scalars['ID'][]} })
    /** Type for rendering the Set Destination Slice view for the Move Slices feature. */
    setDestinationSliceContent?: MoveSlicesSetDestinationPieSliceContentGenqlSelection
    /** Type for rendering the Set Source Slice view for the Move Slices feature. */
    setSourceSliceContent?: MoveSlicesSetSourceSliceContentGenqlSelection
    /** Argument-driven field for driving the confirmation content for all Pie Edits within Move Slices. Accepts the same input as the `moveSlices` mutation. */
    moveSlicesChangesConfirmation?: (MoveSlicesChangesConfirmationGenqlSelection & { __args: {
    /** A serialized representation of the Source Pie from which slices are being moved from. */
    sourcePieSerialized: Scalars['String'], 
    /** A serialized representation of the Destination Pie tree for which slices are being moved to. */
    destinationPieSerialized: Scalars['String'], 
    /** A list of PortfolioSliceIds that represent each Slice from which value is being moved from with a Source Pie. */
    moveSliceIds: Scalars['ID'][]} })
    /**
     * A tooltip to explain why Move is disabled if a Trade Window is underway.
     * This field is always exposed thus it is the responsibility of clients to render it appropriately.
     */
    moveDisabledTradingWindowTooltip?: MoveDisabledTradingWindowTooltipGenqlSelection
    /**
     * A tooltip to explain why Move is disabled if the User has selected a Destination Pie and has returned to the editor.
     * This field is always exposed thus it is the responsibility of clients to render it appropriately.
     */
    moveDisabledDestinationPieSet?: MoveDisabledDestinationPieSetTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveDisabledTradingWindowTooltipGenqlSelection{
    /** A list of strings to be used as the tooltip content. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveDisabledDestinationPieSetTooltipGenqlSelection{
    /** A list of strings to be used as the tooltip content. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesPendingOrdersContentGenqlSelection{
    /** Header value for content. */
    header?: boolean | number
    /** List of strings to be rendered as the main body of the content. */
    items?: boolean | number
    /** Label for the exit CTA. */
    exitLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesTutorialContentGenqlSelection{
    /** Header value for content. */
    header?: boolean | number
    /** List of tutorial content items to be rendered for Move Slices. */
    items?: MoveSlicesTutorialContentItemGenqlSelection
    /** Link to support article for learning more about Move Slices. */
    learnMore?: AppLinkGenqlSelection
    /** Copy to be rendered for the CTA to close the content. */
    exitLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesTutorialContentItemGenqlSelection{
    /** Icon to be rendered with copy. */
    icon?: AppImageGenqlSelection
    /** Copy to be rendered. */
    copy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesMoveToPieContentGenqlSelection{
    /** Main label for Move to Pie content. */
    primaryLabel?: boolean | number
    /** Secondary label for Move to Pie content. */
    secondaryLabel?: boolean | number
    /** Tooltip to be rendered for Move to Pie content. */
    tooltip?: MoveToPieContentTooltipGenqlSelection
    /** Label used to prompt the user to open the Move Slices tutorial. */
    tutorialLabel?: boolean | number
    /** A list containing a custom type of augmented Portfolio Slices a set of slices can be moved to. */
    validAugmentedPortfolioSliceDestinations?: MoveSlicesAugmentedPortfolioSliceDestinationsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesAugmentedPortfolioSliceDestinationsGenqlSelection{
    /** Used to determine the validity and error state of the given Portfolio Slice. */
    validity?: MoveSlicesPortfolioSliceDestinationsValidityGenqlSelection
    /** The given Portfolio Slice. */
    portfolioSlice?: PortfolioSliceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesPortfolioSliceDestinationsValidityGenqlSelection{
    /** A flag used to determine the eligibility of a given Portfolio Slice as a destination for Move Slices. */
    isValid?: boolean | number
    /** An optional message for more information around validity of the given Portfolio Slice. */
    message?: boolean | number
    /** An optional link to render relevant to the validity of the given Portfolio Slice. */
    link?: AppLinkGenqlSelection
    /** An optional icon to render relevant to the validity of the given Portfolio Slice. */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveToPieContentTooltipGenqlSelection{
    /** A list of strings to be used as the tooltip content. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesSetDestinationPieSliceContentGenqlSelection{
    /**
     * @deprecated Control client-side instead
     * Main content title.
     */
    title?: boolean | number
    /** Header to be rendered for the content. */
    header?: boolean | number
    /** Subheader to be rendered for the content. */
    subheader?: boolean | number
    /** Tooltip to establish context for setting the destination Slice. */
    tooltip?: MoveSlicesSetDestinationPieSliceContentTooltipGenqlSelection
    /** Label for the continue CTA. */
    continueLabel?: boolean | number
    /** Label for the cancel CTA. */
    cancelLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesSetDestinationPieSliceContentTooltipGenqlSelection{
    /** A list of strings to be rendered as the tooltip content. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesSetSourceSliceContentGenqlSelection{
    /**
     * @deprecated Control client-side instead
     * Main content title.
     */
    title?: boolean | number
    /** Copy to be rendered in the Editor to help establish context for being back at the Source within the Move Slices flow. */
    copy?: boolean | number
    /** Tooltip to establish context for updating the source Slice. */
    tooltip?: MoveSlicesSetSourceSliceTooltipGenqlSelection
    /** Label for the continue CTA. */
    continueLabel?: boolean | number
    /** Label for the cancel CTA. */
    cancelLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesSetSourceSliceTooltipGenqlSelection{
    /** A list of strings be rendered as the source slices tooltip. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** This is the main type to drive the Move Slices confirmation screen. */
export interface MoveSlicesChangesConfirmationGenqlSelection{
    /** Title for the content. */
    title?: boolean | number
    /** Label for exiting the screen. */
    cancelLabel?: boolean | number
    /** Label for confirming changes. */
    confirmLabel?: boolean | number
    /** A set of details pertaining to the Portfolio Pie. */
    sourcePieDetails?: MoveSlicesSourcePieDetailsGenqlSelection
    /**
     * @deprecated No longer desired to render this section. Remove it altogether from your app.
     * A type for rendering changes as a result of each 'Moved' Slice(s).
     */
    moveSlicesChangesSection?: MoveSlicesChangesConfirmationSectionGenqlSelection
    /** A type for rendering changes made to the Source Pie. */
    sourcePieChangesSection?: MoveSlicesChangesConfirmationSourcePieChangesSectionGenqlSelection
    /** A list type for rendering changes made to a Destination Pie. */
    destinationPieChangesSection?: MoveSlicesChangesConfirmationDestinationPiesChangesSectionGenqlSelection
    /** Section that contains information regarding the next trading window. */
    nextAvailableTradeWindowSection?: MoveSlicesChangesConfirmationNextAvailableTradeWindowSectionGenqlSelection
    /** Card that contains dynamic copy about trading in relation to the edits being confirmed. */
    infoCard?: AppInformationalMessageCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesSourcePieDetailsGenqlSelection{
    /** Name of the Source Pie. */
    name?: boolean | number
    /** Logo associated with the Source Pie. */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesChangesConfirmationSectionGenqlSelection{
    /** Label for the section. */
    label?: boolean | number
    /** Name of the Source Pie from which value is being moved from. */
    sourcePieName?: boolean | number
    /** Name of the Destination Pie from which value is being moved to. */
    destinationPieName?: boolean | number
    /** List of Slice(s) that were moved. */
    slices?: PieChangesConfirmationMovedSliceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesChangesConfirmationSourcePieChangesSectionGenqlSelection{
    /** Label for the section. */
    label?: boolean | number
    /** Copy to render if the Pie is Entangled, null otherwise. */
    applicableLocationsMessage?: boolean | number
    /** List of Slice(s) that were added, updated, or removed. */
    adjustedSlices?: PieChangesConfirmationAdjustedSliceGenqlSelection
    /** Messages to render in the section. */
    messages?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesChangesConfirmationDestinationPiesChangesSectionGenqlSelection{
    /** Label for section. */
    label?: boolean | number
    /** Copy to render if the Pie is Entangled, null otherwise. */
    applicableLocationsMessage?: boolean | number
    /** List of Slice(s) that were added or updated. */
    adjustedSlices?: PieChangesConfirmationAdjustedSliceGenqlSelection
    /** Messages to render in the section. */
    messages?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationAdjustedSliceGenqlSelection{
    /** The name of the slice. */
    name?: boolean | number
    /** The symbol of the slice if applicable. */
    symbol?: boolean | number
    /** The existing percentage of a given slice, zero if the slice is to be added. */
    oldPercentage?: boolean | number
    /** The soon-to-be new percentage of the slice. */
    percentage?: boolean | number
    /** The type of the slice, i.e 'SECURITY' | 'USER_PIE' | 'SYSTEM_PIE' | 'CRYPTO' */
    type?: boolean | number
    /** A pill used to represent if the slice was added or updated */
    actionPill?: AppPillGenqlSelection
    /** If available, a URL to a logo image that represents the Slice. */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSlicesChangesConfirmationNextAvailableTradeWindowSectionGenqlSelection{
    /** Label to be rendered for the section. */
    label?: boolean | number
    /** The current trading status of the account. */
    trading?: AccountTradingStatusGenqlSelection
    /**
     * @deprecated Plus has been sunsetted and this field is returning null
     * Pill to render if user has access to plus, null otherwise.
     */
    pill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DocumentUploadRequestsCenterGenqlSelection{
    /**
     * Entry point for the Document Upload Request feature.
     * Returns a list of document upload requests matching the optional filter parameters.
     * If no matching document requests were found, returns null.
     */
    documentUploadRequests?: (DocumentUploadRequestsConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null), filterByAssociatedService?: (DocumentUploadRequestAssociatedService | null), filterByStatus?: (DocumentUploadRequestStatus | null)} })
    /** The requirements for a document */
    documentRequirements?: DocumentRequirementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DocumentUploadRequestsConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: DocumentUploadRequestsEdgeGenqlSelection
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DocumentUploadRequestsEdgeGenqlSelection{
    cursor?: boolean | number
    node?: DocumentUploadRequestGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DocumentUploadRequestGenqlSelection{
    /** The ID of this node. Encodes the document upload request ID. */
    id?: boolean | number
    /** A description of the associated service this document upload request in linked with. */
    associatedServiceDescription?: boolean | number
    /** The associated BE service linked to the given document upload request. */
    associatedServiceType?: boolean | number
    /** The associated business purpose the given request was created for. */
    businessPurpose?: boolean | number
    /** An optional correlation ID that may be provided if the given request was created with one. */
    correlationId?: boolean | number
    /** The maximum file size to display to the user */
    maximumFileSizeDescription?: boolean | number
    /** The maximum file size in bytes */
    maximumFileSizeInBytes?: boolean | number
    /** A list of acceptable file types */
    acceptableFileTypes?: boolean | number
    /** A list of acceptable file mime types */
    acceptableMimeTypes?: boolean | number
    /** A list of acceptable document types */
    acceptableDocumentTypes?: DocumentUploadRequestOptionGenqlSelection
    /** The header value of this screen. */
    header?: boolean | number
    /** Label for the select document CTA. */
    selectLabel?: boolean | number
    /** Label for the upload document CTA. */
    uploadLabel?: boolean | number
    /** Label for the cancel CTA. */
    cancelLabel?: boolean | number
    /** The BE status of the given Document Upload Request. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The Entry point for Document Upload Requirements. */
export interface DocumentRequirementsGenqlSelection{
    /** The maximum file size to display to the user */
    maximumFileSizeDescription?: boolean | number
    /** The maximum file size in bytes */
    maximumFileSizeInBytes?: boolean | number
    /** A list of acceptable file types */
    acceptableFileTypes?: boolean | number
    /** A list of acceptable file mime types */
    acceptableMimeTypes?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The Entry Point for the content and requirements needed for uploading documents to verify identity */
export interface DocumentUploadGenqlSelection{
    /** The requirements for a document */
    requirements?: DocumentUploadRequirementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The Entry point for Document Upload Requirements. */
export interface DocumentUploadRequirementsGenqlSelection{
    /** The maximum file size to display to the user */
    maximumFileSizeDescription?: boolean | number
    /** The maximum file size in bytes */
    maximumFileSizeInBytes?: boolean | number
    /** A list of acceptable file types */
    acceptableFileTypes?: boolean | number
    /** A list of acceptable file mime types */
    acceptableMimeTypes?: boolean | number
    /** A list of acceptable document types */
    acceptableDocumentTypes?: DocumentUploadOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An option for valid documents to upload. */
export interface DocumentUploadOptionGenqlSelection{
    /** The description for the option. */
    description?: boolean | number
    /** The type of document that can be uploaded */
    kind?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An option for valid documents to upload for Document Upload Request. */
export interface DocumentUploadRequestOptionGenqlSelection{
    /** A "user readable" description of the given option. */
    description?: boolean | number
    /**
     * The type of document that can be uploaded for the given upload request.
     * This value is intentionally typed as a String instead of an Enum to allow BE the flexibility to add/remove values without any FE changes.
     */
    docType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The Entry Point for Received Securities. */
export interface ReceivedSecuritiesGenqlSelection{
    /** The Received Securities Card. Returns null if a user has not yet set their Portfolio. */
    receivedSecuritiesCard?: ReceivedSecuritiesCardGenqlSelection
    /** Entry point for the Unmanaged Holdings Screen. */
    unmanagedHoldingsScreen?: UnmanagedHoldingsScreenGenqlSelection
    /** Entry point for Move Securities. */
    moveSecurities?: MoveSecuritiesGenqlSelection
    /** A set of fields used to drive the confirm targets or create new pie step for the Move Securities flow within Received Securities. */
    moveSecuritiesConfirmTargets?: MoveSecuritiesConfirmTargetsGenqlSelection
    /** A set of fields used to drive the screen for prompting a user to choose a "home" for their soon-to-be newly created Pie. */
    moveSecuritiesNewPieLocation?: MoveSecuritiesNewPieLocationGenqlSelection
    /** A set of fields used to drive the liquidate holdings confirmation screen. Accepts a required set of unmanaged holding IDs. */
    unmanagedHoldingsStagedForLiquidate?: (UnmanagedHoldingsStagedForLiquidateConfirmationGenqlSelection & { __args: {unmanagedHoldingIds: Scalars['ID'][]} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReceivedSecuritiesCardGenqlSelection{
    /** Icon for Received Securities card. */
    icon?: AppImageGenqlSelection
    /** Header value for Received Securities card. */
    header?: boolean | number
    /** Sections to display for the Received Securities card. Includes label/value pairs for unmanaged, managed, and total account sections. */
    sections?: ReceivedSecuritiesCardSectionGenqlSelection
    /** CTA link for card. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReceivedSecuritiesCardSectionGenqlSelection{
    /** Copy for a Received Securities Card section. */
    label?: boolean | number
    /** Value for a Received Securities Card section. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Main Screen for Move Securities from Holding Pen. */
export interface MoveSecuritiesGenqlSelection{
    /** Title for the Move Securities screen. */
    title?: boolean | number
    /** Main header for the Move Securities screen. */
    header?: boolean | number
    /** Subheader for the Move Securities screen. */
    subheader?: boolean | number
    /** Tooltip for the Move Securities screen. */
    tooltip?: MovedSecuritiesScreenTooltipGenqlSelection
    /** A list of Portfolio Slices that a set of holdings can be moved to. */
    validPortfolioSliceDestinations?: PortfolioSliceGenqlSelection
    /** Button label value to for the Create Pie CTA */
    createPieCtaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MovedSecuritiesScreenTooltipGenqlSelection{
    /** Main content that lives inside the Tooltip. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Set of fields for confirming pie targets for moving securities from Unmanaged Holdings. */
export interface MoveSecuritiesConfirmTargetsGenqlSelection{
    /** Title for the MoveSecuritiesConfirmTargets. */
    title?: boolean | number
    /** Header for the MoveSecuritiesConfirmTargets. */
    header?: { __args: {
    /**
     * When provided and true, the string will include Markdown formatting.
     * Currently only includes `**`.
     */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** When available, a link to be rendered within the header section of MoveSecuritiesConfirmTargets. */
    link?: AppLinkGenqlSelection
    /** The button copy for the primary CTA. */
    saveTargetsCtaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MoveSecuritiesNewPieLocationGenqlSelection{
    /** Title for MoveSecuritiesNewPieLocation. */
    title?: boolean | number
    /** Header for MoveSecuritiesNewPieLocation. */
    header?: boolean | number
    /** Hint text used to explain to the user how to Move a Pie. */
    moveHint?: boolean | number
    /** A list of Pies a user can select as the parent for the soon-to-be newly created Pie. */
    validPortfolioSliceDestinations?: PortfolioSliceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsStagedForLiquidateConfirmationGenqlSelection{
    /** Main title for the screen. */
    title?: boolean | number
    /** Details on the Account a given set of UH's are being Liquidated from. */
    accountDetails?: UnmanagedHoldingsForLiquidationAccountDetailsGenqlSelection
    /** The header for the section being rendered. */
    sectionHeader?: boolean | number
    /** A helper message for the section being rendered. */
    sectionMessage?: boolean | number
    /** A list of Unmanaged Holdings that are staged for Liquidation. */
    holdings?: StagedUnmanagedHoldingForLiquidateGenqlSelection
    /** The current trading status of the account. */
    trading?: AccountTradingStatusGenqlSelection
    /** The header for the trade window section being rendered. */
    tradeWindowHeader?: boolean | number
    /** Copy for the main CTA. */
    primaryButtonLabel?: boolean | number
    /** Copy for the secondary CTA. */
    secondaryButtonLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsForLiquidationAccountDetailsGenqlSelection{
    /** Header for the account details. */
    header?: boolean | number
    /** Subheader for the account details. */
    subheader?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StagedUnmanagedHoldingForLiquidateGenqlSelection{
    /** The sublabel of the UH. This will be the symbol if available, fallback to CUSIP. */
    sublabel?: boolean | number
    /** The primary label of the UH which will be its name if available, otherwise null. */
    label?: boolean | number
    /** Label/value pair that renders the amount of shares for the UH. */
    quantitySection?: StagedUnmanagedHoldingForLiquidateSectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StagedUnmanagedHoldingForLiquidateSectionGenqlSelection{
    /** The label of the given section. */
    label?: boolean | number
    /** The value of the given section. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Main Screen for Unmanaged Holdings. */
export interface UnmanagedHoldingsScreenGenqlSelection{
    /** Title for the Unmanaged Holdings screen. */
    title?: boolean | number
    /** Link to support article for learning more about Unmanaged Holdings. */
    learnMore?: AppLinkGenqlSelection
    /** Link to the contact us form */
    contactUs?: AppLinkGenqlSelection
    /** Returns true or false depending on whether or not an account contains any Unmanaged Holdings, regardless of type. */
    hasUnmanagedHoldings?: boolean | number
    /** Card for the Unmanaged Holdings. */
    unmanagedHoldingsScreenCard?: UnmanagedHoldingsScreenCardGenqlSelection
    /** A list of Unmanaged Holding collections. */
    unmanagedHoldingsCollections?: UnmanagedHoldingsCollectionGenqlSelection
    /** Disclaimer text on the bottom of the screen. */
    bottomDisclaimer?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsScreenUnrealizedGainTooltipGenqlSelection{
    /** Main content that lives inside the Tooltip. */
    text?: boolean | number
    /** Link for the tooltip, if any */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A collection of Unmanaged Holdings of a given type. */
export interface UnmanagedHoldingsCollectionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The given type determined by what set of user actions can be performed on this collection. */
    type?: boolean | number
    /** A paginated set of holdings. */
    holdings?: (UnmanagedHoldingsConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Header value for the given Unmanaged Holdings Collection. */
    header?: boolean | number
    /** Tooltip value for the given Unmanaged Holdings Collection, if any. */
    tooltip?: UnmanagedHoldingsCollectionTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsCollectionTooltipGenqlSelection{
    /** The text to be used as the tooltip content. */
    text?: boolean | number
    /** When available, the link to be included as the cta for the tooltip. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: UnmanagedHoldingsEdgeGenqlSelection
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsEdgeGenqlSelection{
    cursor?: boolean | number
    node?: UnmanagedHoldingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsScreenCardGenqlSelection{
    /** Section for the Quantity of Unmanaged Holdings. */
    quantitySection?: UnmanagedHoldingsScreenCardSectionGenqlSelection
    /** Section for the Total Value of Unmanaged Holdings. */
    totalValueSection?: UnmanagedHoldingsScreenCardSectionGenqlSelection
    /** Section for the Unrealized Gain of Unmanaged Holdings. */
    unrealizedGainSection?: UnmanagedHoldingsCardSectionUnrealizedGainGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsScreenCardSectionGenqlSelection{
    /** Copy for the section. */
    label?: boolean | number
    /** Value for the section. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingsCardSectionUnrealizedGainGenqlSelection{
    /** Tooltip for the unrealized gain section of the card. */
    tooltip?: UnmanagedHoldingsScreenUnrealizedGainTooltipGenqlSelection
    /** Copy for the Unrealized Gain section. */
    label?: boolean | number
    /** Value amount for the Unrealized Gain section. */
    amount?: boolean | number
    /** Value percent for the Unrealized Gain section. */
    percent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A holding that sits outside of a User's Portfolio. */
export interface UnmanagedHoldingGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * The value of this holding. Value is null when price information is
     * unavailable.
     */
    value?: boolean | number
    /**
     * The unrealized gain from this holding. Value is null when cost or value are
     * unavailable.
     */
    unrealizedGain?: UnmanagedHoldingGainGenqlSelection
    /** A list of AppPills that represent the type of Unmanaged Holding. */
    unmanagedHoldingPills?: AppPillGenqlSelection
    /** Primary label for the unmanaged holding. */
    label?: boolean | number
    /** Secondary label for the unmanaged holding. */
    sublabel?: boolean | number
    /** The amount of shares for the given unmanaged holding. */
    quantity?: boolean | number
    /** The current trading status of the account. */
    trading?: AccountTradingStatusGenqlSelection
    /** Flag that represents whether or not unmanaged holding is pending liquidation. */
    isPendingLiquidation?: boolean | number
    /** Screen for rendering the details of the unmanaged holding if it is pending liquidation. Otherwise, null. */
    liquidationPendingDetailsScreen?: UnmanagedHoldingLiquidationPendingDetailsScreenGenqlSelection
    /** The allocation date of the unmanaged holding. */
    allocationDate?: UnmanagedHoldingDateValueGenqlSelection
    /** If the unmanaged holding is a security, the associated data for it. */
    security?: SecurityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingDateValueGenqlSelection{
    /** Label of the Unmanaged Holding date. */
    label?: boolean | number
    /** Value of the Unmanaged Holding date. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingLiquidationPendingDetailsScreenGenqlSelection{
    /** Header for the screen. */
    header?: boolean | number
    /** A list of generic label/value pairs to be rendered together on this screen. */
    details?: LiquidationPendingDetailsGenqlSelection
    /** Label for the primary CTA on the screen. */
    primaryButtonLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LiquidationPendingDetailsGenqlSelection{
    /** Label for the detail. */
    label?: boolean | number
    /** Value for the detail. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnmanagedHoldingGainGenqlSelection{
    /** Amount value for the Unrealized Gain of an Unmanaged Holding. */
    amount?: boolean | number
    /** Percent value for the Unrealized Gain of an Unmanaged Holding. */
    percent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A setup checklist with a list of steps to be completed. */
export interface SetupChecklistGenqlSelection{
    /** The title of this checklist. */
    title?: boolean | number
    /** The total number of steps currently in the checklist. */
    stepsTotal?: boolean | number
    /** The number of steps in the checklist that are currently completed. */
    stepsCompleted?: boolean | number
    /** The list of checklist steps. */
    steps?: SetupChecklistStepGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A setup checklist step. */
export interface SetupChecklistStepGenqlSelection{
    /** The title of the step. */
    title?: boolean | number
    /** Whether the step has been completed. */
    isCompleted?: boolean | number
    /** Whether the step is ready or blocked by earlier steps. */
    isReady?: boolean | number
    /** An analytics event for following the step. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /**
     * @deprecated Use `analyticsEvent` instead.
     * An analytics event for following the step.
     */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The internal app destination for the step. */
    destination?: SetupChecklistDestinationGenqlSelection
    on_GenericSetupChecklistStep?: GenericSetupChecklistStepGenqlSelection
    on_BuildPortfolioSetupChecklistStep?: BuildPortfolioSetupChecklistStepGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A generic setup checklist step. */
export interface GenericSetupChecklistStepGenqlSelection{
    /** The title of the step. */
    title?: boolean | number
    /** Whether the step has been completed. */
    isCompleted?: boolean | number
    /** Whether the step is ready or blocked by earlier steps. */
    isReady?: boolean | number
    /** An analytics event for following the step. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An analytics event for following the step. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The internal app destination for the step. */
    destination?: SetupChecklistDestinationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Build Portfolio setup checklist step. */
export interface BuildPortfolioSetupChecklistStepGenqlSelection{
    /** The title of the step. */
    title?: boolean | number
    /** Whether the step has been completed. */
    isCompleted?: boolean | number
    /** Whether the step is ready or blocked by earlier steps. */
    isReady?: boolean | number
    /** An analytics event for following the step. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An analytics event for following the step. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The internal app destination for the step. */
    destination?: SetupChecklistDestinationGenqlSelection
    /**
     * @deprecated starterPie is no longer in use.
     * Pie created by the user during onboarding.
     */
    starterPie?: PieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The internal link destination for a setup checklist step. */
export interface SetupChecklistDestinationGenqlSelection{
    /** The internal application link URL. */
    url?: boolean | number
    /** The path part of the link URL. */
    path?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: AccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: AccountGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents an ACH relationship between an investment account and another
 * account.
 */
export interface AchRelationshipGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The current status of the relationship. */
    status?: boolean | number
    /** True if the ACH relationship currently requires verification. */
    isVerificationRequired?: boolean | number
    /** True if the ACH relationship required verification and it was completed. */
    wasVerificationCompleted?: boolean | number
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason?: boolean | number
    /** When true, the relationship is active and may be used to create transfers. */
    isActive?: boolean | number
    /** The nickname for this relationship. */
    nickname?: boolean | number
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    on_AchRelationshipViaDeposits?: AchRelationshipViaDepositsGenqlSelection
    on_AchRelationshipViaLink?: AchRelationshipViaLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AchRelationshipViaDepositsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The current status of the relationship. */
    status?: boolean | number
    /** True if the ACH relationship currently requires verification. */
    isVerificationRequired?: boolean | number
    /** True if the ACH relationship required verification and it was completed. */
    wasVerificationCompleted?: boolean | number
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason?: boolean | number
    /** When true, the relationship is active and may be used to create transfers. */
    isActive?: boolean | number
    /** The nickname for this relationship. */
    nickname?: boolean | number
    /** The type of the bank account. */
    bankAccountType?: boolean | number
    /** The routing number for the bank account. */
    bankAccountRoutingNumber?: boolean | number
    /** The bank account number, obscured with `*` characters. */
    bankAccountNumber?: boolean | number
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AchRelationshipViaLinkGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The current status of the relationship. */
    status?: boolean | number
    /** True if the ACH relationship currently requires verification. */
    isVerificationRequired?: boolean | number
    /** True if the ACH relationship required verification and it was completed. */
    wasVerificationCompleted?: boolean | number
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason?: boolean | number
    /** When true, the relationship is active and may be used to create transfers. */
    isActive?: boolean | number
    /** The nickname for this relationship. */
    nickname?: boolean | number
    /** The external account that this relationship links to. */
    toExternalAccount?: ExternalAccountGenqlSelection
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AchRelationshipEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: AchRelationshipGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AchTransferGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /**
     * The direction of the transfer relative to the investment account. "Incoming"
     * means from the external account to the investment account, and "outgoing"
     * means vise-versa.
     */
    direction?: boolean | number
    /** The current status of the transfer. */
    status?: boolean | number
    /** When rejected, a reason for the rejection. Value is `null` otherwise. */
    rejectionReason?: boolean | number
    /** True when the transfer is in a completed state, false otherwise. */
    isComplete?: boolean | number
    /**
     * True if the transfer was created by a schedule. It is possible for the value
     * to be false when it is actually unknown.
     */
    isCreatedBySchedule?: boolean | number
    /**
     * The signed amount of cash moving between the bank and the M1 account. Positive
     * values are deposits, negative values are withdrawals. Value is null when the
     * transfer is a pending liquidation withdrawal, and the amount is unavailable.
     */
    cashFlow?: boolean | number
    /** The amount being transferred. */
    amount?: boolean | number
    /**
     * If applicable, the IRA contribution year for a deposit. Value is null if the
     * account is not an IRA, the transfer is not a deposit, or data is otherwise
     * unavailable.
     */
    contributionYear?: boolean | number
    /** True when the transfer was created as a liquidating withdrawal. */
    forLiquidation?: boolean | number
    /** The time that this ACH transfer record was last updated, in ISO 8601 format. */
    lastUpdate?: boolean | number
    /**
     * The ACH relationship utilized for the transfer. Value will be null if the ACH
     * relationship no longer exists.
     */
    viaAchRelationship?: AchRelationshipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Balance information for an account. */
export interface AccountBalanceGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Cash assets held by the account. */
    cash?: CashGenqlSelection
    /** Investment assets held by the account. */
    investments?: InvestmentsGenqlSelection
    /** Summarized total value of the account. */
    totalValue?: TotalAccountValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CashBreakdownListItemGenqlSelection{
    /** Descriptive label of the cash type */
    listItemType?: boolean | number
    /** Descriptive label of the cash type */
    label?: boolean | number
    /** Formatted dollar amount of cash item */
    value?: boolean | number
    /** Raw dollar amount of cash item as a Float */
    cashBalanceFloat?: boolean | number
    /** Determine if list should be highlighted in list */
    highlighted?: boolean | number
    /** Optional icon for the item in breakdown list */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Cash assets held by an account. */
export interface CashGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Cash currently available for trading. */
    available?: boolean | number
    /** Invest cash currently available for trading. Excludes the amount for any pending transfers from Borrow to either Spend or an external account. */
    investCashAvailable?: boolean | number
    /** The CAFW (Cash Available for Withdrawal) value for the invest account. */
    availableForWithdrawal?: boolean | number
    /** Potential amount available for trading on crypto accounts */
    cryptoBuyingPower?: boolean | number
    /** Cash available for a crypto account */
    cryptoCashAvailable?: boolean | number
    /** Potential amount available for trading */
    buyingPower?: boolean | number
    /** List of types of cash available to the account */
    breakdownList?: (CashBreakdownListItemGenqlSelection & { __args?: {sliceId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Investment assets held by an account. */
export interface InvestmentsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** True if there are positions. */
    hasPositions?: boolean | number
    /** Available if there are no positions for the account. */
    noPositionsContent?: NoPositionsContentGenqlSelection
    /** List of positions currently held by an account. */
    positions?: (PositionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), 
    /** A list of options to sort by. Default is by value descending then symbol ascending. */
    sort?: (PositionSortOptionInput[] | null)} })
    /**
     * @deprecated Defunct, always returns empty array. Use `positions` instead.
     * Defunct, always returns empty array.
     */
    positionsList?: PositionGenqlSelection
    /**
     * The summarized total cost basis of the investment assets. Value is null if
     * cost information is unavailable.
     */
    totalCost?: TotalInvestmentsCostGenqlSelection
    /**
     * The summarized total value of the investment assets. Value is null if price
     * information is temporarily unavailable.
     */
    totalValue?: TotalInvestmentsValueGenqlSelection
    /**
     * The summarized total unrealized gain of the investment assets. Value is null
     * if total cost or total value information is unavailable.
     */
    totalUnrealizedGain?: TotalInvestmentsGainGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information for the account when there are no positions. */
export interface NoPositionsContentGenqlSelection{
    /** The title for the screen. */
    title?: boolean | number
    /** The description for the page. */
    description?: boolean | number
    /** Information about the applink cta to display when there are no positions. */
    appLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The overall cost basis of all investment assets. */
export interface TotalInvestmentsCostGenqlSelection{
    /** The cost basis. */
    cost?: boolean | number
    /**
     * Indicates if this cost basis is a partial sum due to unavailable cost basis
     * information for one or more positions.
     */
    isPartial?: boolean | number
    /**
     * @deprecated Defunct, always returns false.
     * Indicates if this cost basis currently contains any estimations due to recent
     * trades.
     */
    isEstimated?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The overall value of all investment assets. */
export interface TotalInvestmentsValueGenqlSelection{
    /** The value. */
    value?: boolean | number
    /** True if the value is greater than zero. */
    hasValue?: boolean | number
    /**
     * Indicates if this value is a partial sum due to unavailable price information
     * for one or more positions.
     */
    isPartial?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The overall unrealized gain of all investment assets. */
export interface TotalInvestmentsGainGenqlSelection{
    /** The unrealized gain. */
    gain?: boolean | number
    /** The unrealized percent gain. */
    gainPercent?: boolean | number
    /**
     * Indicates if this is only a partial calculation due to unavailable price or
     * cost information for one or more positions.
     */
    isPartial?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The net total value of an account. */
export interface TotalAccountValueGenqlSelection{
    /** The net total value of the account. */
    value?: boolean | number
    /** True if the value is greater than zero. */
    hasValue?: boolean | number
    /**
     * Indicates if this value is a partial sum due to unavailable price information
     * for one or more investment assets.
     */
    isPartial?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about billing for a specific user. */
export interface BillingGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Obsolete and no longer supported.
     * Obsolete and no longer supported. Always returns an empty connection.
     */
    appliedPromos?: (AppliedPromotionConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /** True when there are credits pending payment. */
    hasPendingCredits?: boolean | number
    /**
     * True when `hasPendingCredits` is true but there is no valid
     * `selectedPaymentsAccount`.
     */
    hasPendingCreditsButNoPaymentsAccount?: boolean | number
    /**
     * The current payments account selection. Value is null when no payments account
     * is selected.
     */
    selectedPaymentsAccount?: SelectedPaymentsAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The current payments account selection. */
export interface SelectedPaymentsAccountGenqlSelection{
    /** The selected account. */
    account?: AccountGenqlSelection
    /** True when the account is currently eligible to be a payments account. */
    isValid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection to a list of items. */
export interface AppliedPromotionConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: AppliedPromotionEdgeGenqlSelection
    /** The total number of applied promotions. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface AppliedPromotionEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: AppliedPromotionGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about an applied promotion. */
export interface AppliedPromotionGenqlSelection{
    /** The name of the promotion. */
    name?: boolean | number
    /** A description of the promotion. */
    description?: boolean | number
    /** The date the promotion was applied. */
    applicationDate?: boolean | number
    /**
     * The code used to apply the promotion, if applicable. Value is null when the
     * promotion was applied via other means.
     */
    viaCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The current base margin rate. */
    baseRate?: boolean | number
    /** The current discounted base margin rate for M1 Plus customers. */
    baseRateForPlus?: boolean | number
    /** The current discounted base margin rate for M1 Plus customers. */
    baseRateForPlusShortDescription?: boolean | number
    /** The current discounted base margin rate for M1 Plus customers. */
    baseRateForPlusDisclaimer?: boolean | number
    /** Borrow home screen */
    dashboard?: BorrowDashboardGenqlSelection
    /** The minimum account value required to use M1 Borrow. */
    minRequiredAccountValue?: boolean | number
    /** The maximum percentage of account value that can be borrowed. */
    maxBorrowableAccountValuePercent?: boolean | number
    /** True if there is at least one available Borrow account. */
    hasBorrowAccounts?: boolean | number
    /** A list of available Borrow accounts. */
    borrowAccounts?: BorrowAccountConnectionGenqlSelection
    /** True if the user has a personal loan that has failed disbursement. */
    hasFailedPersonalLoanDisbursement?: boolean | number
    /** True if the user has a currently late personal loan. */
    hasLatePersonalLoan?: boolean | number
    /** True if any account is borrowing or has ever borrowed before. */
    hasBorrowedBefore?: boolean | number
    /** True if there are Borrow accounts with open margin calls. */
    hasBorrowAccountWithOpenMaintenanceCall?: boolean | number
    /** Returns the first Borrow account with an open margin call, if any. */
    borrowAccountWithOpenMaintenanceCall?: BorrowAccountGenqlSelection
    /**
     * @deprecated All states are now eligible so will always be true. Use 'isEligibleToApplyForPersonalLoan' instead.
     * True if the user is eligible to apply for a personal loan according to their state.
     */
    isEligibleForPersonalLoan?: boolean | number
    /** True if the individual user is eligible to apply for a personal loan based on all eligibility criteria. */
    isEligibleToApplyForPersonalLoan?: boolean | number
    /** True if personal loans applications should be available. Driven by Launch Darkly flag borrow-personal-loans-application-access or if the user has an in progress application. */
    shouldAllowAccessToPersonalLoansApplication?: boolean | number
    /**
     * @deprecated Use `borrowMarketingScreen` instead.
     * Information for the Borrow Marketing screen. Will be deprecated once all clients are using the new borrowMarketingScreen.
     */
    marketingScreen?: BorrowMarketingScreenGenqlSelection
    /** The new marketing screen content for the Borrow overview page. */
    borrowMarketingScreen?: BorrowMarketingScreenV2GenqlSelection
    /**
     * @deprecated Disclosures for side menu no longer needed
     * Information for the Borrow Marketing screen.
     */
    borrowDisclosures?: (BorrowDisclosureTextGenqlSelection & { __args?: {input?: (BorrowDisclosureTextEnum | null)} })
    /** Personal loans */
    personalLoans?: PersonalLoansGenqlSelection
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen?: PlusPromotionalMessageGenqlSelection
    /** Check if the user has any active personal loans */
    hasActivePersonalLoan?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowDisclosureTextGenqlSelection{
    /** Title for the Borrow disclosure set */
    title?: boolean | number
    /** Subtitles for the Borrow disclosure set */
    subtitle?: boolean | number
    /** Bullet text for the Borrow disclosure set */
    bodyText?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowAccountConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: BorrowAccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowAccountEdgeGenqlSelection{
    cursor?: boolean | number
    node?: BorrowAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a Borrow account. */
export interface BorrowAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The account category. */
    accountCategory?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    /** The Invest account with the assets being borrowed against. */
    investAccount?: AccountGenqlSelection
    /** True if the account is borrowing or has ever borrowed before. */
    hasBorrowedBefore?: boolean | number
    /** True if the account is currently borrowing. */
    hasCreditBorrowed?: boolean | number
    /** True if the account has credit available to borrow. */
    hasCreditAvailable?: boolean | number
    /** The dollar amount currently borrowed. */
    creditBorrowed?: boolean | number
    /** The dollar amount remaining that is available to borrow. */
    creditAvailable?: boolean | number
    /** The total amount of credit available. */
    creditLimit?: boolean | number
    /** The percentage of the credit limit currently in use. */
    inUsePercent?: boolean | number
    /** Information about the Borrow rate for this account. */
    rate?: BorrowAccountRateGenqlSelection
    /** Information about the credit status of this account. */
    status?: BorrowAccountCreditStatusGenqlSelection
    /** Information about the upcoming bill, if Borrow has been used. */
    billUpcoming?: BorrowUpcomingBillGenqlSelection
    /** The bill that is currently due, if one exists. */
    billDue?: BorrowBillGenqlSelection
    /**
     * @deprecated Moved to MarginLandingPage - use marginLandingPage.statements
     * A list of Borrow bills. Sorted in reverse chronological order.
     */
    bills?: (BorrowBillConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null)} })
    /**
     * @deprecated Moved to MarginLandingPage - use marginLandingPage.activity
     * A history of Borrow activity. Sorted in reverse chronological order.
     */
    activity?: (BorrowActivityEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Margin account landing page content. */
    marginProductLandingPage?: MarginProductLandingPageGenqlSelection
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the interest rate for a Borrow account. */
export interface BorrowAccountRateGenqlSelection{
    /** The yearly interest rate as a percentage. */
    ratePercent?: boolean | number
    /**
     * @deprecated Plus is dead. Please use ratePercent instead.
     * True if this account receives a Plus discounted rate.
     */
    isPlusDiscountedRate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the credit status of a Borrow account. */
export interface BorrowAccountCreditStatusGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The credit status code. */
    code?: boolean | number
    /** True when the account currently has an open margin call. */
    hasOpenMaintenanceCall?: boolean | number
    /** Total margin equity in the account. */
    marginEquity?: boolean | number
    /** The required margin equity value imposed by maintenance requirements. */
    requiredMarginEquity?: boolean | number
    /** The total margin equity amount minus the required amount. */
    excessMarginEquity?: boolean | number
    /**
     * When there is an open margin call, the margin equity deficit that must be
     * addressed. Equal to the required margin equity minus the total amount. Value
     * is null otherwise.
     */
    maintenanceCallMarginEquityDeficit?: boolean | number
    /**
     * If the portfolio value decreases by this dollar amount, a margin call will be
     * issued.
     */
    valueDecreaseToMaintenanceCall?: boolean | number
    /**
     * If the portfolio value decreases by this percentage, a margin call will be
     * issued.
     */
    valueDecreaseToMaintenanceCallPercent?: boolean | number
    /** The account market value referenced for the margin equity figures. */
    referencedMarketValue?: boolean | number
    /** A title for the credit status. */
    title?: boolean | number
    /** A description of the credit status. */
    description?: { __args: {
    /**
     * When provided and true, the string will include Markdown formatting.
     * Currently only includes `**`.
     */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Text for a status alert banner, if one should be displayed. */
    alertBanner?: boolean | number
    /** The as-of date for the credit status information. */
    asOfDate?: boolean | number
    /** The BorrowAccount associated to the credit status instance. */
    borrowAccount?: BorrowAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowActivityEntryConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: BorrowActivityEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowActivityEntryEdgeGenqlSelection{
    cursor?: boolean | number
    node?: BorrowActivityEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Borrow activity entry. */
export interface BorrowActivityEntryGenqlSelection{
    /** The time of the activity. */
    date?: boolean | number
    /** The title of the activity. */
    title?: boolean | number
    /** An optional sub-title of the activity. */
    subTitle?: boolean | number
    /** A signed dollar amount related to the activity. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DocumentConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: DocumentEdgeGenqlSelection
    /** An optional banner if there are potentially missing documents in the list. */
    missingDocumentsBanner?: InformationBannerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface DocumentEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: DocumentGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountLabelGenqlSelection{
    /** The main label for the account label. */
    label?: boolean | number
    /** The sublabel for the account label. */
    subLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DocumentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The date the document was issued. */
    date?: boolean | number
    /** The type of the document. */
    type?: boolean | number
    /** The name of the document. */
    name?: boolean | number
    /** The account name for the document. */
    accountName?: AccountLabelGenqlSelection
    on_InvestAccountDocument?: InvestAccountDocumentGenqlSelection
    on_AccountDocument?: AccountDocumentGenqlSelection
    on_SpendAccountDocument?: SpendAccountDocumentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A document related to an Invest account. */
export interface InvestAccountDocumentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The date the document was issued. */
    date?: boolean | number
    /** The type of the document. */
    type?: boolean | number
    /** The name of the document. */
    name?: boolean | number
    /** The account name of the document. */
    accountName?: AccountLabelGenqlSelection
    /** The URL of the document. */
    url?: boolean | number
    /** A list of URLs to additional insert documents, if they exist. */
    inserts?: boolean | number
    /**
     * @deprecated Use accountName property on document directly instead.
     * The account associated with the document. Value is null if the account is unavailable.
     */
    account?: AccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A document related to an M1 account. */
export interface AccountDocumentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The date the document was issued. */
    date?: boolean | number
    /** The type of the document. */
    type?: boolean | number
    /** The name of the document. */
    name?: boolean | number
    /** The account name of the document. */
    accountName?: AccountLabelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A document related to a Spend Checking account. */
export interface SpendAccountDocumentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The date the document was issued. */
    date?: boolean | number
    /** The type of the document. */
    type?: boolean | number
    /** The name of the document. */
    name?: boolean | number
    /** The account name of the document. */
    accountName?: AccountLabelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about estimated trading for an account. */
export interface EstimatedTradingGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The account for which trading is estimated. */
    account?: AccountGenqlSelection
    /** True if there are estimated trades of some sort to display. */
    hasEstimatedTrades?: boolean | number
    /** Value is `true` when there are estimated trades, false otherwise. */
    hasTrades?: boolean | number
    /** True when there are excluded buy trades. */
    hasExcludedBuys?: boolean | number
    /** The list of estimated buy trades. */
    buys?: (EstimatedTradeAmountConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null), 
    /** A list of options to sort by. Default is by amount descending then symbol ascending. */
    sort?: (EstimatedTradeAmountSortOptionInput[] | null)} })
    /** Estimated buys messaging */
    buyMessages?: RichTextContentGenqlSelection
    /**
     * The list of estimated buy trades which have been calculated, but are excluded
     * and will not execute because they are below the minimum buy trade amount.
     */
    excludedBuys?: (EstimatedTradeAmountConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null), 
    /** A list of options to sort by. Default is by amount descending then symbol ascending. */
    sort?: (EstimatedTradeAmountSortOptionInput[] | null)} })
    /** The list of estimated sell trades. */
    sells?: (EstimatedTradeAmountConnectionGenqlSelection & { __args?: {after?: (Scalars['String'] | null), first?: (Scalars['Int'] | null), 
    /** A list of options to sort by. Default is by amount descending then symbol ascending. */
    sort?: (EstimatedTradeAmountSortOptionInput[] | null)} })
    /** Estimated sells messaging */
    sellMessages?: RichTextContentGenqlSelection
    /** The total buy amount. */
    totalBuyAmount?: boolean | number
    /** The total sell amount. */
    totalSellAmount?: boolean | number
    /**
     * The time when this estimated trade information was generated. Trades are based
     * on, and can vary with, the current prices at the time of estimation. Value is
     * null when no estimation has yet occurred.
     */
    lastEstimatedTime?: boolean | number
    /** Messaging to display on Estimated Trades page, if any. */
    message?: EstimatedTradingMessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EstimatedTradingMessageGenqlSelection{
    /** The content of the message. */
    content?: boolean | number
    /** An optional link to view additional details on the messaging content. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection to a list of items. */
export interface EstimatedTradeAmountConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: EstimatedTradeAmountEdgeGenqlSelection
    /** The total number of edges. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EstimatedTradeAmountEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EstimatedTradeAmountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about an estimated trade amount. */
export interface EstimatedTradeAmountGenqlSelection{
    /** The estimated trade amount. */
    amount?: boolean | number
    /** Value is `true` for an estimated buy and `false` for an estimated sell. */
    isBuy?: boolean | number
    /** The security to be traded. */
    of?: SecurityGenqlSelection
    /** Pill to display for the estimated trade properties. */
    pill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sort option. */
export interface EstimatedTradeAmountSortOptionInput {
/** A sort type. */
type: EstimatedTradeAmountSortTypeEnum,
/** A sort direction. */
direction: SortDirectionEnum}


/** Represents a connected external account. */
export interface ExternalAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The status of this external account. */
    status?: boolean | number
    /** The type of the external account. */
    type?: boolean | number
    /**
     * A code for the institution that the external account belongs to. Institution
     * codes are intended to be stable and provide a basis for mapping institutions
     * to logos and other data within client applications. Institution codes are
     * defined by Plaid.
     */
    institutionCode?: boolean | number
    /** The name of the external account. */
    name?: boolean | number
    /** The routing number. */
    routingNumber?: boolean | number
    /** The bank account number, obscured with `*` characters. */
    accountNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection to a list of items. */
export interface ExternalAccountConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: ExternalAccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ExternalAccountEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: ExternalAccountGenqlSelection
    /** A cursor for use in pagination */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FeatureFlagsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A list of all features enabled for the user. */
    allFeatures?: boolean | number
    /**
     * Given a list of feature keys, returns a corresponding list of boolean values
     * indicating if the user has that feature enabled. False values indicate that
     * either the feature is not enabled for the user or the key is not recognized.
     * The list of booleans is guaranteed to be the same length and order as the list
     * of keys provided as an argument. The maximum number of keys that can be
     * checked is 200.
     */
    hasFeature?: { __args: {keys: Scalars['String'][]} }
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IntradayQuoteTimeSeriesGenqlSelection{
    /**
     * The list of intraday quotes in chronological order. The list will be empty if
     * the market was not open over the selected time range.
     */
    series?: IntradayQuotePointTypeGenqlSelection
    /**
     * The market session(s) enclosing the time series span. Value is null when there
     * are zero time series points.
     */
    timeSpan?: MarketTimeSpanGenqlSelection
    /**
     * The time of the most recent data in this series. Value is null when there are
     * zero time series points.
     */
    lastUpdatedTime?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An intraday quote time-series point. */
export interface IntradayQuotePointTypeGenqlSelection{
    /** The start time for this interval. */
    time?: boolean | number
    /**
     * The time represented by this point divided by difference between the start and
     * end times of the series, expressed as a percentage (0-100%).
     */
    timeSpanPercent?: boolean | number
    /** The intraday quote for this interval. */
    data?: IntradayIntervalQuoteGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Intraday quote data for a security over a particular time interval. */
export interface IntradayIntervalQuoteGenqlSelection{
    /** The price at the beginning of this interval. */
    openPrice?: boolean | number
    /**
     * The price at the end of this interval. Value is null when unavailable for this
     * interval.
     */
    closePrice?: boolean | number
    /**
     * The close price at the end of the previous interval. Value is null when unavailable
     * for the previous interval.
     */
    previousQuoteClosePrice?: boolean | number
    /**
     * The high price over this interval. Value is null when unavailable for this
     * interval.
     */
    highPrice?: boolean | number
    /**
     * The low price over this interval. Value is null when unavailable for this
     * interval.
     */
    lowPrice?: boolean | number
    /**
     * The range over this interval. Value is null when low or high are unavailable
     * for this interval.
     */
    priceRange?: boolean | number
    /**
     * The number of shares traded over this interval. Value is null when unavailable
     * for this interval.
     */
    shareVolume?: boolean | number
    /**
     * The close price on the market day previous to the start of the series. Value
     * is null when unavailable.
     */
    previousClosePrice?: boolean | number
    /**
     * The change between the close price on the market day previous to the start of
     * the series and the close price of this interval. Value is null when the
     * previous close price is unavailable.
     */
    changeFromPreviousClosePrice?: boolean | number
    /**
     * The percent change between the close price on the market day previous to the
     * start of the series and the close price of this interval. Value is null when
     * the previous close price is unavailable or zero.
     */
    percentChangeFromPreviousClosePrice?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about market sessions over a time span. */
export interface MarketTimeSpanGenqlSelection{
    /** The market open time prior to or coinciding with the first time series point. */
    firstOpenTime?: boolean | number
    /** The market close time following or coinciding with the last time series point. */
    lastCloseTime?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnlineAccountRegistrationCountryGenqlSelection{
    /** The name of the country. */
    description?: boolean | number
    /** The three letter abbreviation associated with the country. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** An entry point for querying dividend related information by portfolioSlice. */
    dividends?: (DividendsGenqlSelection & { __args: {accountId: Scalars['ID'], period?: (DividendTrackerDataPeriod | null)} })
    /**
     * @deprecated Pie tutorial has been removed from onboarding.
     * The pie tutorial should be displayed to the user.
     */
    shouldShowPieTutorial?: boolean | number
    /** The user has at least one Invest account in any status. */
    hasInvestAccount?: boolean | number
    /** The user has at least one Invest account in an active (unclosed) status. */
    hasActiveInvestAccount?: boolean | number
    /** Permissible Countries */
    permissibleCountriesForAccountOpen?: (OnlineAccountRegistrationCountryGenqlSelection & { __args: {accountRegistration: OnlineAccountRegistrationEnum} })
    /** Returns the documents and agreements, by account type, that a user must agree to in order to open an invest account. */
    requiredDocuments?: (RequiredDocumentsBundleGenqlSelection & { __args: {accountRegistration: OnlineAccountRegistrationEnum} })
    /** When true, a user is allowed to open a custodial account. */
    isEligibleToOpenCustodialAccount?: boolean | number
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen?: PlusPromotionalMessageGenqlSelection
    /** A set of fields used to drive the pie confirmation changes screen. Accepts an optional argument for handling "merged" slices via Received Securities. */
    pieChangesConfirmation?: (PieChangesConfirmationGenqlSelection & { __args: {isCrypto?: (Scalars['Boolean'] | null), newSerializedPieTree: Scalars['String'], unmanagedHoldingIdsForMergedSlices?: (Scalars['ID'][] | null)} })
    /** Content for the Invest ACAT Wizard flow. */
    acatWizard?: (InvestAcatWizardContentGenqlSelection & { __args?: {forIra?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use AcatWizardInfo.acatWizardEntryLink instead.
     * When available, a CTA link to be rendered in Invest for the ACAT Wizard flow
     */
    acatWizardEntryLink?: AppLinkGenqlSelection
    /** ACAT Wizard flow information */
    acatWizardInfo?: AcatWizardInfoGenqlSelection
    /**
     * @deprecated Use `investMarketingScreen` instead.
     * Invest Marketing content for users that have profile created, but no invest account. Will be deprecated once all clients are using investMarketingScreen.
     */
    investMarketing?: InvestMarketingGenqlSelection
    /** The new marketing screen content for the Invest overview page for users that have profile created, but no invest account. */
    investMarketingScreen?: InvestMarketingScreenGenqlSelection
    /** Entry point to drive the Invest Account opening flow. In a future state all Invest Account opening flows will be driven through this type. */
    accountOpening?: InvestAccountOpeningGenqlSelection
    /** Share pie */
    sharePie?: InvestSharePieGenqlSelection
    /** Disclosures for Invest */
    investDisclosures?: InvestDisclosuresGenqlSelection
    /** Security lending disclosures */
    fullyPaidLendingDisclosure?: (InvestFullyPaidLendingDisclosureGenqlSelection & { __args: {accountRegistration: OnlineAccountRegistrationEnum} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatWizardInfoGenqlSelection{
    /** When available, a CTA link to be rendered in Invest for the ACAT Wizard flow */
    acatWizardEntryLink?: AppLinkGenqlSelection
    /** ACAT Promotion Content */
    acatPromotion?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestDisclosuresGenqlSelection{
    /** Disclosures for trading under Invest */
    investTradeDisclosures?: (InvestTradeDisclosuresGenqlSelection & { __args?: {for?: (InvestDisclosuresType | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestTradeDisclosuresGenqlSelection{
    /** Array of disclosures to be displayed */
    disclosures?: InvestTradeDisclosureItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestTradeDisclosureItemGenqlSelection{
    /** Section disclosure title for trading under Invest */
    title?: boolean | number
    /** Disclosure content for trading under Invest */
    content?: boolean | number
    /** Disclosure links for trading under Invest */
    links?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAccountOpeningGenqlSelection{
    title?: boolean | number
    questions?: InvestAccountOpeningQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAccountOpeningQuestionGenqlSelection{
    /** An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis. */
    questionType?: boolean | number
    /** Title screen for the question. */
    title?: boolean | number
    /** Subtitle copy of the given question. */
    subtitle?: boolean | number
    /** Copy to be rendered for the continue CTA. */
    continueLabel?: boolean | number
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel?: boolean | number
    /** An array of strings for a any disclaimer tooltips that need to be shown for the given question. */
    disclaimerTooltipContent?: boolean | number
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType?: boolean | number
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about historical activity for an Invest account. */
export interface InvestActivityGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A list of Invest account activity entries. */
    activity?: (InvestActivityEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), filter?: (InvestActivityEntryFilterInput | null), sort?: (InvestActivityEntrySortInput[] | null), 
    /** If trades are returned, prevent summarization. Only used by Yodlee. */
    neverSummarizeTrades?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Filter options for Invest activity entries. */
export interface InvestActivityEntryFilterInput {
/**
 * When specified, filter for entries occurring after this date. Specify a ISO
 * 8601 timestamp. If a timezone offset is not specified, the date is considered
 * to be in the `America/New_York` timezone.
 */
fromDate?: (Scalars['String'] | null),
/**
 * When specified, filter for entries occurring before this date. Specify a ISO
 * 8601 timestamp. If a timezone offset is not specified, the date is considered
 * to be in the `America/New_York` timezone.
 */
toDate?: (Scalars['String'] | null),
/**
 * When specified and non-empty, filter for entries related to the specified
 * security symbol.
 */
symbols?: (Scalars['String'][] | null),
/** When true, filter for entries of the trading category. */
includeCategoryTrading?: (Scalars['Boolean'] | null),
/** When true, filter for entries of the cash category. */
includeCategoryCash?: (Scalars['Boolean'] | null),
/** When true, filter for entries of the position category. */
includeCategoryPosition?: (Scalars['Boolean'] | null),
/** When true, filter for entries of the dividend category. */
includeCategoryDividend?: (Scalars['Boolean'] | null),
/** When true, filter for entries of the transfer category. */
includeCategoryTransfer?: (Scalars['Boolean'] | null)}


/** A sort option. */
export interface InvestActivityEntrySortInput {
/** A sort type. */
type: InvestActivityEntrySortTypeEnum,
/** A sort direction. */
direction: SortDirectionEnum}

export interface InvestActivityEntryConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: InvestActivityEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityEntryEdgeGenqlSelection{
    cursor?: boolean | number
    node?: InvestActivityEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Invest activity entry. */
export interface InvestActivityEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    on_InvestActivityTradeSummaryEntry?: InvestActivityTradeSummaryEntryGenqlSelection
    on_InvestActivityTradeEntry?: InvestActivityTradeEntryGenqlSelection
    on_InvestActivityCashEntry?: InvestActivityCashEntryGenqlSelection
    on_InvestActivityPositionEntry?: InvestActivityPositionEntryGenqlSelection
    on_InvestActivityRebalanceEntry?: InvestActivityRebalanceEntryGenqlSelection
    on_InvestActivityOrderEntry?: InvestActivityOrderEntryGenqlSelection
    on_InvestActivityOtherEntry?: InvestActivityOtherEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Summarizes all of the trades occurring during a single trade window. */
export interface InvestActivityTradeSummaryEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** The total number of buy trades. */
    countOfBuys?: boolean | number
    /** The total number of sell trades. */
    countOfSells?: boolean | number
    /** The unsigned summed dollar amount of buy trades. */
    amountOfBuys?: boolean | number
    /** The unsigned summed dollar amount of sell trades. */
    amountOfSells?: boolean | number
    /**
     * A list of trade activity entries being summarized. Only available when the
     * entry is loaded independently, outside of a list.
     */
    trades?: (InvestActivityTradeEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), includeBuys?: (Scalars['Boolean'] | null), includeSells?: (Scalars['Boolean'] | null)} })
    /** True if this trade window had excluded buy trades. */
    hasExcludedBuys?: boolean | number
    /** Buy trades that were calculated but excluded from a trading window. */
    excludedBuys?: (InvestActivityExcludedTradeConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityExcludedTradeConnectionGenqlSelection{
    total?: boolean | number
    pageInfo?: PageInfoGenqlSelection
    edges?: InvestActivityExcludedTradeEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityExcludedTradeEdgeGenqlSelection{
    cursor?: boolean | number
    node?: InvestActivityExcludedTradeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A trade that was calculated but excluded from a trading window. */
export interface InvestActivityExcludedTradeGenqlSelection{
    /** A reference to the security being traded. */
    tradeSecurity?: InvestActivitySecurityReferenceGenqlSelection
    /** Value is true for a buy trade, and false for a sell trade. */
    isBuy?: boolean | number
    /** The unsigned total dollar amount of the trade that was excluded. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityTradeEntryConnectionGenqlSelection{
    total?: boolean | number
    pageInfo?: PageInfoGenqlSelection
    edges?: InvestActivityTradeEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityTradeEntryEdgeGenqlSelection{
    cursor?: boolean | number
    node?: InvestActivityTradeEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A single trade within a trade window. */
export interface InvestActivityTradeEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** A reference to the security being traded. */
    tradeSecurity?: InvestActivitySecurityReferenceGenqlSelection
    /** Value is true for a buy trade, and false for a sell trade. */
    isBuy?: boolean | number
    /** The unsigned share quantity being traded. */
    quantity?: boolean | number
    /** The share price that the trade occurred at. */
    sharePrice?: boolean | number
    /** The unsigned total dollar amount of the trade (`abs(quantity) * sharePrice`). */
    amount?: boolean | number
    /** The trade summary activity entry that summarizes this trade. */
    summary?: InvestActivityTradeSummaryEntryGenqlSelection
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityCashEntryTransferDetailsGenqlSelection{
    /** Some descriptive text that summarizes the transfer. */
    transferSummary?: boolean | number
    /** The ID of the transfer instance that matches the invest activity entry. */
    transferId?: boolean | number
    /** The total amount of the matching transfer. */
    totalAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A change to the cash balance of an Invest account. */
export interface InvestActivityCashEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /**
     * Whether the cash balance change is related to a security. When true, the
     * `cashSecurity` field is expected to return a non-null value.
     */
    isRelatedToSecurity?: boolean | number
    /** The security paying or receiving the cash, if there is one. */
    cashSecurity?: InvestActivitySecurityReferenceGenqlSelection
    /** The signed dollar change to the cash balance. */
    amount?: boolean | number
    /**
     * The dividend tooltip text returned when the activity of this entry is
     * 'DIVIDEND_DEBITED' or 'ADR_FEE_DEBITED'.
     */
    tooltipCopy?: boolean | number
    /** Details of the transfer (if any) that matches the cash activity. */
    transferDetails?: InvestActivityCashEntryTransferDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A change to the holdings of an Invest account. */
export interface InvestActivityPositionEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** The security for which shares are being credited or debited. */
    positionSecurity?: InvestActivitySecurityReferenceGenqlSelection
    /** The signed share quantity change to the position. */
    quantity?: boolean | number
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityRebalanceEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityOrderEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivityOtherEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The process date of this entry as an ISO 8601 timestamp in the UTC timezone. */
    date?: { __args: {
    /**
     * When true, output the date local to the timezone the activity occurred in,
     * which is `America/New_York`.
     */
    local?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A short title for the entry. */
    title?: boolean | number
    /** A friendly description of this entry. */
    description?: boolean | number
    /** The account that owns this entry. */
    account?: AccountGenqlSelection
    /** An AppLink for any helpful links for this entry. */
    activityDescriptionLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestActivitySecurityReferenceGenqlSelection{
    /** The best-available descriptor for the security. */
    descriptor?: boolean | number
    /** The symbol of the security, if known. */
    symbol?: boolean | number
    /** The security, if available. */
    security?: SecurityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    balances?: BalancesOverviewGenqlSelection
    /** The cards that are displayed on overview hub. */
    cards?: OverviewCardsGenqlSelection
    /** Returns true if the feature flag for overview hub is enabled for the user. */
    overviewHubEnabled?: boolean | number
    /** True if the user should see the Move Money CTA on the home page (user has an active funding source or ach relationship). If null, default to showing the CTA. */
    showMoveMoney?: boolean | number
    /** The tiles that are displayed on the overview home page */
    homeTilesSections?: HomeTilesSectionConnectionGenqlSelection
    /** Disclosure information for the overview page footer */
    disclosuresFooter?: AppRichTextDisclosureLinkGenqlSelection
    /** The mobile floating action button details for the home page */
    floatingActionButton?: AppNavigationItemGenqlSelection
    /** The section for showing promotional content on the home overview page */
    promotions?: OverviewPromotionsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BalancesOverviewGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Returns the total value of all assets minus liabilities. */
    total?: boolean | number
    /**
     * @deprecated Use `accountTotals` instead. This will still return the sum of Invest accounts.
     * Returns the total account values of all invest accounts.
     */
    invest?: boolean | number
    /**
     * @deprecated Use `accountTotals` instead. This will return the value of the Earn accounts. It is purposely incorrect due to the Spend pillar changes and mobile still using this field. Web does not use this.
     * Returns the total account value of the spend account.
     */
    spend?: boolean | number
    /**
     * @deprecated Use `accountTotals` instead. This will return the sum of Borrow accounts.
     * Returns the total amount owed on borrow.
     */
    borrow?: boolean | number
    /**
     * @deprecated Use `accountTotals` instead. This will return the value of the Credit Card account.
     * Returns the total amount owed on the M1 credit card.
     */
    credit?: boolean | number
    /** The total assets that a user has on the platform. */
    assets?: NetWorthLabelGenqlSelection
    /** The total liabilities that a user has on the platform. */
    liabilities?: NetWorthLabelGenqlSelection
    /** The ratio of assets compared to liabilities between 0-1. */
    assetRatio?: boolean | number
    /** An array of all of the user's account types and balances. */
    accountTotals?: AccountTotalWithStatusGenqlSelection
    isPartialTotal?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** An array of all the asset card types. */
    assets?: OverviewCardInterfaceGenqlSelection
    /** An array of all the liability card types. */
    liabilities?: OverviewCardInterfaceGenqlSelection
    /**
     * @deprecated Use 'assets' instead.
     * The invest card for overview hub.
     */
    invest?: OverviewInvestCardGenqlSelection
    /**
     * @deprecated Use 'assets' instead.
     * The spend card for overview hub.
     */
    spend?: OverviewCardGenqlSelection
    /**
     * @deprecated Use 'liabilities' instead.
     * The borrow card for overview hub.
     */
    borrow?: OverviewCardGenqlSelection
    /**
     * @deprecated Use 'liabilities' instead.
     * The credit card card for overview hub.
     */
    creditCard?: OverviewCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardInterfaceGenqlSelection{
    /** The title for the overview card. */
    title?: OverviewCardTitleGenqlSelection
    /** The footer text and icon for the card. */
    footer?: OverviewCardFooterGenqlSelection
    /** The content for the card. */
    content?: OverviewCardContentInterfaceGenqlSelection
    /** The image shown as a marketing image on the card. */
    marketingImage?: AppImageGenqlSelection
    /** The link that directs clicking/touching the card. */
    link?: AppLinkGenqlSelection
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    on_OverviewCard?: OverviewCardGenqlSelection
    on_OverviewInvestCard?: OverviewInvestCardGenqlSelection
    on_OverviewSpendCard?: OverviewSpendCardGenqlSelection
    on_OverviewBorrowCard?: OverviewBorrowCardGenqlSelection
    on_OverviewCreditCard?: OverviewCreditCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardContentInterfaceGenqlSelection{
    /** The text for the content. */
    text?: boolean | number
    /** The subtitle for the content. */
    subtitle?: boolean | number
    on_OverviewCardContent?: OverviewCardContentGenqlSelection
    on_OverviewInvestCardContent?: OverviewInvestCardContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardTitleInterfaceGenqlSelection{
    /** The icon for the title. */
    icon?: AppImageGenqlSelection
    /** The text shown for the title. */
    text?: boolean | number
    /** The subtitle for this title. */
    subtitle?: boolean | number
    on_OverviewCardTitle?: OverviewCardTitleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardGenqlSelection{
    /** The title for the overview card. */
    title?: OverviewCardTitleGenqlSelection
    /** The content for the overview card. */
    content?: OverviewCardContentInterfaceGenqlSelection
    /** The footer text and icon for the card. */
    footer?: OverviewCardFooterGenqlSelection
    /** The image shown as a marketing image on the card. */
    marketingImage?: AppImageGenqlSelection
    /** The link that directs clicking/touching the card. */
    link?: AppLinkGenqlSelection
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardTitleGenqlSelection{
    /** The icon on the title. */
    icon?: AppImageGenqlSelection
    /** The title text. */
    text?: boolean | number
    /** The subtitle for the title. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardContentGenqlSelection{
    /** The main content text for the overview card. */
    text?: boolean | number
    /** The subtitle for the content. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCardFooterGenqlSelection{
    /** The image for the icon on the icon */
    icon?: AppImageGenqlSelection
    /** The text shown in the footer of the card. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewInvestCardGenqlSelection{
    /** The title for the overview card. */
    title?: OverviewCardTitleGenqlSelection
    /** The content for the overview card. */
    content?: OverviewCardContentInterfaceGenqlSelection
    /** The footer text and icon for the card. */
    footer?: OverviewCardFooterGenqlSelection
    /** The image shown as a marketing image on the card. */
    marketingImage?: AppImageGenqlSelection
    /** The link that directs clicking/touching the card. */
    link?: AppLinkGenqlSelection
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewSpendCardGenqlSelection{
    /** The title for the overview card. */
    title?: OverviewCardTitleGenqlSelection
    /** The content for the overview card. */
    content?: OverviewCardContentInterfaceGenqlSelection
    /** The footer text and icon for the card. */
    footer?: OverviewCardFooterGenqlSelection
    /** The image shown as a marketing image on the card. */
    marketingImage?: AppImageGenqlSelection
    /** The link that directs clicking/touching the card. */
    link?: AppLinkGenqlSelection
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewBorrowCardGenqlSelection{
    /** The title for the overview card. */
    title?: OverviewCardTitleGenqlSelection
    /** The content for the overview card. */
    content?: OverviewCardContentInterfaceGenqlSelection
    /** The footer text and icon for the card. */
    footer?: OverviewCardFooterGenqlSelection
    /** The image shown as a marketing image on the card. */
    marketingImage?: AppImageGenqlSelection
    /** The link that directs clicking/touching the card. */
    link?: AppLinkGenqlSelection
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewCreditCardGenqlSelection{
    /** The title for the overview card. */
    title?: OverviewCardTitleGenqlSelection
    /** The content for the overview card. */
    content?: OverviewCardContentInterfaceGenqlSelection
    /** The footer text and icon for the card. */
    footer?: OverviewCardFooterGenqlSelection
    /** The image shown as a marketing image on the card. */
    marketingImage?: AppImageGenqlSelection
    /** The link that directs clicking/touching the card. */
    link?: AppLinkGenqlSelection
    /** The analytics event that is fired when the card is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewInvestCardContentGenqlSelection{
    /** The text for the invest card's content. */
    text?: boolean | number
    /** The gains for the all of the user's accounts. */
    gains?: OverviewInvestCardContentSubtitleGenqlSelection
    /** The subtitle for the content. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OverviewInvestCardContentSubtitleGenqlSelection{
    /** The change for all of the user's invest accounts. */
    change?: boolean | number
    /** The percent change for all of the user's invest accounts. */
    percentChange?: boolean | number
    /** Boolean declaring if this is a gain or loss. */
    isGain?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The account type along with total balance of the account. */
export interface AccountTotalWithStatusGenqlSelection{
    /**
     * The type of account.
     * Currently limited to 'Invest' | 'Earn' | 'Borrow' | 'Spend'.
     */
    type?: boolean | number
    /** The total account value (positive or negative) for the current account. For display purposes, generally, Borrow will be negative, Spend (Credit Card) and all others will be positive. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The label and value for the asset and liabilities */
export interface NetWorthLabelGenqlSelection{
    /** The type of label. Limited to 'Assets' | 'Liabilities'. */
    label?: boolean | number
    /** The value for the asset or liability. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface HomeTilesSectionConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: HomeTilesSectionEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface HomeTilesSectionEdgeGenqlSelection{
    cursor?: boolean | number
    node?: HomeTilesSectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface HomeTilesSectionGenqlSelection{
    /** The header of each group of tiles. Limited to 'Assets' | 'Liabilities'. */
    header?: boolean | number
    /** The tiles that are displayed on the home page for assets and liabilities. */
    tiles?: AccountTileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountTileGenqlSelection{
    /** The title of the tile. */
    title?: boolean | number
    /** The icon of the tile */
    icon?: AppImageGenqlSelection
    /** The subtitle of the tile */
    subtitle?: SubtitleInfoGenqlSelection
    /** The value for the account for the tile */
    value?: boolean | number
    /** The subvalue for the account for the tile */
    subValue?: SubValueInfoGenqlSelection
    /** The illustration to be displayed on the tile */
    illustration?: AppImageGenqlSelection
    /** An analytics event to fire when the given tile is displayed. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The primary action that should take place when the tile is clicked */
    primaryAction?: AppLinkGenqlSelection
    /** The secondary action that should take place when subtitle is clickable */
    secondaryAction?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SubtitleInfoGenqlSelection{
    /** The subtitle text of the tile */
    text?: boolean | number
    /** The icon for the subtitle */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SubValueInfoGenqlSelection{
    /** The subvalue for the account for the tile */
    text?: boolean | number
    /** The color for the subvalue */
    color?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieAnalysisGenqlSelection{
    /**
     * The total number of security holdings associated with this pie, including
     * those of any pie descendents.
     */
    totalHoldings?: boolean | number
    /**
     * The average dividend yield for the components of this pie, weighted by their
     * target allocation percentage. Value is expressed as a percentage. Value is
     * null when unavailable.
     */
    dividendYield?: boolean | number
    /**
     * The avergage net expense ratio for the components of this pie, weighted by
     * their target allocation percentage. Value is expressed as a percentage. Value
     * is null when unavailable.
     */
    netExpenseRatio?: boolean | number
    /**
     * Backtested performance information for this pie. Value is null if backtesting
     * is currently unavailable.
     */
    backtesting?: (PieBacktestingGenqlSelection & { __args: {
    /** A past time period anchored by the present. */
    period: PieBacktestPeriodEnum, 
    /**
     * The initial dollar value for the backtest. Must be a positive value. The
     * default value is `100`.
     */
    initialValue?: (Scalars['Float'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieBacktestingGenqlSelection{
    /** The start time of the backtest period. */
    startTime?: boolean | number
    /** The end time of the backtest period. */
    endTime?: boolean | number
    /**
     * A time series of backtest values. Value is null when data is temporarily
     * unavailable.
     */
    series?: PieBacktestTimeSeriesPointGenqlSelection
    /**
     * The change in value over the backtest period. Value is null when data is
     * temporarily unavailable.
     */
    valueChange?: boolean | number
    /**
     * The percent change in value over the backtest period. Value is null when data
     * is temporarily unavailable.
     */
    valuePercentChange?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieBacktestTimeSeriesPointGenqlSelection{
    /** The time of this point. */
    time?: boolean | number
    /** The dollar value at this point. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieEditModelGenqlSelection{
    /**
     * Analysis on the composition of this pie edit model. Value is null if the pie
     * has greater than 500 securities, or when analysis is unavilable.
     */
    analysis?: PieAnalysisGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieFundamentalsGenqlSelection{
    /**
     * The total number of security holdings associated with this pie, including
     * those of any pie descendents. Value is null when unavailable.
     */
    totalHoldings?: boolean | number
    /**
     * The average dividend yield for the components of this pie, weighted by their
     * target allocation percentage. Value is expressed as a percentage. Value is
     * null when unavailable.
     */
    dividendYield?: boolean | number
    /**
     * The avergage net expense ratio for the components of this pie, weighted by
     * their target allocation percentage. Value is expressed as a percentage. Value
     * is null when unavailable.
     */
    netExpenseRatio?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationMovedSliceGenqlSelection{
    /** The name of the slice. */
    name?: boolean | number
    /** The symbol of the slice if applicable. */
    symbol?: boolean | number
    /** A pill used to represent that the slice was Moved */
    actionPill?: AppPillGenqlSelection
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen content for the ACAT Type Step of the ACAT Wizard Flow. */
    acatTransferTypeScreenContent?: InvestAcatTransferTypeScreenContentGenqlSelection
    /** Screen content for the Brokerage Selection step of the ACAT Wizard Flow. */
    brokerageSelectionContent?: InvestAcatBrokerageSelectionContentGenqlSelection
    /** Screen content for the Brokerage Account Details Input step of the ACAT Wizard Flow. */
    brokerageAccountDetailsContent?: (InvestAcatBrokerageAccountDetailsContentGenqlSelection & { __args: {investAcatWizardContraParticipantId: Scalars['ID']} })
    /** Screen content for the Destination Selection step of the ACAT Wizard Flow. */
    destinationAccountContent?: InvestAcatDestinationAccountContentGenqlSelection
    /** Screen content for the Transfer Information step of the ACAT Wizard Flow. */
    transferInformationScreenContent?: InvestAcatTransferInformationScreenContentGenqlSelection
    /** Screen content for the Confirm Selections step of the ACAT Wizard Flow. */
    confirmSelectionsScreenContent?: (InvestAcatConfirmSelectionsContentGenqlSelection & { __args?: {input?: (SubmitInvestAcatTransferInput | null)} })
    /**
     * @deprecated Use `SubmitInvestAcatTransferPayload.toast` instead.
     * Screen content for the successful ACAT confirmation step of the ACAT Wizard Flow.
     */
    acatConfirmationContent?: (InvestAcatConfirmationContentGenqlSelection & { __args: {investAcatWizardContraParticipantId: Scalars['ID']} })
    assetSelectionContent?: (InvestAcatWizardAssetSelectionContentGenqlSelection & { __args: {investAcatWizardContraParticipantId: Scalars['ID']} })
    /** The content for the rollover information screen. */
    rolloverInformationScreenContent?: AppInfoPageGenqlSelection
    /** The content for the rollover creation screen */
    rolloverCreationScreenContent?: RolloverCreationScreenContentGenqlSelection
    /** Informational message for the ACAT Transfer Type screen. */
    informationalBanner?: InformationBannerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RolloverCreationScreenContentGenqlSelection{
    /** The webview URL for initiating the ACAT rollover flow */
    initiateRolloverWebviewUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardAssetSelectionContentGenqlSelection{
    id?: boolean | number
    header?: RichTextContentGenqlSelection
    cash?: InvestAcatWizardAssetSelectionCashSectionContentGenqlSelection
    assets?: InvestAcatWizardAssetSelectionAssetsSectionContentGenqlSelection
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardAssetSelectionCashSectionContentGenqlSelection{
    header?: RichTextContentGenqlSelection
    description?: RichTextContentGenqlSelection
    input?: AcatWizardAssetSelectionInputGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardAssetSelectionAssetsSectionContentGenqlSelection{
    /** Properties for displaying header content */
    header?: RichTextContentGenqlSelection
    /** Text description for partial transfer asset selection */
    description?: RichTextContentGenqlSelection
    /** Properties for displaying the securities search input field */
    searchInput?: AcatWizardAssetSelectionInputGenqlSelection
    /** Properties for displaying the security quantity input field */
    sharesInput?: AcatWizardAssetSelectionInputGenqlSelection
    /** A CTA associated with this section */
    cta?: AcatWizardAssetSelectionCTAGenqlSelection
    /** Copy for informing the user if they did not find what they are searching for */
    notFoundCopy?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatWizardAssetSelectionInputGenqlSelection{
    label?: boolean | number
    placeholder?: boolean | number
    helperText?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcatWizardAssetSelectionCTAGenqlSelection{
    label?: boolean | number
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatTransferTypeScreenContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: boolean | number
    /** Header `AppLink`. */
    headerLink?: AppLinkGenqlSelection
    /** ACAT transfer option selections. */
    selections?: InvestAcatWizardTransferTypeSelectionGenqlSelection
    /** CTA label. */
    ctaLabel?: boolean | number
    /** Analytics for viewing this page */
    pageViewAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardTransferTypeSelectionGenqlSelection{
    /** Transfer type label. */
    label?: boolean | number
    /** Transfer type sub-label. */
    sublabel?: boolean | number
    /** `AppLink` to use for navigation purposes. */
    navigation?: boolean | number
    /** Analytics for choosing this transfer type */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatBrokerageSelectionContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: boolean | number
    /** Content for the Contra Participant search form in the Invest ACAT Wizard. */
    searchForm?: InvestAcatWizardContraSearchFormGenqlSelection
    /** List of contra participants available for users to ACAT from. */
    contraParticipants?: InvestAcatWizardContraParticipantConnectionGenqlSelection
    /** CTA label. */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContraSearchFormGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Copy and `AppLink` for users transferring from a brokerage that cannot be handled in-app. */
    contraUnavailableNotice?: InvestAcatWizardContraUnavailableGenqlSelection
    /** Search form placeholder text. */
    placeholder?: boolean | number
    /** Result of contra participants based on user's search term. */
    contraParticipantList?: (InvestAcatWizardContraParticipantConnectionGenqlSelection & { __args?: {searchTerm?: (Scalars['String'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContraUnavailableGenqlSelection{
    /** Copy to display when a user's search yields no results. */
    content?: boolean | number
    /** `AppLink` to display to users when their search yields no results. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContraParticipantConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: InvestAcatWizardContraParticipantEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContraParticipantEdgeGenqlSelection{
    cursor?: boolean | number
    node?: InvestAcatWizardContraParticipantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContraParticipantGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** `AppImage` for the contra participant. */
    icon?: AppImageGenqlSelection
    /** Name of the contraparticipant. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatBrokerageAccountDetailsContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: boolean | number
    /** Label and placeholder content for the contra account number text field. */
    accountNumberTextField?: InvestAcatWizardContraAccountNumberTextFieldGenqlSelection
    /** Optional informational message. */
    informationalMessage?: InvestAcatWizardInformationalMessageContentGenqlSelection
    /** CTA label. */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardContraAccountNumberTextFieldGenqlSelection{
    /** Label copy. */
    label?: boolean | number
    /** Placeholder copy. */
    placeholder?: boolean | number
    /** For use in client-side input validation. Account number must be greater than or equal to this amount. */
    minAccountLength?: boolean | number
    /** For use in client-side input validation. Account number must be less than or euqal to this amount. */
    maxAccountLength?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatWizardInformationalMessageContentGenqlSelection{
    /** Icon to display for the ACAT Wizard Informational Message on the Contra Brokerage Account Details page. */
    icon?: AppImageGenqlSelection
    /** Copy to display for the ACAT Wizard Informational Message on the Contra Brokerage Account Details page. */
    copy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatDestinationAccountContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: boolean | number
    /** List of valid destination participants for the ACAT transfer. */
    validParticipants?: AccountConnectionGenqlSelection
    /** Label for the participant dropdown. */
    validParticipantsLabel?: boolean | number
    /** Informational message. */
    informationalMessage?: AppInformationalMessageCardGenqlSelection
    /** CTA label. */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatTransferInformationScreenContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: boolean | number
    /** A list of details that a user should know as it pertains to ACAT Invest transfers. */
    transferDetails?: InvestAcatTransferDetailGenqlSelection
    /** Footer content. */
    footer?: boolean | number
    /** CTA label. */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatTransferDetailGenqlSelection{
    /** `AppLink` for the Transfer Detail. */
    icon?: AppImageGenqlSelection
    /** Transfer detail title. */
    title?: boolean | number
    /** Transfer detail content. */
    content?: boolean | number
    /** Optional `AppLink` for the transfer detail. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: boolean | number
    /** CTA label. */
    ctaLabel?: boolean | number
    /** The internal account a user is transferring assets into. */
    destinationAccount?: AccountGenqlSelection
    /** The external brokerage a user is transferring assets from. */
    externalBrokerage?: InvestAcatWizardContraParticipantGenqlSelection
    /** Additional information related to the transfer (e.g. securities, cash, etc.). */
    sections?: InvestAcatConfirmSelectionsContentSectionGenqlSelection
    /** The amount of cash a user is transferring as part of a partial ACAT. Will be null for full ACAT transfers. */
    cash?: InvestAcatConfirmSelectionsCashSectionGenqlSelection
    /** The number of assets a user is transferring as part of a partial ACAT. Will be null for full ACAT transfers. */
    assets?: InvestAcatConfirmSelectionsAssetsSectionGenqlSelection
    /** Additional details related to the ACAT transfer for the user to be aware of. */
    transferDetails?: InvestAcatConfirmSelectionsTransferDetailsSectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsContentSectionGenqlSelection{
    header?: boolean | number
    entries?: InvestAcatConfirmSelectionsContentSectionEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsCashSectionGenqlSelection{
    header?: RichTextContentGenqlSelection
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsAssetsSectionGenqlSelection{
    header?: RichTextContentGenqlSelection
    /** Label for a link that shows how many assets the user is transferring */
    assetsListLinkLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsContentSectionEntryGenqlSelection{
    label?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsTransferDetailsSectionGenqlSelection{
    header?: boolean | number
    details?: InvestAcatConfirmSelectionsTransferDetailsSectionDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmSelectionsTransferDetailsSectionDetailGenqlSelection{
    icon?: AppImageGenqlSelection
    body?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmationContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header content. */
    header?: { __args: {input?: (InvestAcatConfirmationContentHeaderInput | null)} } | boolean | number
    /** `AppImage` for confirmation screen. */
    image?: AppImageGenqlSelection
    /** `InvestAcatConfirmationInfoCard` content. */
    infoCard?: InvestAcatConfirmationInfoCardGenqlSelection
    /** CTA label. */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestAcatConfirmationContentHeaderInput {
/** Optional input argument, when included, result will be a string of HTML. */
includeHtml?: (Scalars['Boolean'] | null),
/** Optional input argument, when included, result will be a string of Markdown. */
includeMarkdown?: (Scalars['Boolean'] | null)}

export interface InvestAcatConfirmationInfoCardGenqlSelection{
    /** Title content. */
    title?: boolean | number
    /** An array of strings to display as a list. */
    content?: boolean | number
    /** Footer content. */
    footer?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ProfileGenqlSelection{
    /** Information about the primary account holder. Null when there are no accounts with a primary account holder. */
    primary?: AccountHolderGenqlSelection
    /** Information about the secondary account holder. Null when there are no accounts with a secondary account holder. */
    secondary?: AccountHolderGenqlSelection
    /** Suitabililty information about the primary account holder. Null when there are no accounts with a primary account holder. */
    suitability?: SuitabilityProfileGenqlSelection
    /**
     * A list of retirement account beneficiaries, if set. During updates, the value
     * for this field has special meaning -- set `null` to leave existing
     * beneficiaries as-is, or set `[]` to clear the existing beneficiaries list.
     */
    beneficiaries?: BeneficiaryGenqlSelection
    /** When true, beneficiaries are allowed to be set on the profile. */
    allowsBeneficiaries?: boolean | number
    /** Updates to account holder home address will only be applied when true. */
    allowsHomeAddressUpdates?: boolean | number
    /**
     * @deprecated Use 'identityStatus' instead.
     * The current update status for profile information.
     */
    status?: boolean | number
    /** The current user's Identity status. Null if the user does not have an M1 Identity. */
    identityStatus?: boolean | number
    /** The trusted contact for the user profile. */
    trustedContact?: TrustedContactGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Profile information for the user. */
export interface ProfileInput {
/** Information about the primary account holder. Null when there are no accounts with a primary account holder. */
primary: UpdateAccountHolderInput,
/** Information about the secondary account holder. Null when there are no accounts with a secondary account holder. */
secondary?: (UpdateAccountHolderInput | null),
/** Suitabililty information about the primary account holder. Null when there are no accounts with a primary account holder. */
suitability?: (SuitabilityProfileInput | null),
/**
 * A list of retirement account beneficiaries, if set. During updates, the value
 * for this field has special meaning -- set `null` to leave existing
 * beneficiaries as-is, or set `[]` to clear the existing beneficiaries list.
 */
beneficiaries?: (NewBeneficiaryInput[] | null),
/** Not functional, ignore. Do not specify in queries so that it can be removed. */
allowsHomeAddressUpdates?: (Scalars['Boolean'] | null),
/** Information about the trusted contact for the user. */
trustedContact?: (TrustedContactInput | null)}


/** Represents profile information about an investment account holder. */
export interface AccountHolderGenqlSelection{
    /** The full name of the account holder. */
    fullName?: boolean | number
    /** The first (given) name of the account holder. */
    firstName?: boolean | number
    /** The middle initial of the account holder. */
    middleInitial?: boolean | number
    /** The last (family) name of the account holder. */
    lastName?: boolean | number
    /** The suffix of the account holder's name. */
    suffix?: boolean | number
    /** The account holder's date of birth, in the format of `YYYY-MM-DD`. */
    dateOfBirth?: boolean | number
    /** The account holder's country of citizenship. */
    countryOfCitizenship?: boolean | number
    /** The home address of the account holder. */
    homeAddress?: MailingAddressGenqlSelection
    /** The phone number of the account holder. */
    phoneNumber?: boolean | number
    /** An optional, additional email address for the account holder. */
    additionalEmail?: boolean | number
    /**
     * @deprecated use employmentInfo instead
     * The employment information for this account holder.
     */
    employment?: EmploymentGenqlSelection
    /** The employment information for this account holder. */
    employmentInfo?: EmploymentGenqlSelection
    /** Disclosure of an affiliation with a stock exchange or FINRA. */
    exchangeOrFinraAffiliationDisclosure?: ExchangeOrFinraAffiliationDisclosureGenqlSelection
    /** Disclosure of being a control person at any publicly-traded companies. */
    controlPersonDisclosure?: ControlPersonDisclosureGenqlSelection
    /**
     * @deprecated Deprecated please use politicalDisclosure instead
     * Disclosure of political exposure.
     */
    politicalExposureDisclosure?: PoliticalExposureDisclosureGenqlSelection
    /** Disclosure of political exposure. */
    politicalDisclosure?: PoliticalExposureDisclosureGenqlSelection
    /** Disclosure of user being subject to backup withholding. */
    backupWithholding?: BackupWithholdingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents profile information about an investment account holder. */
export interface NewAccountHolderInput {
/** The first (given) name of the account holder. */
firstName: Scalars['FirstName'],
/** The middle initial of the account holder. */
middleInitial?: (Scalars['MiddleInitial'] | null),
/** The last (family) name of the account holder. */
lastName: Scalars['LastName'],
/** The suffix of the account holder's name. */
suffix?: (NameSuffixEnum | null),
/** The account holder's date of birth, in the format of `YYYY-MM-DD`. */
dateOfBirth: Scalars['String'],
/** The account holder's country of citizenship. */
countryOfCitizenship: Scalars['String'],
/** The home address of the account holder. */
homeAddress: MailingAddressInput,
/** The phone number of the account holder. */
phoneNumber?: (Scalars['PhoneNumber'] | null),
/** An optional, additional email address for the account holder. */
additionalEmail?: (Scalars['String'] | null),
/** The employment information for this account holder. */
employment: EmploymentInput,
/** Disclosure of an affiliation with a stock exchange or FINRA. */
exchangeOrFinraAffiliationDisclosure: ExchangeOrFinraAffiliationDisclosureInput,
/** Disclosure of being a control person at any publicly-traded companies. */
controlPersonDisclosure: ControlPersonDisclosureInput,
/** Disclosure of political exposure. */
politicalExposureDisclosure: PoliticalExposureDisclosureInput,
/** Disclosure of user being subject to backup withholding. */
backupWithholding?: (BackupWithholdingInput | null)}


/** Represents profile information about a custodial investment account holder. */
export interface NewCustodialAccountBeneficiaryInput {
/** The first (given) name of the custodial account's beneficiary. */
firstName: Scalars['FirstName'],
/** The middle initial of the custodial account's beneficiary. */
middleInitial?: (Scalars['MiddleInitial'] | null),
/** The last (family) name of the custodial account's beneficiary. */
lastName: Scalars['LastName'],
/** The suffix of the custodial account beneficiary's name. */
suffix?: (NameSuffixEnum | null),
/** The custodial account beneficiary's date of birth, in the format of `YYYY-MM-DD`. */
dateOfBirth: Scalars['String'],
/** The custodial account beneficiary's country of citizenship. */
countryOfCitizenship: Scalars['String'],
/** The legal address of the custodial account's beneficiary. */
legalResidence: MailingAddressBeneficiaryInput}


/** Represents profile information about an investment account holder. */
export interface UpdateAccountHolderInput {
/** Name changes are no longer allowed. Stop using this field in queries. Will be removed in the future. */
firstName?: (Scalars['FirstName'] | null),
/** Name changes are no longer allowed. Stop using this field in queries. Will be removed in the future. */
middleInitial?: (Scalars['MiddleInitial'] | null),
/** Name changes are no longer allowed. Stop using this field in queries. Will be removed in the future. */
lastName?: (Scalars['LastName'] | null),
/** Name changes are no longer allowed. Stop using this field in queries. Will be removed in the future. */
suffix?: (NameSuffixEnum | null),
/** Home addresses changes may not be allowed. Omit this field when not necessary. */
homeAddress?: (MailingAddressInput | null),
/** Phone number changes are no longer allowed. Stop using this field in queries. Will be removed in the future. */
phoneNumber?: (Scalars['PhoneNumber'] | null),
/** An optional, additional email address for the account holder. */
additionalEmail?: (Scalars['String'] | null),
/** The employment information for this account holder. */
employment?: (EmploymentInput | null),
/** Disclosure of an affiliation with a stock exchange or FINRA. */
exchangeOrFinraAffiliationDisclosure?: (ExchangeOrFinraAffiliationDisclosureInput | null),
/** Disclosure of being a control person at any publicly-traded companies. */
controlPersonDisclosure?: (ControlPersonDisclosureInput | null),
/** Disclosure of political exposure. */
politicalExposureDisclosure?: (PoliticalExposureDisclosureInput | null),
/** Disclosure of user being subject to backup withholding. */
backupWithholding?: (BackupWithholdingInput | null)}


/** Represents a mailing address for a user. */
export interface MailingAddressInput {
/** Line one of the street address. */
lineOne: Scalars['MailingAddressLineOne'],
/** Line two of the street address. */
lineTwo?: (Scalars['MailingAddressLineTwo'] | null),
/** The city. */
city: Scalars['MailingAddressCity'],
/** The state (or other subdivision). */
stateOrProvince: MailingAddressSubdivisionEnum,
/** The postal code. */
postalCode: Scalars['PostalCode'],
/** The country. */
country: MailingAddressCountryEnum}


/** Represents a mailing address for a user opening custodial account. */
export interface MailingAddressBeneficiaryInput {
/** Line one of the street address. */
lineOne: Scalars['MailingAddressLineOne'],
/** Line two of the street address. */
lineTwo?: (Scalars['MailingAddressLineTwo'] | null),
/** The city. */
city: Scalars['MailingAddressCity'],
/** The state (or other subdivision). */
stateOrProvince: MailingAddressSubdivisionForCustodialBeneficiariesEnum,
/** The postal code. */
postalCode: Scalars['PostalCode'],
/** The country. */
country: MailingAddressCountryEnum}


/** Represents an employment for a user. */
export interface EmploymentGenqlSelection{
    /** The status of employment. */
    status?: boolean | number
    /** If employed, the employer. */
    employer?: boolean | number
    /** If employed, the occupation. */
    occupation?: boolean | number
    /** Boolean describing whether the user has selected an occupation/industry from the due diligence list. */
    hasSelectedOccupationFromList?: boolean | number
    /** Boolean describing whether the user has selected an occupation status value from the due diligence list. */
    hasSelectedOccupationStatusFromList?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an employment for a user. */
export interface EmploymentInput {
/** The status of employment. */
status: EmploymentStatusEnum,
/** If employed, the employer. */
employer?: (Scalars['EmploymentDescription'] | null),
/** If employed, the occupation. */
occupation?: (Scalars['EmploymentDescription'] | null)}


/** Disclosure of an affiliation with a stock exchange or FINRA. */
export interface ExchangeOrFinraAffiliationDisclosureGenqlSelection{
    /** Is the user is affiliated with, or an employee of a member firm of, a stock exchange or FINRA? */
    isAffiliated?: boolean | number
    /** If `isAffiliated` is `true`, the name of the affiliated firm. */
    firmName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Disclosure of an affiliation with a stock exchange or FINRA. */
export interface ExchangeOrFinraAffiliationDisclosureInput {
/** Is the user is affiliated with, or an employee of a member firm of, a stock exchange or FINRA? */
isAffiliated: Scalars['Boolean'],
/** If `isAffiliated` is `true`, the name of the affiliated firm. */
firmName?: (Scalars['DisclosureDescription'] | null)}


/** Disclosure of the user being a control person of any public companies. */
export interface ControlPersonDisclosureGenqlSelection{
    /** Is the user a control person (director, officer, or 10% stock owner) of any publicly-traded companies? */
    isControlPerson?: boolean | number
    /** If `isControlPerson` is `true`, a list of stock ticker symbols for which the user is a control person. */
    companySymbols?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Disclosure of the user being a control person of any public companies. */
export interface ControlPersonDisclosureInput {
/** Is the user a control person (director, officer, or 10% stock owner) of any publicly-traded companies? */
isControlPerson: Scalars['Boolean'],
/** If `isControlPerson` is `true`, a list of stock ticker symbols for which the user is a control person. */
companySymbols?: ((Scalars['CompanySymbol'] | null)[] | null)}


/** Disclosure of the user having political exposure. */
export interface PoliticalExposureDisclosureGenqlSelection{
    /** Is the user politically exposed? */
    isPoliticallyExposed?: boolean | number
    /** If `isPoliticallyExposed` is `true`, the name of the related political organization. */
    politicalOrganization?: boolean | number
    /** If `isPoliticallyExposed` is `true`, a list of the user's immediate family members, including former spouses. */
    immediateFamilyMembers?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Disclosure of the user having political exposure. */
export interface PoliticalExposureDisclosureInput {
/** Is the user politically exposed? */
isPoliticallyExposed: Scalars['Boolean'],
/** If `isPoliticallyExposed` is `true`, the name of the related political organization. */
politicalOrganization?: (Scalars['DisclosureDescription'] | null),
/** If `isPoliticallyExposed` is `true`, a list of the user's immediate family members, including former spouses. */
immediateFamilyMembers?: ((Scalars['DisclosureDescription'] | null)[] | null)}


/** Disclosure of the user having backup withholding. */
export interface BackupWithholdingGenqlSelection{
    /**
     * Is the user subject to backup withholding?
     * A null value represents the user not being asked this question previously.
     */
    isSubjectToBackupWithholding?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Disclosure of the user having political exposure. */
export interface BackupWithholdingInput {
/** Is the user subject to backup withholding? */
isSubjectToBackupWithholding: Scalars['Boolean']}


/** Represents suitability information about the ownership of an investment account. */
export interface SuitabilityProfileGenqlSelection{
    /** The combined account holders' yearly income in US dollars. */
    annualIncome?: boolean | number
    /** The account holders' yearly income in US dollars. */
    annualIncomeAmount?: boolean | number
    /** The combined account holders' net worth in US dollars. */
    totalNetWorth?: boolean | number
    /** The account holders' net worth in US dollars. */
    totalNetWorthAmount?: boolean | number
    /** The combined account holders' liquid net worth in US dollars. */
    liquidNetWorth?: boolean | number
    /** The account holders' liquid net worth in US dollars. */
    liquidNetWorthAmount?: boolean | number
    /** The investment experience of the account holder(s). */
    investmentExperience?: boolean | number
    /** The investment risk tolerance of the account holder(s). */
    riskTolerance?: boolean | number
    /** The accoult holders' time horizon before making withdrawls on their investment. */
    timeHorizon?: boolean | number
    /** The account holders' liquidity needs for their money. */
    liquidityNeeds?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents suitability information about the ownership of an investment account. */
export interface SuitabilityProfileInput {
/** The combined account holders' yearly income in US dollars. */
annualIncome?: (AnnualIncomeEnum | null),
/** The account holders' yearly income in US dollars. */
annualIncomeAmount?: (Scalars['Int'] | null),
/** The combined account holders' net worth in US dollars. */
totalNetWorth?: (TotalNetWorthEnum | null),
/** The account holders' net worth in US dollars. */
totalNetWorthAmount?: (Scalars['Int'] | null),
/** The combined account holders' liquid net worth in US dollars. */
liquidNetWorth?: (LiquidNetWorthEnum | null),
/** The account holders' liquid net worth in US dollars. */
liquidNetWorthAmount?: (Scalars['Int'] | null),
/** The investment experience of the account holder(s). */
investmentExperience?: (InvestmentExperienceEnum | null),
/** The investment risk tolerance of the account holder(s). */
riskTolerance?: (RiskToleranceEnum | null),
/** The accoult holders' time horizon before making withdrawls on their investment. */
timeHorizon?: (TimeHorizonEnum | null),
/** The account holders' liquidity needs for their money. */
liquidityNeeds?: (LiquidityNeedsEnum | null)}


/** Information about at the user's trusted account. */
export interface TrustedContactInput {
/** The first (given) name of the trusted contact. */
firstName: Scalars['String'],
/** The last (family) name of the trusted contact. */
lastName: Scalars['String'],
/** The phone number of the trusted contact. */
phoneNumber?: (Scalars['String'] | null),
/** The email address of the trusted contact. */
email?: (Scalars['String'] | null)}


/** Information about an account beneficiary. */
export interface BeneficiaryGenqlSelection{
    /** The first (given) name of the beneficiary. */
    firstName?: boolean | number
    /** The last (family) name of the beneficiary. */
    lastName?: boolean | number
    /** The suffix of the beneficiary's name. */
    suffix?: boolean | number
    /** The beneficiary's date of birth, in the format of `YYYY-MM-DD`. */
    dateOfBirth?: boolean | number
    /** The home address of the beneficiary. */
    address?: MailingAddressGenqlSelection
    /** The relationship of the beneficiary to the account holder. */
    relationship?: boolean | number
    /**
     * The percentage account ownership assigned to the beneficiary. The sums of the
     * primary and contingent beneficiary groups must each equal 100%.
     */
    sharePercentage?: boolean | number
    /**
     * True if this is a primary beneficiary. Otherwise, the beneficiary is
     * contingent. Primary beneficaries have seniority over contingent beneficiaries.
     */
    isPrimary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A new account beneficiary and their social security number. */
export interface NewBeneficiaryInput {
/** A beneficiary. */
beneficiary: BeneficiaryInput,
/** The social security number of the beneficiary. */
ssn: Scalars['SocialSecurityNumber']}


/** Information about an account beneficiary. */
export interface BeneficiaryInput {
/** The first (given) name of the beneficiary. */
firstName: Scalars['FirstName'],
/** The last (family) name of the beneficiary. */
lastName: Scalars['LastName'],
/** The suffix of the beneficiary's name. */
suffix?: (NameSuffixEnum | null),
/** The beneficiary's date of birth, in the format of `YYYY-MM-DD`. */
dateOfBirth: Scalars['String'],
/** The home address of the beneficiary. */
address: MailingAddressInput,
/** The relationship of the beneficiary to the account holder. */
relationship: Scalars['String'],
/**
 * The percentage account ownership assigned to the beneficiary. The sums of the
 * primary and contingent beneficiary groups must each equal 100%.
 */
sharePercentage: Scalars['Int'],
/**
 * True if this is a primary beneficiary. Otherwise, the beneficiary is
 * contingent. Primary beneficaries have seniority over contingent beneficiaries.
 */
isPrimary: Scalars['Boolean']}


/** Information about the user's trusted contact. */
export interface TrustedContactGenqlSelection{
    /** The first (given) name of the trusted contact. */
    firstName?: boolean | number
    /** The last (family) name of the trusted contact. */
    lastName?: boolean | number
    /** The email address of the trusted contact. */
    email?: boolean | number
    /** The phone number of the trusted contact. */
    phoneNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about referrals status for a specific user. */
export interface ReferralsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** True when the user is eligible to participate in the referrals program. */
    isEligible?: boolean | number
    /** True when the user is participating in the referrals program. */
    isParticipating?: boolean | number
    /**
     * Information about the user's referrer status. Value is null when the user is
     * not currently participating in the referrals program.
     */
    referrerStatus?: ReferrerStatusGenqlSelection
    /** The dollar amount that the referring user receives from a referral. */
    getAmount?: boolean | number
    /** The dollar amount that the referred user received from a referral. */
    giveAmount?: boolean | number
    /** The title for the referrals screen. */
    referralsTitle?: boolean | number
    /** The description for the referrals screen. */
    referralsDescription?: boolean | number
    /** A link to referrals terms and conditions. */
    referralsTermsLink?: AppLinkGenqlSelection
    /** Info card to link to the referrals page */
    referralsCard?: AppInformationalMessageCardGenqlSelection
    /** Referrals navigation item for the side rail. If null, do not display anything. */
    referralsSideNavigationItem?: AppNavigationItemGenqlSelection
    /** Referrals navigation item for the top nav. If null, do not display anything. */
    referralsTopNavigationItem?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about referrals program participation. */
export interface ReferrerStatusGenqlSelection{
    /** The referrer code. Value is null when temporarily unavailable. */
    referrerCode?: boolean | number
    /**
     * The custom share URL for this referrer. Value is null when temporarily
     * unavailable.
     */
    shareUrl?: boolean | number
    /** A custom share message, including the share URL. */
    shareMessage?: boolean | number
    /**
     * The number of referrals that have registered, but not yet completed the
     * referral goal within the required time frame.
     */
    incompleteReferralCount?: boolean | number
    /** The number of referrals that have registered and completed the referral goal. */
    completeReferralCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReferralOfferGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The dollar amount that a referring user will receive from a referral. */
    getAmount?: boolean | number
    /** The dollar amount that a referred user will receive from a referral. */
    giveAmount?: boolean | number
    /** The title for the web referral signup screen screen. */
    referralsTitle?: boolean | number
    /** The illustration for the web referral signup screen screen. */
    referralsIllustration?: AppImageGenqlSelection
    /** The disclosure copy for the web referral signup screen screen. */
    referralsDisclosureContent?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ResearchGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen?: PlusPromotionalMessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QuoteGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The date and time that the quote was retrieved. */
    asOfTime?: boolean | number
    /** The date and time of the last trade. */
    lastTradeTime?: boolean | number
    /** The date and time that the quote was retrieved formatted to the user's timezone (MM DD, HH:MM <timezeone abbreviation>). */
    localAsOfTime?: boolean | number
    /** The date and time of the last trade formatted to the user's timezone (MM DD, HH:MM <timezeone abbreviation>). */
    localLastTradeTime?: boolean | number
    /**
     * The price at which the last trade of the security occurred, as of the quote's
     * time.
     */
    lastPrice?: boolean | number
    /** The high price. */
    highPrice?: boolean | number
    /** The low price. */
    lowPrice?: boolean | number
    /** The range for the day (high - low). */
    priceRange?: boolean | number
    /** The open price. */
    openPrice?: boolean | number
    /** The price of the security at close of market on the previous trading day. */
    previousClosePrice?: boolean | number
    /** The difference between the last price and the previous close price. */
    changeFromPreviousClosePrice?: boolean | number
    /**
     * The percentage difference between the last price and the previous close price,
     * expressed as a percentage.
     */
    percentChangeFromPreviousClosePrice?: boolean | number
    /** The number of trades during a session. */
    tradeVolume?: boolean | number
    /** The number of shares traded during a session. */
    shareVolume?: boolean | number
    /** The volume weighted average price. */
    vwap?: boolean | number
    /**
     * True if trading in the security is halted as of the quote's time; false
     * otherwise. Value is null when unknown.
     */
    isTradingHalted?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityProfileGenqlSelection{
    /** The issue type. */
    issueType?: boolean | number
    /** The sector that the security belongs to. */
    sector?: boolean | number
    /** The industry that the security belongs to. */
    industry?: boolean | number
    /** A description of the company, if available. */
    description?: boolean | number
    /** A long description of the company, if available. */
    longDescription?: boolean | number
    /** The name of the CEO, if available. */
    ceo?: boolean | number
    /** The number of employees, if available. */
    numberOfEmployees?: boolean | number
    /** A website URL for the company, if available. */
    website?: boolean | number
    /** The icon to display for websites */
    websiteIcon?: AppImageGenqlSelection
    /** A URL to a possible logo for the security. Value is null when no logo exists. Note that even when a value is returned, the URL may still respond with a 404 if no logo is available. */
    logoUrl?: { __args: {size?: (Scalars['Int'] | null)} } | boolean | number
    /** The location of the company headquarters. */
    headquarters?: boolean | number
    /** The url for the security information on the SEC's website. */
    securitySecUrl?: AppLinkGenqlSelection
    /** The icon to display for the SEC website. */
    secIcon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PriceChangeGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The date of the historical reference point.
     */
    date?: boolean | number
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The number of days between the historical reference point and the date of the current price data.
     */
    daysAgo?: boolean | number
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The closing price on the reference point date. Value is rounded to cents for output.
     */
    previousPrice?: boolean | number
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The current price used for the price change calculation. Value is rounded to cents for output.
     */
    currentPrice?: boolean | number
    /**
     * @deprecated No longer supported by new upstream data source. Will be removed.
     * The difference between the current price and the previous price. Value is rounded to cents for output.
     */
    change?: boolean | number
    /** The percent change from the previous price to the current price. Value is rounded to two decimal places for output. */
    percentChange?: boolean | number
    /** The percent change, annualized. Value is rounded to two decimal places for output. */
    percentChangeAnnualized?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SliceableShowcaseGenqlSelection{
    /** A list of showcased equities. */
    equities?: EquityGenqlSelection
    /** A list of showcased funds. */
    funds?: FundGenqlSelection
    /** A list of showcased system pies. */
    systemPies?: SystemPieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The user is eligible to use Spend Checking. */
    isEligible?: boolean | number
    /** If true, the user is eligible to send checks. */
    isEligibleForSendCheck?: boolean | number
    /** If true, Send Check is enabled for the current user. */
    isSendCheckEnabled?: boolean | number
    /** If true, the user meets the eligibility criteria to open more than one Spend account. */
    isMultipleAccountsEligible?: boolean | number
    /** If true, the ability to open more than one Spend account is enabled for the user. */
    isMultipleAccountsEnabled?: boolean | number
    /** If true, the Credit Card tab should be enabled and visible for the current user. */
    isCreditCardTabAvailable?: boolean | number
    /** The user is eligible to select a Spend Checking Debit Card design. */
    isEligibleForCardSelection?: boolean | number
    /** The `Viewer.profile` is created. */
    isProfileCreated?: boolean | number
    /** The primary marketing screen content for the Spend overview page. */
    spendPrimaryMarketingScreen?: (SpendPrimaryMarketingScreenGenqlSelection & { __args?: {
    /** Optional value to determine if the user is accessing the page from a deeplink or internal routing. */
    primaryMarketingScreenView?: (SpendPrimaryMarketingIndicatorEnum | null)} })
    /** The new marketing screen content for the Spend overview page. */
    spendMarketingScreen?: SpendMarketingScreenGenqlSelection
    /** The `Viewer.profile` is accepted and ready to be a Spend Checking identity. */
    isProfileReady?: boolean | number
    /** A `Spend.spendIdentity` has been created and verfication has been attempted. */
    isIdentityVerificationSubmitted?: boolean | number
    /** True if the Spend overview changes are enabled for the user. */
    isSpendOverviewEnabled?: boolean | number
    /**
     * A manual review of the `Spend.spendIdentity` has been completed, if it was
     * required. Same as `SpendIdentity.status.isVerificationReviewed`.
     */
    isIdentityVerificationReviewed?: boolean | number
    /**
     * The `Spend.spendIdentity` is verified. Same as
     * `SpendIdentity.status.isVerified`.
     */
    isIdentityVerified?: boolean | number
    /**
     * The user has no currently-pending transfers that prevent the internal
     * transfers linkage process to proceed.
     */
    isReadyForInternalTransfersLinkage?: boolean | number
    /**
     * The entire Spend Checking enrollment process is complete, and Spend Checking features are ready
     * to use.
     */
    isSpendEnrollmentComplete?: boolean | number
    /** The user currently has an active primary Spend Checking account. */
    hasActiveSpendAccount?: boolean | number
    /** The user currently has an active Spend Checking debit card. */
    hasActiveDebitCard?: boolean | number
    /** The user currently has a funded Invest account. */
    hasFundedInvestAccount?: boolean | number
    /** A `Spend.externalAccount` has been created. */
    isExternalAccountInitiated?: boolean | number
    /** A `Spend.primaryDebitCard` has been created. */
    isPrimaryDebitCardInitiated?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The user agreements necessary to use Spend Checking.
     */
    spendAgreements?: SpendAgreementsGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * The Q2 customer due diligence questions needed to complete Spend Checking enrollment.
     */
    spendDueDiligenceQuestions?: SpendDueDiligenceQuestionsGenqlSelection
    /** The user identity which must be verified and accepted to use Spend Checking. */
    spendIdentity?: SpendIdentityGenqlSelection
    /** The total account balance of all spend checking accounts. */
    netBalance?: boolean | number
    /** A user's Spend Checking account. */
    spendAccount?: (SpendAccountGenqlSelection & { __args?: {accountId?: (Scalars['ID'] | null)} })
    /** All the current Spend accounts for the user, if the have a primary debit card account it will be returned first. */
    currentSpendAccounts?: SpendAccountGenqlSelection
    /** True if the user is able to add any additional Spend checking accounts. */
    isAbleToAddCheckingAccounts?: boolean | number
    /** True if the user has any additional accounts in excess of their primary Spend account, false otherwise. */
    hasAdditionalCheckingAccounts?: boolean | number
    /**
     * An optional external bank account, owned by the user, to be used for transfers
     * to Spend Checking accounts.
     */
    externalAccount?: SpendExternalAccountGenqlSelection
    /** The marketing perks for the request Spend Debit card enrollment screen. */
    debitCardMarketingPerks?: TextWithTooltipGenqlSelection
    /**
     * @deprecated Use `debitCardCta` and `availableDebitCardDesigns` instead.
     * Information about available debit cards before one is requested.
     */
    availableDebitCards?: SpendAvailableDebitCardsGenqlSelection
    /** A list of currently-available debit card designs. */
    availableDebitCardDesigns?: SpendDebitCardDesignGenqlSelection
    /** Spend Checking debit card CTA assets to be displayed on Spend Checking screens. */
    debitCardCta?: SpendDebitCardCtaGenqlSelection
    /** Spend Checking debit card assets to be displayed on Spend Checking marketing screens. */
    debitCardMarketing?: SpendDebitCardDesignGenqlSelection
    /** The primary Spend Checking debit card, if one has been requested. */
    primaryDebitCard?: SpendDebitCardGenqlSelection
    /** The last primary debit card, if there is one. */
    lastPrimaryDebitCard?: SpendDebitCardGenqlSelection
    /** A log of activity related to Spend Checking features. */
    activity?: SpendActivityGenqlSelection
    /** A boolean indicating whether the user has checking activity (i.e. is funded). */
    hasFundedCheckingAccount?: boolean | number
    /**
     * A list of Plaid external accounts that are available for use as a linked Spend
     * external account.
     */
    availableExternalAccounts?: (ExternalAccountConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** True if there is at least one available external account. */
    hasAvailableExternalAccounts?: boolean | number
    /** True if there is a linked external account for the user. */
    hasConnectedExternalAccount?: boolean | number
    /**
     * A list of Invest external bank accounts which are currently eligible to be
     * migrated to become a Spend Checking external account.
     */
    migratableInvestExternalAccounts?: (MigratableInvestExternalAccountConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** True if there is at least one migratable Invest external account. */
    hasMigratableInvestExternalAccounts?: boolean | number
    /**
     * @deprecated Use `plusPromotionForNav` or `plusPromotionForScreen` instead.
     * An optional Plus promotional message.
     */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No plus data should be rendered in the UI
     * An optional Plus promotional message for navigation placement.
     */
    plusPromotionForNav?: PlusPromotionalMessageGenqlSelection
    /**
     * @deprecated M1 Plus has been sunsetted. No additional plus data should be rendered in the UI.
     * An optional Plus promotional message for screen placement.
     */
    plusPromotionForScreen?: PlusPromotionalMessageGenqlSelection
    /** An optional Plus promotional message for the marketing screen. */
    plusPromotionForMarketingMain?: PlusPromotionalMessageGenqlSelection
    /** An optional Plus promotional message for a marketing screen detail. */
    plusPromotionForMarketingDetail1?: PlusPromotionalMessageGenqlSelection
    /** An optional Plus promotional message for a marketing screen detail. */
    plusPromotionForMarketingDetail2?: PlusPromotionalMessageGenqlSelection
    /** An optional Plus promotional message for a marketing screen detail. */
    plusPromotionForMarketingDetail3?: PlusPromotionalMessageGenqlSelection
    /** An optional Plus promotional message for the request debit card screen. */
    plusPromotionForRequestCardScreen?: PlusPromotionalMessageGenqlSelection
    /** A link to the direct deposit enrollment form */
    directDepositVoidedCheckUrl?: boolean | number
    /**
     * @deprecated Use `Transfers.moveMoney(type: SPEND)` instead
     * Returns information that pertains to the Spend Checking Move Money screen.
     */
    moveMoney?: SpendMoveMoneyGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Returns information that pertains to the send check screen.
     */
    sendCheck?: SendCheckGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendAgreementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The Spend Checking e-sign agreement. Must be presented separately to customers. */
    eSignAgreement?: SpendESignAgreementGenqlSelection
    /** The latest bundle of agreements that must be accepted to use Spend Checking. */
    latestAgreements?: AgreementBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendDueDiligenceQuestionsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The list of customer due diligence questions.
     */
    questions?: DueDiligenceQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DueDiligenceQuestionGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * The question ID for the Spend Checking due diligence question.
     */
    questionId?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The question analytics event for the Spend Checking due diligence question.
     */
    questionAnalyticsEvent?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The question name for the Spend Checking due diligence question.
     */
    questionName?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The question description for the Spend Checking due diligence question.
     */
    questionDescription?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The required answer type for the Spend Checking due diligence question.
     */
    answerType?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The available choices for the Spend Checking due diligence question.
     */
    choices?: DueDiligenceQuestionChoiceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DueDiligenceQuestionChoiceGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * The ID for this Spend Checking due diligence question choice.
     */
    choiceId?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The name for this Spend Checking due diligence question choice.
     */
    choiceName?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * The description for this Spend Checking due diligence question choice.
     */
    choiceDescription?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Value denoting whether or not the user should skip the following question.
     */
    shouldSkipNextQuestion?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DueDiligenceAnswer {
/** The ID for this Spend Checking due diligence question. */
questionId?: (Scalars['Float'] | null),
/** The text answer, if applicable, for this Spend Checking due diligence question. */
questionAnswer?: (Scalars['String'] | null),
/** Selected choices for this Spend Checking due diligence question. */
selectedChoices?: (CustomerDueDiligenceAnswerChoice[] | null)}

export interface TextWithTooltipGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The text for this text and tooltip item. */
    text?: boolean | number
    /** The optional tooltip content for this text and tooltip item. */
    tooltipContent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendPrimaryMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The title for the primary Spend overview marketing screen. */
    title?: boolean | number
    /** The title for the primary Spend overview marketing screen. */
    subtitle?: boolean | number
    /** The small pair of Spend overview balance labels to be displayed on the primary marketing screen on mobile with credit balance info if applicable */
    creditBalanceLabel?: BalanceOverviewLabelGenqlSelection
    /** The large Spend overview balance label to be displayed on the primary marketing screen on mobile with checking and savings balance info if applicable */
    checkingBalanceLabel?: BalanceOverviewLabelGenqlSelection
    /** An array of account cards for the user's Spend checking accounts, if applicable. */
    checkingAccounts?: AccountCardGenqlSelection
    /** The account card for the user's Spend credit card account, if applicable. */
    creditCardAccount?: AccountCardGenqlSelection
    /** An array of account cards for the user's Savings accounts, if applicable */
    savingsAccounts?: AccountCardGenqlSelection
    /** The Plus promotional message for the primary Spend overview marketing screen. */
    plusCard?: PlusPromotionalMessageGenqlSelection
    /** The tooltip text for the Spend primary marketing screen for maximum account creation, if applicable. */
    addAccountTooltipText?: boolean | number
    /** An array of the content cards for the primary Spend overview marketing screen. */
    marketingCards?: MarketingCardGenqlSelection
    /** Additional AppLinks to be displayed at the bottom of the primary Spend overview marketing screen. */
    additionalLinks?: AppLinkGenqlSelection
    /** Additional disclaimer text to be displayed at the bottom of the primary Spend overview marketing screen. */
    disclaimerText?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BalanceOverviewLabelGenqlSelection{
    /** The value for the balance overview label. */
    primaryBalanceValue?: boolean | number
    /** The description for the balance overview label. */
    primaryBalanceLabel?: boolean | number
    /** The optional toolptip for the balance overview label. */
    balanceToolTip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountCardGenqlSelection{
    /** The account ID for the associated Spend checking or credit card account. */
    accountId?: boolean | number
    /** The title for the Spend account card. */
    title?: boolean | number
    /** The balance to be displayed for the Spend account card. */
    balance?: boolean | number
    /** The subtitle for the Spend account card. */
    subtitle?: boolean | number
    /** The optional AppPill for the Spend account card. */
    pill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarketingCardGenqlSelection{
    /** Enumerated value for account types (ie: INVEST | LENDING | SAVINGS | CHECKING | CREDIT) */
    accountType?: boolean | number
    /** The main title for a marketing screen card. */
    title?: boolean | number
    /** The optional title tooltip for a marketing screen card. */
    titleTooltip?: boolean | number
    /** The optional card icon for a marketing screen card. */
    cardIcon?: AppImageGenqlSelection
    /** An analytics event for following the step into the personal loan application flow. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An array of perks relating to a marketing screen card. */
    marketingPerks?: MarketingPerkGenqlSelection
    /** The optional card image for a marketing screen card. */
    cardImage?: AppImageGenqlSelection
    /** An array of links for a marketing screen card. */
    marketingLinks?: AppLinkGenqlSelection
    /** The CTA destination deep link for a marketing screen card. */
    ctaButtonDestination?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarketingPerkGenqlSelection{
    /** The icon for a marketing screen perk. */
    icon?: AppImageGenqlSelection
    /** The title on a marketing screen perk. */
    title?: boolean | number
    /** The subtitle on a marketing screen perk. */
    subtitle?: boolean | number
    /** The optional tooltip on a marketing screen perk. */
    tooltip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CustomerDueDiligenceAnswerChoice {
/** A specific choice for this Spend Checking due diligence question. */
choiceId: Scalars['Float']}

export interface SpendESignAgreementGenqlSelection{
    /** Content of the agreement in HTML format. */
    contentHtml?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendIdentityGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The status of the identity. */
    status?: SpendIdentityStatusGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendIdentityStatusGenqlSelection{
    /** The identity status code. */
    code?: boolean | number
    /** Verification of the identity has been attempted. */
    isVerificationSubmitted?: boolean | number
    /** A manual review of the identity has been completed, if it was necessary. */
    isVerificationReviewed?: boolean | number
    /** The identity is verified. */
    isVerified?: boolean | number
    /** The identity is currently locked. */
    isLocked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The account category. */
    accountCategory?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    /** The time when the account was created. */
    createdDate?: boolean | number
    /** The routing number for the account. */
    routingNumber?: { __args: {masked?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The account number for the account. */
    accountNumber?: { __args: {masked?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Information about the status of the account. */
    status?: SpendAccountStatusGenqlSelection
    /** If applicable, a checklist of steps for the user to complete for product onboarding. */
    setupChecklist?: SetupChecklistGenqlSelection
    /** Information about the balance of the account. */
    balance?: SpendAccountBalanceGenqlSelection
    /** Information about the rates associated with the account. */
    rates?: SpendAccountRatesGenqlSelection
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    /** A link to report any issues for the Spend Checking user. */
    accountResolutionCta?: AppLinkGenqlSelection
    /** True, if the current Spend account is the primary checking account which has the user's debit card if applicable, false otherwise. */
    isPrimarySpendAccount?: boolean | number
    /** The Spend promotional message for Credit Card to be displayed on the checking screen. */
    creditMarketingCard?: SpendPromotionalMessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a Borrow account. */
export interface SpendPromotionalMessageGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Title for the Spend promotional message. */
    title?: boolean | number
    /** Body text for the Spend promotional message. */
    body?: boolean | number
    /** Link for the Spend promotional message. */
    link?: AppLinkGenqlSelection
    /** Optional tooltip array for the Spend promotional message. */
    tooltip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a Borrow account. */
export interface PhysicalCheckGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The account category. */
    accountCategory?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** A descriptor for the account, for help identifying in a list. */
    descriptor?: boolean | number
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The status of a Spend Checking account. */
export interface SpendAccountStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** True if the account is currently open or pending open. */
    isActive?: boolean | number
    /** True if the account is currently open and ready to be used. */
    isOpen?: boolean | number
    /** A friendly description of the account status. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the balance of a Spend Checking account. */
export interface SpendAccountBalanceGenqlSelection{
    /** The sum of all settled transactions. Includes funds that have holds. */
    current?: boolean | number
    /** The settled amount available for withdrawal. Omits funds with holds. */
    available?: boolean | number
    /**
     * The settled amount subject to temporary holds. This is the current balance
     * minus the available balance. It cannot be negative.
     */
    holds?: boolean | number
    /** True if the current balance contains funds with holds. */
    hasHolds?: boolean | number
    /** The sum of all pending deposit transactions. */
    pending?: boolean | number
    /** True if the account currently has any value. */
    hasValue?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the rates associated with a Spend Checking account. */
export interface SpendAccountRatesGenqlSelection{
    /** The current interest rate. */
    interestRatePercent?: boolean | number
    /** The current cash back rate. */
    cashBackRatePercent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendExternalAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The name of the account. */
    name?: boolean | number
    /** The status of the external account. */
    status?: SpendExternalAccountStatusGenqlSelection
    /** The account type. */
    accountType?: boolean | number
    /** The routing number. */
    routingNumber?: { __args: {masked?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The account number. */
    accountNumber?: { __args: {masked?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The transfer participant type categorization. */
    transferParticipantType?: boolean | number
    /** The name to display for this transfer participant. */
    transferParticipantName?: boolean | number
    /** An optional description of this transfer participant. */
    transferParticipantDescription?: boolean | number
    /**
     * True when there are currently one or more pending transfer instances with this
     * account as the source or destination.
     */
    hasPendingTransferInstances?: boolean | number
    /**
     * A list of pending transfer instances currently associated with this account.
     * Sorted by create date ascending.
     */
    pendingTransferInstances?: TransferInstanceGenqlSelection
    /** A summary of the pending transfers, if there are any. */
    pendingTransferInstanceSummary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendExternalAccountStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** The account is awaiting verification. */
    isAwaitingVerification?: boolean | number
    /** Verification is currently blocked. */
    isBlockedVerification?: boolean | number
    /** The account has been verified and is ready to be used for transfers. */
    isVerified?: boolean | number
    /** The account is currently locked. */
    isLocked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about available Spend Checking debit cards. */
export interface SpendAvailableDebitCardsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Use `debitCardMarketing or debitCardCta` instead.
     * The Spend Checking debit card design that should be displayed as a preview.
     */
    previewDesignType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Spend Checking debit card. */
export interface SpendDebitCardGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The status of the card. */
    status?: SpendDebitCardStatusGenqlSelection
    /** The content and actions for the Spend debit manage card screen. */
    manageCard?: ManageSpendCardGenqlSelection
    /** The full name of the cardholder, as it is printed on the card. */
    fullName?: boolean | number
    /** The Primary Account Number (PAN) printed on the card, masked. */
    panMasked?: boolean | number
    /** The card expiration month. */
    expireMonth?: boolean | number
    /** The card expiration year. */
    expireYear?: boolean | number
    /**
     * @deprecated Use `design` instead.
     * The visual design type of the card.
     */
    designType?: boolean | number
    /** Limits pertaining to card usage. */
    limits?: SpendDebitCardLimitsGenqlSelection
    /** A description of this card's design. */
    design?: SpendDebitCardDesignGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Spend Checking debit manage card screen content and actions. */
export interface ManageSpendCardGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Link directly to additional flow for managing a Spend debit card. */
    manageCardAssistanceLink?: AppLinkGenqlSelection
    /** All available card actions for the user's current Spend debit card. */
    cardActions?: ManageSpendCardActionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ManageSpendCardActionGenqlSelection{
    /** The title for this manage card action. */
    title?: boolean | number
    /** The subtitle for this manage card action. */
    subtitle?: boolean | number
    /** The text and destination to route the user for this manage card action. */
    destination?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Spend Checking debit card design description. */
export interface SpendDebitCardDesignGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A styling hint for CTA copy. */
    contrastHint?: boolean | number
    /** Unique key to identify the card design type. */
    designTypeKey?: boolean | number
    /** A short description for the card design. */
    description?: boolean | number
    /** The name of the card design. */
    name?: boolean | number
    /** Information about whether the card is available to the user as an option. */
    isAvailableToUser?: boolean | number
    /** Image of an angled debit card */
    angledDebitCard?: AppImageGenqlSelection
    /** Image of an flat debit card */
    flatDebitCard?: AppImageGenqlSelection
    /** Image of an flat debit card without logo */
    flatDebitCardWithoutLogo?: AppImageGenqlSelection
    /** Image of a thumbnail debit card */
    thumbnail?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Spend Checking debit card CTA design description. */
export interface SpendDebitCardCtaGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Spend Checking Debit Card description for CTA style card. */
    design?: SpendDebitCardDesignGenqlSelection
    /** Information about whether the user has an active Spend Checking debit card. Logic matches `Spend.primaryDebitCard?.status.isActive`. */
    isCardInitiated?: boolean | number
    /** Information about whether the user's Spend Checking debit card is awaiting verification. */
    isCardAwaitingVerification?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The status of a Spend Checking debit card. */
export interface SpendDebitCardStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** True if the card is ready for use or going to be ready for use. */
    isActive?: boolean | number
    /** The card has been requested but is awaiting manufacturing and shipping. */
    isAwaitingIssuance?: boolean | number
    /** The card has reached the expiration date and can no longer be used. */
    isExpired?: boolean | number
    /** The card has been shipped and is awaiting verification. */
    isAwaitingVerification?: boolean | number
    /** The card is verified and ready to use. */
    isVerified?: boolean | number
    /** The card is currently locked (either for the system or for the user). */
    isLocked?: boolean | number
    /** The specific lock status. */
    lockStatusCode?: boolean | number
    /** When the card is locked, the reason for the lock. */
    lockReasonCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Limits pertaining to card usage. */
export interface SpendDebitCardLimitsGenqlSelection{
    /** The total dollar amount that may be spent per day using the card. */
    dailySpendingLimit?: boolean | number
    /** The total dollar amount that may be withdrawn per day at an ATM. */
    dailyAtmWithdrawalLimit?: boolean | number
    /** The number of ATM fee instances that will be reimbursed per month. */
    monthlyAtmFeeReimbursements?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * A list of Spend Checking activity entries, including Spend Checking transactions. Sorted in
     * reverse chronological order.
     */
    activity?: (SpendActivityEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null), 
    /** A filter mode for the activity entries. Default is `ALL`. */
    mode?: (SpendActivityModeEnum | null), 
    /** Optional accountId parameter to filter the results for a specific user's account. */
    accountId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntryConnectionGenqlSelection{
    total?: boolean | number
    pageInfo?: PageInfoGenqlSelection
    edges?: SpendActivityEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntryEdgeGenqlSelection{
    cursor?: boolean | number
    node?: SpendActivityEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Spend Checking activity entry. */
export interface SpendActivityEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The status of this activity entry. */
    status?: AppPillGenqlSelection
    /** The legacy date for this activity entry. */
    date?: boolean | number
    /** The formatted date for this activity entry. */
    activityDate?: boolean | number
    /** The AppImage icon for this activity entry. */
    icon?: AppImageGenqlSelection
    /** A short summary description for this transaction. */
    summary?: boolean | number
    /** A friendly description for this activity entry which must be displayed to users. */
    description?: boolean | number
    /** The merchant name where the activity entry occured. */
    merchant?: boolean | number
    /** A short description of the activity entry category. */
    categoryLabel?: boolean | number
    /** A boolean value for whether or not the transaction is void. */
    isVoided?: boolean | number
    /** A signed dollar amount associated with this activity, if applicable. */
    amount?: boolean | number
    /** Further details for this activity entry. */
    details?: SpendActivityEntryDetailsGenqlSelection
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was made.
     */
    transactionDate?: boolean | number
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was settled.
     */
    settledDate?: boolean | number
    on_CreditCardTransaction?: CreditCardTransactionGenqlSelection
    on_SavingsTransaction?: SavingsTransactionGenqlSelection
    on_SpendTransaction?: SpendTransactionGenqlSelection
    on_SpendActivityOtherEntry?: SpendActivityOtherEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntryDetailsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Additional label/value pairs to display for the activity entry. */
    additionalDetails?: SpendActivityEntryAdditionalDetailGenqlSelection
    /** Amount of the entry. */
    amount?: boolean | number
    /** Category details for the entry. Null if unavailable or otherwise uncategorized. */
    categoryDetails?: SpendActivityEntryCategoryDetailsGenqlSelection
    /** Dispute details for the entry. Value present if entry is disputable. */
    disputeDetails?: SpendActivityEntryDisputeDetailsGenqlSelection
    /** If entry is eligible for debit card cash back program. */
    isEligibleForCashBack?: boolean | number
    /**
     * @deprecated Utilize `colorizedTransactionRewardTier` instead.
     * Returns the associated rewards tier for the transaction if applicable.
     */
    transactionRewardTier?: AppPillGenqlSelection
    /** Returns the associated color coded reward tier for the transaction if applicable. Use instead of transactionRewardTier. */
    colorizedTransactionRewardTier?: CreditCardRewardsAppPillGenqlSelection
    /** Optional pill to display if the transaction is a reversal, either return or refund. */
    isReversal?: AppPillGenqlSelection
    /** If entry is an ACH reversal or return */
    isReversalOrReturn?: boolean | number
    /** Plus promotional message for the view. */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /** Status pill to display, if any. */
    status?: AppPillGenqlSelection
    /** Further supplementary message about the entry. */
    supplementaryMessage?: SpendActivityEntrySupplementaryMessageGenqlSelection
    /** Entry details title. */
    title?: boolean | number
    /** Additional separate lines of copy with links interspersed. */
    additionalLinks?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntryAdditionalDetailGenqlSelection{
    /** A short label describing the value or pill. */
    label?: boolean | number
    /** A value. Likely some metadata about the entry, e.g. created date, description, etc. */
    value?: boolean | number
    /** A pill relating to the entry, likely some descriptive image. */
    pill?: AppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntryCategoryDetailsGenqlSelection{
    /** An icon representing the category. */
    icon?: AppImageGenqlSelection
    /** A subtitle with more details on the category. */
    subtitle?: boolean | number
    /** The title of the category. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntrySupplementaryMessageGenqlSelection{
    /** The content of the supplementary message. */
    content?: boolean | number
    /** A link with more information regarding the message, if any. */
    link?: AppLinkGenqlSelection
    /** The phone number to be linked to in the content. */
    phoneNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendActivityEntryDisputeDetailsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Plain content describing steps to resolve a disputete. */
    content?: boolean | number
    /** Phone number to use for disputes. */
    phoneNumber?: boolean | number
    /** If entry is associated with a debit card transaction, the related SpendDebitCard. */
    ifDebitCardRelated?: SpendDebitCardGenqlSelection
    /** A link to the support resolution form to assist the user in the dispute. */
    resolutionCta?: AppLinkGenqlSelection
    /** The title of the dispute details. */
    title?: boolean | number
    /** The label for use on entry details linking to dispute details. */
    viaDetailsCtaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SpendTransactionGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The date this transaction was created. */
    date?: boolean | number
    /** A status AppPill for this transaction. */
    status?: AppPillGenqlSelection
    /** The activity date for this transaction. */
    activityDate?: boolean | number
    /** The Spend Checking icon for this transaction. */
    icon?: AppImageGenqlSelection
    /** The category label for this transaction. */
    categoryLabel?: boolean | number
    /** A boolean to indicate whether this transaction is voided or not. */
    isVoided?: boolean | number
    /** A friendly description for this transaction which must be displayed to users. */
    description?: boolean | number
    /** The merchant name where the activity entry occured. */
    merchant?: boolean | number
    /** A short summary description for this transaction. */
    summary?: boolean | number
    /**
     * The signed dollar amount associated with this transaction. Postive amounts are
     * cash flows into a Spend Checking account, and negative amounts are cash flows out.
     */
    amount?: boolean | number
    /** The date this transaction was settled, if applicable. */
    settledDate?: boolean | number
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntryDetails` type.
     * Information about the transaction type.
     */
    transactionType?: SpendTransactionTypeGenqlSelection
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntryDetails` type.
     * Information about the transaction status.
     */
    transactionStatus?: SpendTransactionStatusGenqlSelection
    /** An optional Plus promotional message. */
    plusPromotionForTransaction?: PlusPromotionalMessageGenqlSelection
    /** Further details for this activity entry. */
    details?: SpendActivityEntryDetailsGenqlSelection
    /** @deprecated Utilize appropriate field from `SpendActivityEntry` type. */
    transactionDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the type of a Spend Checking transaction. */
export interface SpendTransactionTypeGenqlSelection{
    /** A friendly description of the transaction type. */
    description?: boolean | number
    /** A category type for the transaction, if known. */
    categoryType?: boolean | number
    /** A title describing the categorization, if known. */
    categoryTitle?: boolean | number
    /** Additional detail describing the categorization, if available. */
    categoryDetail?: boolean | number
    /** True if the transaction involves a debit card. */
    isCardTransaction?: boolean | number
    /** True if the transaction is a debit card authorization transaction. */
    isCardAuthTransaction?: boolean | number
    /** True if the transaction is a debit card reversal or an ACH return. */
    isReversalOrReturn?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The status of a Spend Checking transaction. */
export interface SpendTransactionStatusGenqlSelection{
    /** The status code. */
    code?: boolean | number
    /** True if the transaction is currently pending. */
    isPending?: boolean | number
    /** True if the transaction has been voided. */
    isVoided?: boolean | number
    /** A friendly description of the transaction status. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Spend Checking activity entry of an unknown type. */
export interface SpendActivityOtherEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The status of this activity entry. */
    status?: AppPillGenqlSelection
    /** The date for this activity entry. */
    date?: boolean | number
    /** The formatted date for this activity entry. */
    activityDate?: boolean | number
    /** The AppImage icon for this activity entry. */
    icon?: AppImageGenqlSelection
    /** A short summary description for this transaction. */
    summary?: boolean | number
    /** A friendly description of this activity entry. */
    description?: boolean | number
    /** The merchant name where the activity entry occured. */
    merchant?: boolean | number
    /** A short description of the activity entry category. */
    categoryLabel?: boolean | number
    /** A boolean value for whether or not the transaction is void. */
    isVoided?: boolean | number
    /** A signed dollar amount associated with this activity, if applicable. */
    amount?: boolean | number
    /** Further details for this activity entry. */
    details?: SpendActivityEntryDetailsGenqlSelection
    /** @deprecated Utilize appropriate field from `SpendActivityEntry` type. */
    transactionDate?: boolean | number
    /**
     * @deprecated Utilize appropriate field from `SpendActivityEntry` type.
     * The date in which the transaction was settled.
     */
    settledDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MigratableInvestExternalAccountConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: MigratableInvestExternalAccountEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MigratableInvestExternalAccountEdgeGenqlSelection{
    cursor?: boolean | number
    node?: MigratableInvestExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Description of a migratable Invest external bank account. */
export interface MigratableInvestExternalAccountGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A title for the external bank account. */
    title?: boolean | number
    /** A description for the external bank account, if available. */
    description?: boolean | number
    /**
     * When applicable, a Plaid external account that corresponds to this migratable
     * Invest external bank account.
     */
    relatedExternalAccount?: ExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated - use `Transfers.moveMoney(type: SPEND)` instead */
export interface SpendMoveMoneyGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen title copy. */
    title?: boolean | number
    /** Subtitle for the Spend Checking Move Money screen. */
    subtitle?: boolean | number
    /** Categories of options for moving money from Spend Checking. */
    categories?: SpendMoveMoneyCategoryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated - use `MoveMoneyCategory` instead */
export interface SpendMoveMoneyCategoryGenqlSelection{
    /** Category label. */
    label?: boolean | number
    /** List of options for a Spend Checking Move Money category. */
    options?: SpendMoveMoneyOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Deprecated - use `MoveMoneyOption` instead */
export interface SpendMoveMoneyOptionGenqlSelection{
    /** An analytics event to be recorded upon clicking a Spend Checking Move Money option. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** Spend Checking Move Money Option icon. */
    icon?: AppImageGenqlSelection
    /** Spend Checking Move Money Option title. */
    title?: boolean | number
    /** Optional `AppPill` to display for the move money option. */
    pill?: AppPillGenqlSelection
    /** Spend Checking Move Money Option subtitle. */
    subtitle?: boolean | number
    /** Spend Checking Move Money Option link. */
    destination?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Copy for the Ineligible screen in the Send Check flow.
     */
    ineligibleContent?: SendCheckIneligibleContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Plus Marketing screen in the Send Check flow.
     */
    plusMarketingContent?: SendCheckPlusMarketingContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy and screen variables for the Transfer Overview screen in the Send Check flow.
     */
    transferOverviewContent?: SendCheckTransferOverviewContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy and recent recipient data for the Select Recipient screen in the Send Check flow.
     */
    selectRecipientContent?: SendCheckSelectRecipientContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Select Recipient Type screen in the Send Check flow.
     */
    selectRecipientTypeContent?: SelectRecipientTypeContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Recipient Information screen in the Send Check flow.
     */
    recipientInformationContent?: RecipientInformationContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Set Check Amount screen in the Send Check flow.
     */
    setCheckAmountContent?: SetCheckAmountContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Check Memo screen in the Send Check flow.
     */
    checkMemoContent?: CheckMemoContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Confirm Check Details pop up in the Send Check flow.
     */
    confirmCheckDetailsContent?: ConfirmCheckDetailsContentGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Copy for the Payment Confirmed screen in the Send Check flow.
     */
    paymentConfirmedContent?: (PaymentConfirmedContentGenqlSelection & { __args?: {transferRuleId?: (Scalars['ID'] | null)} })
    /**
     * @deprecated Sunset Checking.
     * Boolean indicating whether or not recurring Send Check is enabled for the user.
     */
    isRecurringSendCheckEnabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckIneligibleContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Header for the Send Check Ineligble screen content. */
    header?: boolean | number
    /** Content copy for the Send Check Ineligible screen content. */
    content?: boolean | number
    /** Send Check FAQ `AppLink`. */
    sendCheckFaqCta?: AppLinkGenqlSelection
    /** Done CTA Copy. */
    doneCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckPlusMarketingContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen title copy. */
    title?: boolean | number
    /** Image for the Send Check Plus Marketing screen. */
    image?: AppImageGenqlSelection
    /** Header for the Send Check Plus Marketing screen content. */
    header?: boolean | number
    /** Content copy for the Send Check Plus Marketing screen content. */
    content?: boolean | number
    /** M1 Plus content copy for the Send Check Plus Marketing screen content. */
    plusContent?: boolean | number
    /** Join CTA Copy */
    joinCtaCopy?: boolean | number
    /** Learn More CTA `AppLink`. */
    learnMore?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckTransferOverviewContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Icon to be used in the Spend Checking Account overview section. */
    spendAccountIcon?: AppImageGenqlSelection
    /** Screen title copy. */
    title?: { __args: {
    /** Boolean to determine if the user is in the Recurring Check Schedule flow. */
    isRecurringCheck: Scalars['Boolean'], 
    /** Boolean to determine if the user is in the Edit Check Schedule view. */
    isEditView?: (Scalars['Boolean'] | null)} }
    /** Short description for the Spend Checking account being used as the source for the transfer. */
    spendAccountDescription?: boolean | number
    /** Current balance of the Spend Checking account being used as the source for the transfer. */
    spendAccountBalance?: boolean | number
    /** Icon (optional), label and placeholder copy for the Recipient section of the Send Check Transfer Overview screen. */
    recipientOverviewSection?: SendCheckTransferDetailOptionGenqlSelection
    /** Icon (optional), label and placeholder copy for the Amount section of the Send Check Transfer Overview screen. */
    amountSection?: SendCheckTransferDetailOptionGenqlSelection
    /** Icon (optional), label and placeholder copy for the Memo section of the Send Check Transfer Overview screen. */
    memoSection?: SendCheckTransferDetailOptionGenqlSelection
    /** Copy used for the link to switch to a recurring check schedule. */
    recurringCheckCopy?: boolean | number
    /** Copy used for the link to switch to a one-time check. */
    oneTimeCheckCopy?: boolean | number
    /** Label for the Frequency section of the Send Check Transfer Overview screen. */
    frequencySectionLabel?: boolean | number
    /** Copy for the Continue CTA */
    continueCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckTransferDetailOptionGenqlSelection{
    /** Label for a Send Check Transfer Overview screen option (recipient, amount, etc.). */
    label?: boolean | number
    /** Placeholder for a Send Check Transfer Overview screen option (recipient, amount, etc.). */
    placeholder?: boolean | number
    /** Icon to display, if applicable. */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckSelectRecipientContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen title copy. */
    title?: boolean | number
    /** Label for the new recipient section. */
    newRecipientLabel?: boolean | number
    /** Optional sublabel for the new recipient section. */
    newRecipientSublabel?: boolean | number
    /** Display list for recent send check recipient(s). */
    recentRecipients?: SendCheckRecipientListGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckRecipientListGenqlSelection{
    /** Optional title/description for a list of send check recipients. */
    title?: boolean | number
    /** List of send check recipients. */
    recipients?: SendCheckRecipientListItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckRecipientListItemGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Send check recipient label. */
    label?: boolean | number
    /** Send check recipient sublabel. */
    sublabel?: boolean | number
    /** Send check recipient edit requirements. */
    recipientEditRequirements?: SendCheckRecipientEditRequirementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckRecipientEditRequirementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Indicates whether the recipient is an idividual or a business. */
    recipientType?: boolean | number
    /** If the recipient is an individual, this is the recipient's first name. */
    firstName?: boolean | number
    /** If the recipient is an individual, this is the recipient's last name. */
    lastName?: boolean | number
    /** If the recipient is a business, this is the recipient's business name. */
    businessName?: boolean | number
    /** Line one of the recipient's mailing address. */
    lineOne?: boolean | number
    /** Line two of the recipient's mailing address. */
    lineTwo?: boolean | number
    /** The recipient's city. */
    city?: boolean | number
    /** The recipient's state or province. */
    stateOrProvince?: boolean | number
    /** The recipient's postal code. */
    postalCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SelectRecipientTypeContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen title copy. */
    title?: boolean | number
    /** Individual recipient option. */
    individual?: SendCheckRecipientTypeOptionGenqlSelection
    /** Business recipient option. */
    business?: SendCheckRecipientTypeOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckRecipientTypeOptionGenqlSelection{
    /** Business recipient option title. */
    title?: boolean | number
    /** Business recipient option subtitle. */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RecipientInformationContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen title copy. */
    title?: { __args: {recipientType: SendCheckRecipientTypeEnum} }
    /** Recipient's name section title. */
    recipientNameTitle?: { __args: {recipientType: SendCheckRecipientTypeEnum} }
    /** Recipient's address section title. */
    recipientAddressTitle?: { __args: {recipientType: SendCheckRecipientTypeEnum} }
    /** Copy for the Continue CTA */
    continueCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetCheckAmountContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Screen title copy.
     */
    title?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Minimum amount for which a check can be written for.
     */
    minCheckAmount?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Maximum amount for which a check can be written for.
     */
    maxCheckAmount?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Error message to display if the check amount is greater than required value.
     */
    maxErrorMessageCopy?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Error message to display if the check amount is less than required value.
     */
    minErrorMessageCopy?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * Copy for the Continue CTA.
     */
    continueCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CheckMemoContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Screen title copy. */
    title?: boolean | number
    /** Copy to be used for the input placeholder. */
    inputPlaceholder?: boolean | number
    /** Maximum number of characters that can be included in the Memo input. */
    maxCharacterLimit?: boolean | number
    /** Continue CTA Copy. */
    continueCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConfirmCheckDetailsContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Pop-up title copy. */
    title?: { __args: {isRecurringCheck?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Copy for the From label. */
    fromLabel?: boolean | number
    /** `AppImage` for the send check transfer source. */
    fromIcon?: AppImageGenqlSelection
    /** Spend Checking account description. */
    spendAccountDescription?: boolean | number
    /** Copy for the To label. */
    toLabel?: boolean | number
    /** Copy for the Frequency label. */
    frequencyLabel?: boolean | number
    /** `AppImage` for the send check transfer destination. */
    toIcon?: AppImageGenqlSelection
    /** Copy for the Address label. */
    addressLabel?: boolean | number
    /** Copy for the Memo label. */
    memoLabel?: boolean | number
    /** Content for the send check transfer timing message. */
    transferTimingMessage?: SendCheckTransferTimingMessageGenqlSelection
    /** Copy for the Cancel Transfer CTA. */
    cancelCtaCopy?: boolean | number
    /** Copy for the Confirm Transfer CTA. */
    confirmTransferCtaCopy?: { __args: {isRecurringCheck?: (Scalars['Boolean'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckTransferTimingMessageGenqlSelection{
    /** `AppImage` for the transfer timing message. */
    icon?: AppImageGenqlSelection
    /** Content for the transfer timing message. */
    content?: boolean | number
    /** `AppLink` for the transfer timing message. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PaymentConfirmedContentGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Payment confirmed screen title. */
    title?: boolean | number
    /** Send Check payment confirmed illustration. */
    illustration?: AppImageGenqlSelection
    /** Payment confirmed screen content header copy. */
    headerCopy?: boolean | number
    /** Payment confirmed screen content body copy. */
    bodyCopy?: boolean | number
    /** Copy for the Done CTA. */
    doneCtaCopy?: boolean | number
    /** Copy for Check Details CTA. */
    checkDetailsCtaCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the current trading status of an account. */
export interface AccountTradingStatusGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The timestamp for this status. */
    asOfTime?: boolean | number
    /** True when the account is currently in the process of trading. */
    isInProgress?: boolean | number
    /** True when the account is actively under maintenance window via our vendor. Null if vendor maintenance state is not available or not relevant to the account. */
    isInVendorMaintenanceWindow?: boolean | number
    /** The type of window currently in progress for the account, if applicable. */
    inProgressWindowForAccount?: boolean | number
    /** The anticipated start time of the next trading window for the account. */
    nextTradingTime?: boolean | number
    /** The type of the next available trading window for this account. */
    nextWindowForAccount?: boolean | number
    /** The type of the system's next trading window. */
    nextWindowForSystem?: boolean | number
    /** A description of the system's next morning trading window. */
    nextMorningWindow?: TradingWindowDescriptionGenqlSelection
    /** A description of the system's next afternoon trading window. */
    nextAfternoonWindow?: TradingWindowDescriptionGenqlSelection
    /** A description of the system's next on demand trading window. */
    nextOnDemandWindow?: TradingWindowDescriptionGenqlSelection
    /** How many on demand trading windows are left. */
    onDemandTradeWindowsLeft?: boolean | number
    /** The maximum number of on demand trading windows that can be performed per period. */
    maxOnDemandTradeWindows?: boolean | number
    /** True if this account has access to the next afternoon trading window. */
    hasAccessToNextAfternoonWindow?: boolean | number
    /**
     * True if `hasAccessToNextAfternoonWindow` is true AND this account is currently
     * allowed to trade in the next afternoon window based on day trading rules.
     */
    hasAccessToAndCanTradeInNextAfternoonWindow?: boolean | number
    /** The minimum account value required for trading in multiple windows. */
    minAccountValueForMultipleDailyWindows?: boolean | number
    /** The allocated trades of the last on-demand trade window OR the given on-demand trade window. */
    onDemandAllocatedTrades?: (OnDemandAllocatedTradeGenqlSelection & { __args: {tradeWindowId: Scalars['ID']} })
    /** The reason on-demand trading is restricted for the user. If null, the user is allowed to trade. */
    onDemandTradingRestrictionReason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A trading window description. */
export interface TradingWindowDescriptionGenqlSelection{
    /** The type of this trading window. */
    type?: boolean | number
    /** The starting time of this trading window. */
    startTime?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnDemandAllocatedTradeGenqlSelection{
    /** The account ID of the account that made this trade. */
    brokerageAccountId?: boolean | number
    /** The account number of the account that made this trade. */
    custodianAccountNumber?: boolean | number
    /** The trade window ID of the trade window that this trade belongs to. */
    tradeWindowId?: boolean | number
    /** The security that was traded. */
    of?: SecurityGenqlSelection
    /** Whether the trade was a buy or sell. */
    side?: boolean | number
    /** The quantity of the traded security. */
    allocatedQuantity?: boolean | number
    /** The price of the traded security. */
    allocatedPrice?: boolean | number
    /** The amount of the security purchased in dollars. */
    allocatedAmount?: boolean | number
    /** The status of the allocated trade. */
    status?: boolean | number
    /** The copy to display for the status of the allocated trade. */
    statusCopy?: boolean | number
    /**
     * @deprecated Undesired pattern. Use `note` instead.
     * Optional notes about the allocated trade, such as reasons why it was rejected. Deprecated.
     */
    notes?: OnDemandAllocatedTradeNoteGenqlSelection
    /** Optional note about the allocated trade, such as reasons why it was rejected. */
    note?: boolean | number
    /** Pill indicating the status of the allocated trade. */
    statusPill?: AppPillGenqlSelection
    /** The timestamp of when the trade was created. */
    createdTimestamp?: boolean | number
    /** The timestamp of when the trade was executed. */
    executionTimestamp?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnDemandAllocatedTradeNoteGenqlSelection{
    key?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SecurityMarginTooltipGenqlSelection{
    /** The icon entry point to the security margin tooltip. */
    icon?: AppImageGenqlSelection
    /** The security margin label to be displayed with the tooltip. */
    label?: boolean | number
    /** The security margin text to be displayed when the tooltip is engaged. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A recurrence schedule. */
export interface RecurrenceScheduleGenqlSelection{
    /** A short title for the schedule. */
    title?: boolean | number
    /** A description of schedule. */
    description?: boolean | number
    on_MonthlySchedule?: MonthlyScheduleGenqlSelection
    on_WeekOfMonthSchedule?: WeekOfMonthScheduleGenqlSelection
    on_BiweeklySchedule?: BiweeklyScheduleGenqlSelection
    on_WeeklySchedule?: WeeklyScheduleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A monthly schedule. */
export interface MonthlyScheduleGenqlSelection{
    /** A short title for the schedule. */
    title?: boolean | number
    /** A description of schedule. */
    description?: boolean | number
    /** The day of the month. */
    dayOfMonth?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A week-of-month schedule. */
export interface WeekOfMonthScheduleGenqlSelection{
    /** A short title for the schedule. */
    title?: boolean | number
    /** A description of schedule. */
    description?: boolean | number
    /** The week of the month. */
    weekOfMonth?: boolean | number
    /** The day of the week. */
    dayOfWeek?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A biweekly schedule. */
export interface BiweeklyScheduleGenqlSelection{
    /** A short title for the schedule. */
    title?: boolean | number
    /** A description of schedule. */
    description?: boolean | number
    /** The day of the week. */
    dayOfWeek?: boolean | number
    /** True if the schedule is for even weeks, false for odd weeks. */
    isEvenWeeks?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A weekly schedule. */
export interface WeeklyScheduleGenqlSelection{
    /** A short title for the schedule. */
    title?: boolean | number
    /** A description of schedule. */
    description?: boolean | number
    /** The day of the week. */
    dayOfWeek?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about Invest account rollovers. */
export interface InvestRolloversGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    checkInstructions?: InvestRolloverCheckInstructionsGenqlSelection
    /** Information about existing rollover transactions */
    rolloverTransactions?: RolloverTransactionsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RolloverTransactionsGenqlSelection{
    /** The webview URL for existing ACAT transactions - this will return null if the user does not have previous rollover transactions. */
    transactionsWebviewUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Share Pie fields */
export interface InvestSharePieGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Share Pie modal */
    sharePieModal?: InvestSharePieModalGenqlSelection
    /** Share Pie Screenshot Information to be used on mobile for highlighting share pie feature */
    sharePieScreenshotBanner?: InformationBannerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestSharePieModalGenqlSelection{
    /** share pie modal illustration */
    illustration?: AppImageGenqlSelection
    /** share pie title */
    title?: boolean | number
    /** share pie subtitle */
    subtitle?: boolean | number
    /** share pie message */
    message?: boolean | number
    /** share pie referrals */
    referrals?: ReferralsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Instructions for sending rollover checks. */
export interface InvestRolloverCheckInstructionsGenqlSelection{
    /** Who the check should be made payable to. */
    payableTo?: boolean | number
    /**
     * The mailing address that the check should be sent to. Strings are intended to
     * be displayed verbatim on separate lines.
     */
    mailingAddressLines?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * @deprecated This field is internal-only and should not be used by client applications.
     * The internal ID of this node.
     */
    internalId?: boolean | number
    /** The time that this user was created in ISO 8601 format. */
    created?: boolean | number
    /**
     * @deprecated No longer supported.
     * No longer supported. Always returns null.
     */
    modified?: boolean | number
    /** The username of this user. */
    username?: boolean | number
    /** The correlation key for this user. */
    correlationKey?: boolean | number
    /** The push notification subscriber key for this user. */
    subscriberKey?: boolean | number
    /** A list of user data entries. */
    data?: (UserDataEntryGenqlSelection & { __args?: {
    /**
     * When provided, the list will be filtered for only the given keys. Keys that
     * do not exist will be returned as an entry with a `null` value. Maximum
     * number of keys is 100.
     */
    keys?: (Scalars['String'][] | null)} })
    /** The user requires verification via phone. */
    requiresPhoneVerification?: boolean | number
    /** The user has successfullly completed verification via phone. */
    hasCompletedPhoneVerification?: boolean | number
    /**
     * True if the user has completed onboarding. A user is considered onboarded if they have
     * a user profile.
     */
    hasOnboarded?: boolean | number
    /** True if the user has at least one (1) M1 product. */
    hasProduct?: boolean | number
    /** When true, the user's primary email address has been verified. */
    isPrimaryEmailVerified?: boolean | number
    /** When true, two factor authentication has been enabled for the user. */
    isTwoFactorAuthEnabled?: boolean | number
    /** Billing history and status for the user. */
    billing?: BillingGenqlSelection
    /** Hashe used for Intercom's Identity Verification */
    intercomIdentityHash?: boolean | number
    /** Referrals program information for the user. */
    referrals?: ReferralsGenqlSelection
    /** The current agreement status for this user. */
    agreementStatus?: AgreementStatusGenqlSelection
    /** When true, user has requested account deletion */
    hasRequestedDeletion?: boolean | number
    /** When true, user account is deleted */
    accountDeletionComplete?: boolean | number
    /** A list of key value pairs for a given user's account meant to aid with third-party Customer Support services. */
    customerSupportFields?: CustomerSupportFieldGenqlSelection
    /** Entry point for modern onboarding as part of product agnostic onboarding experience. */
    onboardingIdentityFirst?: OnboardingIdentityFirstGenqlSelection
    /** Latest product selected during an onboarding flow. If a user has this value, that means they have completed Module 1 for the latest selected product. Null if not. */
    latestProductSelection?: boolean | number
    /** When true, user has a primaryProfile with a non-nullable identityInfo object. In the case of service outage, returns true. */
    hasIdentityInfo?: boolean | number
    /** True if a user has a primary profile containing both profile and required suitability information. */
    hasCompletedProfile?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnboardingIdentityFirstGenqlSelection{
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasDirectToHYSAFlagLaunchDarkly?: boolean | number
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasScreenReorderingFlagLaunchDarkly?: boolean | number
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasMidflowFlagLaunchDarkly?: boolean | number
    /**
     * @deprecated This flag is no longer in use.
     * Deprecated, no longer in use.
     */
    hasCxIntegratedOnboarding?: boolean | number
    /** Drives the User Profile section. Renders questions that collect L1 and L2 user information for creating an M1 User Profile with minimally required information. */
    userProfileSection?: OnboardingIdentityFirstUserProfileSectionGenqlSelection
    /** Drives the financial suitability profile section. */
    financialSuitabilitySection?: OnboardingIdentityFirstFinancialSuitabilitySectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnboardingIdentityFirstUserProfileSectionGenqlSelection{
    title?: boolean | number
    questions?: OnboardingIdentityFirstQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnboardingIdentityFirstFinancialSuitabilitySectionGenqlSelection{
    title?: boolean | number
    questions?: OnboardingIdentityFirstQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnboardingIdentityFirstQuestionGenqlSelection{
    /** An ENUM representing the specific question. Clients can key off this value to build custom behavior on a per-question basis. */
    questionType?: boolean | number
    /** Title screen for the question. */
    title?: boolean | number
    /** Subtitle copy for the given question. */
    subtitle?: boolean | number
    /** An ENUM that represents the associated section the given question exists under. */
    section?: boolean | number
    /** Copy to be rendered for the continue CTA. */
    continueLabel?: boolean | number
    /** Copy to be rendered for the skip CTA. Null if the question can't be skipped. */
    skipLabel?: boolean | number
    /** An array of strings for a any disclaimer tooltips that need to be shown for the given question. */
    disclaimerTooltipContent?: boolean | number
    /** An ENUM representing the previous question, null if the given question is the first in its section. */
    previousQuestionType?: boolean | number
    /** An ENUM representing the next question, null if the given question is the last in its section. */
    nextQuestionType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CustomerSupportFieldGenqlSelection{
    /** A key associated with a given field. */
    key?: boolean | number
    /** A value associated with a given field. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user data entry. */
export interface UserDataEntryGenqlSelection{
    /** The data key. */
    key?: boolean | number
    /** The data value. Value is null when not present. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The header for a marketing screen. */
    header?: boolean | number
    /** An array of the content cards for a marketing screen. */
    productMarketingCards?: ProductMarketingCardGenqlSelection
    /** An array of the disclosures for a marketing screen. */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    on_BorrowMarketingScreenV2?: BorrowMarketingScreenV2GenqlSelection
    on_InvestMarketingScreen?: InvestMarketingScreenGenqlSelection
    on_SpendMarketingScreen?: SpendMarketingScreenGenqlSelection
    on_EarnMarketingScreen?: EarnMarketingScreenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sort option. */
export interface DocumentSortOptionInput {
/** A sort direction. */
direction: SortDirectionEnum,
/** A sort type. */
type: DocumentSortTypeEnum}


/** A document filter setting. */
export interface DocumentFilterInput {
/** All document types to be returned with the document connection request. */
includeFilter?: ((DocumentTypeFilterEnumType | null)[] | null),
/** When true, include documents of type `STATEMENT`. */
includeStatements?: (Scalars['Boolean'] | null),
/** When true, include documents of type `TAX_FORM`. */
includeTaxForms?: (Scalars['Boolean'] | null),
/** When true, include documents of type `TRADE_CONFIRMATION`. */
includeTradeConfirmations?: (Scalars['Boolean'] | null),
/** If included, documents returned will only include statements of this type. */
statementType?: ((StatementTypeFilterEnumType | null)[] | null)}


/**
 * Deprecated - The action that will be run on the client side. Client will interpret this action.
 * Use AppButton instead.
 */
export interface AppActionGenqlSelection{
    /**
     * @deprecated use AppButton instead
     * An analytics event for following the link.
     */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /**
     * @deprecated use AppButton instead
     * The action type used to execute client side.
     */
    type?: boolean | number
    /**
     * @deprecated use AppButton instead
     * A title that can be displayed as trigger for an action.
     */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppAnalyticsEventGenqlSelection{
    /** The name of the analytics event. */
    name?: boolean | number
    /** An optional numeric value for the built-in `value` parameter. */
    valueParameter?: boolean | number
    /** An optional list of parameters that should be sent with the event. */
    customParameters?: AppAnalyticsParameterGenqlSelection
    /** An optional list of boolean parameters that should be sent with the event. */
    customBoolParameters?: AppAnalyticsBooleanParameterGenqlSelection
    /** An optional list of number parameters that should be sent with the event. */
    customNumberParameters?: AppAnalyticsNumberParameterGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A specification for an analytics parameter. */
export interface AppAnalyticsParameterGenqlSelection{
    /** The name of the parameter. */
    name?: boolean | number
    /** The value of the parameter. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A specification for a boolean analytics parameter. */
export interface AppAnalyticsBooleanParameterGenqlSelection{
    /** The name of the parameter. */
    name?: boolean | number
    /** The value of the parameter. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A specification for a number analytics parameter. */
export interface AppAnalyticsNumberParameterGenqlSelection{
    /** The name of the parameter. */
    name?: boolean | number
    /** The value of the parameter. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A union of possible App Buttons. */
export interface AppButtonUnionGenqlSelection{
    on_AppButton?:AppButtonGenqlSelection,
    on_AppLink?:AppLinkGenqlSelection,
    on_AppShareButton?:AppShareButtonGenqlSelection,
    on_AppButtonInterface?: AppButtonInterfaceGenqlSelection,
    on_AppLinkInterface?: AppLinkInterfaceGenqlSelection,
    on_Linkable?: LinkableGenqlSelection,
    __typename?: boolean | number
}

export interface AppButtonInterfaceGenqlSelection{
    /** The label of the button */
    label?: boolean | number
    /** An analytics event for clicking the button */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** disabled state of the button */
    disabled?: boolean | number
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind?: boolean | number
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size?: boolean | number
    on_AppButton?: AppButtonGenqlSelection
    on_AppShareButton?: AppShareButtonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppButtonGenqlSelection{
    /** The label of the button */
    label?: boolean | number
    /** An analytics event for clicking the button */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** disabled state of the button */
    disabled?: boolean | number
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind?: boolean | number
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size?: boolean | number
    /** An action that can be used for mapping the click event to a specific action */
    action?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppShareButtonGenqlSelection{
    /** The label of the button */
    label?: boolean | number
    /** An analytics event for clicking the button */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The disabled state of the button */
    disabled?: boolean | number
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind?: boolean | number
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size?: boolean | number
    /** Content string that is copied to clipboard or shared when the button is clicked */
    shareContent?: boolean | number
    /** Whether the button should copy or share the shareContent on click. If null, web behavior will default to copy and mobile behavior will default to share. */
    shareType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppCardGenqlSelection{
    /** True if the card is collapsible */
    isCollapsible?: boolean | number
    /** True if the card is dismissible */
    isDismissible?: boolean | number
    /** Background color for the card - liquid semantic color naming used */
    backgroundColor?: boolean | number
    /** Border color for the card - liquid semantic color naming used */
    borderColor?: boolean | number
    /** Hover/highlight color for the card - liquid semantic color naming used */
    highlightColor?: boolean | number
    /** Icon for the card */
    icon?: AppImageGenqlSelection
    /** Title for the card */
    title?: RichTextContentGenqlSelection
    /** Body (paragraphs) for the card */
    paragraphs?: RichTextContentGenqlSelection
    /** Primary CTA for the card */
    primaryCta?: AppButtonUnionGenqlSelection
    /** Secondary CTA for the card */
    secondaryCta?: AppButtonUnionGenqlSelection
    /** Tappable CTA for the card, if applicable. If present, that signals to clients that the card itself should be tappable. */
    tappableCta?: AppButtonUnionGenqlSelection
    /** An analytics event to be recorded upon displaying the card. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An analytics event to be recorded upon collapsing/dismissing the card. */
    actionAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppImageGenqlSelection{
    /**
     * The image type, can be either ILLUSTRATION or ICON. This field is to be used to determine which
     * component clients will use for the AppImage (Illustration or Icon).
     */
    type?: boolean | number
    /**
     * The name(s) (key) of the Icon or Illustration asset.
     * The name needs to be a valid IllustrationsType or IconsType from the `@m1/liquid-react`.
     * Clients might not have the named asset, so fallbacks can be provided in the array after the first index.
     */
    names?: boolean | number
    /** The color to fill monochromatic icons. Not relevant for any other image type. */
    color?: boolean | number
    /** Light-theme image variation. */
    lightTheme?: AppImageSourceSetGenqlSelection
    /** Dark-theme image variation. */
    darkTheme?: AppImageSourceSetGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of source URLs for an image asset. */
export interface AppImageSourceSetGenqlSelection{
    /** Asset Url at 1x resolution */
    scale1xUrl?: boolean | number
    /** "Asset Url at 2x resolution */
    scale2xUrl?: boolean | number
    /** Asset Url at 3x resolution */
    scale3xUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppInfoPageGenqlSelection{
    /** Illustration to display at top of AppInfoPage */
    illustration?: AppImageGenqlSelection
    /** Title of AppInfoPage */
    title?: boolean | number
    /** Subtitle of AppInfoPage */
    subtitle?: boolean | number
    /** The list of items on ApInfoPage, including icon and content */
    infoList?: InfoPageListItemGenqlSelection
    /**
     * @deprecated Use `paragraphs` instead
     * Links for AppInfoPage
     */
    links?: AppLinkGenqlSelection
    /** Rich Text Disclosures for AppInfoPage. On web, this appears below the CTA. If you need disclosures above the CTA, use `paragraphs` instead. */
    richTextDisclosures?: AppRichTextDisclosureLinkGenqlSelection
    /**
     * @deprecated Use `richTextDisclosures`(for below the CTA) or `paragraphs` (for above the CTA) instead
     * Disclosures for AppInfoPage
     */
    disclosures?: AppDisclosureLinkGenqlSelection
    /** Rich text content that can go below the info list and above CTAs, such as links, disclosures, disclaimers, etc. */
    paragraphs?: RichTextContentGenqlSelection
    /** An analytics event to fire off when the page loads. This should be deprecated once the new Wizards flows on Web support logging page views automatically. */
    pageViewAnalytics?: AppAnalyticsEventGenqlSelection
    /**
     * @deprecated Use `primaryCtaButton` instead
     * The text for the label of the primary call to action button/link
     */
    primaryCtaLabel?: boolean | number
    /**
     * @deprecated Use `secondaryCtaButton` instead
     * The text for the label of the secondary call to action button/link
     */
    secondaryCtaLabel?: boolean | number
    /** The button of the primary call to action button/link */
    primaryCtaButton?: AppButtonGenqlSelection
    /** The button of the secondary call to action button/link */
    secondaryCtaButton?: AppButtonGenqlSelection
    /** A link option for the primary CTA */
    primaryCtaLink?: AppLinkGenqlSelection
    /** A link option for the secondary CTA */
    secondaryCtaLink?: AppLinkGenqlSelection
    /** The label for the skip button */
    skipLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InfoPageListItemGenqlSelection{
    /** Icon for the item of the info list of AppInfoPage */
    icon?: AppImageGenqlSelection
    /** The title of the list item. Will return `body` as text in this resolver for backwards compatability. */
    title?: RichTextContentGenqlSelection
    /** The subtitle/body content of the list item */
    subtitle?: RichTextContentGenqlSelection
    /**
     * @deprecated use `title` instead
     * Content of the item of the info list of AppInfoPage
     */
    body?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An informational card to display important messages to the user. */
export interface AppInformationalMessageCardGenqlSelection{
    /** Determines if the M1 Plus logo should show. */
    isPlusRelated?: boolean | number
    /** The header (or title) of the card. */
    title?: boolean | number
    /** The pill that shows up for the card. */
    status?: AppPillGenqlSelection
    /** The subtitle for the card. An array of strings where each index is displayed independently. */
    items?: AppInformationalMessageCardItemGenqlSelection
    /** The informative message displayed to the user. */
    message?: boolean | number
    /** The icon to display next to the message. */
    icon?: AppImageGenqlSelection
    /** The support link associated with the message. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Items to display on the Informational card. */
export interface AppInformationalMessageCardItemGenqlSelection{
    /** The label to show for this item. */
    label?: boolean | number
    /** The value to show for this item. */
    value?: boolean | number
    /** The tooltip icon displayed next to the card item. */
    tooltip?: AppInformationalMessageCardItemTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The tooltip that will be displayed next to items in the AppInformationalMessageCard. */
export interface AppInformationalMessageCardItemTooltipGenqlSelection{
    /** The icon to display for this tooltip. */
    icon?: AppImageGenqlSelection
    /** The text that will display when the user clicks the tooltip icon. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppPillInterfaceGenqlSelection{
    /** The label to use when displaying this pill. */
    label?: boolean | number
    /** Optional icon to display within the `AppPill` */
    icon?: boolean | number
    on_AppPill?: AppPillGenqlSelection
    on_CreditCardRewardsAppPill?: CreditCardRewardsAppPillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppPillGenqlSelection{
    /** The label to use when displaying this pill. */
    label?: boolean | number
    /** The "kind" of pill to display. Refer to design documentation for specs. */
    kind?: boolean | number
    /** Optional icon to display within the `AppPill` */
    icon?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppRichTextDisclosureLinkGenqlSelection{
    /** The label for a disclosure */
    linkText?: boolean | number
    /**
     * The font size of the linkText as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font?: boolean | number
    /**
     * The font weight of the linkText as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight?: boolean | number
    /** If true, the linkText should be underlined. */
    underline?: boolean | number
    /** The array of rich text for a disclosure */
    paragraphs?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppToastGenqlSelection{
    /** The paragraphs of the toast content */
    paragraphs?: RichTextContentGenqlSelection
    /** The link of the toast - can be a link or a button */
    link?: AppButtonUnionGenqlSelection
    /** The kind of toast */
    kind?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppTooltipInterfaceGenqlSelection{
    /** Optional header for the tooltip content */
    header?: boolean | number
    /** Content for tooltip as an array of strings */
    body?: boolean | number
    /** Optional AppLink at footer of tooltip content */
    link?: AppLinkGenqlSelection
    /** The type of tooltip icon */
    icon?: AppImageGenqlSelection
    on_AppTooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppTooltipGenqlSelection{
    /** Optional header for the tooltip content */
    header?: boolean | number
    /** Content for tooltip as an array of strings */
    body?: boolean | number
    /** Optional AppLink at footer of tooltip content */
    link?: AppLinkGenqlSelection
    /** The type of tooltip icon */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ClientInfoGenqlSelection{
    /** The client identification string. */
    id?: boolean | number
    /** The client type identifier. */
    type?: boolean | number
    /** The client version string. */
    version?: boolean | number
    /** The upgrade status for the client. */
    upgrade?: boolean | number
    /** An optional message about the upgrade status for the client. */
    upgradeMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ContactUsGenqlSelection{
    /** The title for the screen. */
    title?: boolean | number
    /** Subtitle for the screen. */
    subtitle?: boolean | number
    /** A list of cards to be displayed on the Contact Us screen. */
    cards?: ContactUsCardGenqlSelection
    /** A custom type to drive the content for the videos section of the Contact Us screen. */
    videoTutorialsSection?: VideoTutorialsSectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ContactUsCardGenqlSelection{
    /** An identifier that can be keyed off of to build dynamic client-side behavior. */
    identifier?: boolean | number
    /** The title of the given card. */
    title?: boolean | number
    /** An array of strings for the given card. */
    content?: boolean | number
    /** An optionally provided action label for a given card. */
    buttonLabel?: boolean | number
    /** An optionally provided url for a given card's CTA to route to. If null, handling should defined client-side. */
    buttonDestinationUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VideoTutorialsSectionGenqlSelection{
    /** Title of the Video Tutorials section. */
    title?: boolean | number
    /** Subtitle of the Video Tutorials section. */
    subtitle?: boolean | number
    /** Custom list of video(s) to be displayed. */
    videos?: VideoGenqlSelection
    /** Custom type for driving the 'view all' videos content. */
    viewAll?: VideoTutorialsSectionViewAllGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VideoTutorialsSectionViewAllGenqlSelection{
    /** External URL to route the user to when they click 'View all'. */
    destination?: boolean | number
    /** Label to present the 'View all' URL as. */
    label?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VideoGenqlSelection{
    /** Title for a given video. */
    title?: boolean | number
    /** Exact url for a given video. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: CreditCardEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardEdgeGenqlSelection{
    /** The item at the end of the edge */
    node?: CreditCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** When `true`, the `CreditCard` is in locked status. */
    isLocked?: boolean | number
    /** Last four digits of the credit card number. */
    lastFour?: boolean | number
    /** The credit card network (i.e. Visa). */
    network?: boolean | number
    /** The type of card issued. */
    cardType?: boolean | number
    /** The status of the card. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreditCardRewardsAppPillGenqlSelection{
    /** The label to use when displaying this pill. */
    label?: boolean | number
    /** The "kind" of pill to display. Refer to design documentation for specs. */
    kind?: boolean | number
    /** Optional icon to display within the `CreditCardRewardsAppPill` */
    icon?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EarnGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The new marketing screen content for the Earn (HYSA + CA) overview page. */
    earnMarketingScreen?: EarnMarketingScreenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EarnMarketingScreenGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The header for a marketing screen. */
    header?: boolean | number
    /** An array of the content cards for a marketing screen. */
    productMarketingCards?: ProductMarketingCardGenqlSelection
    /** An array of the disclosures for a marketing screen. */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EmailVerificationPageGenqlSelection{
    /** Title for the email verification page */
    title?: boolean | number
    /** Content for the email verification page */
    content?: boolean | number
    /** CTA label for the email verification page */
    ctaLabel?: boolean | number
    /** Illustration for the email verificaion page. If null, use emailVerifyInProcess from the DSR. */
    illustration?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FeedbackFormGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** Flag to determine if a user should see the feedback form (if null, default to false). */
    showFeedbackForm?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InformationBannerGenqlSelection{
    /** Copy to display in the banner */
    label?: boolean | number
    /** The "kind" of banner to display. Refer to design documentation for specs. */
    kind?: boolean | number
    /** Icon for InformationBanner card. */
    icon?: AppImageGenqlSelection
    /** Optional `AppLink` that includes the navigation action required by the user. Lens guarantees that only a link XOR button will be returned. */
    link?: AppLinkGenqlSelection
    /** Optional `AppButton` that includes the click event action required by the user. Lens guarantees that only a link XOR button will be returned. */
    button?: AppButtonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitialFundingGenqlSelection{
    /**
     * @deprecated This feature flag is old and no longer in use.
     * Returns the bank connection experiment variant that the user has, control is the default.
     */
    initialFundingBankConnectionVariant?: boolean | number
    /** An object containing the content for the initial funding screens. */
    initialFundingScreens?: InitialFundingScreensGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitialFundingScreensGenqlSelection{
    /** Contains content for the overview screen of the initial funding flow. */
    initialFundingOverviewScreen?: (InitialFundingOverviewScreenGenqlSelection & { __args: {accountRegistration: AccountRegistrationEnum} })
    /** Contains content for the confirmation screen of the initial funding flow. */
    initialFundingConfirmationScreen?: (AppInfoPageGenqlSelection & { __args: {transferId: Scalars['ID']} })
    /** Contains content for the screen that displays if a user exits plaid flow voluntarily. */
    initialFundingIncompleteConnectionScreen?: (AppInfoPageGenqlSelection & { __args?: {transferAmount?: (Scalars['Float'] | null)} })
    /** Contains content for the screen that displays if a user uses microdeposits to connect bank. */
    initialFundingPendingPlaidConnectionScreen?: AppInfoPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitialFundingOverviewScreenGenqlSelection{
    /** The title to display on the page. */
    title?: boolean | number
    /**
     * A collection of content items that include a title,
     * description (with or without embedded links) and an optional icon.
     */
    content?: InitialFundingOverviewScreenListItemGenqlSelection
    /** An analytics event that should be fired when the page is viewed. */
    pageViewAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** Information for the primary cta button on the screen. */
    primaryCtaButton?: AppButtonGenqlSelection
    /** Information for the secondary cta button on the screen. */
    secondaryCtaButton?: AppButtonGenqlSelection
    /** The skip cta icon ('X') at the top of the screen. */
    skipCta?: AppButtonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitialFundingOverviewScreenListItemGenqlSelection{
    /** An optional icon to display to the left of the items title. */
    icon?: AppImageGenqlSelection
    /** The title of the content item. */
    title?: boolean | number
    /** The description copy of the content item. Can contain inline links. */
    description?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IrsRegulationsGenqlSelection{
    /** A list of currently-available IRA contribution years. */
    iraContributionYears?: IraContributionYearGenqlSelection
    /** A list of currently-available IRA excess contribution withdrawal years. */
    iraExcessContributionRemovalYears?: IraExcessContributionRemovalYearGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about an IRA contribution year. */
export interface IraContributionYearGenqlSelection{
    /** The year. */
    year?: boolean | number
    /** The annual contribution limit for people under 50 years old. */
    limitUnder50?: boolean | number
    /** The annual contribution limit for people over 50 years old. */
    limitOver50?: boolean | number
    /** True if this is the current contribution year. */
    isCurrent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about an IRA excess contribution withdrawal year */
export interface IraExcessContributionRemovalYearGenqlSelection{
    /** The year. */
    year?: boolean | number
    /** True if this is the current contribution year. */
    isCurrent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ListItemGenqlSelection{
    /**
     * @deprecated Use descriptionV2 instead
     * Optional description text to render under the header labels of the list item
     */
    description?: boolean | number
    /** Optional subtext text to render under the header labels of the list item */
    descriptionV2?: RichTextContentGenqlSelection
    /** Icon for the card. */
    icon?: AppImageGenqlSelection
    /** Left aligned header text for the list item. */
    header?: boolean | number
    /** Right aligned header text for the list item. */
    headerRight?: boolean | number
    /** An optional pill to render at the top of the list item. */
    pill?: AppPillGenqlSelection
    /** An optional size specification for the list item. */
    size?: boolean | number
    /** Subheader text for the card. */
    subheader?: boolean | number
    /** A list of bullet points to nest under the subheader */
    subheaderItems?: boolean | number
    /** The value that the card represents. */
    value?: boolean | number
    /** An analytics event to fire when the given Product is clicked. */
    analyticsEventClick?: AppAnalyticsEventGenqlSelection
    /** Whether the list item is disabled or not */
    disabled?: boolean | number
    /** A link to navigate to when the list item is clicked. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a mailing address for a user. */
export interface MailingAddressGenqlSelection{
    /** Line one of the street address. */
    lineOne?: boolean | number
    /** Line two of the street address. */
    lineTwo?: boolean | number
    /** The city. */
    city?: boolean | number
    /** The state (or other subdivision). */
    stateOrProvince?: boolean | number
    /** The postal code. */
    postalCode?: boolean | number
    /** The country. */
    country?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarketsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A list of index proxies. */
    indexProxies?: IndexProxyGenqlSelection
    /**
     * @deprecated Moving to a new nullable field in case of timeouts.
     * A list of recent market news stories, sorted in reverse chronological order.
     */
    news?: (NewsConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** A list of recent market news stories, sorted in reverse chronological order. */
    marketNews?: (NewsConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about an index via a proxy fund. */
export interface IndexProxyGenqlSelection{
    /** The name of the index. */
    name?: boolean | number
    /** The fund that acts as a proxy for the index. */
    proxy?: FundGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NewsConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: NewsEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NewsEdgeGenqlSelection{
    cursor?: boolean | number
    node?: NewsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A news story. */
export interface NewsGenqlSelection{
    /** The date of the news story. */
    date?: boolean | number
    /** The headline of the news story. */
    headline?: boolean | number
    /** The source of the news story. */
    source?: boolean | number
    /** An optional URL to a logo for the given source. */
    sourceLogoUrl?: boolean | number
    /**
     * A short summary of the news story. Value is null when there is no summary
     * available.
     */
    summary?: boolean | number
    /** The URL for the news story. */
    url?: boolean | number
    /** An optional URL to an image that corresponds to the news story. */
    imageUrl?: boolean | number
    /** the news type */
    newsType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NodeGenqlSelection{
    id?: boolean | number
    on_Account?: AccountGenqlSelection
    on_BorrowDashboard?: BorrowDashboardGenqlSelection
    on_BorrowMarketingScreen?: BorrowMarketingScreenGenqlSelection
    on_BorrowMarketingScreenV2?: BorrowMarketingScreenV2GenqlSelection
    on_PersonalLoans?: PersonalLoansGenqlSelection
    on_PersonalLoanApplicationFlow?: PersonalLoanApplicationFlowGenqlSelection
    on_PersonalLoanDeclinedErrorScreen?: PersonalLoanDeclinedErrorScreenGenqlSelection
    on_PersonalLoanIneligibilityScreen?: PersonalLoanIneligibilityScreenGenqlSelection
    on_PersonalLoanApplicationManualReviewScreen?: PersonalLoanApplicationManualReviewScreenGenqlSelection
    on_PersonalLoanDisbursementFlow?: PersonalLoanDisbursementFlowGenqlSelection
    on_PersonalLoanDisbursement?: PersonalLoanDisbursementGenqlSelection
    on_PersonalLoanViewTerms?: PersonalLoanViewTermsGenqlSelection
    on_PersonalLoanApplicationDetails?: PersonalLoanApplicationDetailsGenqlSelection
    on_PreApprovalLoanApplicationOffer?: PreApprovalLoanApplicationOfferGenqlSelection
    on_PersonalLoan?: PersonalLoanGenqlSelection
    on_LoanTransactionEntry?: LoanTransactionEntryGenqlSelection
    on_BorrowPromotionalMessage?: BorrowPromotionalMessageGenqlSelection
    on_CommonTransaction?: CommonTransactionGenqlSelection
    on_Credit?: CreditGenqlSelection
    on_UserAcceptedCreditCardAgreements?: UserAcceptedCreditCardAgreementsGenqlSelection
    on_CreditCardApplicantInformation?: CreditCardApplicantInformationGenqlSelection
    on_CreditCardApplicationDetails?: CreditCardApplicationDetailsGenqlSelection
    on_CreditCardActiveOffer?: CreditCardActiveOfferGenqlSelection
    on_CreditCardAccount?: CreditCardAccountGenqlSelection
    on_CreditCardOnboardingContent?: CreditCardOnboardingContentGenqlSelection
    on_CreditCardOnboardingStartApplicationScreen?: CreditCardOnboardingStartApplicationScreenGenqlSelection
    on_CreditCardOnboardingApplicationStatusScreen?: CreditCardOnboardingApplicationStatusScreenGenqlSelection
    on_CreditCardManageCardDetailsScreen?: CreditCardManageCardDetailsScreenGenqlSelection
    on_CreditCardManageCardScreen?: CreditCardManageCardScreenGenqlSelection
    on_DigitalWalletPushProvisioningCredentials?: DigitalWalletPushProvisioningCredentialsGenqlSelection
    on_CreditCardRewardsPortalScreen?: CreditCardRewardsPortalScreenGenqlSelection
    on_CreditCardRewardsDetailsScreen?: CreditCardRewardsDetailsScreenGenqlSelection
    on_CreditCardRewardsProgramOverview?: CreditCardRewardsProgramOverviewGenqlSelection
    on_CreditCardTransaction?: CreditCardTransactionGenqlSelection
    on_CreditCardWaitlistConfirmationContent?: CreditCardWaitlistConfirmationContentGenqlSelection
    on_CreditCardRewardsProgramBreakdown?: CreditCardRewardsProgramBreakdownGenqlSelection
    on_CreditCardWaitlistMarketingBanner?: CreditCardWaitlistMarketingBannerGenqlSelection
    on_CreditCardSelectRewardDestinationContent?: CreditCardSelectRewardDestinationContentGenqlSelection
    on_CreditCardRewardDestinationOption?: CreditCardRewardDestinationOptionGenqlSelection
    on_CreditCardWaitlistMarketingScreen?: CreditCardWaitlistMarketingScreenGenqlSelection
    on_CreditCardApplyNowMarketingScreen?: CreditCardApplyNowMarketingScreenGenqlSelection
    on_Crypto?: CryptoGenqlSelection
    on_CryptoSystemPie?: CryptoSystemPieGenqlSelection
    on_CryptoAsset?: CryptoAssetGenqlSelection
    on_FundingSources?: FundingSourcesGenqlSelection
    on_FundingSourceAccount?: FundingSourceAccountGenqlSelection
    on_Fund?: FundGenqlSelection
    on_Fundamentals?: FundamentalsGenqlSelection
    on_Equity?: EquityGenqlSelection
    on_InvestMarketing?: InvestMarketingGenqlSelection
    on_InvestMarketingScreen?: InvestMarketingScreenGenqlSelection
    on_PortfolioSliceOrderStatus?: PortfolioSliceOrderStatusGenqlSelection
    on_PortfolioSliceRebalanceStatus?: PortfolioSliceRebalanceStatusGenqlSelection
    on_Position?: PositionGenqlSelection
    on_SecurityReference?: SecurityReferenceGenqlSelection
    on_NetWorth?: NetWorthGenqlSelection
    on_ChildPortfolioSlice?: ChildPortfolioSliceGenqlSelection
    on_RootPortfolioSlice?: RootPortfolioSliceGenqlSelection
    on_SharedPie?: SharedPieGenqlSelection
    on_SystemPie?: SystemPieGenqlSelection
    on_UserPie?: UserPieGenqlSelection
    on_Plus?: PlusGenqlSelection
    on_PlusEditPaymentMethodPagePaymentMethod?: PlusEditPaymentMethodPagePaymentMethodGenqlSelection
    on_PlusBilling?: PlusBillingGenqlSelection
    on_PlusBillingPaymentMethod?: PlusBillingPaymentMethodGenqlSelection
    on_PlusBenefitCalculatorInitialState?: PlusBenefitCalculatorInitialStateGenqlSelection
    on_Save?: SaveGenqlSelection
    on_Savings?: SavingsGenqlSelection
    on_SavingsJointAccountInvitation?: SavingsJointAccountInvitationGenqlSelection
    on_SavingsAgreements?: SavingsAgreementsGenqlSelection
    on_SavingsAccount?: SavingsAccountGenqlSelection
    on_SavingsCustomerDueDiligenceQuestions?: SavingsCustomerDueDiligenceQuestionsGenqlSelection
    on_SavingsTransaction?: SavingsTransactionGenqlSelection
    on_SpendMarketingScreen?: SpendMarketingScreenGenqlSelection
    on_Transfers?: TransfersGenqlSelection
    on_MoveMoneyV2?: MoveMoneyV2GenqlSelection
    on_MoveMoney?: MoveMoneyGenqlSelection
    on_TransferInstanceDetails?: TransferInstanceDetailsGenqlSelection
    on_NewSmartTransferFocusOption?: NewSmartTransferFocusOptionGenqlSelection
    on_SmartTransferRuleEditRequirements?: SmartTransferRuleEditRequirementsGenqlSelection
    on_NewSmartTransferContraParticipantEntryOption?: NewSmartTransferContraParticipantEntryOptionGenqlSelection
    on_SmartTransferContraParticipantEntryEditRequirements?: SmartTransferContraParticipantEntryEditRequirementsGenqlSelection
    on_SmartTransferFulfillmentConditionOption?: SmartTransferFulfillmentConditionOptionGenqlSelection
    on_AcatTransferInstance?: AcatTransferInstanceGenqlSelection
    on_TransferInstance?: TransferInstanceGenqlSelection
    on_TransferInstanceStep?: TransferInstanceStepGenqlSelection
    on_SmartTransferRule?: SmartTransferRuleGenqlSelection
    on_SmartTransferContraParticipantEntry?: SmartTransferContraParticipantEntryGenqlSelection
    on_ScheduledTransferRule?: ScheduledTransferRuleGenqlSelection
    on_OtherTransferRule?: OtherTransferRuleGenqlSelection
    on_Viewer?: ViewerGenqlSelection
    on_AccountConfiguration?: AccountConfigurationGenqlSelection
    on_DocumentUploadRequest?: DocumentUploadRequestGenqlSelection
    on_UnmanagedHoldingsCollection?: UnmanagedHoldingsCollectionGenqlSelection
    on_UnmanagedHolding?: UnmanagedHoldingGenqlSelection
    on_AchRelationshipViaDeposits?: AchRelationshipViaDepositsGenqlSelection
    on_AchRelationshipViaLink?: AchRelationshipViaLinkGenqlSelection
    on_AchTransfer?: AchTransferGenqlSelection
    on_AccountBalance?: AccountBalanceGenqlSelection
    on_Cash?: CashGenqlSelection
    on_Investments?: InvestmentsGenqlSelection
    on_Billing?: BillingGenqlSelection
    on_Borrow?: BorrowGenqlSelection
    on_BorrowAccount?: BorrowAccountGenqlSelection
    on_BorrowAccountCreditStatus?: BorrowAccountCreditStatusGenqlSelection
    on_InvestAccountDocument?: InvestAccountDocumentGenqlSelection
    on_AccountDocument?: AccountDocumentGenqlSelection
    on_SpendAccountDocument?: SpendAccountDocumentGenqlSelection
    on_EstimatedTrading?: EstimatedTradingGenqlSelection
    on_ExternalAccount?: ExternalAccountGenqlSelection
    on_FeatureFlags?: FeatureFlagsGenqlSelection
    on_Invest?: InvestGenqlSelection
    on_InvestActivity?: InvestActivityGenqlSelection
    on_InvestActivityTradeSummaryEntry?: InvestActivityTradeSummaryEntryGenqlSelection
    on_InvestActivityTradeEntry?: InvestActivityTradeEntryGenqlSelection
    on_InvestActivityCashEntry?: InvestActivityCashEntryGenqlSelection
    on_InvestActivityPositionEntry?: InvestActivityPositionEntryGenqlSelection
    on_InvestActivityRebalanceEntry?: InvestActivityRebalanceEntryGenqlSelection
    on_InvestActivityOrderEntry?: InvestActivityOrderEntryGenqlSelection
    on_InvestActivityOtherEntry?: InvestActivityOtherEntryGenqlSelection
    on_Overview?: OverviewGenqlSelection
    on_BalancesOverview?: BalancesOverviewGenqlSelection
    on_OverviewCards?: OverviewCardsGenqlSelection
    on_InvestAcatWizardContent?: InvestAcatWizardContentGenqlSelection
    on_InvestAcatWizardAssetSelectionContent?: InvestAcatWizardAssetSelectionContentGenqlSelection
    on_InvestAcatTransferTypeScreenContent?: InvestAcatTransferTypeScreenContentGenqlSelection
    on_InvestAcatBrokerageSelectionContent?: InvestAcatBrokerageSelectionContentGenqlSelection
    on_InvestAcatWizardContraSearchForm?: InvestAcatWizardContraSearchFormGenqlSelection
    on_InvestAcatWizardContraParticipant?: InvestAcatWizardContraParticipantGenqlSelection
    on_InvestAcatBrokerageAccountDetailsContent?: InvestAcatBrokerageAccountDetailsContentGenqlSelection
    on_InvestAcatDestinationAccountContent?: InvestAcatDestinationAccountContentGenqlSelection
    on_InvestAcatTransferInformationScreenContent?: InvestAcatTransferInformationScreenContentGenqlSelection
    on_InvestAcatConfirmSelectionsContent?: InvestAcatConfirmSelectionsContentGenqlSelection
    on_InvestAcatConfirmationContent?: InvestAcatConfirmationContentGenqlSelection
    on_Referrals?: ReferralsGenqlSelection
    on_ReferralOffer?: ReferralOfferGenqlSelection
    on_Research?: ResearchGenqlSelection
    on_Quote?: QuoteGenqlSelection
    on_PriceChange?: PriceChangeGenqlSelection
    on_Spend?: SpendGenqlSelection
    on_SpendAgreements?: SpendAgreementsGenqlSelection
    on_SpendDueDiligenceQuestions?: SpendDueDiligenceQuestionsGenqlSelection
    on_TextWithTooltip?: TextWithTooltipGenqlSelection
    on_SpendPrimaryMarketingScreen?: SpendPrimaryMarketingScreenGenqlSelection
    on_SpendIdentity?: SpendIdentityGenqlSelection
    on_SpendAccount?: SpendAccountGenqlSelection
    on_SpendPromotionalMessage?: SpendPromotionalMessageGenqlSelection
    on_PhysicalCheck?: PhysicalCheckGenqlSelection
    on_SpendExternalAccount?: SpendExternalAccountGenqlSelection
    on_SpendAvailableDebitCards?: SpendAvailableDebitCardsGenqlSelection
    on_SpendDebitCard?: SpendDebitCardGenqlSelection
    on_ManageSpendCard?: ManageSpendCardGenqlSelection
    on_SpendDebitCardDesign?: SpendDebitCardDesignGenqlSelection
    on_SpendDebitCardCta?: SpendDebitCardCtaGenqlSelection
    on_SpendActivity?: SpendActivityGenqlSelection
    on_SpendActivityEntryDetails?: SpendActivityEntryDetailsGenqlSelection
    on_SpendActivityEntryDisputeDetails?: SpendActivityEntryDisputeDetailsGenqlSelection
    on_SpendTransaction?: SpendTransactionGenqlSelection
    on_SpendActivityOtherEntry?: SpendActivityOtherEntryGenqlSelection
    on_MigratableInvestExternalAccount?: MigratableInvestExternalAccountGenqlSelection
    on_SpendMoveMoney?: SpendMoveMoneyGenqlSelection
    on_SendCheck?: SendCheckGenqlSelection
    on_SendCheckIneligibleContent?: SendCheckIneligibleContentGenqlSelection
    on_SendCheckPlusMarketingContent?: SendCheckPlusMarketingContentGenqlSelection
    on_SendCheckTransferOverviewContent?: SendCheckTransferOverviewContentGenqlSelection
    on_SendCheckSelectRecipientContent?: SendCheckSelectRecipientContentGenqlSelection
    on_SendCheckRecipientListItem?: SendCheckRecipientListItemGenqlSelection
    on_SendCheckRecipientEditRequirements?: SendCheckRecipientEditRequirementsGenqlSelection
    on_SelectRecipientTypeContent?: SelectRecipientTypeContentGenqlSelection
    on_RecipientInformationContent?: RecipientInformationContentGenqlSelection
    on_SetCheckAmountContent?: SetCheckAmountContentGenqlSelection
    on_CheckMemoContent?: CheckMemoContentGenqlSelection
    on_ConfirmCheckDetailsContent?: ConfirmCheckDetailsContentGenqlSelection
    on_PaymentConfirmedContent?: PaymentConfirmedContentGenqlSelection
    on_AccountTradingStatus?: AccountTradingStatusGenqlSelection
    on_InvestRollovers?: InvestRolloversGenqlSelection
    on_InvestSharePie?: InvestSharePieGenqlSelection
    on_User?: UserGenqlSelection
    on_CreditCard?: CreditCardGenqlSelection
    on_Earn?: EarnGenqlSelection
    on_EarnMarketingScreen?: EarnMarketingScreenGenqlSelection
    on_FeedbackForm?: FeedbackFormGenqlSelection
    on_Markets?: MarketsGenqlSelection
    on_Notifications?: NotificationsGenqlSelection
    on_NotificationPreferences?: NotificationPreferencesGenqlSelection
    on_RequiredDocumentsBundle?: RequiredDocumentsBundleGenqlSelection
    on_PlatformBillingEntry?: PlatformBillingEntryGenqlSelection
    on_Settings?: SettingsGenqlSelection
    on_Support?: SupportGenqlSelection
    on_Unauthenticated?: UnauthenticatedGenqlSelection
    on_AgreementBundle?: AgreementBundleGenqlSelection
    on_AgreementStatus?: AgreementStatusGenqlSelection
    on_Announcement?: AnnouncementGenqlSelection
    on_Announcements?: AnnouncementsGenqlSelection
    on_BorrowUpcomingBill?: BorrowUpcomingBillGenqlSelection
    on_AccountFundingTotals?: AccountFundingTotalsGenqlSelection
    on_AccountTradingPause?: AccountTradingPauseGenqlSelection
    on_ChartableSliceData?: ChartableSliceDataGenqlSelection
    on_CustodialAccountBeneficiary?: CustodialAccountBeneficiaryGenqlSelection
    on_IraContributionLimits?: IraContributionLimitsGenqlSelection
    on_IraContributionTotals?: IraContributionTotalsGenqlSelection
    on_Onboarding?: OnboardingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NotificationsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Notification preferences. */
    preferences?: NotificationPreferencesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NotificationPreferencesGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** Preferences for transfer completion notifications. */
    transferCompletion?: TransferCompletionNotificationPreferencesGenqlSelection
    /** Preferences for Invest activity notifications. */
    investActivity?: InvestActivityNotificationsPreferencesGenqlSelection
    /** Preferences for Spend Checking transaction notifications. */
    spendTransaction?: SpendTransactionNotificationPreferencesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Preferences for transfer completion notifications. */
export interface TransferCompletionNotificationPreferencesGenqlSelection{
    /** Send via push notification. Null means not available. */
    sendViaPush?: boolean | number
    /** Send via email. Null means not available. */
    sendViaEmail?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Preferences for Invest activity notifications. */
export interface InvestActivityNotificationsPreferencesGenqlSelection{
    /** Send via push notification. Null means not available. */
    sendViaPush?: boolean | number
    /** Send via email. Null means not available. */
    sendViaEmail?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Preferences for Spend Checking transaction notifications. */
export interface SpendTransactionNotificationPreferencesGenqlSelection{
    /** Send via push notification. Null means not available. */
    sendViaPush?: boolean | number
    /** Send via email. Null means not available. */
    sendViaEmail?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about pagination in a connection. */
export interface PageInfoGenqlSelection{
    /** When paginating forwards, the cursor to continue. */
    endCursor?: boolean | number
    /** When paginating forwards, are there more items? */
    hasNextPage?: boolean | number
    /** When paginating backwards, are there more items? */
    hasPreviousPage?: boolean | number
    /** When paginating backwards, the cursor to continue. */
    startCursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of fields for editing a pie and confirming changes */
export interface PieChangesConfirmationGenqlSelection{
    /** A message associated with the applicable locations section. */
    applicableLocationsMessage?: boolean | number
    /** A set of pie details for a given pie. */
    pieDetails?: PieChangesConfirmationDetailsGenqlSelection
    /** An object containing data about added or updated slices. */
    addedOrUpdated?: PieChangesConfirmationAddedOrUpdatedGenqlSelection
    /** An object containing data about removed slices. */
    removed?: PieChangesConfirmationRemovedGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationDetailsGenqlSelection{
    /** Further details on changes to a pie's name. Null if value was not edited. */
    name?: PieDetailsFieldGenqlSelection
    /** Further details on changes to a pie's description. Null if value was not edited. */
    description?: PieDetailsFieldGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationAddedOrUpdatedSliceGenqlSelection{
    /** The name of the slice. */
    name?: boolean | number
    /** The symbol of the slice if applicable. */
    symbol?: boolean | number
    /**
     * The existing percentage of a given slice, zero if the slice is to be added.
     * New Field added to Move Slices, not implemented elsewhere yet.
     */
    oldPercentage?: boolean | number
    /**
     * The soon-to-be new percentage of the slice.
     * New Field added to Move Slices, not implemented elsewhere yet.
     */
    percentage?: boolean | number
    /** A pill used to represent if the slice was added or updated */
    actionPill?: AppPillGenqlSelection
    /**
     * If available, a URL to a logo image that represents the Slice.
     * New Field added to Move Slices, not implemented elsewhere yet.
     */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationRemovedGenqlSelection{
    /** An array of removed slices. */
    slices?: PieChangesConfirmationRemovedSliceGenqlSelection
    /**
     * @deprecated Use messages instead
     * A message associated with removed slices.
     */
    message?: boolean | number
    /** Messages associated with removed slices. */
    messages?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieDetailsFieldGenqlSelection{
    /** An AppPill to be provided conditionally if the user has performed an action on the given field. */
    actionPill?: AppPillGenqlSelection
    /** The value of the pie details field. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationRemovedSliceGenqlSelection{
    /** The name of the slice. */
    name?: boolean | number
    /** The symbol of the slice if applicable. */
    symbol?: boolean | number
    /** The existing percentage of a slice. */
    oldPercentage?: boolean | number
    /** The new percentage of a slice, which will be zero for all removed slices. */
    newPercentage?: boolean | number
    /** A snapshot value of the slice. */
    value?: boolean | number
    /** If available, a URL to a logo image that represents the pie. */
    logoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChangesConfirmationAddedOrUpdatedGenqlSelection{
    /** An array of slices that were added or updated. */
    slices?: PieChangesConfirmationAddedOrUpdatedSliceGenqlSelection
    /**
     * @deprecated Use messages instead
     * A message associated with added or updated slices.
     */
    message?: boolean | number
    /** Messages associated with added or updated slices. */
    messages?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ProductMarketingCardGenqlSelection{
    /** The optional card icon for a marketing screen card. */
    illustration?: AppImageGenqlSelection
    /** The main title for a marketing screen card. */
    title?: boolean | number
    /** The title tooltip for a marketing screen card. */
    titleTooltip?: boolean | number
    /** The subtitle for a marketing screen card. */
    subtitle?: boolean | number
    /** The CTA destination deep link (button styling) for a marketing screen card. */
    primaryCtaButton?: AppLinkGenqlSelection
    /** The CTA destination deep link (text styling) for a marketing screen card. */
    secondaryCtaButton?: AppLinkGenqlSelection
    /** A (card displayed) analytics event for a marketing screen card */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RequiredDocumentsBundleGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The list of individual documents in this bundle. */
    documents?: RequiredDocumentGenqlSelection
    /** Copy to be displayed after the document list. */
    postamble?: boolean | number
    /** Copy to be displayed before the document list. */
    preamble?: boolean | number
    /** The unique signature for this bundle of documents & legal agreements. */
    signature?: boolean | number
    /** Copy to be displayed after the document list that implements Rich Text. */
    richPostamble?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RequiredDocumentGenqlSelection{
    /** The title of the document or legal agreement. */
    title?: boolean | number
    /** The URL of the document or legal agreement. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RichTextContentGenqlSelection{
    /** Array of rich text scalars or components for rendering inline on clients. */
    content?: RichTextUnionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A union of possible components for rendering inline on clients. */
export interface RichTextUnionGenqlSelection{
    on_Text?:TextGenqlSelection,
    on_AppButton?:AppButtonGenqlSelection,
    on_AppLink?:AppLinkGenqlSelection,
    on_AppShareButton?:AppShareButtonGenqlSelection,
    on_AppTooltip?:AppTooltipGenqlSelection,
    on_AppRichTextDisclosureLink?:AppRichTextDisclosureLinkGenqlSelection,
    on_AppButtonInterface?: AppButtonInterfaceGenqlSelection,
    on_AppLinkInterface?: AppLinkInterfaceGenqlSelection,
    on_Linkable?: LinkableGenqlSelection,
    on_AppTooltipInterface?: AppTooltipInterfaceGenqlSelection,
    __typename?: boolean | number
}


/** The disclosures and agreements page under settings. */
export interface DisclosuresAndAgreementsPageGenqlSelection{
    /** The agreements bundle for the HYSA product. */
    hysaAgreements?: AgreementBundleGenqlSelection
    /** The agreements bundle for the cash account product. */
    cashAccountAgreements?: AgreementBundleGenqlSelection
    /** The agreements bundle for the credit card product. */
    creditCardAgreements?: AgreementBundleGenqlSelection
    /** The agreements bundle for the crypto product. */
    cryptoAgreements?: RequiredDocumentsBundleGenqlSelection
    /** The agreements bundle for the promotional product. */
    promotionalAgreements?: RequiredDocumentsBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FullyPaidLendingPageGenqlSelection{
    /** The title of the Fully Paid Securities Lending page. */
    title?: boolean | number
    /** The subtitle of the Fully Paid Securities Lending page. */
    subtitle?: boolean | number
    /** A banner to display contextual messages about Fully Paid Lending. */
    banner?: InformationBannerGenqlSelection
    /** The link to the Fully Paid Securities Lending page. */
    helpLink?: AppLinkGenqlSelection
    /** Contains the copy + icon for the income earned description. */
    incomeEarnedSection?: FullyPaidLendingIncomeEarnedSectionGenqlSelection
    /** A collection of objects that group accounts with their stock loan holdings. */
    accountStockLoanHoldings?: AccountStockLoanHoldingGroupGenqlSelection
    /** Contains information about the user's current FPL program participation status. */
    optInSection?: FullyPaidLendingOptInSectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountStockLoanHoldingGroupGenqlSelection{
    /** A message to display when there are no active stock loans for the account. */
    emptyGroupMessage?: boolean | number
    /** The header copy for the grouping of loans. */
    header?: boolean | number
    /** A collection of StockLoans for the brokerage account. */
    stockLoans?: StockLoanGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FullyPaidLendingIncomeEarnedSectionGenqlSelection{
    /** The income earned message copy. */
    content?: boolean | number
    /** The icon to display before the interest earned copy. */
    icon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StockLoanGenqlSelection{
    /** The number of shares on loan. */
    quantity?: boolean | number
    /** Information on the security that matches the stock loan. */
    securityReference?: SecurityReferenceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FullyPaidLendingOptInSectionGenqlSelection{
    /** Content to present when a user shows intent to opt-in to FPL. */
    confirmContent?: FullyPaidLendingOptInSectionConfirmContentGenqlSelection
    /** Label for the CTA to begin opt-in. */
    ctaLabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FullyPaidLendingOptInSectionConfirmContentGenqlSelection{
    /** Label to display next to the UI element signaling user agreement. */
    agreementLabel?: boolean | number
    /** Label for the CTA to cancel opt-in. */
    cancelCtaLabel?: boolean | number
    /** Label for the CTA to confirm opt-in. */
    confirmCtaLabel?: boolean | number
    /**
     * @deprecated Utilize `contentV2` instead.
     * Content to present when a user is in the opt-in flow..
     */
    content?: RichTextContentGenqlSelection
    /** Content to present when a user is in the opt-in flow.. */
    paragraphs?: RichTextContentGenqlSelection
    /** Title to present when a user is in the opt-in flow.. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvestSettingsPageGenqlSelection{
    /** UI information for the Fully Paid Securities Lending page under invest settings. */
    fullyPaidLending?: FullyPaidLendingPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingPageGenqlSelection{
    /** Header for the platform billing page */
    header?: PlatformBillingPageHeaderGenqlSelection
    /** The billing methods section with content describing the payment methods available to the user */
    billingMethodSection?: PlatformBillingMethodSectionGenqlSelection
    /** Platform billing history for the user. */
    billingHistorySection?: PlatformBillingHistorySectionGenqlSelection
    /** Banner that appears when a user has had a payment fail */
    paymentFailureBanner?: InformationBannerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingPageHeaderGenqlSelection{
    /** The title of the page */
    title?: boolean | number
    /** An array of strings that can provide billing and billing cycle information */
    subtitles?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingMethodSectionGenqlSelection{
    /** Icon that precedes the platform billing method title copy */
    titleIcon?: AppImageGenqlSelection
    /** Static copy for the payment method dropdown */
    title?: boolean | number
    /** The list of eligible transfer participants */
    billingMethods?: TransferParticipantListGenqlSelection
    /** Transfer Particpant ID for the preferred payment method, will be null if no method is selected */
    preferredPaymentMethodId?: boolean | number
    /** Static copy that informs users that an account will be chosen to pay the fee if payment with the current method fails */
    subtitle?: boolean | number
    /** A list of disclosures */
    disclosures?: AppRichTextDisclosureLinkGenqlSelection
    /** A list of links */
    links?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingHistorySectionGenqlSelection{
    /** Icon that precedes the platform billing history title copy */
    titleIcon?: AppImageGenqlSelection
    /** Billing history table title */
    title?: boolean | number
    /** An array of billing history items */
    billingHistory?: (PlatformBillingHistoryEntryConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** Dynamic fallback copy in case there is no billing history or it fails to load */
    billingHistoryFallbackCopy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingHistoryEntryConnectionGenqlSelection{
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** A list of edges. */
    edges?: PlatformBillingHistoryEntryEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingHistoryEntryEdgeGenqlSelection{
    cursor?: boolean | number
    /** The item at the end of the edge */
    node?: PlatformBillingEntryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlatformBillingEntryGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** List item details for the billing entry. */
    listItem?: ListItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SettingsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** UI information for the Disclosures and Agreements page. */
    disclosuresAndAgreements?: DisclosuresAndAgreementsPageGenqlSelection
    /** UI information for the Invest settings page */
    invest?: InvestSettingsPageGenqlSelection
    /** An optional Plus promotional message. */
    plusPromotionForSettings?: PlusPromotionalMessageGenqlSelection
    /** UI information for the Platform Billing page */
    platformBilling?: PlatformBillingPageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SharePieLandingPageScreenGenqlSelection{
    /** The header for the share pie landing page screen. */
    header?: SharePieLandingPageHeaderGenqlSelection
    /** The analytics event that fires off when you view the share pie landing page screen. */
    pageViewAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The pie title for the share pie landing page screen. */
    pieTitle?: boolean | number
    /** The banner for the share pie landing page screen if pie is delisted. */
    delistedPieBanner?: (InformationBannerGenqlSelection & { __args?: {shareToken?: (Scalars['String'] | null)} })
    /** The log in banner for the share pie landing page screen. */
    logInBanner?: SharePieLogInBannerGenqlSelection
    /** The marketing details for the share pie landing page screen. */
    marketingDetails?: SharePieMarketingDetailsGenqlSelection
    /** The disclosures for the share pie landing page screen. */
    disclosures?: AppLinkGenqlSelection
    /** The disclosures for the share pie landing page screen. */
    disclosuresFooter?: AppRichTextDisclosureLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SharePieLandingPageHeaderGenqlSelection{
    /** The text for a Share Pie Landing page header */
    text?: boolean | number
    /** The icon for a Share Pie Landing Page Header */
    icon?: AppImageGenqlSelection
    /** The ctaButton for a Share Pie Landing Page Header */
    ctaButton?: AppButtonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SharePieLogInBannerGenqlSelection{
    /** The title for a Share Pie Log In Banner */
    title?: boolean | number
    /** The description for a Share Pie Log In Banner */
    description?: boolean | number
    /** The primary cta for a Share Pie Log In Banner */
    primaryCTA?: AppButtonGenqlSelection
    /** The log in CTA for a Share Pie Log In Banner */
    logInCTA?: AppButtonGenqlSelection
    /** The disclosure for a Share Pie Log In Banner */
    createAccountDisclosure?: RichTextContentGenqlSelection
    /** The illustration for a Share Pie Log In Banner */
    illustration?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SharePieMarketingDetailsGenqlSelection{
    /** The title for a Share Pie Marketing Details */
    title?: boolean | number
    /** The marketing content details for a Share Pie Marketing Details */
    marketingContent?: SharePieMarketingContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SharePieMarketingContentGenqlSelection{
    /** The title for a Share Pie Marketing Content */
    title?: boolean | number
    /** The description for a Share Pie Marketing Content */
    description?: boolean | number
    /** The illustration for a Share Pie Marketing Content */
    illustration?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SupportGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /**
     * The support phone number that should be displayed to a user. When null, no
     * phone number should be displayed.
     */
    phoneNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the system. */
export interface SystemInfoGenqlSelection{
    /**
     * A list of specific functionality areas that are currently blocked. If the
     * value is empty array, ALL functionality is blocked. If the value is null, NO
     * functionality is blocked.
     */
    blockedFunctionality?: boolean | number
    /** True if the current system status blocks some or all functionality. */
    isStatusBlocking?: boolean | number
    /** The overall status of the system. */
    status?: boolean | number
    /** An optional message about the current status of the system. */
    statusMessage?: boolean | number
    /** The system version. */
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TabularDataItemGenqlSelection{
    /** The title for a Tabular Data Item */
    title?: boolean | number
    /** The title link for a Tabular Data Item */
    titleLink?: AppLinkGenqlSelection
    /** The value for a Tabular Data Item */
    value?: boolean | number
    /** The value link for a Tabular Data Item */
    valueLink?: AppLinkGenqlSelection
    /** The tooltip for a Tabular Data Item */
    tooltip?: AppTooltipGenqlSelection
    /** Rich text tablular data item value */
    richTextValue?: RichTextContentGenqlSelection
    /** Icon for the tabular data item value */
    valueIcon?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TabularDataSectionGenqlSelection{
    /** The header for a Tabular Data Section */
    header?: boolean | number
    /** The array of details for a Tabular Data Section */
    details?: TabularDataItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TextGenqlSelection{
    /** The content text for the Text instance. */
    text?: boolean | number
    /** Optional color of the text instance. When null, please use client specified color. */
    color?: boolean | number
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font?: boolean | number
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UnauthenticatedGenqlSelection{
    /** The ID of this node */
    id?: boolean | number
    /** Promotion content; Requires a promo code to serve the correct content */
    promotions?: (PromotionsGenqlSelection & { __args?: {promoCode?: (Scalars['String'] | null)} })
    /** Share Pie Landing page content */
    sharePieLandingPage?: (SharePieLandingPageScreenGenqlSelection & { __args?: {shareToken?: (Scalars['String'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PromotionSignUpPageGenqlSelection{
    /** Header for the sign up page */
    header?: boolean | number
    /** Disclosures for the sign up page */
    disclosures?: AppDisclosureLinkGenqlSelection
    /** Document bundle for the sign up page */
    termsAndConditions?: RequiredDocumentsBundleGenqlSelection
    /** Label for the primary action for the sign up page */
    primaryCtaLabel?: boolean | number
    /** Copy that goes under the illustration on the sign up page */
    marketingContent?: RichTextContentGenqlSelection
    /** Promotion page illustration */
    illustration?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ValuePropCardGenqlSelection{
    /** Title for the card */
    title?: boolean | number
    /** Illustration for the card */
    illustration?: AppImageGenqlSelection
    /** Primary value prop section for the card */
    primaryValue?: PrimaryValueGenqlSelection
    /** A list of values realated to the value prop */
    details?: ValueRowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PrimaryValueGenqlSelection{
    /** Primary value prop for the card */
    value?: boolean | number
    /** The nullable primary value color for the card - liquid semantic color naming used */
    valueColor?: boolean | number
    /** Description for primary value prop for the card */
    description?: boolean | number
    /** The nullable primary value description color for the card - liquid semantic color naming used */
    descriptionColor?: boolean | number
    /** The accessory tooltip for the primary value prop */
    tooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ValueRowGenqlSelection{
    /** The label for the row */
    label?: boolean | number
    /** The nullable label color for the row - liquid semantic color naming used */
    labelColor?: boolean | number
    /** The accessory tooltip for the row */
    tooltip?: AppTooltipGenqlSelection
    /** The value for the row */
    value?: boolean | number
    /** The nullable value color for the row - liquid semantic color naming used */
    valueColor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AgreementBundleGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The unique signature for this bundle of legal agreements. */
    signature?: boolean | number
    /**
     * A description of this agreement bundle that suitable for displaying to the
     * user. Value is null when there is no description.
     */
    description?: boolean | number
    /** The list of individual documents in this bundle. */
    documents?: AgreementDocumentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a legal agreement document. */
export interface AgreementDocumentGenqlSelection{
    /** The title of the agreement document. */
    title?: boolean | number
    /** The URL of the agreement document. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about legal agreement status for a specific user. */
export interface AgreementStatusGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** True when re-agreement is necessary from the user to maintain open accounts. */
    isNewAgreementRequired?: boolean | number
    /** True when the user has missed the deadline date for necessary re-agreement. */
    isPastDeadline?: boolean | number
    /** The deadline date by which agreement is required. */
    deadlineDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An announcement to display to the user. */
export interface AnnouncementGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A short title for the announcement. */
    title?: boolean | number
    /** A description of the announcement, if present. */
    description?: boolean | number
    /** Text that describes the time of the announcement, if applicable. */
    timeDescription?: boolean | number
    /**
     * @deprecated Use `appLink` instead.
     * An optional link related to the announcement.
     */
    link?: AnnouncementLinkGenqlSelection
    /** An optional link related to the announcement. */
    appLink?: AppLinkGenqlSelection
    /**
     * @deprecated Use `announcementIcon` instead.In MA, we need to update the announcement config to support returning an AppImage so we can safely deprecate this field in favor of AppImage.
     * The icon that should be displayed for the announcement.
     */
    icon?: boolean | number
    /** The icon that should be displayed for the announcement. */
    announcementIcon?: AppImageGenqlSelection
    /** The tag that should be displayed for the announcement. */
    tag?: boolean | number
    /** The appearance that should be used for the announcement. */
    appearance?: boolean | number
    /**
     * @deprecated Use `displayPreference` instead.
     * When true, and applicable, a modal presentation should be used.
     */
    displayAsModal?: boolean | number
    /** The type of announcement to display (modal, banner, etc.). */
    displayPreference?: boolean | number
    /**
     * Passes a call to action to the client. This action should be taken
     * when the user clicks on the announcement's button.
     */
    action?: AppActionGenqlSelection
    /** The analytics event for when announcement is displayed. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnnouncementExternalLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnnouncementInternalLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    /** The path part of the link URL. */
    path?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A link related to an announcement. */
export interface AnnouncementLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    on_AnnouncementExternalLink?: AnnouncementExternalLinkGenqlSelection
    on_AnnouncementInternalLink?: AnnouncementInternalLinkGenqlSelection
    on_AnnouncementSupportLink?: AnnouncementSupportLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnnouncementSupportLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    /** The support article ID part of the link URL. */
    articleId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnnouncementsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The user has at least one announcement in the list. */
    hasAny?: boolean | number
    /** There are new announcements for the user in the list. */
    hasNew?: boolean | number
    /** A list of announcements for the user, in priority order. */
    list?: (AnnouncementConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), after?: (Scalars['String'] | null)} })
    /** An announcement to display about Transfers, if present. */
    forTransfers?: AnnouncementGenqlSelection
    /** An announcement to display about Move Money, if present. */
    forMoveMoney?: AnnouncementGenqlSelection
    /** An announcement to display about Invest, if present. */
    forInvest?: AnnouncementGenqlSelection
    /** An announcement to display about Borrow, if present. */
    forBorrow?: AnnouncementGenqlSelection
    /** An announcement to display about Spend, if present. */
    forSpend?: AnnouncementGenqlSelection
    /** An announcement to display about Referrals, if present. */
    forReferrals?: AnnouncementGenqlSelection
    /** An announcement to display about Plus, if present. */
    forPlus?: AnnouncementGenqlSelection
    /** An announcement to display about Documents, if present. */
    forDocuments?: AnnouncementGenqlSelection
    /** An announcement to display about Overview (Nudge), if present. */
    forHome?: AnnouncementGenqlSelection
    /** An announcement to display about Overview (Modal), if present. */
    forHomeModal?: AnnouncementGenqlSelection
    /** An announcement to display about Personal Loans, if present. */
    forPersonalLoans?: AnnouncementGenqlSelection
    /** An announcement to display about Save, if present. */
    forSave?: AnnouncementGenqlSelection
    /** An announcement to display about Invest Marketing, if present. */
    forInvestMarketing?: AnnouncementGenqlSelection
    /** An announcement to display about Save Marketing, if present. */
    forSaveMarketing?: AnnouncementGenqlSelection
    /** An announcement to display about Borrow Marketing, if present. */
    forBorrowMarketing?: AnnouncementGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnnouncementConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: AnnouncementEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnnouncementEdgeGenqlSelection{
    cursor?: boolean | number
    node?: AnnouncementGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowBillConnectionGenqlSelection{
    pageInfo?: PageInfoGenqlSelection
    edges?: BorrowBillEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BorrowBillEdgeGenqlSelection{
    cursor?: boolean | number
    node?: BorrowBillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a Borrow billing period that has ended. */
export interface BorrowBillGenqlSelection{
    /** The start time of the billing period as an ISO 8601 timestamp. */
    startDate?: boolean | number
    /** The end time of the billing period as an ISO 8601 timestamp. */
    endDate?: boolean | number
    /** The bill due time of the billing period as an ISO 8601 timestamp. */
    dueDate?: boolean | number
    /** True when the bill is currently due. */
    isDue?: boolean | number
    /** A description of the interest rate or range of rates for the period. */
    rateDescription?: boolean | number
    /** The total amount of interest accrued during the billing period. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a Borrow billing period that has not yet ended. */
export interface BorrowUpcomingBillGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The start time of the billing period as an ISO 8601 timestamp. */
    startDate?: boolean | number
    /** The end time of the billing period as an ISO 8601 timestamp. */
    endDate?: boolean | number
    /** The bill due time of the billing period as an ISO 8601 timestamp. */
    dueDate?: boolean | number
    /** The total amount of interest accrued so far during the billing period. */
    totalInterestToDate?: boolean | number
    /**
     * The projected total interest accrued at the end time of the billing period if
     * the margin extended amount and the interest rate does not change. The value
     * may be null when it is temporarily unavailable.
     */
    projectedTotalInterest?: boolean | number
    /** If applicable, a special message regarding the current billing period. */
    specialMessage?: boolean | number
    /**
     * @deprecated Use `plusPromotionForBilling` instead.
     * An optional Plus promotional message.
     */
    plusPromotion?: PlusPromotionalMessageGenqlSelection
    /** An optional Plus promotional message. */
    plusPromotionForBilling?: PlusPromotionalMessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountFundingTotalsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A summary of funding activity by year, in chronological order. */
    totalsByYear?: FundingTotalForYearGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FundingTotalForYearGenqlSelection{
    /** The calendar year. */
    year?: boolean | number
    /** The total dollar amount of deposits during the calendar year. */
    totalDeposits?: boolean | number
    /** The total dollar amount of withdrawals during the calendar year. */
    totalWithdrawals?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a trading pause. */
export interface AccountTradingPauseGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The pause reason title. */
    title?: boolean | number
    /** An optional description of the pause reason. */
    description?: boolean | number
    /**
     * @deprecated Use `appLink` instead.
     * An optional link related to the pause reason.
     */
    link?: AccountTradingPauseLinkGenqlSelection
    /** An optional link related to the pause reason. */
    appLink?: AppLinkGenqlSelection
    /** An optional message further detailing reasons for the pause. */
    pauseMessage?: AccountTradingPauseMessageGenqlSelection
    /** An optional second link to a more comprehensive FAQ article. */
    faqLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A descriptive message with a link for account pause. */
export interface AccountTradingPauseMessageGenqlSelection{
    /** The description for the trading pause message. */
    description?: boolean | number
    /** The link for the trading pause message. */
    appLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A link related to a pause reason. */
export interface AccountTradingPauseLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath?: boolean | number
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ChartableSliceDataGenqlSelection{
    /** The ID of this node */
    id?: boolean | number
    /** The internal key of this node */
    key?: boolean | number
    /** The name of the series */
    name?: boolean | number
    /** The id of the series for charting purposes. For example, if you need to tie two series together by ID, you can use this field. If this value is null, it does not have additional data series that need to refer to it. */
    seriesId?: boolean | number
    /** The id of the series that this series pertains too for charting purposes. Only used for `additionalData` series. If this value is null, this series does not refer to any "parent" series. */
    onSeriesId?: boolean | number
    /** Chartable data for the series */
    data?: ChartableSliceDatumGenqlSelection
    /** The type of data. More specific than `seriesType`. If this is null, there should be no special handling of this type of data besides the default and `chartSeries` handling. */
    dataType?: boolean | number
    /** The type of series which determines how the data should render. If the value is null, it should default to a line chart. */
    seriesType?: boolean | number
    /** Additional series of data to accompany this series. For example, a time series of dividends that are tied to a series of value history. */
    additionalData?: ChartableSliceDataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ChartableSliceDatumGenqlSelection{
    /** The date of this datum */
    date?: boolean | number
    /** The volume of this datum */
    volume?: boolean | number
    /** The open price of this datum */
    open?: boolean | number
    /** The high price of this datum */
    high?: boolean | number
    /** The low price of this datum */
    low?: boolean | number
    /** The close price of this datum */
    close?: boolean | number
    /** The previous close price of this datum */
    previousClose?: boolean | number
    /** The sum of dividends for a single chart datum */
    sumDividends?: boolean | number
    /** The dividend distributed on this datum */
    dividends?: HistoricalDividendGenqlSelection
    /** The split that occurred on this datum */
    splits?: HistoricalSplitGenqlSelection
    /** The sum of trades (cash flow) for a single chart datum */
    sumTrades?: boolean | number
    /** The trades that occurred on this datum */
    trades?: TradeCashFlowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a custodial account's beneficiary. */
export interface CustodialAccountBeneficiaryGenqlSelection{
    key?: boolean | number
    /** The ID of the Node */
    id?: boolean | number
    /** The first (given) name of the beneficiary. */
    firstName?: boolean | number
    /** The middle name of the beneficiary. */
    middleInitial?: boolean | number
    /** The last (family) name of the beneficiary. */
    lastName?: boolean | number
    /** The suffix of the beneficiary's name. */
    suffix?: boolean | number
    /** The beneficiary's date of birth, in the format of `YYYY-MM-DD`. */
    dateOfBirth?: boolean | number
    /** The custodial account beneficiary's country of citizenship. */
    countryOfCitizenship?: boolean | number
    /** The legal home address of the beneficiary. */
    legalResidence?: MailingAddressGenqlSelection
    /** Nicely formatted string to display the custodial account beneficiary's legal residence. */
    formattedLegalResidence?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a historical dividend for a security. */
export interface HistoricalDividendGenqlSelection{
    /** The declared date for the dividend. Value is null when unavailable. */
    declaredDate?: boolean | number
    /** The ex date for the dividend. */
    exDate?: boolean | number
    /** The record date for the dividend. Value is null when unavailable. */
    recordDate?: boolean | number
    /** The payment date for the dividend. Value is null when unavailable. */
    paymentDate?: boolean | number
    /** The type of dividend. */
    type?: boolean | number
    /** The dividend amount. */
    amount?: boolean | number
    /** The frequency of the dividend. Value is null when unavailable. */
    frequency?: boolean | number
    /** The date and time the dividend was effective, the same day as the exDate */
    effectiveDate?: boolean | number
    /** The symbol of the stock giving the dividend */
    symbol?: boolean | number
    /** The currency of the dividend */
    currency?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns null.
     */
    indicatedRate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface HistoricalQuoteGenqlSelection{
    /** The date for the historical quote. */
    date?: boolean | number
    /** The daily opening price. */
    openPrice?: boolean | number
    /** The daily closing price. */
    closePrice?: boolean | number
    /** The close price for the previous day. */
    previousQuoteClosePrice?: boolean | number
    /** The daily high price. */
    highPrice?: boolean | number
    /** The daily low price. */
    lowPrice?: boolean | number
    /** The change between the daily open price and close price. */
    dailyChange?: boolean | number
    /** The percent change between the daily open price and close price. */
    dailyPercentChange?: boolean | number
    /** The close price of the day before the start of the period. */
    previousClosePrice?: boolean | number
    /**
     * The change between the price at the close before the beginning
     * of the period and the current price.
     */
    changeInPriceFromPeriodOpen?: boolean | number
    /**
     * The percent change between the close before the beginning of the
     * period and the current price.
     */
    percentChangeFromBeginningOfPeriod?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    tradeVolume?: boolean | number
    /** The number of shares traded during the day. */
    shareVolume?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    vwap?: boolean | number
    /** A list of dividends with ex dates on this day. */
    dividends?: HistoricalDividendGenqlSelection
    /**
     * Information about a stock split with an ex date on this day, if one occurred.
     * Value is null when no stock split occurred on this day.
     */
    split?: HistoricalSplitGenqlSelection
    /**
     * @deprecated Field is renamed to `closePrice`.
     * The daily closing price of the security.
     */
    lastPrice?: boolean | number
    /**
     * @deprecated Field is renamed to `tradeVolume`.
     * The number of trades during the day.
     */
    volume?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    changeFromPreviousClosePrice?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    percentChangeFromPreviousClosePrice?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns `USD`.
     */
    currency?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a historical stock split for a security. */
export interface HistoricalSplitGenqlSelection{
    /** The declared date for the split. Value is null when unavailable. */
    declaredDate?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns null.
     */
    recordDate?: boolean | number
    /**
     * @deprecated Data is no longer supported.
     * Deprecated! Always returns zero.
     */
    paymentDate?: boolean | number
    /** The ex date for the split. */
    exDate?: boolean | number
    /** The split factor, expressed as a single string. For example, `2:1`. */
    factor?: boolean | number
    /** The "to-factor" for the split. For example, `2` for a `2:1` split. */
    toFactor?: boolean | number
    /** The "for-factor" for the split. For example, `1` for a `2:1` split. */
    forFactor?: boolean | number
    /** The split ratio, equal to the for-factor divided by the to-factor. */
    ratio?: boolean | number
    /** The symbol of the split stock */
    symbol?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IraContributionLimitsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** The IRA contribution limit for the current year. */
    currentYearLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IraContributionTotalsGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A summary of IRA contributions by year, in chronological order. */
    totalsByYear?: IraContributionTotalForYearGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IraContributionTotalForYearGenqlSelection{
    /** The IRA contribution year. Note that this is different than the calendar year. */
    year?: boolean | number
    /** The total dollar amount of contributions for this contribution year. */
    totalContribution?: boolean | number
    /** The maximum contribution amount for this contribution year. */
    maxContribution?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IraWithholdingGenqlSelection{
    /** Default Federal Withholding */
    defaultFederalWithholding?: boolean | number
    /** Default State Withholding */
    defaultStateWithholding?: boolean | number
    /** Is the State withholding the same as federal */
    isStateEditable?: boolean | number
    /** State withholding information */
    stateWithholdingInformationText?: boolean | number
    /** Tax withholding information Link */
    iraWithholdingLink?: AppLinkGenqlSelection
    /** State withholding information Link */
    stateWithholdingInformationLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Options for setting the portfolio on an account. */
export interface SetPortfolioOptionsGenqlSelection{
    /** True if starting by browsing user pies should be offered. */
    shouldOfferUserPies?: boolean | number
    /**
     * @deprecated starterPieSlice is no longer in use.
     * If applicable, information about a starter pie slice to offer.
     */
    starterPieSlice?: StarterPieSliceOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a starter pie slice. */
export interface StarterPieSliceOptionGenqlSelection{
    /** A title for the option. */
    title?: boolean | number
    /** A description for the option, if available. */
    description?: boolean | number
    /** The pie to use as a starter slice. */
    pie?: PieGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TradeCashFlowGenqlSelection{
    /** The amount of cash traded */
    amount?: boolean | number
    /** The date the trade occurred */
    effectiveDate?: boolean | number
    /** The date the trade was created */
    createdDateTime?: boolean | number
    /** The trade window job ID of the trade */
    tradeWindowJobId?: boolean | number
    /** The symbol of the trade */
    symbol?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BreakdownDetailGenqlSelection{
    /** Breakddown label */
    label?: boolean | number
    /** Breakdown value - formatted string */
    labelValue?: boolean | number
    /** Breakdown value - raw numeric value */
    numericValue?: boolean | number
    /** Breakdown tooltip */
    tooltip?: AppTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Breakdown of an order for manual orders */
export interface ManualOrderBreakdownGenqlSelection{
    /** Slice name label and total value - as a string and number */
    slice?: BreakdownDetailGenqlSelection
    /**
     * Cash order buying power label and value - as a string and number
     * This value is clamped to be 0 or greater.
     */
    cashBuyingPower?: BreakdownDetailGenqlSelection
    /**
     * Unclamped cash buying power label and value - as a string and number
     * This value respects any negative cash buying power from backend.
     * This value should **not** be used for display purposes!
     * For example, buy buttons should be disabled if this value is negative.
     */
    unclampedCashBuyingPower?: BreakdownDetailGenqlSelection
    /** Margin order buying power label and value - as a string and number */
    marginBuyingPower?: BreakdownDetailGenqlSelection
    /** Total order buying power label and value - as a string and number */
    totalBuyingPower?: BreakdownDetailGenqlSelection
    /** Trade preference label and time of trade window when order will be executed */
    tradeWindow?: BreakdownDetailGenqlSelection
    /** manual order disclosures - as rich text. order direction will determine what is resolved */
    disclosures?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSliceGenqlSelection{
    /** The account that owns this portfolio slice. */
    account?: AccountGenqlSelection
    /** Portfolio slice landing page content */
    investProductLandingPage?: InvestProductLandingPageGenqlSelection
    /** Information about manual orders for this slice - buying power, slice value and trade window. Value is null when manual order information is unavailable. */
    manualOrderBreakdown?: (ManualOrderBreakdownGenqlSelection & { __args?: {orderDirection?: (ManualPortfolioSliceOrderTypeEnum | null)} })
    /** The buying power for this portfolio slice - cash, margin & total. Value is null when the balance breakdown is temporarily unavailable. */
    buyingPower?: PortfolioSliceBuyingPowerGenqlSelection
    /** Children slices of this slice. */
    children?: ChildPortfolioSliceGenqlSelection
    /** Former children slices of this slice. Upon next trading window, the holdings allocated to each former slice will be reallocated. */
    deallocatedChildren?: DeallocatedChildGenqlSelection
    /** The ID of this node. */
    id?: boolean | number
    /** Information about the investments allocated to this portfolio slice. Value is null when allocated position information is unavailable. */
    investments?: PortfolioSliceInvestmentsGenqlSelection
    /** True if this is the root portfolio slice for an account. */
    isRootSlice?: boolean | number
    /** A historical time-series of portfolio slice cash flows */
    netCashFlows?: (ValueSnapshotGenqlSelection & { __args?: {
    /** the type of cash flows for a portfolio slice */
    filter?: (NetCashFlowFilterEnum | null), 
    /** The historical time period over which to retrieve values, anchored by the present. */
    period?: (ValueHistoryPeriodEnum | null)} })
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    orderStatus?: PortfolioSliceOrderStatusGenqlSelection
    /**
     * @deprecated Functionality has been removed. Will be removed in the future.
     * Information about a pending cash flow for this slice, if there is one. Value is null when there are no pending cash flows.
     */
    pendingCashFlow?: PortfolioSlicePendingCashFlowGenqlSelection
    /** Performance information for this portfolio slice. Value is null when performance information is unavailable. The period must be large enough to accomodate the start and end dates provided, any range ending over a year ago will require a period of MAX. */
    performance?: (PortfolioSlicePerformanceGenqlSelection & { __args: {
    /** The final date included in performance calculations. */
    endDate?: (Scalars['String'] | null), 
    /** The time period over which to calculate performance, anchored by the present. */
    period: PortfolioSlicePerformancePeriodEnum, 
    /** The first date included in performance calculations, an `endDate` is also required. Note: the `period` should be large enough to encompass the start and end dates. */
    startDate?: (Scalars['String'] | null)} })
    /** The current trade order status for this portfolio slice. Value is null when the status is temporarily unavilable. */
    rebalanceStatus?: PortfolioSliceRebalanceStatusGenqlSelection
    /** Points to the composition of the slice (either a `Security` or a `Pie`). */
    to?: SliceableGenqlSelection
    /** Value information for this portfolio slice. Value is null when price information is unavilable. */
    value?: PortfolioSliceValueGenqlSelection
    /**
     * @deprecated Use `chartData` instead
     * A historical time-series of market value snapshots for this portfolio slice.
     */
    valueHistory?: (ValueSnapshotGenqlSelection & { __args: {
    /** The historical time period over which to retrieve values, anchored by the present. */
    period: ValueHistoryPeriodEnum} })
    /**
     * @deprecated Superceded by `rebalanceStatus`, use that field instead.
     * If true, this slice is currently marked for rebalancing at the next trade window.
     */
    willRebalance?: boolean | number
    on_ChildPortfolioSlice?: ChildPortfolioSliceGenqlSelection
    on_RootPortfolioSlice?: RootPortfolioSliceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A portfolio slice's buying power - cash, margin & total */
export interface PortfolioSliceBuyingPowerGenqlSelection{
    /** Cash buying power label and value - as a string */
    cash?: TabularDataItemGenqlSelection
    /** Margin buying power label and value - as a string */
    margin?: TabularDataItemGenqlSelection
    /** Margin borrowed & rate text */
    marginBorrowingText?: { __args: {borrowAmount?: (Scalars['Float'] | null)} } | boolean | number
    /** Total Cash buying power label and value - as a string */
    total?: TabularDataItemGenqlSelection
    /** The overview of buying power for margin accounts. */
    overview?: MarginBuyingPowerOverviewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginBuyingPowerOverviewGenqlSelection{
    /** The title of the overview page, mobile only */
    title?: boolean | number
    /** The header of the overview page */
    header?: boolean | number
    /** An optional array of paragraphs that can explain margin buying power */
    details?: RichTextContentGenqlSelection
    /** A breakdown of the margin buying power */
    breakdown?: MarginBuyingPowerOverviewBreakdownGenqlSelection
    /** An optional link about margin buying power */
    link?: AppLinkGenqlSelection
    /** An optional paragraph about margin risk */
    marginRisk?: RichTextContentGenqlSelection
    /** An optional margin promotion card - if the user has accepted a margin promotion campaign */
    marginPromotionCard?: AppCardGenqlSelection
    /** The primary CTA for the margin overview page */
    primaryCta?: AppButtonGenqlSelection
    /** The secondary CTA for the margin overview page */
    secondaryCta?: AppLinkGenqlSelection
    /** The disclosure link for the margin overview page */
    disclosures?: AppDisclosureLinkGenqlSelection
    /** The analytics event to be fired on view of the margin overview page */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MarginBuyingPowerOverviewBreakdownGenqlSelection{
    /** The header of the breakdown card */
    header?: boolean | number
    /** The line items of the breakdown that are related to the total */
    items?: BreakdownDetailGenqlSelection
    /** The total of the breakdown */
    total?: BreakdownDetailGenqlSelection
    /** The footer of the breakdown card, displayed below the card */
    footer?: RichTextContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PortfolioSliceValueGenqlSelection{
    /** The total value. Value is null if the total cannot currently be calculated. */
    total?: boolean | number
    /**
     * True if the total value is greater than zero. Value is null when `total` is
     * null.
     */
    hasValue?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountTaxLotGenqlSelection{
    /** The lot's M1 unique identifier. */
    id?: boolean | number
    /** Tax lot symbol */
    symbol?: boolean | number
    /** Tax lot cusip */
    cusip?: boolean | number
    /** Tax lot acquisition date */
    acquisitionDate?: boolean | number
    /** Tax lot quantity */
    quantity?: boolean | number
    /** Tax lot cost basis */
    costBasis?: boolean | number
    /** Tax lot short or long indicator */
    shortLongTermHolding?: boolean | number
    /** Tax lot closed date */
    closeDate?: boolean | number
    /** Tax lot long term realized gain or loss */
    longTermRealizedGainLoss?: boolean | number
    /** Tax lot short term realized gain or loss */
    shortTermRealizedGainLoss?: boolean | number
    /** Tax lot unrealized gain or loss */
    unrealizedGainLoss?: boolean | number
    /** Tax lot wash sale indicator */
    washSaleIndicator?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountTaxLotsConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AccountTaxLotsEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The number of nodes in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountTaxLotsEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: AccountTaxLotGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppDisclosureLinkGenqlSelection{
    /** The link text for the disclosure link */
    linkText?: boolean | number
    /**
     * The font size of the linkText as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font?: boolean | number
    /**
     * The font weight of the linkText as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight?: boolean | number
    /** If true, the linkText should be underlined. */
    underline?: boolean | number
    /** The text for the disclosure link modal/dialogue as an array of paragraphs */
    paragraphs?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppLinkGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath?: boolean | number
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId?: boolean | number
    /** An analytics event for following the link. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. If kind exists on AppLink, clients should render a linkable button, else just render link. */
    kind?: boolean | number
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size?: boolean | number
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font?: boolean | number
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight?: boolean | number
    /** If true, the link should be underlined. */
    underline?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppLinkInterfaceGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The link URL. */
    url?: boolean | number
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath?: boolean | number
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId?: boolean | number
    /** An analytics event for following the link. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind?: boolean | number
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size?: boolean | number
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font?: boolean | number
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight?: boolean | number
    /** If true, the link should be underlined. */
    underline?: boolean | number
    on_AppLink?: AppLinkGenqlSelection
    on_AppNavigationItem?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppNavigationItemGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** The subtitle to display for the link. */
    subtitle?: boolean | number
    /** The icon to display for the link. */
    icon?: AppImageGenqlSelection
    /** The link URL. */
    url?: boolean | number
    /** If this is an internal URL, the path part of the URL. Null otherwise. */
    internalPath?: boolean | number
    /** If this is a support URL, the article ID in the URL. Null otherwise. */
    articleId?: boolean | number
    /** An analytics event for following the link. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The optional button kind, as defined by ButtonKind in LiRe (ie primary, secondary, text, link, etc). Null otherwise. */
    kind?: boolean | number
    /** The optional button size, as defined by ButtonSize in LiRe (ie small, medium, large). Null otherwise. */
    size?: boolean | number
    /**
     * The font size of the text as a string
     * "HXL" | "HL" | "HM" | "HS" | "HXS" | "HXXS" | "PXL" | "PL" | "PM" | "PS" | "PXS" | "LL" | "LM" | "LS"
     */
    font?: boolean | number
    /**
     * The font weight as a string. Using TS types, Lens enforces that only valid font weights are used for each font size,
     * but clients should use the font size's default font weight if no font weight or if it's invalid.
     */
    fontWeight?: boolean | number
    /** If true, the link should be underlined. */
    underline?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A interface for types that express a link to some other application state. */
export interface LinkableGenqlSelection{
    /** The title to display for the link. */
    title?: boolean | number
    /** An analytics event for following the link. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    on_TransferSuggestionLink?: TransferSuggestionLinkGenqlSelection
    on_GenericSetupChecklistStep?: GenericSetupChecklistStepGenqlSelection
    on_BuildPortfolioSetupChecklistStep?: BuildPortfolioSetupChecklistStepGenqlSelection
    on_SpendMoveMoneyOption?: SpendMoveMoneyOptionGenqlSelection
    on_AppLink?: AppLinkGenqlSelection
    on_AppNavigationItem?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ArchivePieInput {clientMutationId?: (Scalars['String'] | null),
/** When true, archive or unarchive a Crypto pie. */
isCrypto?: (Scalars['Boolean'] | null),
/** The ID of the pie to operate upon. */
pieId: Scalars['ID'],
/** When true, unarchive the pie if it is currently archived. Default is false. */
unarchive?: (Scalars['Boolean'] | null)}

export interface ArchivePiePayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** The updated pie. */
    pie?: UserPieGenqlSelection
    didSucceed?: boolean | number
    error?: boolean | number
    /**
     * @deprecated Added only due to limitations of Relay. Query this off `pie` instead.
     * The ID of the updated pie.
     */
    pieId?: boolean | number
    /**
     * @deprecated Use `didSucceed`, `outcome` and `error` instead.
     * Metadata about the result of executing the mutation.
     */
    result?: ArchivePieResultGenqlSelection
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `ArchivePie` mutation. */
export interface ArchivePieResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreatePieShareUrlPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** True if the share URL includes a referrer code. */
    hasReferrerCode?: boolean | number
    /** The referrer code of the account sharing the user pie. */
    referrerCode?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: CreatePieShareUrlResultGenqlSelection
    /** The share token for the user pie. */
    token?: boolean | number
    /** The share URL for the user pie. */
    url?: boolean | number
    /** Buttons that takes web to each social media site for sharing or takes mobile to the share sheet using this information. */
    socialMediaShareButtons?: AppNavigationItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `CreatePieShareUrl` mutation. */
export interface CreatePieShareUrlResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreatePieShareUrlInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the pie. */
pieId: Scalars['ID']}

export interface SetMaxCashThresholdInput {
/** The ID of the account to update. */
accountId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null),
/** The new max cash threshold setting. Set an integer greater than or equal to zero to enable the max cash threshold and set it to that dollar amount. Set the value to null to disable the max cash threshold. */
maxCashThreshold?: (Scalars['Int'] | null)}

export interface SetMaxCashThresholdPayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    clientMutationId?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: SetMaxCashThresholdResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `SetMaxCashThreshold` mutation. */
export interface SetMaxCashThresholdResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcceptPersonalLoanInput {clientMutationId?: (Scalars['String'] | null),
/** The loan ID for the loan to be accepted. */
loanId: Scalars['String'],
/** The signature for the user's acceptance of the loan terms and conditions and agreement. */
loanAcceptanceSignature: Scalars['String']}


/** Payload for the `acceptPersonalLoan` mutation */
export interface AcceptPersonalLoanPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: AcceptPersonalLoanOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `acceptPersonalLoan` mutation */
export interface AcceptPersonalLoanOutcomeGenqlSelection{
    /** The content for the personal loan disbursement page. */
    loanDisbursement?: PersonalLoanDisbursementGenqlSelection
    /** Flag to determine if the user has valid external account to disburse their loan to. */
    hasDisbursementOption?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for `acceptLoanOffer` mutation. */
export interface AcceptPersonalLoanOfferInput {clientMutationId?: (Scalars['String'] | null),offerId?: (Scalars['ID'] | null)}

export interface AcceptPersonalLoanOfferPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: AcceptPersonalLoanOfferOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AcceptPersonalLoanOfferOutcomeGenqlSelection{
    /** The ID of the offer that was accepted. */
    offerId?: boolean | number
    /**
     * @deprecated Clients to poll using status from the application
     * Loan ID for the loan to be accepted if the user continues.
     */
    loanId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ActivatePlusTrialInput {clientMutationId?: (Scalars['String'] | null)}

export interface ActivatePlusTrialPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ActivatePlusTrialOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ActivatePlusTrialOutcomeGenqlSelection{
    /** The updated Plus information. */
    plus?: PlusGenqlSelection
    /** The updated Spend Checking information. */
    spend?: SpendGenqlSelection
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `archiveTransferRule` mutation. */
export interface ArchiveTransferRuleInput {clientMutationId?: (Scalars['String'] | null),
/**
 * The ID of the `TransferRule` to archive. Must be an ID for a type that
 * implements the `TransferRule` interface.
 */
transferRuleId: Scalars['ID']}


/** Payload for the `archiveTransferRule` mutation. */
export interface ArchiveTransferRulePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `authenticate` mutation. */
export interface AuthenticateInput {clientMutationId?: (Scalars['String'] | null),
/** A username. */
username: Scalars['String'],
/** A password. */
password: Scalars['String'],
/** An authentication code sent to the user's verified email. Required when a user is flagged as suspicious via Auth0. */
emailCode?: (Scalars['String'] | null),
/** A two factor authentication code. Required when two factor authentication is enabled. */
code?: (Scalars['String'] | null),
/** The signature of an agreement bundle. Optional unless `AGREEMENT_REQUIRED` is returned. */
signature?: (Scalars['String'] | null),
/**
 * A flag that signals to BE to request an access token with enhanced security privileges. Required after `AMFA_REQUIRED` is returned.
 * Clients should pass false for default logins and true for enhanced security logins.
 */
mfaAudience?: (Scalars['Boolean'] | null)}


/** Payload for the `authenticate` mutation. */
export interface AuthenticatePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: AuthenticateOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: AuthenticateResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    accessToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    refreshToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    expiresIn?: boolean | number
    /** @deprecated Use `outcome` instead. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `authenticate` mutation. */
export interface AuthenticateOutcomeGenqlSelection{
    /** The access token. */
    accessToken?: boolean | number
    /** The refresh token. */
    refreshToken?: boolean | number
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthenticateResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `cancelTransferInstance` mutation. */
export interface CancelTransferInstanceInput {clientMutationId?: (Scalars['String'] | null),
/** The `TransferInstance` to cancel. Must be an a cancelable state. */
transferInstanceId: Scalars['ID']}


/** Payload for the `cancelTransferInstance` mutation. */
export interface CancelTransferInstancePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CancelTransferInstanceOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `cancelTransferInstance` mutation. */
export interface CancelTransferInstanceOutcomeGenqlSelection{
    /** The transfer instance that was canceled. */
    instance?: TransferInstanceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `changePassword` mutation. */
export interface ChangePasswordInput {clientMutationId?: (Scalars['String'] | null),
/** The old password. */
oldPassword: Scalars['String'],
/** The new password. */
newPassword: Scalars['String']}


/** Payload for the `changePassword` mutation. */
export interface ChangePasswordPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: ChangePasswordResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ChangePasswordResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `completePhoneVerification` mutation. */
export interface CompletePhoneVerificationInput {clientMutationId?: (Scalars['String'] | null),
/** The phone number used to initiate the verification process. */
phone: Scalars['PhoneNumber'],
/** The verification code that was delivered to the phone number. */
code: Scalars['String']}


/** Payload for the `completePhoneVerification` mutation. */
export interface CompletePhoneVerificationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CompletePhoneVerificationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `completePhoneVerification` mutation. */
export interface CompletePhoneVerificationOutcomeGenqlSelection{
    /** The phone number that was successfully verified. */
    phone?: boolean | number
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreateProfileInput {clientMutationId?: (Scalars['String'] | null),phoneNumber?: (Scalars['PhoneNumber'] | null),name: CreateProfileName,countryOfCitizenship: Scalars['String'],address: MailingAddressInput,dateOfBirth: Scalars['String'],productSelection?: (ProductListIdentifier | null),ssn: Scalars['SocialSecurityNumber'],employmentInfo?: (EmploymentInput | null),disclosures?: (CreateProfileDisclosure | null),suitability?: (SuitabilityCreateProfileInput | null),trustedContact?: (TrustedContactInput | null)}

export interface CreateProfileName {firstName: Scalars['FirstName'],middleInitial?: (Scalars['MiddleInitial'] | null),lastName: Scalars['LastName'],suffix?: (NameSuffixEnum | null)}

export interface CreateProfileDisclosure {exchangeOrFinraAffiliationDisclosure?: (ExchangeOrFinraAffiliationDisclosureInput | null),controlPersonDisclosure?: (ControlPersonDisclosureInput | null),politicalExposureDisclosure: PoliticalExposureDisclosureInput,backupWithholding?: (BackupWithholdingInput | null)}

export interface SuitabilityCreateProfileInput {annualIncome?: (AnnualIncomeEnum | null),annualIncomeAmount?: (Scalars['Float'] | null),totalNetWorth?: (TotalNetWorthEnum | null),totalNetWorthAmount?: (Scalars['Float'] | null),liquidNetWorth?: (LiquidNetWorthEnum | null),liquidNetWorthAmount?: (Scalars['Float'] | null),investmentExperience?: (InvestmentExperienceEnum | null),riskTolerance?: (RiskToleranceEnum | null),timeHorizon?: (TimeHorizonEnum | null),liquidityNeeds?: (LiquidityNeedsEnum | null)}

export interface CreateProfilePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateProfileOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CreateProfileOutcomeGenqlSelection{
    didSucceed?: boolean | number
    userProfileId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `createSpendAccountDocumentLink` mutation. */
export interface CreateSpendAccountDocumentLinkInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the `SpendAccountDocument`. */
spendAccountDocumentId: Scalars['ID']}


/** Payload for the `createSpendAccountDocumentLink` mutation. */
export interface CreateSpendAccountDocumentLinkPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateSpendAccountDocumentLinkOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `createSpendAccountDocumentLink` mutation. */
export interface CreateSpendAccountDocumentLinkOutcomeGenqlSelection{
    /** The temporary URL to the document. It will expire after time. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `initiateSpendIdentity` mutation. */
export interface InitiateSpendIdentityInput {clientMutationId?: (Scalars['String'] | null),
/**
 * Specify `true` if the user declares that they are subject to backup
 * withholding.
 */
isSubjectToBackupWithholding: Scalars['Boolean'],
/**
 * The `signature` from the `AgreementBundle` returned by
 * `SpendAgreements.latestAgreements`. Specifying the correct signature signifies
 * that the user was properly presented with the agreements and has agreed to
 * each.
 */
agreementSignature: Scalars['String']}


/** Payload for the `initiateSpendIdentity` mutation. */
export interface InitiateSpendIdentityPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** @deprecated Sunset Checking. */
    didSucceed?: boolean | number
    /** @deprecated Sunset Checking. */
    outcome?: InitiateSpendIdentityOutcomeGenqlSelection
    /** @deprecated Sunset Checking. */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `initiateSpendIdentity` mutation. */
export interface InitiateSpendIdentityOutcomeGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * The newly-initiated identity.
     */
    identity?: SpendIdentityGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * If the identity is accepted, an identity verification session is started and a
     * set of challenge question is returned. Respond to the challenge with the
     * `verifySpendIdentity` mutation.
     */
    challenge?: SpendIdentityVerificationChallengeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An identity verfication challenge associated with the `initiateSpendIdentity`
 * mutation.
 */
export interface SpendIdentityVerificationChallengeGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * A unique token identifying the identity verification session associated with
     * these questions.
     */
    verificatonToken?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * A set of questions for the user to answer to verify their identity.
     */
    verificationQuestions?: SpendIdentityVerificationQuestionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An single identity verification question associated with the
 * `initiateSpendIdentity` mutation.
 */
export interface SpendIdentityVerificationQuestionGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * A machine-readable code used to identify this question when answering.
     */
    questionCode?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * A human-readable question prompt to display to the user.
     */
    prompt?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * A set of multiple-choice options to both display to the user and return as an
     * answer.
     */
    choices?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `updateSpendIdentity` mutation. */
export interface UpdateSpendIdentityInput {clientMutationId?: (Scalars['String'] | null),
/** Updated value for the user if they are subject to backup withholding. */
isSubjectToBackupWithholding: Scalars['Boolean'],
/**
 * The `signature` from the `AgreementBundle` returned by
 * `SpendAgreements.latestAgreements`. Specifying the correct signature signifies
 * that the user was properly presented with the agreements and has agreed to
 * each.
 */
agreementSignature: Scalars['String']}


/** Payload for the `updateSpendIdentity` mutation. */
export interface UpdateSpendIdentityPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** @deprecated Sunset Checking. */
    didSucceed?: boolean | number
    /** @deprecated Sunset Checking. */
    outcome?: UpdateSpendIdentityOutcomeGenqlSelection
    /** @deprecated Sunset Checking. */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `updateSpendIdentity` mutation. */
export interface UpdateSpendIdentityOutcomeGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * The user's Spend identity.
     */
    identity?: SpendIdentityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `verifySpendIdentity` mutation. */
export interface VerifySpendIdentityInput {clientMutationId?: (Scalars['String'] | null),
/**
 * The `SpendIdentityVerificationChallenge.verificationToken` returned by the
 * `initiateSpendIdentity` mutation.
 */
verificatonToken: Scalars['String'],
/**
 * Answers to the `SpendIdentityVerificationChallenge.verificationQuestions`
 * returned by the `initiateSpendIdentity` mutation.
 */
verificationAnswers: VerifySpendIdentityAnswerInput[]}


/**
 * A single identity verification answer input associated with the
 * `verifySpendIdentity` mutation.
 */
export interface VerifySpendIdentityAnswerInput {
/**
 * The `SpendIdentityVerificationQuestion.questionCode` associated with this
 * answer.
 */
questionCode: Scalars['String'],
/**
 * The answer from `SpendIdentityVerificationQuestion.choices` that was selected
 * by the user.
 */
answer: Scalars['String']}


/** Payload for the `verifySpendIdentity` mutation. */
export interface VerifySpendIdentityPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** @deprecated Sunset Checking. */
    didSucceed?: boolean | number
    /** @deprecated Sunset Checking. */
    outcome?: VerifySpendIdentityOutcomeGenqlSelection
    /** @deprecated Sunset Checking. */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `verifySpendIdentity` mutation. */
export interface VerifySpendIdentityOutcomeGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * The updated identity.
     */
    identity?: SpendIdentityGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * Spend Checking due diligence questions for users to complete before finishing enrollment.
     */
    spendDueDiligenceQuestions?: SpendDueDiligenceQuestionsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `completeSpendEnrollment` mutation. */
export interface CompleteSpendEnrollmentInput {clientMutationId?: (Scalars['String'] | null),
/**
 * Optionally specify a `MigratableInvestExternalAccount` that should be migrated
 * to become the Spend Checking external account, if possible.
 */
migratableInvestExternalAccountId?: (Scalars['ID'] | null),
/** Answers to the customer due diligence questions which will need to be completed for Spend Checking enrollment. */
dueDiligenceAnswers?: (DueDiligenceAnswer[] | null),
/** Optional account name property for the user's Spend account. */
accountName?: (Scalars['String'] | null)}


/** Payload for the `completeSpendEnrollment` mutation. */
export interface CompleteSpendEnrollmentPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** @deprecated Sunset Checking. */
    didSucceed?: boolean | number
    /** @deprecated Sunset Checking. */
    outcome?: CompleteSpendEnrollmentOutcomeGenqlSelection
    /** @deprecated Sunset Checking. */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `completeSpendEnrollment` mutation. */
export interface CompleteSpendEnrollmentOutcomeGenqlSelection{
    /**
     * @deprecated Sunset Checking.
     * The newly-created Spend Checking account.
     */
    spendAccount?: SpendAccountGenqlSelection
    /**
     * @deprecated Sunset Checking.
     * True if there is a linked external account for the user.
     */
    hasConnectedExternalAccount?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * True only when a migration of an Invest external account was requested, but it
     * failed. False when a migrated was requested and succeeded, or when no
     * migration was requested at all.
     */
    didRequestedExternalAccountMigrationFail?: boolean | number
    /**
     * @deprecated Sunset Checking.
     * An analytics event to be recorded upon success.
     */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `createSpendExternalAccountViaLink` mutation. */
export interface CreateSpendExternalAccountViaLinkInput {clientMutationId?: (Scalars['String'] | null),
/**
 * An `ExternalAccount` ID. Either `externalAccountId` or `plaidAccountId` must
 * be specified.
 */
externalAccountId?: (Scalars['ID'] | null),
/**
 * A Plaid account ID referring to an `ExternalAccount`. The external account
 * must already be linked. Either `externalAccountId` or `plaidAccountId` must be
 * specified.
 */
plaidAccountId?: (Scalars['String'] | null)}


/** Payload for the `createSpendExternalAccountViaLink` mutation. */
export interface CreateSpendExternalAccountViaLinkPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: CreateSpendExternalAccountViaLinkOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `createSpendExternalAccountViaLink` mutation. */
export interface CreateSpendExternalAccountViaLinkOutcomeGenqlSelection{
    /** The newly-created external bank account. */
    spendExternalAccount?: SpendExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `initiateSpendExternalAccount` mutation. */
export interface InitiateSpendExternalAccountInput {clientMutationId?: (Scalars['String'] | null),
/** The routing number of the external bank account. */
routingNumber: Scalars['String'],
/** The account number of the external bank account. */
accountNumber: Scalars['String'],
/** The type of the external bank account. */
accountType: SpendExternalAccountTypeInputEnum,
/** An optional user-provided nickname for the external bank account. */
accountNickname?: (Scalars['String'] | null)}


/** Payload for the `initiateSpendExternalAccount` mutation. */
export interface InitiateSpendExternalAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: InitiateSpendExternalAccountOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `initiateSpendExternalAccount` mutation. */
export interface InitiateSpendExternalAccountOutcomeGenqlSelection{
    /** The newly-initiated external bank account. */
    spendExternalAccount?: SpendExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `verifySpendExternalAccount` mutation. */
export interface VerifySpendExternalAccountInput {clientMutationId?: (Scalars['String'] | null),
/** The `id` of the `SpendExternalAccount` to verify. */
spendExternalAccountId: Scalars['ID'],
/** The first micro-deposit amount (order doesn't matter). */
amount1: Scalars['Float'],
/** The second micro-deposit amount (order doesn't matter). */
amount2: Scalars['Float']}


/** Payload for the `verifySpendExternalAccount` mutation. */
export interface VerifySpendExternalAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: VerifySpendExternalAccountOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `verifySpendExternalAccount` mutation. */
export interface VerifySpendExternalAccountOutcomeGenqlSelection{
    /** The updated external bank account. */
    spendExternalAccount?: SpendExternalAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `archiveSpendExternalAccount` mutation. */
export interface ArchiveSpendExternalAccountInput {clientMutationId?: (Scalars['String'] | null),
/** The `id` of the `SpendExternalAccount` to archive. */
spendExternalAccountId: Scalars['ID']}


/** Payload for the `archiveSpendExternalAccount` mutation. */
export interface ArchiveSpendExternalAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ArchiveSpendExternalAccountOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `archiveSpendExternalAccount` mutation. */
export interface ArchiveSpendExternalAccountOutcomeGenqlSelection{
    /** Outcome content for the 'archiveSpendExternalAccount' mutation. */
    outcomeContent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `sendCheck` mutation. */
export interface SendCheckInput {clientMutationId?: (Scalars['String'] | null),
/**
 * The Spend Checking Account to transfer money from. Must be an ID for a type that
 * implements the `TransferParticipant` interface.
 */
spendAccountId: Scalars['ID'],
/** Amount for which the check will be cut for. */
amount: Scalars['Float'],
/** Information pertaining to the check recipient. */
recipient: SendCheckRecipientInput,
/** An optional memo to be included on the check. */
memo?: (Scalars['String'] | null),
/** Optional, desired transfer schedule. */
schedule?: (RecurrenceScheduleInput | null),
/** Optional, transfer schedule rule ID if it exists. */
scheduledTransferRuleId?: (Scalars['String'] | null)}

export interface SendCheckRecipientInput {
/** Indicates whether the recipient is an individual or a business. */
recipientType: SendCheckRecipientTypeEnum,
/** If the recipient is an individual, this is the recipient's first name. */
firstName?: (Scalars['String'] | null),
/** If the recipient is an individual, this is the recipient's last name. */
lastName?: (Scalars['String'] | null),
/** If the recipient is a business, this is the recipient's business name. */
businessName?: (Scalars['String'] | null),
/** Line one of the recipient's mailing address. */
lineOne: Scalars['String'],
/** Line two of the recipient's mailing address. */
lineTwo?: (Scalars['String'] | null),
/** The recipient's city. */
city: Scalars['String'],
/** The recipient's state or province. */
stateOrProvince: MailingAddressSubdivisionEnum,
/** The recipient's postal code. */
postalCode: Scalars['PostalCode']}


/** Payload for the `sendCheck` mutation. */
export interface SendCheckPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SendCheckOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendCheckOutcomeGenqlSelection{
    /** The `TransferInstance` of the transfer created to send the check. */
    transfer?: TransferInstanceGenqlSelection
    /** The `ScheduledTransferRule` of the transfer schedule created for recurring checks. */
    transferScheduleRule?: ScheduledTransferRuleGenqlSelection
    /** Copy for the Payment Confirmed screen in the Send Check flow. */
    paymentConfirmedContent?: PaymentConfirmedContentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `disableTwoFactorAuth` mutation. */
export interface DisableTwoFactorAuthInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `disableTwoFactorAuth` mutation. */
export interface DisableTwoFactorAuthPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: DisableTwoFactorAuthOutcomeGenqlSelection
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: DisableTwoFactorAuthResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `disableTwoFactorAuth` mutation. */
export interface DisableTwoFactorAuthOutcomeGenqlSelection{
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DisableTwoFactorAuthResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `dismissAnnouncements` mutation. */
export interface DismissAnnouncementsInput {clientMutationId?: (Scalars['String'] | null),
/** The announcement context that is being dismissed. */
context: AnnouncementContextEnum}


/** Payload for the `dismissAnnouncements` mutation. */
export interface DismissAnnouncementsPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: DismissAnnouncementsOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `dismissAnnouncements` mutation. */
export interface DismissAnnouncementsOutcomeGenqlSelection{
    /** Updated announcements. */
    announcements?: AnnouncementsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `enableTwoFactorAuth` mutation. */
export interface EnableTwoFactorAuthInput {clientMutationId?: (Scalars['String'] | null),
/** A two factor authentication code generated from the current secret. */
code: Scalars['String']}


/** Payload for the `enableTwoFactorAuth` mutation. */
export interface EnableTwoFactorAuthPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: EnableTwoFactorAuthOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: EnableTwoFactorAuthResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `enableTwoFactorAuth` mutation. */
export interface EnableTwoFactorAuthOutcomeGenqlSelection{
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EnableTwoFactorAuthResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for Atomic token generation */
export interface GenerateAtomicTokenInput {clientMutationId?: (Scalars['String'] | null),
/** Array of account ids */
accountIds: (Scalars['ID'] | null)[]}

export interface GenerateAtomicTokenPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: GenerateAtomicTokenOutcomeGenqlSelection
    error?: boolean | number
    errorMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GenerateAtomicTokenOutcomeGenqlSelection{
    /** Atomic client token */
    token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GenerateIdempotencyKeyInput {clientMutationId?: (Scalars['String'] | null)}

export interface GenerateIdempotencyKeyPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    outcome?: GenerateIdempotencyKeyOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GenerateIdempotencyKeyOutcomeGenqlSelection{
    idempotencyKey?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `initializeTwoFactorAuth` mutation. */
export interface InitializeTwoFactorAuthInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `initializeTwoFactorAuth` mutation. */
export interface InitializeTwoFactorAuthPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: InitializeTwoFactorAuthOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: InitializeTwoFactorAuthResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    secret?: boolean | number
    /** @deprecated Use `outcome` instead. */
    uri?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `initializeTwoFactorAuth` mutation. */
export interface InitializeTwoFactorAuthOutcomeGenqlSelection{
    /** The two factor authentication secret. */
    secret?: boolean | number
    /** The two factor authentication secret as an `otpauth` URI. */
    uri?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitializeTwoFactorAuthResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitializeTwoFactorVerificationPayloadGenqlSelection{
    /** Did the mutation succeed */
    didSucceed?: boolean | number
    /** Error code */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitializeTwoFactorVerificationInput {
/** Client mutation id */
clientMutationId?: (Scalars['String'] | null),
/** User's phone number */
phoneNumber: Scalars['String'],
/** Channel to send verification code */
channel: PhoneVerificationChannelEnum}


/** Input for the `initiatePhoneVerification` mutation. */
export interface InitiatePhoneVerificationInput {clientMutationId?: (Scalars['String'] | null),
/** The phone number to which the verifiation code should be sent. */
phone: Scalars['String'],
/** The channel via which the code is sent. */
channel: PhoneVerificationChannelEnum}


/** Payload for the `initiatePhoneVerification` mutation. */
export interface InitiatePhoneVerificationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: InitiatePhoneVerificationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `initiatePhoneVerification` mutation. */
export interface InitiatePhoneVerificationOutcomeGenqlSelection{
    /** The phone number that the verification code was sent to. */
    phone?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `initiateResetPassword` mutation. */
export interface InitiateResetPasswordInput {clientMutationId?: (Scalars['String'] | null),
/** The email address to be used for initiating the reset password process. */
email: Scalars['String']}


/** Payload for the `initiateResetPassword` mutation. */
export interface InitiateResetPasswordPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: InitiateResetPasswordResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitiateResetPasswordResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface JoinCryptoWaitlistInput {clientMutationId?: (Scalars['String'] | null)}

export interface JoinCryptoWaitlistPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `SetPlusAutorenewalPreference` mutation. */
export interface SetPlusAutoRenewalPreferenceInput {clientMutationId?: (Scalars['String'] | null),
/** Autorenewal preference */
autoRenewal: Scalars['Boolean']}


/** Payload for the `SetPlusAutorenewalPreference` mutation. */
export interface SetPlusAutoRenewalPreferencePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetPlusAutoRenewalPreferenceOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `SetPlusAutorenewalPreferences` mutation. */
export interface SetPlusAutoRenewalPreferenceOutcomeGenqlSelection{
    /** Updated Plus information. */
    plus?: PlusGenqlSelection
    /** Analytics event for turning plus autorenewal on or off */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `confirmPlusMembership` mutation. */
export interface ConfirmPlusMembershipInput {clientMutationId?: (Scalars['String'] | null),
/** Information about the selected payment method type. */
paymentMethodType?: (PlusPaymentMethodType | null),
/** The selected billing cycle subscription type. */
subscriptionType?: (PlusBillingCycleSubscriptionType | null)}


/** Payload for the `confirmPlusMembership` mutation. */
export interface ConfirmPlusMembershipPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ConfirmPlusMembershipOutcomeGenqlSelection
    error?: boolean | number
    errorMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `confirmPlusMembership` mutation. */
export interface ConfirmPlusMembershipOutcomeGenqlSelection{
    /** A message for the success toast. */
    successMessage?: boolean | number
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `submitPlusMembershipPayment` mutation. */
export interface SubmitPlusMembershipPaymentInput {clientMutationId?: (Scalars['String'] | null),
/** The one-time use reference to a user's payment information. Omitted if the user is not paying with a card. */
nonce?: (Scalars['String'] | null),
/** Information about the selected payment method type. */
paymentMethodType?: (PlusPaymentMethodType | null),
/** The selected on-platform billing payment method ID. */
plusBillingPaymentMethodId?: (Scalars['ID'] | null)}


/** Payload for the `submitPlusMembershipPayment` mutation. */
export interface SubmitPlusMembershipPaymentPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SubmitPlusMembershipPaymentOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `submitPlusMembershipPayment` mutation. */
export interface SubmitPlusMembershipPaymentOutcomeGenqlSelection{
    /** The transaction ID of the user's membership registration. */
    transactionId?: boolean | number
    /** The updated Plus information. */
    plus?: PlusGenqlSelection
    /** The updated Spend Checking information. */
    spend?: SpendGenqlSelection
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input properties for `submitOneTimePlusPayment` mutation */
export interface SubmitOneTimePlusPaymentInput {clientMutationId?: (Scalars['String'] | null),
/** The selected on-platform billing payment method ID. */
plusBillingPaymentMethodId?: (Scalars['ID'] | null),
/** The one-time use reference to a user's payment information. Omitted if the user isn't paying with credit card. */
nonce?: (Scalars['String'] | null)}


/** Payload for the `submitOneTimePlusPayment` mutation. */
export interface SubmitOneTimePlusPaymentPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SubmitOneTimePlusPaymentOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `submitOneTimePlusPayment` mutation. */
export interface SubmitOneTimePlusPaymentOutcomeGenqlSelection{
    /** The updated Plus information. */
    plus?: PlusGenqlSelection
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `SetActivePlusMembershipPaymentMethod` mutation. */
export interface SetActivePlusMembershipPaymentMethodInput {clientMutationId?: (Scalars['String'] | null),
/** The one-time use reference to a user's payment information. Omitted if the user is not specifying a card. */
nonce?: (Scalars['String'] | null),
/** Information about the selected payment method type. */
paymentMethodType?: (PlusPaymentMethodType | null),
/** The selected on-platform billing payment method ID. */
plusBillingPaymentMethodId?: (Scalars['ID'] | null)}


/** Payload for the `SetActivePlusMembershipPaymentMethod` mutation. */
export interface SetActivePlusMembershipPaymentMethodPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetActivePlusMembershipPaymentMethodOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `SetActivePlusMembershipPaymentMethod` mutation. */
export interface SetActivePlusMembershipPaymentMethodOutcomeGenqlSelection{
    /** The updated Plus information. */
    plus?: PlusGenqlSelection
    /** A message to the user on success. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Accept promotion campaign input */
export interface AcceptPromotionByPromoCodeInput {
/** The client mutation ID. */
clientMutationId?: (Scalars['String'] | null),
/** Promotion code */
promoCode: Scalars['String'],
/**
 * Signature (is encoded bundleId and version) of doc bundle associated with
 * promotion campaign being accepted.
 */
docBundleSignature: Scalars['String']}


/** Accept promotion campaign input */
export interface AcceptPromotionCampaignInput {
/** The client mutation ID. */
clientMutationId?: (Scalars['String'] | null),
/** The promotion campaign ID. */
campaignId: Scalars['ID'],
/** Promotion key - should be colon separated key:value string */
promotionCampaignKey?: (Scalars['PromotionCampaignKey'] | null),
/**
 * Signature (is encoded bundleId and version) of doc bundle associated with
 * promotion campaign being accepted.
 * If none is provided, system defaults to latest configured doc bundle.
 */
docBundleSignature?: (Scalars['String'] | null)}


/** Accept promotion campaign payload */
export interface AcceptPromotionCampaignPayloadGenqlSelection{
    /** The client mutation ID. */
    clientMutationId?: boolean | number
    /** Whether the promotion campaign was accepted. */
    didSucceed?: boolean | number
    /** error */
    error?: boolean | number
    /** error message */
    errorMessage?: boolean | number
    /** Outcome */
    outcome?: AcceptPromotionCampaignOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Accept promotion campaign outcome */
export interface AcceptPromotionCampaignOutcomeGenqlSelection{
    /** The promotion campaign success message. */
    successMessage?: boolean | number
    /** The promotion campaign success analytics event. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `reauthenticate` mutation. */
export interface ReauthenticateInput {clientMutationId?: (Scalars['String'] | null),
/** A refresh token. */
refreshToken: Scalars['String']}


/** Payload for the `reauthenticate` mutation. */
export interface ReauthenticatePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ReauthenticateOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: ReauthenticateResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    accessToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    refreshToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    expiresIn?: boolean | number
    /** @deprecated Use `outcome` instead. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `reauthenticate` mutation. */
export interface ReauthenticateOutcomeGenqlSelection{
    /** The access token. */
    accessToken?: boolean | number
    /** The refresh token. */
    refreshToken?: boolean | number
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReauthenticateResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `rebalancePortfolioSlice` mutation. */
export interface RebalancePortfolioSliceInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the portfolio slice. */
portfolioSliceId: Scalars['ID'],
/**
 * When `true`, the portfolio slice will be marked for rebalance; when `false`,
 * any existing mark for rebalance will be removed.
 */
isRebalance: Scalars['Boolean'],
/** Do not use, no longer functional. Will be removed in the future. */
isRecursive?: (Scalars['Boolean'] | null)}


/** Payload for the `rebalancePortfolioSlice` mutation. */
export interface RebalancePortfolioSlicePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: RebalancePortfolioSliceOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: RebalancePortfolioSliceResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    account?: AccountGenqlSelection
    /** @deprecated Use `outcome` instead. */
    portfolioSlice?: PortfolioSliceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `rebalancePortfolioSlice` mutation. */
export interface RebalancePortfolioSliceOutcomeGenqlSelection{
    /** The updated account. */
    account?: AccountGenqlSelection
    /** The updated portfolio slice. */
    portfolioSlice?: PortfolioSliceGenqlSelection
    /** Updated estimated trading information for the Invest account. */
    estimatedTrading?: EstimatedTradingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RebalancePortfolioSliceResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An account agnostic way to rename Savings, Checking, Crypto, and Invest accounts */
export interface RenameAccountInput {clientMutationId?: (Scalars['String'] | null),
/** The id for the user's M1 product account to be renamed */
accountId?: (Scalars['String'] | null),
/** The new name the account should be updated to */
accountName?: (Scalars['String'] | null)}

export interface RenameAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: RenameAccountOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `RenameAccount` mutation. */
export interface RenameAccountOutcomeGenqlSelection{
    /** The newly updated account name */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `reportMobileDeviceInfo` mutation. */
export interface ReportMobileDeviceInfoInput {clientMutationId?: (Scalars['String'] | null),
/** The mobile device type. */
type: MobileDeviceTypeEnum,
/** The raw model description string provided by the mobile platform API. */
model: Scalars['String']}


/** Payload for the `reportMobileDeviceInfo` mutation. */
export interface ReportMobileDeviceInfoPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: ReportMobileDeviceInfoResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ReportMobileDeviceInfoResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `requestAccountDeactivation` mutation. */
export interface RequestAccountDeactivationInput {clientMutationId?: (Scalars['String'] | null),
/** Is the user in the primary onboarding flow or not. If not in onboarding and a user profile isn't found, this will result in an error. */
isUserOnboarding: Scalars['Boolean']}


/** Payload for the `requestAccountDeactivation` mutation. */
export interface RequestAccountDeactivationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RequestOfflineOpenAccountInput {clientMutationId?: (Scalars['String'] | null),
/** Registation type of investment account to open. */
registration: OfflineAccountRegistrationEnum}

export interface RequestOfflineOpenAccountPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    /** Metadata about the result of executing the mutation. */
    result?: RequestOfflineOpenAccountResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `RequestOfflineOpenAccount` mutation. */
export interface RequestOfflineOpenAccountResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `requestReferralsParticipation` mutation. */
export interface RequestReferralsParticipationInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `requestReferralsParticipation` mutation. */
export interface RequestReferralsParticipationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: RequestReferralsParticipationOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: RequestReferralsParticipationResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `requestReferralsParticipation` mutation. */
export interface RequestReferralsParticipationOutcomeGenqlSelection{
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RequestReferralsParticipationResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `resendEmailVerification` mutation. */
export interface ResendEmailVerificationInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `resendEmailVerification` mutation. */
export interface ResendEmailVerificationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ResendEmailVerificationOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: ResendEmailVerificationResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    email?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `resendEmailVerification` mutation. */
export interface ResendEmailVerificationOutcomeGenqlSelection{
    /**
     * @deprecated Email is no longer returned for this outcome.
     * The email address to which the verification email was resent.
     */
    email?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ResendEmailVerificationResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `resetPassword` mutation. */
export interface ResetPasswordInput {clientMutationId?: (Scalars['String'] | null),
/** A reset-password token. */
resetPasswordToken: Scalars['String'],
/** The new password. */
newPassword: Scalars['String'],
/** The last four digits of the primary account owner's SSN. */
ssnLastFour?: (Scalars['String'] | null)}


/** Payload for the `resetPassword` mutation. */
export interface ResetPasswordPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ResetPasswordOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: ResetPasswordResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    accessToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    refreshToken?: boolean | number
    /** @deprecated Use `outcome` instead. */
    expiresIn?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `resetPassword` mutation. */
export interface ResetPasswordOutcomeGenqlSelection{
    /** The access token. */
    accessToken?: boolean | number
    /** The refresh token. */
    refreshToken?: boolean | number
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ResetPasswordResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for `resubmitLoanAfterCreditFreeze` mutation. */
export interface ResubmitLoanAfterCreditFreezeInput {clientMutationId?: (Scalars['String'] | null)}

export interface ResubmitLoanAfterCreditFreezePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: ResubmitLoanAfterCreditFreezeOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ResubmitLoanAfterCreditFreezeOutcomeGenqlSelection{
    /** The loan application ID. */
    applicationId?: boolean | number
    /** The loan ID. */
    loanId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `revokeRefresh` mutation. */
export interface RevokeRefreshInput {clientMutationId?: (Scalars['String'] | null),
/** A refresh token. */
refreshToken: Scalars['String']}


/** Payload for the `revokeRefresh` mutation. */
export interface RevokeRefreshPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: RevokeRefreshResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RevokeRefreshResultGenqlSelection{
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `sendTestPushNotification` mutation. */
export interface SendTestPushNotificationInput {clientMutationId?: (Scalars['String'] | null)}


/** Payload for the `sendTestPushNotification` mutation. */
export interface SendTestPushNotificationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for `setFullyPaidLendingStatus`. */
export interface SetFullyPaidLendingStatusInput {clientMutationId?: (Scalars['String'] | null),
/** User's desired fully paid lending status. */
fplStatus: Scalars['Boolean']}


/** Payload for `setFullyPaidLendingStatus`. */
export interface SetFullyPaidLendingStatusPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetFullyPaidLendingStatusOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for `setFullyPaidLendingStatus`. */
export interface SetFullyPaidLendingStatusOutcomeGenqlSelection{
    /** Analytics event to fire when present. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetIntroductionSourceInput {clientMutationId?: (Scalars['String'] | null),introductionSource: IntroductionSourceEnum}

export interface SetIntroductionSourcePayloadGenqlSelection{
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setPortfolioSliceOrder` mutation. */
export interface SetPortfolioSliceOrderInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the portfolio slice. */
portfolioSliceId: Scalars['ID'],
/**
 * The signed cash flow amount that is requested for trading. Positive values
 * indicate cash inflows/buys, negative values indicate cash outflows/sells.
 * Setting a value of zero will remove an existing order for the portfolio slice
 * if any exists, or do nothing otherwise.
 */
cashFlow: Scalars['Float'],
/**
 * Optional -  Margin buying power used for an order. Clients should only use this field when creating a margin BUY order.
 * This is also used to direct the mutation to use new trade directive endpoint when creating an order.
 */
marginCashFlow?: (Scalars['Float'] | null),
/** Optional - order type is the direction of the order. Currently this is only used in the trade directive endpoint when creating a margin BUY order. */
orderType?: (ManualPortfolioSliceOrderTypeEnum | null)}


/** Payload for the `setPortfolioSliceOrder` mutation. */
export interface SetPortfolioSliceOrderPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetPortfolioSliceOrderOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: SetPortfolioSliceOrderResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    account?: AccountGenqlSelection
    /** @deprecated Use `outcome` instead. */
    portfolioSlice?: PortfolioSliceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setPortfolioSliceOrder` mutation. */
export interface SetPortfolioSliceOrderOutcomeGenqlSelection{
    /** The updated account. */
    account?: AccountGenqlSelection
    /** The updated portfolio slice. */
    portfolioSlice?: PortfolioSliceGenqlSelection
    /** Updated estimated trading information for the Invest account. */
    estimatedTrading?: EstimatedTradingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetPortfolioSliceOrderResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setPreferredPlatformPaymentMethod` mutation */
export interface SetPreferredPlatformPaymentMethodInput {
/** A unique identifier for the client performing the mutation */
clientMutationId?: (Scalars['String'] | null),
/** Participant ID */
participantId: Scalars['ID']}


/** Payload for the `setPreferredPlatformPaymentMethod` mutation */
export interface SetPreferredPlatformPaymentMethodPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetPreferredPlatformPaymentMethodOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setPreferredPlatformPaymentMethod` mutation */
export interface SetPreferredPlatformPaymentMethodOutcomeGenqlSelection{
    /** Node ID of the preferred payment method */
    preferredPaymentMethodId?: boolean | number
    /** The analytics event for when the mutation successfully sets a preferred account */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setPreferredTradeWindow` mutation. */
export interface SetPreferredTradeWindowInput {clientMutationId?: (Scalars['String'] | null),
/** The ID of the account to update. */
accountId?: (Scalars['ID'] | null),
/** Preferred trade window for the user's account. */
preferredTradeWindow: PreferredTradeWindowEnum,
/** Flag to apply the setting to all broker accounts for the user. */
applyToAllAccounts?: (Scalars['Boolean'] | null)}


/** Payload for the `setPreferredTradeWindow` mutation. */
export interface SetPreferredTradeWindowPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SetPreferredTradeWindowOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `setPreferredTradeWindow` mutation. */
export interface SetPreferredTradeWindowOutcomeGenqlSelection{
    /** The updated account. */
    account?: AccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetRootPieInput {
/** The ID of the account to update. */
accountId: Scalars['ID'],clientMutationId?: (Scalars['String'] | null),
/** The ID of the pie to set as the root pie for the account. */
pieId: Scalars['ID']}

export interface SetRootPiePayloadGenqlSelection{
    /** Retrieve the updated account. */
    account?: AccountGenqlSelection
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    /**
     * @deprecated Use `didSucceed` and `error` instead.
     * Metadata about the result of executing the mutation.
     */
    result?: SetRootPieResultGenqlSelection
    /** Analytics for the setRootPieMutation */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata about the result of executing the `SetRootPie` mutation. */
export interface SetRootPieResultGenqlSelection{
    /** Value is `true` if the mutation succeeded, or `false` if it failed due to an input error. */
    didSucceed?: boolean | number
    /** When `didSucceed` is `false`, the type of input error that caused the failure. */
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `setUserFinancialGoal` mutation. */
export interface SetUserFinancialGoalInput {clientMutationId?: (Scalars['String'] | null),
/** The goal the user is setting. */
goal?: (Scalars['String'] | null)}

export interface SetUserFinancialGoalPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `signAgreementBundle` mutation. */
export interface SignAgreementBundleInput {clientMutationId?: (Scalars['String'] | null),
/** The signature of the agreement bundle. */
signature: Scalars['String']}


/** Payload for the `signAgreementBundle` mutation. */
export interface SignAgreementBundlePayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SignAgreementBundleOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: SignAgreementBundleResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `signAgreementBundle` mutation. */
export interface SignAgreementBundleOutcomeGenqlSelection{
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SignAgreementBundleResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StartCryptoOnDemandTradeWindowInput {clientMutationId?: (Scalars['String'] | null),accountId: Scalars['ID']}

export interface StartCryptoOnDemandTradeWindowOutcomeGenqlSelection{
    tradeWindowId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StartCryptoOnDemandTradeWindowPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: StartCryptoOnDemandTradeWindowOutcomeGenqlSelection
    /** Enum value that represents an error code. Null, if the operations was successful. */
    error?: boolean | number
    /** An error message that describes what went wrong if the mutation failed. Null, if the operation was successful. */
    errorMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for `Mutation.startCustomerSupportConversation`. */
export interface StartCustomerSupportConversationInput {clientMutationId?: (Scalars['String'] | null),
/** A specific workflow the client is signaling intent for. */
workflow: Scalars['String']}


/** Payload for `Mutation.startCustomerSupportConversation`. */
export interface StartCustomerSupportConverstionPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    error?: boolean | number
    outcome?: StartCustomerSupportConversationOutcomeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for `Mutation.startCustomerSupportConversation`. */
export interface StartCustomerSupportConversationOutcomeGenqlSelection{
    /** External ID of the conversation. Currently an Intercom ID. */
    externalConversationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the 'submitPersonalLoanApplication' mutation. */
export interface SubmitPersonalLoanApplicationInput {clientMutationId?: (Scalars['String'] | null),
/** The amount the applicant would like to borrow. */
amount?: (Scalars['Int'] | null),
/** The requested term for the loan. */
requestedTerm?: (Scalars['Float'] | null),
/** If this ends up being a multiselect, will need to be an array of options. TODO: remove once deprecated on client side */
employmentStatus?: (LoanIncomeSourcesEnum | null),
/** Application income before taxes per year. Conditionally passed if user is not in D2PL flow. */
annualIncome?: (Scalars['Int'] | null),
/** Applicant housing costs per year. */
yearlyHousingCost?: (Scalars['Int'] | null),
/** What the application will use the loan for. */
purpose?: (LoanPurposeEnum | null),
/** The signature associated to the Terms and Conditions `RequiredDocumentsBundle` a user must accept when submitting a personal loan application. */
termsAndConditionsSignature?: (Scalars['String'] | null)}


/** Payload for the `submitPersonalLoanApplication` mutation */
export interface SubmitPersonalLoanApplicationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: SubmitPersonalLoanApplicationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `submitPersonalLoanApplication` mutation */
export interface SubmitPersonalLoanApplicationOutcomeGenqlSelection{
    /** The application id for the application */
    applicationId?: boolean | number
    /** An analytics event to be recorded upon success. */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SubmitUserFeedbackInput {userContext?: (Scalars['String'] | null),topicSelected: UserFeedbackTopicEnum,topicRating: Scalars['Int'],topicFeedback?: (Scalars['String'] | null),contactOptIn?: (Scalars['Boolean'] | null),platformVersion?: (Scalars['String'] | null),clientMutationId?: (Scalars['String'] | null)}

export interface SubmitUserFeedbackPayloadGenqlSelection{
    didSucceed?: boolean | number
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateCustodialAccountBeneficiaryLegalAddressInput {clientMutationId?: (Scalars['String'] | null),
/** The Custodial Account Beneficary Node ID. */
custodialAccountBeneficiaryId: Scalars['ID'],
/** The new legal address for the Custodial Account Beneficiary. */
updatedCustodialAccountBeneficiaryLegalAddress: MailingAddressBeneficiaryInput}


/** Payload for the `updateProfile` mutation. */
export interface UpdateCustodialAccountBeneficiaryLegalAddressPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: UpdateCustodialAccountBeneficiaryLegalAddressOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `updateCustodialAccountBeneficiaryLegalAddress` mutation. */
export interface UpdateCustodialAccountBeneficiaryLegalAddressOutcomeGenqlSelection{
    /** Retrieve details for the current user. */
    viewer?: ViewerGenqlSelection
    /** Retrieve the updated Custodial Account Beneficary's profile. */
    custodialAccountBeneficiary?: CustodialAccountBeneficiaryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateEmailInput {
/** Client mutation id */
clientMutationId?: (Scalars['String'] | null),
/** New email address */
newEmail: Scalars['String'],
/** Old email address */
oldEmail: Scalars['String'],
/** User's phone number */
phoneNumber: Scalars['String'],
/** User entered verification code */
verificationCode: Scalars['String']}

export interface UpdateEmailPayloadGenqlSelection{
    /** Did the mutation succeed */
    didSucceed?: boolean | number
    /** Error code */
    error?: boolean | number
    /** Error message */
    errorMessage?: boolean | number
    /** Success message */
    successMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateFullyPaidLendingStatusInput {clientMutationId?: (Scalars['String'] | null),
/** User's fully paid lending status */
fplStatus: Scalars['Boolean']}

export interface UpdateFullyPaidLendingStatusPayloadGenqlSelection{
    clientMutationId?: boolean | number
    /** User's fully paid lending status */
    didSucceed?: boolean | number
    /** Error enum value */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `updateUserData` mutation. */
export interface UpdateUserDataInput {clientMutationId?: (Scalars['String'] | null),
/**
 * A list of entries to update. The entries will be merged with the existing
 * list. If a key does not exist, it will be created. If a value is null, the key
 * will be removed (if present).
 */
entries: UserDataEntryInput[]}


/** Represents a user data entry. */
export interface UserDataEntryInput {
/** The data key. */
key: Scalars['String'],
/** The data value. Specifying null will remove the entry (if it existed). */
value?: (Scalars['String'] | null)}


/** Payload for the `updateUserData` mutation. */
export interface UpdateUserDataPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: UpdateUserDataOutcomeGenqlSelection
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: UpdateUserDataResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `updateUserData` mutation. */
export interface UpdateUserDataOutcomeGenqlSelection{
    /** The updated user. */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UpdateUserDataResultGenqlSelection{
    didSucceed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the `verifyEmail` mutation. */
export interface VerifyEmailInput {clientMutationId?: (Scalars['String'] | null),
/** An email verification token. */
verificationToken: Scalars['String']}


/** Payload for the `verifyEmail` mutation. */
export interface VerifyEmailPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: VerifyEmailOutcomeGenqlSelection
    error?: boolean | number
    /** @deprecated Use `didSucceed`, `outcome` and `error` instead. */
    result?: VerifyEmailResultGenqlSelection
    /** @deprecated Use `outcome` instead. */
    email?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `verifyEmail` mutation. */
export interface VerifyEmailOutcomeGenqlSelection{
    /**
     * @deprecated Email is no longer returned for this outcome.
     * The email address that was verified.
     */
    email?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VerifyEmailResultGenqlSelection{
    didSucceed?: boolean | number
    inputError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the 'withdrawPersonalLoan' mutation */
export interface WithdrawPersonalLoanInput {clientMutationId?: (Scalars['String'] | null),
/** The id of the loan to be withdrawn */
loanId: Scalars['String']}


/** Payload for the `withdrawPersonalLoan` mutation */
export interface WithdrawPersonalLoanPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: WithdrawPersonalLoanOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `withdrawPersonalLoan` mutation */
export interface WithdrawPersonalLoanOutcomeGenqlSelection{
    /** An analytics event to be recorded upon success */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Input for the 'withdrawPersonalLoanApplication' mutation */
export interface WithdrawPersonalLoanApplicationInput {clientMutationId?: (Scalars['String'] | null),
/** The id of the application to be withdrawn */
applicationId: Scalars['String']}


/** Payload for the `withdrawPersonalLoanApplication` mutation */
export interface WithdrawPersonalLoanApplicationPayloadGenqlSelection{
    clientMutationId?: boolean | number
    didSucceed?: boolean | number
    outcome?: WithdrawPersonalLoanApplicationOutcomeGenqlSelection
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Outcome for the `withdrawPersonalLoanApplication` mutation */
export interface WithdrawPersonalLoanApplicationOutcomeGenqlSelection{
    /** The loan application status */
    status?: boolean | number
    /** An analytics event to be recorded upon success */
    successAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnboardingGenqlSelection{
    /** The ID of this node. */
    id?: boolean | number
    /** The internal key of this node. */
    key?: boolean | number
    /** A collection of screens and other information to be used for invest onboarding. */
    onboardingInvest?: OnboardingInvestGenqlSelection
    /**
     * @deprecated no longer used
     * Onboarding product selection.
     */
    productSelection?: ProductSelectionGenqlSelection
    /** Due diligence requirements for onboarding a user. */
    dueDiligence?: OnboardingDueDiligenceGenqlSelection
    /**
     * @deprecated no longer used
     * Onboarding progress interstitial banner messaging.
     */
    progressInterstitial?: OnboardingProgressInterstitialGenqlSelection
    /**
     * @deprecated Spend direct onboarding is disabled.
     * Returns true if the feature flag for Spend direct onboarding is enabled for the user.
     */
    spendDirectOnboardingEnabled?: boolean | number
    /**
     * @deprecated no longer used
     * Returns true if the feature flag for Direct to IRA is enabled for the user
     */
    collectUserGoalsOnboardingEnabled?: boolean | number
    /** Returns the required agreements for a user to be shown on the Profile Confirmation screen. If null, service is erroring - users will still see these disclosures on the final account opening confirmation screens. */
    profileConfirmationRequiredDocuments?: RequiredDocumentsBundleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Product driven onboarding selection. */
export interface ProductSelectionGenqlSelection{
    /** Title for the product driven onboarding screen. */
    title?: boolean | number
    /** Set of available product options. */
    products?: ProductListGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** List of products for direct onboarding. */
export interface ProductListGenqlSelection{
    /** Identifier for clients to key off of for custom product behavior. */
    identifier?: boolean | number
    /** Icon for specific product type. */
    icon?: AppImageGenqlSelection
    /** Array of illustration names for the specific product type */
    illustrationName?: boolean | number
    /** Illustration for the specific product type */
    illustration?: AppImageGenqlSelection
    /** Header text for specific product type. */
    header?: boolean | number
    /** Subheader text for specific product type. */
    subheader?: boolean | number
    /** Label for the product's call to the action. */
    ctaLabel?: boolean | number
    /** Destination ENUM for product onboarding. Use this value to drive which product onboarding view to show the user. */
    destination?: boolean | number
    /** An analytics event to fire when the given Product is displayed. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An analytics event to fire when the given Product is clicked. */
    analyticsEventClick?: AppAnalyticsEventGenqlSelection
    /** Disclosures section for the given product. */
    disclosure?: ProductListDisclosureGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ProductListDisclosureGenqlSelection{
    /** An identifier that clients can key off us for custom disclosures behavior. */
    identifier?: boolean | number
    /** Label that opens up the disclosure. */
    label?: boolean | number
    /** Array of strings to be rendered as the actual disclosure itself. */
    content?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Onboarding progress interstitial page. */
export interface OnboardingProgressInterstitialGenqlSelection{
    /** Banner to be displayed on the progress interstitial page. */
    banner?: InterstitialBannerGenqlSelection
    /** When available, promotional copy to be displayed on the progress interstitial page. */
    promotionalText?: OnboardingProgressInterstitialPromoTextGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InterstitialBannerGenqlSelection{
    /** The header for the banner. */
    title?: boolean | number
    /** The description for the banner. */
    description?: boolean | number
    /** When available, the link to display in the banner. */
    appLink?: AppLinkGenqlSelection
    /** When available, the app action to display in the banner. */
    appAction?: AppActionGenqlSelection
    /** An optional marketing image shown in the banner. */
    appImage?: AppImageGenqlSelection
    /** An optional marketing image shown inline on mobile clients. */
    inlineImage?: AppImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Promotional copy to be displayed on the progress interstitial page. */
export interface OnboardingProgressInterstitialPromoTextGenqlSelection{
    /** The text to be displayed. */
    text?: boolean | number
    /** When available, the corresponding tooltip for the promotional copy. */
    tooltip?: OnboardingProgressInterstitialTooltipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** When available, the tooltip to be displayed with promotional copy. */
export interface OnboardingProgressInterstitialTooltipGenqlSelection{
    /** The icon to be used as the tooltip trigger. */
    icon?: AppImageGenqlSelection
    /** The text to be used as the tooltip content. */
    text?: boolean | number
    /** When available, the link to be included as the cta for the tooltip. */
    appLink?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Due diligence requirements for onboarding a user. */
export interface OnboardingDueDiligenceGenqlSelection{
    /** An array of options for the occupation/industry dropdown question. */
    occupationDropdownOptions?: OccupationDropdownOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An option for the occupation/industry dropdown question. */
export interface OccupationDropdownOptionGenqlSelection{
    /** The description for the option. */
    label?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** List of products for direct onboarding. */
export interface OnboardingProductGenqlSelection{
    /** Identifier for clients to key off of for custom product behavior. */
    identifier?: boolean | number
    /** Icon for specific product type. */
    icon?: AppImageGenqlSelection
    /** Array of illustration names for the specific product type */
    illustrationName?: boolean | number
    /** Illustration for the specific product type */
    illustration?: AppImageGenqlSelection
    /** Header text for specific product type. */
    header?: boolean | number
    /** Subheader text for specific product type. */
    subheader?: boolean | number
    /** Label for the product's call to the action. */
    ctaLabel?: boolean | number
    /** Destination ENUM for product onboarding. Use this value to drive which product onboarding view to show the user. */
    destination?: boolean | number
    /** An analytics event to fire when the given Product is displayed. */
    analyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An analytics event to fire when the given Product is clicked. */
    analyticsEventClick?: AppAnalyticsEventGenqlSelection
    /** Disclosures section for the given product. */
    disclosure?: ProductDisclosureGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ProductDisclosureGenqlSelection{
    /** An identifier that clients can key off us for custom disclosures behavior. */
    identifier?: boolean | number
    /** Label that opens up the disclosure. */
    label?: boolean | number
    /** Array of strings to be rendered as the actual disclosure itself. */
    content?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains the various screens and types used for Invest Onboarding. */
export interface OnboardingInvestGenqlSelection{
    /** The screen for selecting the invest product (general or retirement) */
    investProductSelectionScreen?: InvestProductSelectionScreenGenqlSelection
    /** A collection of screens used for IRA onboarding and picking what type of IRA account to open. */
    iraOnboarding?: IRAOnboardingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains information for the Invest product selection screen. */
export interface InvestProductSelectionScreenGenqlSelection{
    /** The title of the invest product selection screen. */
    title?: boolean | number
    /** The list of invest products you can onboard direct with. */
    productSelection?: ListItemGenqlSelection
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains screens and types for Invest IRA Onboarding. */
export interface IRAOnboardingGenqlSelection{
    /** The screen for selecting how to fund the IRA account after onboarding. */
    iraFundingSelectionScreen?: IRAFundingSelectionScreenGenqlSelection
    /** The screen for selecting what type of IRA to onboard and open. */
    iraAccountTypeSelectionScreen?: AccountTypeSelectionScreenGenqlSelection
    /** The screen for assisting the user with what type of IRA account to open when rolling over or transfering an existing IRA. */
    iraRolloverTypeSelectionScreen?: IRARolloverTypeSelectionScreenGenqlSelection
    /** Returns true if the feature flag for direct to IRA onboarding is enabled for the user. */
    directToIRAOnboardingEnabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains information for the IRA Fund Account type screen. */
export interface IRAFundingSelectionScreenGenqlSelection{
    /** The title of the IRA funding selection screen. */
    title?: boolean | number
    /** A collection of options for funding the IRA account. */
    fundingTypes?: ListItemGenqlSelection
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains information for the Rollover account Type selection screen. */
export interface IRARolloverTypeSelectionScreenGenqlSelection{
    /** An array of disclosures to show. */
    disclosures?: boolean | number
    /** Contains the title and copy for the help section. */
    helpSection?: HelpSectionGenqlSelection
    /** The learn more link */
    learnMoreLink?: AppLinkGenqlSelection
    /** A collection of options for what IRA account type to open for a rollover or transfer. */
    rolloverTypes?: ListItemGenqlSelection
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** Copy to show under the title. */
    subtitle?: boolean | number
    /** The title of the IRA account type selection screen. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A type that contains the help section information used on various IRA onboarding screens. */
export interface HelpSectionGenqlSelection{
    /** The title of the help section. */
    title?: boolean | number
    /** The main copy content for the help section. */
    copy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AccountTypeSelectionScreenGenqlSelection{
    /** A collection of the different account types you can choose when opening an account. */
    accountTypes?: ListItemGenqlSelection
    /** An array of disclosures to show on the screen. */
    disclosures?: boolean | number
    /** The help title that sits above the learn more link. */
    helpTitle?: boolean | number
    /** The learn more link */
    learnMoreLink?: AppLinkGenqlSelection
    /** The analytics event thats fired off when the screen is rendered. */
    screenViewedAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** The title of the account type selection screen. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Plus promotional message. */
export interface PlusPromotionalMessageGenqlSelection{
    /** An optional title for the message. */
    title?: boolean | number
    /**
     * @deprecated Use `appPill` instead.
     * An optional tag for the title.
     */
    titleTag?: boolean | number
    /** An optional pill for the title. */
    titlePill?: AppPillGenqlSelection
    /** A message description. */
    description?: { __args: {
    /**
     * When provided and true, the string will include Markdown formatting.
     * Currently only includes `**`.
     */
    includeMarkdown?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A shorter version of the message description. */
    shortDescription?: boolean | number
    /** Optional disclosure text associated with the message. */
    disclosure?: boolean | number
    /** An analytics event to be recorded upon viewing message. */
    displayAnalyticsEvent?: AppAnalyticsEventGenqlSelection
    /** An optional link related to the message. */
    link?: AppLinkGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


    const Mutation_possibleTypes: string[] = ['Mutation']
    export const isMutation = (obj?: { __typename?: any } | null): obj is Mutation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMutation"')
      return Mutation_possibleTypes.includes(obj.__typename)
    }
    


    const SetAccountConfigurationDividendSettingsPayload_possibleTypes: string[] = ['SetAccountConfigurationDividendSettingsPayload']
    export const isSetAccountConfigurationDividendSettingsPayload = (obj?: { __typename?: any } | null): obj is SetAccountConfigurationDividendSettingsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetAccountConfigurationDividendSettingsPayload"')
      return SetAccountConfigurationDividendSettingsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetAccountConfigurationDividendSettingsForHoldingsPayload_possibleTypes: string[] = ['SetAccountConfigurationDividendSettingsForHoldingsPayload']
    export const isSetAccountConfigurationDividendSettingsForHoldingsPayload = (obj?: { __typename?: any } | null): obj is SetAccountConfigurationDividendSettingsForHoldingsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetAccountConfigurationDividendSettingsForHoldingsPayload"')
      return SetAccountConfigurationDividendSettingsForHoldingsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetAccountConfigurationDividendSettingsOutcome_possibleTypes: string[] = ['SetAccountConfigurationDividendSettingsOutcome']
    export const isSetAccountConfigurationDividendSettingsOutcome = (obj?: { __typename?: any } | null): obj is SetAccountConfigurationDividendSettingsOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetAccountConfigurationDividendSettingsOutcome"')
      return SetAccountConfigurationDividendSettingsOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CancelAchRelationshipPayload_possibleTypes: string[] = ['CancelAchRelationshipPayload']
    export const isCancelAchRelationshipPayload = (obj?: { __typename?: any } | null): obj is CancelAchRelationshipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCancelAchRelationshipPayload"')
      return CancelAchRelationshipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CancelAchRelationshipResult_possibleTypes: string[] = ['CancelAchRelationshipResult']
    export const isCancelAchRelationshipResult = (obj?: { __typename?: any } | null): obj is CancelAchRelationshipResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCancelAchRelationshipResult"')
      return CancelAchRelationshipResult_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmAchRelationshipViaDepositsPayload_possibleTypes: string[] = ['ConfirmAchRelationshipViaDepositsPayload']
    export const isConfirmAchRelationshipViaDepositsPayload = (obj?: { __typename?: any } | null): obj is ConfirmAchRelationshipViaDepositsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmAchRelationshipViaDepositsPayload"')
      return ConfirmAchRelationshipViaDepositsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmAchRelationshipViaDepositsResult_possibleTypes: string[] = ['ConfirmAchRelationshipViaDepositsResult']
    export const isConfirmAchRelationshipViaDepositsResult = (obj?: { __typename?: any } | null): obj is ConfirmAchRelationshipViaDepositsResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmAchRelationshipViaDepositsResult"')
      return ConfirmAchRelationshipViaDepositsResult_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAchRelationshipViaDepositsPayload_possibleTypes: string[] = ['CreateAchRelationshipViaDepositsPayload']
    export const isCreateAchRelationshipViaDepositsPayload = (obj?: { __typename?: any } | null): obj is CreateAchRelationshipViaDepositsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAchRelationshipViaDepositsPayload"')
      return CreateAchRelationshipViaDepositsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAchRelationshipViaDepositsResult_possibleTypes: string[] = ['CreateAchRelationshipViaDepositsResult']
    export const isCreateAchRelationshipViaDepositsResult = (obj?: { __typename?: any } | null): obj is CreateAchRelationshipViaDepositsResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAchRelationshipViaDepositsResult"')
      return CreateAchRelationshipViaDepositsResult_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAchRelationshipViaLinkPayload_possibleTypes: string[] = ['CreateAchRelationshipViaLinkPayload']
    export const isCreateAchRelationshipViaLinkPayload = (obj?: { __typename?: any } | null): obj is CreateAchRelationshipViaLinkPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAchRelationshipViaLinkPayload"')
      return CreateAchRelationshipViaLinkPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAchRelationshipViaLinkResult_possibleTypes: string[] = ['CreateAchRelationshipViaLinkResult']
    export const isCreateAchRelationshipViaLinkResult = (obj?: { __typename?: any } | null): obj is CreateAchRelationshipViaLinkResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAchRelationshipViaLinkResult"')
      return CreateAchRelationshipViaLinkResult_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitCreditCardApplicationPayload_possibleTypes: string[] = ['SubmitCreditCardApplicationPayload']
    export const isSubmitCreditCardApplicationPayload = (obj?: { __typename?: any } | null): obj is SubmitCreditCardApplicationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitCreditCardApplicationPayload"')
      return SubmitCreditCardApplicationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitCreditCardApplicationOutcome_possibleTypes: string[] = ['SubmitCreditCardApplicationOutcome']
    export const isSubmitCreditCardApplicationOutcome = (obj?: { __typename?: any } | null): obj is SubmitCreditCardApplicationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitCreditCardApplicationOutcome"')
      return SubmitCreditCardApplicationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptCreditCardOfferPayload_possibleTypes: string[] = ['AcceptCreditCardOfferPayload']
    export const isAcceptCreditCardOfferPayload = (obj?: { __typename?: any } | null): obj is AcceptCreditCardOfferPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptCreditCardOfferPayload"')
      return AcceptCreditCardOfferPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptCreditCardOfferOutcome_possibleTypes: string[] = ['AcceptCreditCardOfferOutcome']
    export const isAcceptCreditCardOfferOutcome = (obj?: { __typename?: any } | null): obj is AcceptCreditCardOfferOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptCreditCardOfferOutcome"')
      return AcceptCreditCardOfferOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload_possibleTypes: string[] = ['ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload']
    export const isContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload = (obj?: { __typename?: any } | null): obj is ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload"')
      return ContinueCreditCardApplicationAfterUserCreditIsUnfrozenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome_possibleTypes: string[] = ['ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome']
    export const isContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome = (obj?: { __typename?: any } | null): obj is ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome"')
      return ContinueCreditCardApplicationAfterUserCreditIsUnfrozenOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ActivateCreditCardPayload_possibleTypes: string[] = ['ActivateCreditCardPayload']
    export const isActivateCreditCardPayload = (obj?: { __typename?: any } | null): obj is ActivateCreditCardPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isActivateCreditCardPayload"')
      return ActivateCreditCardPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ActivateCreditCardOutcome_possibleTypes: string[] = ['ActivateCreditCardOutcome']
    export const isActivateCreditCardOutcome = (obj?: { __typename?: any } | null): obj is ActivateCreditCardOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isActivateCreditCardOutcome"')
      return ActivateCreditCardOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetLockOnCreditCardPayload_possibleTypes: string[] = ['SetLockOnCreditCardPayload']
    export const isSetLockOnCreditCardPayload = (obj?: { __typename?: any } | null): obj is SetLockOnCreditCardPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetLockOnCreditCardPayload"')
      return SetLockOnCreditCardPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetLockOnCreditCardOutcome_possibleTypes: string[] = ['SetLockOnCreditCardOutcome']
    export const isSetLockOnCreditCardOutcome = (obj?: { __typename?: any } | null): obj is SetLockOnCreditCardOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetLockOnCreditCardOutcome"')
      return SetLockOnCreditCardOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetCreditCardWaitlistStatusPayload_possibleTypes: string[] = ['SetCreditCardWaitlistStatusPayload']
    export const isSetCreditCardWaitlistStatusPayload = (obj?: { __typename?: any } | null): obj is SetCreditCardWaitlistStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetCreditCardWaitlistStatusPayload"')
      return SetCreditCardWaitlistStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetCreditCardWaitlistStatusOutcome_possibleTypes: string[] = ['SetCreditCardWaitlistStatusOutcome']
    export const isSetCreditCardWaitlistStatusOutcome = (obj?: { __typename?: any } | null): obj is SetCreditCardWaitlistStatusOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetCreditCardWaitlistStatusOutcome"')
      return SetCreditCardWaitlistStatusOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateCreditCardRewardPayoutDestinationPayload_possibleTypes: string[] = ['UpdateCreditCardRewardPayoutDestinationPayload']
    export const isUpdateCreditCardRewardPayoutDestinationPayload = (obj?: { __typename?: any } | null): obj is UpdateCreditCardRewardPayoutDestinationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCreditCardRewardPayoutDestinationPayload"')
      return UpdateCreditCardRewardPayoutDestinationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateCreditCardRewardPayoutDestinationOutcome_possibleTypes: string[] = ['UpdateCreditCardRewardPayoutDestinationOutcome']
    export const isUpdateCreditCardRewardPayoutDestinationOutcome = (obj?: { __typename?: any } | null): obj is UpdateCreditCardRewardPayoutDestinationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCreditCardRewardPayoutDestinationOutcome"')
      return UpdateCreditCardRewardPayoutDestinationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const RequestMobilePushProvisioningCertificatesPayload_possibleTypes: string[] = ['RequestMobilePushProvisioningCertificatesPayload']
    export const isRequestMobilePushProvisioningCertificatesPayload = (obj?: { __typename?: any } | null): obj is RequestMobilePushProvisioningCertificatesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestMobilePushProvisioningCertificatesPayload"')
      return RequestMobilePushProvisioningCertificatesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RequestMobilePushProvisioningCertificatesOutcome_possibleTypes: string[] = ['RequestMobilePushProvisioningCertificatesOutcome']
    export const isRequestMobilePushProvisioningCertificatesOutcome = (obj?: { __typename?: any } | null): obj is RequestMobilePushProvisioningCertificatesOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestMobilePushProvisioningCertificatesOutcome"')
      return RequestMobilePushProvisioningCertificatesOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const LinkFundingSourcesPayload_possibleTypes: string[] = ['LinkFundingSourcesPayload']
    export const isLinkFundingSourcesPayload = (obj?: { __typename?: any } | null): obj is LinkFundingSourcesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkFundingSourcesPayload"')
      return LinkFundingSourcesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const LinkFundingSourcesOutcome_possibleTypes: string[] = ['LinkFundingSourcesOutcome']
    export const isLinkFundingSourcesOutcome = (obj?: { __typename?: any } | null): obj is LinkFundingSourcesOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkFundingSourcesOutcome"')
      return LinkFundingSourcesOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CompletePlaidIncomeVerificationPayload_possibleTypes: string[] = ['CompletePlaidIncomeVerificationPayload']
    export const isCompletePlaidIncomeVerificationPayload = (obj?: { __typename?: any } | null): obj is CompletePlaidIncomeVerificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompletePlaidIncomeVerificationPayload"')
      return CompletePlaidIncomeVerificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompletePlaidIncomeVerificationOutcome_possibleTypes: string[] = ['CompletePlaidIncomeVerificationOutcome']
    export const isCompletePlaidIncomeVerificationOutcome = (obj?: { __typename?: any } | null): obj is CompletePlaidIncomeVerificationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompletePlaidIncomeVerificationOutcome"')
      return CompletePlaidIncomeVerificationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAchRelationshipViaFundingSourcePayload_possibleTypes: string[] = ['CreateAchRelationshipViaFundingSourcePayload']
    export const isCreateAchRelationshipViaFundingSourcePayload = (obj?: { __typename?: any } | null): obj is CreateAchRelationshipViaFundingSourcePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAchRelationshipViaFundingSourcePayload"')
      return CreateAchRelationshipViaFundingSourcePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAchRelationshipViaFundingSourceOutcome_possibleTypes: string[] = ['CreateAchRelationshipViaFundingSourceOutcome']
    export const isCreateAchRelationshipViaFundingSourceOutcome = (obj?: { __typename?: any } | null): obj is CreateAchRelationshipViaFundingSourceOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAchRelationshipViaFundingSourceOutcome"')
      return CreateAchRelationshipViaFundingSourceOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmManualPlaidMicroDepositsPayload_possibleTypes: string[] = ['ConfirmManualPlaidMicroDepositsPayload']
    export const isConfirmManualPlaidMicroDepositsPayload = (obj?: { __typename?: any } | null): obj is ConfirmManualPlaidMicroDepositsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmManualPlaidMicroDepositsPayload"')
      return ConfirmManualPlaidMicroDepositsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePlaidIncomeLinkTokenPayload_possibleTypes: string[] = ['GeneratePlaidIncomeLinkTokenPayload']
    export const isGeneratePlaidIncomeLinkTokenPayload = (obj?: { __typename?: any } | null): obj is GeneratePlaidIncomeLinkTokenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePlaidIncomeLinkTokenPayload"')
      return GeneratePlaidIncomeLinkTokenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePlaidIncomeLinkTokenOutcome_possibleTypes: string[] = ['GeneratePlaidIncomeLinkTokenOutcome']
    export const isGeneratePlaidIncomeLinkTokenOutcome = (obj?: { __typename?: any } | null): obj is GeneratePlaidIncomeLinkTokenOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePlaidIncomeLinkTokenOutcome"')
      return GeneratePlaidIncomeLinkTokenOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const LinkAndCreateAchRelationshipPayload_possibleTypes: string[] = ['LinkAndCreateAchRelationshipPayload']
    export const isLinkAndCreateAchRelationshipPayload = (obj?: { __typename?: any } | null): obj is LinkAndCreateAchRelationshipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkAndCreateAchRelationshipPayload"')
      return LinkAndCreateAchRelationshipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const LinkAndCreateAchRelationshipResult_possibleTypes: string[] = ['LinkAndCreateAchRelationshipResult']
    export const isLinkAndCreateAchRelationshipResult = (obj?: { __typename?: any } | null): obj is LinkAndCreateAchRelationshipResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkAndCreateAchRelationshipResult"')
      return LinkAndCreateAchRelationshipResult_possibleTypes.includes(obj.__typename)
    }
    


    const ReissueDepositsForAchRelationshipPayload_possibleTypes: string[] = ['ReissueDepositsForAchRelationshipPayload']
    export const isReissueDepositsForAchRelationshipPayload = (obj?: { __typename?: any } | null): obj is ReissueDepositsForAchRelationshipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReissueDepositsForAchRelationshipPayload"')
      return ReissueDepositsForAchRelationshipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReissueDepositsForAchRelationshipResult_possibleTypes: string[] = ['ReissueDepositsForAchRelationshipResult']
    export const isReissueDepositsForAchRelationshipResult = (obj?: { __typename?: any } | null): obj is ReissueDepositsForAchRelationshipResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReissueDepositsForAchRelationshipResult"')
      return ReissueDepositsForAchRelationshipResult_possibleTypes.includes(obj.__typename)
    }
    


    const OpenHighYieldSavingsAccountMutationPayload_possibleTypes: string[] = ['OpenHighYieldSavingsAccountMutationPayload']
    export const isOpenHighYieldSavingsAccountMutationPayload = (obj?: { __typename?: any } | null): obj is OpenHighYieldSavingsAccountMutationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenHighYieldSavingsAccountMutationPayload"')
      return OpenHighYieldSavingsAccountMutationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OpenHighYieldSavingsAccountOutcome_possibleTypes: string[] = ['OpenHighYieldSavingsAccountOutcome']
    export const isOpenHighYieldSavingsAccountOutcome = (obj?: { __typename?: any } | null): obj is OpenHighYieldSavingsAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenHighYieldSavingsAccountOutcome"')
      return OpenHighYieldSavingsAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetDirectDepositDestinationPayload_possibleTypes: string[] = ['SetDirectDepositDestinationPayload']
    export const isSetDirectDepositDestinationPayload = (obj?: { __typename?: any } | null): obj is SetDirectDepositDestinationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetDirectDepositDestinationPayload"')
      return SetDirectDepositDestinationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetDirectDepositDestinationOutcome_possibleTypes: string[] = ['SetDirectDepositDestinationOutcome']
    export const isSetDirectDepositDestinationOutcome = (obj?: { __typename?: any } | null): obj is SetDirectDepositDestinationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetDirectDepositDestinationOutcome"')
      return SetDirectDepositDestinationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateFundingSourceRelationshipPayload_possibleTypes: string[] = ['CreateFundingSourceRelationshipPayload']
    export const isCreateFundingSourceRelationshipPayload = (obj?: { __typename?: any } | null): obj is CreateFundingSourceRelationshipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateFundingSourceRelationshipPayload"')
      return CreateFundingSourceRelationshipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateFundingSourceRelationshipOutcome_possibleTypes: string[] = ['CreateFundingSourceRelationshipOutcome']
    export const isCreateFundingSourceRelationshipOutcome = (obj?: { __typename?: any } | null): obj is CreateFundingSourceRelationshipOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateFundingSourceRelationshipOutcome"')
      return CreateFundingSourceRelationshipOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateTransferInstancePayload_possibleTypes: string[] = ['CreateTransferInstancePayload']
    export const isCreateTransferInstancePayload = (obj?: { __typename?: any } | null): obj is CreateTransferInstancePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateTransferInstancePayload"')
      return CreateTransferInstancePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ToCreateTransferInstancePayloadAutoInvestImplications_possibleTypes: string[] = ['ToCreateTransferInstancePayloadAutoInvestImplications']
    export const isToCreateTransferInstancePayloadAutoInvestImplications = (obj?: { __typename?: any } | null): obj is ToCreateTransferInstancePayloadAutoInvestImplications => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isToCreateTransferInstancePayloadAutoInvestImplications"')
      return ToCreateTransferInstancePayloadAutoInvestImplications_possibleTypes.includes(obj.__typename)
    }
    


    const CreateTransferInstanceOutcome_possibleTypes: string[] = ['CreateTransferInstanceOutcome']
    export const isCreateTransferInstanceOutcome = (obj?: { __typename?: any } | null): obj is CreateTransferInstanceOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateTransferInstanceOutcome"')
      return CreateTransferInstanceOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const Details_possibleTypes: string[] = ['Details']
    export const isDetails = (obj?: { __typename?: any } | null): obj is Details => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDetails"')
      return Details_possibleTypes.includes(obj.__typename)
    }
    


    const CreateIraTransferResult_possibleTypes: string[] = ['CreateIraTransferResult']
    export const isCreateIraTransferResult = (obj?: { __typename?: any } | null): obj is CreateIraTransferResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateIraTransferResult"')
      return CreateIraTransferResult_possibleTypes.includes(obj.__typename)
    }
    


    const SetScheduledTransferRulePayload_possibleTypes: string[] = ['SetScheduledTransferRulePayload']
    export const isSetScheduledTransferRulePayload = (obj?: { __typename?: any } | null): obj is SetScheduledTransferRulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetScheduledTransferRulePayload"')
      return SetScheduledTransferRulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetScheduledTransferRuleOutcome_possibleTypes: string[] = ['SetScheduledTransferRuleOutcome']
    export const isSetScheduledTransferRuleOutcome = (obj?: { __typename?: any } | null): obj is SetScheduledTransferRuleOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetScheduledTransferRuleOutcome"')
      return SetScheduledTransferRuleOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const UpdatePieTreePayload_possibleTypes: string[] = ['UpdatePieTreePayload']
    export const isUpdatePieTreePayload = (obj?: { __typename?: any } | null): obj is UpdatePieTreePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatePieTreePayload"')
      return UpdatePieTreePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdatePieTreeResult_possibleTypes: string[] = ['UpdatePieTreeResult']
    export const isUpdatePieTreeResult = (obj?: { __typename?: any } | null): obj is UpdatePieTreeResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatePieTreeResult"')
      return UpdatePieTreeResult_possibleTypes.includes(obj.__typename)
    }
    


    const Account_possibleTypes: string[] = ['Account']
    export const isAccount = (obj?: { __typename?: any } | null): obj is Account => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount"')
      return Account_possibleTypes.includes(obj.__typename)
    }
    


    const FundingActions_possibleTypes: string[] = ['FundingActions']
    export const isFundingActions = (obj?: { __typename?: any } | null): obj is FundingActions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundingActions"')
      return FundingActions_possibleTypes.includes(obj.__typename)
    }
    


    const LoanApplicationStatus_possibleTypes: string[] = ['LoanApplicationStatus']
    export const isLoanApplicationStatus = (obj?: { __typename?: any } | null): obj is LoanApplicationStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanApplicationStatus"')
      return LoanApplicationStatus_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowDashboard_possibleTypes: string[] = ['BorrowDashboard']
    export const isBorrowDashboard = (obj?: { __typename?: any } | null): obj is BorrowDashboard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowDashboard"')
      return BorrowDashboard_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowMarketingScreen_possibleTypes: string[] = ['BorrowMarketingScreen']
    export const isBorrowMarketingScreen = (obj?: { __typename?: any } | null): obj is BorrowMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowMarketingScreen"')
      return BorrowMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowMarketingScreenV2_possibleTypes: string[] = ['BorrowMarketingScreenV2']
    export const isBorrowMarketingScreenV2 = (obj?: { __typename?: any } | null): obj is BorrowMarketingScreenV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowMarketingScreenV2"')
      return BorrowMarketingScreenV2_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowBankDisclosure_possibleTypes: string[] = ['BorrowBankDisclosure']
    export const isBorrowBankDisclosure = (obj?: { __typename?: any } | null): obj is BorrowBankDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowBankDisclosure"')
      return BorrowBankDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const MarginLoanModal_possibleTypes: string[] = ['MarginLoanModal']
    export const isMarginLoanModal = (obj?: { __typename?: any } | null): obj is MarginLoanModal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginLoanModal"')
      return MarginLoanModal_possibleTypes.includes(obj.__typename)
    }
    


    const MarginLoanAccount_possibleTypes: string[] = ['MarginLoanAccount']
    export const isMarginLoanAccount = (obj?: { __typename?: any } | null): obj is MarginLoanAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginLoanAccount"')
      return MarginLoanAccount_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowMarketingDesignAssets_possibleTypes: string[] = ['BorrowMarketingDesignAssets']
    export const isBorrowMarketingDesignAssets = (obj?: { __typename?: any } | null): obj is BorrowMarketingDesignAssets => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowMarketingDesignAssets"')
      return BorrowMarketingDesignAssets_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoans_possibleTypes: string[] = ['PersonalLoans']
    export const isPersonalLoans = (obj?: { __typename?: any } | null): obj is PersonalLoans => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoans"')
      return PersonalLoans_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanApplicationFlow_possibleTypes: string[] = ['PersonalLoanApplicationFlow']
    export const isPersonalLoanApplicationFlow = (obj?: { __typename?: any } | null): obj is PersonalLoanApplicationFlow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanApplicationFlow"')
      return PersonalLoanApplicationFlow_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanDeclinedErrorScreen_possibleTypes: string[] = ['PersonalLoanDeclinedErrorScreen']
    export const isPersonalLoanDeclinedErrorScreen = (obj?: { __typename?: any } | null): obj is PersonalLoanDeclinedErrorScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanDeclinedErrorScreen"')
      return PersonalLoanDeclinedErrorScreen_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanIneligibilityScreen_possibleTypes: string[] = ['PersonalLoanIneligibilityScreen']
    export const isPersonalLoanIneligibilityScreen = (obj?: { __typename?: any } | null): obj is PersonalLoanIneligibilityScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanIneligibilityScreen"')
      return PersonalLoanIneligibilityScreen_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanApplicationManualReviewScreen_possibleTypes: string[] = ['PersonalLoanApplicationManualReviewScreen']
    export const isPersonalLoanApplicationManualReviewScreen = (obj?: { __typename?: any } | null): obj is PersonalLoanApplicationManualReviewScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanApplicationManualReviewScreen"')
      return PersonalLoanApplicationManualReviewScreen_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanDisbursementFlow_possibleTypes: string[] = ['PersonalLoanDisbursementFlow']
    export const isPersonalLoanDisbursementFlow = (obj?: { __typename?: any } | null): obj is PersonalLoanDisbursementFlow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanDisbursementFlow"')
      return PersonalLoanDisbursementFlow_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoansAutoPaySetup_possibleTypes: string[] = ['PersonalLoansAutoPaySetup']
    export const isPersonalLoansAutoPaySetup = (obj?: { __typename?: any } | null): obj is PersonalLoansAutoPaySetup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoansAutoPaySetup"')
      return PersonalLoansAutoPaySetup_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanLandingPage_possibleTypes: string[] = ['PersonalLoanLandingPage']
    export const isPersonalLoanLandingPage = (obj?: { __typename?: any } | null): obj is PersonalLoanLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanLandingPage"')
      return PersonalLoanLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanBulletPoint_possibleTypes: string[] = ['PersonalLoanBulletPoint']
    export const isPersonalLoanBulletPoint = (obj?: { __typename?: any } | null): obj is PersonalLoanBulletPoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanBulletPoint"')
      return PersonalLoanBulletPoint_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTermOption_possibleTypes: string[] = ['LoanTermOption']
    export const isLoanTermOption = (obj?: { __typename?: any } | null): obj is LoanTermOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTermOption"')
      return LoanTermOption_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanDisbursement_possibleTypes: string[] = ['PersonalLoanDisbursement']
    export const isPersonalLoanDisbursement = (obj?: { __typename?: any } | null): obj is PersonalLoanDisbursement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanDisbursement"')
      return PersonalLoanDisbursement_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoansPromptForBankConnection_possibleTypes: string[] = ['PersonalLoansPromptForBankConnection']
    export const isPersonalLoansPromptForBankConnection = (obj?: { __typename?: any } | null): obj is PersonalLoansPromptForBankConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoansPromptForBankConnection"')
      return PersonalLoansPromptForBankConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanViewTerms_possibleTypes: string[] = ['PersonalLoanViewTerms']
    export const isPersonalLoanViewTerms = (obj?: { __typename?: any } | null): obj is PersonalLoanViewTerms => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanViewTerms"')
      return PersonalLoanViewTerms_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanViewTermsTableEntry_possibleTypes: string[] = ['PersonalLoanViewTermsTableEntry']
    export const isPersonalLoanViewTermsTableEntry = (obj?: { __typename?: any } | null): obj is PersonalLoanViewTermsTableEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanViewTermsTableEntry"')
      return PersonalLoanViewTermsTableEntry_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanViewTermsDocumentsError_possibleTypes: string[] = ['PersonalLoanViewTermsDocumentsError']
    export const isPersonalLoanViewTermsDocumentsError = (obj?: { __typename?: any } | null): obj is PersonalLoanViewTermsDocumentsError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanViewTermsDocumentsError"')
      return PersonalLoanViewTermsDocumentsError_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanPaymentScheduleEntry_possibleTypes: string[] = ['PersonalLoanPaymentScheduleEntry']
    export const isPersonalLoanPaymentScheduleEntry = (obj?: { __typename?: any } | null): obj is PersonalLoanPaymentScheduleEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanPaymentScheduleEntry"')
      return PersonalLoanPaymentScheduleEntry_possibleTypes.includes(obj.__typename)
    }
    


    const LoanPurposeConnection_possibleTypes: string[] = ['LoanPurposeConnection']
    export const isLoanPurposeConnection = (obj?: { __typename?: any } | null): obj is LoanPurposeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanPurposeConnection"')
      return LoanPurposeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const LoanPurposeEdge_possibleTypes: string[] = ['LoanPurposeEdge']
    export const isLoanPurposeEdge = (obj?: { __typename?: any } | null): obj is LoanPurposeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanPurposeEdge"')
      return LoanPurposeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const LoanPurpose_possibleTypes: string[] = ['LoanPurpose']
    export const isLoanPurpose = (obj?: { __typename?: any } | null): obj is LoanPurpose => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanPurpose"')
      return LoanPurpose_possibleTypes.includes(obj.__typename)
    }
    


    const LoanMinAndMaxDetails_possibleTypes: string[] = ['LoanMinAndMaxDetails']
    export const isLoanMinAndMaxDetails = (obj?: { __typename?: any } | null): obj is LoanMinAndMaxDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanMinAndMaxDetails"')
      return LoanMinAndMaxDetails_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanApplicationDetails_possibleTypes: string[] = ['PersonalLoanApplicationDetails']
    export const isPersonalLoanApplicationDetails = (obj?: { __typename?: any } | null): obj is PersonalLoanApplicationDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanApplicationDetails"')
      return PersonalLoanApplicationDetails_possibleTypes.includes(obj.__typename)
    }
    


    const PreApprovalLoanApplicationOfferConnection_possibleTypes: string[] = ['PreApprovalLoanApplicationOfferConnection']
    export const isPreApprovalLoanApplicationOfferConnection = (obj?: { __typename?: any } | null): obj is PreApprovalLoanApplicationOfferConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPreApprovalLoanApplicationOfferConnection"')
      return PreApprovalLoanApplicationOfferConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PreApprovalLoanApplicationOfferEdge_possibleTypes: string[] = ['PreApprovalLoanApplicationOfferEdge']
    export const isPreApprovalLoanApplicationOfferEdge = (obj?: { __typename?: any } | null): obj is PreApprovalLoanApplicationOfferEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPreApprovalLoanApplicationOfferEdge"')
      return PreApprovalLoanApplicationOfferEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PreApprovalLoanApplicationOffer_possibleTypes: string[] = ['PreApprovalLoanApplicationOffer']
    export const isPreApprovalLoanApplicationOffer = (obj?: { __typename?: any } | null): obj is PreApprovalLoanApplicationOffer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPreApprovalLoanApplicationOffer"')
      return PreApprovalLoanApplicationOffer_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanOfferValue_possibleTypes: string[] = ['PersonalLoanOfferValue']
    export const isPersonalLoanOfferValue = (obj?: { __typename?: any } | null): obj is PersonalLoanOfferValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanOfferValue"')
      return PersonalLoanOfferValue_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanConnection_possibleTypes: string[] = ['PersonalLoanConnection']
    export const isPersonalLoanConnection = (obj?: { __typename?: any } | null): obj is PersonalLoanConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanConnection"')
      return PersonalLoanConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanEdge_possibleTypes: string[] = ['PersonalLoanEdge']
    export const isPersonalLoanEdge = (obj?: { __typename?: any } | null): obj is PersonalLoanEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanEdge"')
      return PersonalLoanEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoan_possibleTypes: string[] = ['PersonalLoan']
    export const isPersonalLoan = (obj?: { __typename?: any } | null): obj is PersonalLoan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoan"')
      return PersonalLoan_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanProductLandingPage_possibleTypes: string[] = ['PersonalLoanProductLandingPage']
    export const isPersonalLoanProductLandingPage = (obj?: { __typename?: any } | null): obj is PersonalLoanProductLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanProductLandingPage"')
      return PersonalLoanProductLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanLandingPageGraphDetails_possibleTypes: string[] = ['PersonalLoanLandingPageGraphDetails']
    export const isPersonalLoanLandingPageGraphDetails = (obj?: { __typename?: any } | null): obj is PersonalLoanLandingPageGraphDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanLandingPageGraphDetails"')
      return PersonalLoanLandingPageGraphDetails_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanCommonTransactionMetadata_possibleTypes: string[] = ['PersonalLoanCommonTransactionMetadata']
    export const isPersonalLoanCommonTransactionMetadata = (obj?: { __typename?: any } | null): obj is PersonalLoanCommonTransactionMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanCommonTransactionMetadata"')
      return PersonalLoanCommonTransactionMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanDesignAssets_possibleTypes: string[] = ['PersonalLoanDesignAssets']
    export const isPersonalLoanDesignAssets = (obj?: { __typename?: any } | null): obj is PersonalLoanDesignAssets => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanDesignAssets"')
      return PersonalLoanDesignAssets_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanAdditionalLinks_possibleTypes: string[] = ['PersonalLoanAdditionalLinks']
    export const isPersonalLoanAdditionalLinks = (obj?: { __typename?: any } | null): obj is PersonalLoanAdditionalLinks => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanAdditionalLinks"')
      return PersonalLoanAdditionalLinks_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTransactionEntryConnection_possibleTypes: string[] = ['LoanTransactionEntryConnection']
    export const isLoanTransactionEntryConnection = (obj?: { __typename?: any } | null): obj is LoanTransactionEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTransactionEntryConnection"')
      return LoanTransactionEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTransactionEntryEdge_possibleTypes: string[] = ['LoanTransactionEntryEdge']
    export const isLoanTransactionEntryEdge = (obj?: { __typename?: any } | null): obj is LoanTransactionEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTransactionEntryEdge"')
      return LoanTransactionEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTransactionEntry_possibleTypes: string[] = ['LoanTransactionEntry']
    export const isLoanTransactionEntry = (obj?: { __typename?: any } | null): obj is LoanTransactionEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTransactionEntry"')
      return LoanTransactionEntry_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTransactionEntryDetails_possibleTypes: string[] = ['LoanTransactionEntryDetails']
    export const isLoanTransactionEntryDetails = (obj?: { __typename?: any } | null): obj is LoanTransactionEntryDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTransactionEntryDetails"')
      return LoanTransactionEntryDetails_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowPromotionalMessage_possibleTypes: string[] = ['BorrowPromotionalMessage']
    export const isBorrowPromotionalMessage = (obj?: { __typename?: any } | null): obj is BorrowPromotionalMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowPromotionalMessage"')
      return BorrowPromotionalMessage_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTransactionEntryDetailsItem_possibleTypes: string[] = ['LoanTransactionEntryDetailsItem']
    export const isLoanTransactionEntryDetailsItem = (obj?: { __typename?: any } | null): obj is LoanTransactionEntryDetailsItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTransactionEntryDetailsItem"')
      return LoanTransactionEntryDetailsItem_possibleTypes.includes(obj.__typename)
    }
    


    const ManageLoanActionSection_possibleTypes: string[] = ['ManageLoanActionSection']
    export const isManageLoanActionSection = (obj?: { __typename?: any } | null): obj is ManageLoanActionSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManageLoanActionSection"')
      return ManageLoanActionSection_possibleTypes.includes(obj.__typename)
    }
    


    const ManageLoanAction_possibleTypes: string[] = ['ManageLoanAction']
    export const isManageLoanAction = (obj?: { __typename?: any } | null): obj is ManageLoanAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManageLoanAction"')
      return ManageLoanAction_possibleTypes.includes(obj.__typename)
    }
    


    const LoanDetailValue_possibleTypes: string[] = ['LoanDetailValue']
    export const isLoanDetailValue = (obj?: { __typename?: any } | null): obj is LoanDetailValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanDetailValue"')
      return LoanDetailValue_possibleTypes.includes(obj.__typename)
    }
    


    const QuickActionLink_possibleTypes: string[] = ['QuickActionLink']
    export const isQuickActionLink = (obj?: { __typename?: any } | null): obj is QuickActionLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuickActionLink"')
      return QuickActionLink_possibleTypes.includes(obj.__typename)
    }
    


    const LoanTooltip_possibleTypes: string[] = ['LoanTooltip']
    export const isLoanTooltip = (obj?: { __typename?: any } | null): obj is LoanTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoanTooltip"')
      return LoanTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const ReviewLoanScreen_possibleTypes: string[] = ['ReviewLoanScreen']
    export const isReviewLoanScreen = (obj?: { __typename?: any } | null): obj is ReviewLoanScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReviewLoanScreen"')
      return ReviewLoanScreen_possibleTypes.includes(obj.__typename)
    }
    


    const ReviewLoanDetail_possibleTypes: string[] = ['ReviewLoanDetail']
    export const isReviewLoanDetail = (obj?: { __typename?: any } | null): obj is ReviewLoanDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReviewLoanDetail"')
      return ReviewLoanDetail_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanDirect_possibleTypes: string[] = ['PersonalLoanDirect']
    export const isPersonalLoanDirect = (obj?: { __typename?: any } | null): obj is PersonalLoanDirect => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanDirect"')
      return PersonalLoanDirect_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanDirectQuestion_possibleTypes: string[] = ['PersonalLoanDirectQuestion']
    export const isPersonalLoanDirectQuestion = (obj?: { __typename?: any } | null): obj is PersonalLoanDirectQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanDirectQuestion"')
      return PersonalLoanDirectQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const PersonalLoanQuestion_possibleTypes: string[] = ['PersonalLoanQuestion']
    export const isPersonalLoanQuestion = (obj?: { __typename?: any } | null): obj is PersonalLoanQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonalLoanQuestion"')
      return PersonalLoanQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionDetails_possibleTypes: string[] = ['CommonTransactionDetails']
    export const isCommonTransactionDetails = (obj?: { __typename?: any } | null): obj is CommonTransactionDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionDetails"')
      return CommonTransactionDetails_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionPrimaryInfo_possibleTypes: string[] = ['CommonTransactionPrimaryInfo']
    export const isCommonTransactionPrimaryInfo = (obj?: { __typename?: any } | null): obj is CommonTransactionPrimaryInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionPrimaryInfo"')
      return CommonTransactionPrimaryInfo_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionPrimaryInfoAmount_possibleTypes: string[] = ['CommonTransactionPrimaryInfoAmount']
    export const isCommonTransactionPrimaryInfoAmount = (obj?: { __typename?: any } | null): obj is CommonTransactionPrimaryInfoAmount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionPrimaryInfoAmount"')
      return CommonTransactionPrimaryInfoAmount_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionPrimaryInfoStatus_possibleTypes: string[] = ['CommonTransactionPrimaryInfoStatus']
    export const isCommonTransactionPrimaryInfoStatus = (obj?: { __typename?: any } | null): obj is CommonTransactionPrimaryInfoStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionPrimaryInfoStatus"')
      return CommonTransactionPrimaryInfoStatus_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionDetailSection_possibleTypes: string[] = ['CommonTransactionDetailSection']
    export const isCommonTransactionDetailSection = (obj?: { __typename?: any } | null): obj is CommonTransactionDetailSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionDetailSection"')
      return CommonTransactionDetailSection_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionDetail_possibleTypes: string[] = ['CommonTransactionDetail']
    export const isCommonTransactionDetail = (obj?: { __typename?: any } | null): obj is CommonTransactionDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionDetail"')
      return CommonTransactionDetail_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionDetailValue_possibleTypes: string[] = ['CommonTransactionDetailValue']
    export const isCommonTransactionDetailValue = (obj?: { __typename?: any } | null): obj is CommonTransactionDetailValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionDetailValue"')
      return CommonTransactionDetailValue_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionEntryConnection_possibleTypes: string[] = ['CommonTransactionEntryConnection']
    export const isCommonTransactionEntryConnection = (obj?: { __typename?: any } | null): obj is CommonTransactionEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionEntryConnection"')
      return CommonTransactionEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionHeader_possibleTypes: string[] = ['CommonTransactionHeader']
    export const isCommonTransactionHeader = (obj?: { __typename?: any } | null): obj is CommonTransactionHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionHeader"')
      return CommonTransactionHeader_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionEntryEdge_possibleTypes: string[] = ['CommonTransactionEntryEdge']
    export const isCommonTransactionEntryEdge = (obj?: { __typename?: any } | null): obj is CommonTransactionEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionEntryEdge"')
      return CommonTransactionEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionEntry_possibleTypes: string[] = ['CommonTransaction']
    export const isCommonTransactionEntry = (obj?: { __typename?: any } | null): obj is CommonTransactionEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionEntry"')
      return CommonTransactionEntry_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionAmount_possibleTypes: string[] = ['CommonTransactionAmount']
    export const isCommonTransactionAmount = (obj?: { __typename?: any } | null): obj is CommonTransactionAmount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionAmount"')
      return CommonTransactionAmount_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionMetadata_possibleTypes: string[] = ['PersonalLoanCommonTransactionMetadata','CreditCardCommonTransactionMetadata']
    export const isCommonTransactionMetadata = (obj?: { __typename?: any } | null): obj is CommonTransactionMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionMetadata"')
      return CommonTransactionMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransaction_possibleTypes: string[] = ['CommonTransaction']
    export const isCommonTransaction = (obj?: { __typename?: any } | null): obj is CommonTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransaction"')
      return CommonTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const CommonTransactionsEmptyState_possibleTypes: string[] = ['CommonTransactionsEmptyState']
    export const isCommonTransactionsEmptyState = (obj?: { __typename?: any } | null): obj is CommonTransactionsEmptyState => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommonTransactionsEmptyState"')
      return CommonTransactionsEmptyState_possibleTypes.includes(obj.__typename)
    }
    


    const Credit_possibleTypes: string[] = ['Credit']
    export const isCredit = (obj?: { __typename?: any } | null): obj is Credit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCredit"')
      return Credit_possibleTypes.includes(obj.__typename)
    }
    


    const UserAcceptedCreditCardAgreements_possibleTypes: string[] = ['UserAcceptedCreditCardAgreements']
    export const isUserAcceptedCreditCardAgreements = (obj?: { __typename?: any } | null): obj is UserAcceptedCreditCardAgreements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserAcceptedCreditCardAgreements"')
      return UserAcceptedCreditCardAgreements_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardApplicantInformation_possibleTypes: string[] = ['CreditCardApplicantInformation']
    export const isCreditCardApplicantInformation = (obj?: { __typename?: any } | null): obj is CreditCardApplicantInformation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardApplicantInformation"')
      return CreditCardApplicantInformation_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardApplicationDetailsConnection_possibleTypes: string[] = ['CreditCardApplicationDetailsConnection']
    export const isCreditCardApplicationDetailsConnection = (obj?: { __typename?: any } | null): obj is CreditCardApplicationDetailsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardApplicationDetailsConnection"')
      return CreditCardApplicationDetailsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardApplicationDetailsEdge_possibleTypes: string[] = ['CreditCardApplicationDetailsEdge']
    export const isCreditCardApplicationDetailsEdge = (obj?: { __typename?: any } | null): obj is CreditCardApplicationDetailsEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardApplicationDetailsEdge"')
      return CreditCardApplicationDetailsEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardApplicationDetails_possibleTypes: string[] = ['CreditCardApplicationDetails']
    export const isCreditCardApplicationDetails = (obj?: { __typename?: any } | null): obj is CreditCardApplicationDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardApplicationDetails"')
      return CreditCardApplicationDetails_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardActiveOffer_possibleTypes: string[] = ['CreditCardActiveOffer']
    export const isCreditCardActiveOffer = (obj?: { __typename?: any } | null): obj is CreditCardActiveOffer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardActiveOffer"')
      return CreditCardActiveOffer_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardAccountConnection_possibleTypes: string[] = ['CreditCardAccountConnection']
    export const isCreditCardAccountConnection = (obj?: { __typename?: any } | null): obj is CreditCardAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardAccountConnection"')
      return CreditCardAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardAccountEdge_possibleTypes: string[] = ['CreditCardAccountEdge']
    export const isCreditCardAccountEdge = (obj?: { __typename?: any } | null): obj is CreditCardAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardAccountEdge"')
      return CreditCardAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardAccount_possibleTypes: string[] = ['CreditCardAccount']
    export const isCreditCardAccount = (obj?: { __typename?: any } | null): obj is CreditCardAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardAccount"')
      return CreditCardAccount_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOnboardingContent_possibleTypes: string[] = ['CreditCardOnboardingContent']
    export const isCreditCardOnboardingContent = (obj?: { __typename?: any } | null): obj is CreditCardOnboardingContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOnboardingContent"')
      return CreditCardOnboardingContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOnboardingStartApplicationScreen_possibleTypes: string[] = ['CreditCardOnboardingStartApplicationScreen']
    export const isCreditCardOnboardingStartApplicationScreen = (obj?: { __typename?: any } | null): obj is CreditCardOnboardingStartApplicationScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOnboardingStartApplicationScreen"')
      return CreditCardOnboardingStartApplicationScreen_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOnboardingApplicationStatusScreen_possibleTypes: string[] = ['CreditCardOnboardingApplicationStatusScreen']
    export const isCreditCardOnboardingApplicationStatusScreen = (obj?: { __typename?: any } | null): obj is CreditCardOnboardingApplicationStatusScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOnboardingApplicationStatusScreen"')
      return CreditCardOnboardingApplicationStatusScreen_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOnboardingApplicationStatusStepOne_possibleTypes: string[] = ['CreditCardOnboardingApplicationStatusStepOne']
    export const isCreditCardOnboardingApplicationStatusStepOne = (obj?: { __typename?: any } | null): obj is CreditCardOnboardingApplicationStatusStepOne => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOnboardingApplicationStatusStepOne"')
      return CreditCardOnboardingApplicationStatusStepOne_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOnboardingApplicationStatusStepTwo_possibleTypes: string[] = ['CreditCardOnboardingApplicationStatusStepTwo']
    export const isCreditCardOnboardingApplicationStatusStepTwo = (obj?: { __typename?: any } | null): obj is CreditCardOnboardingApplicationStatusStepTwo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOnboardingApplicationStatusStepTwo"')
      return CreditCardOnboardingApplicationStatusStepTwo_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOnboardingApplicationStatusStepThree_possibleTypes: string[] = ['CreditCardOnboardingApplicationStatusStepThree']
    export const isCreditCardOnboardingApplicationStatusStepThree = (obj?: { __typename?: any } | null): obj is CreditCardOnboardingApplicationStatusStepThree => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOnboardingApplicationStatusStepThree"')
      return CreditCardOnboardingApplicationStatusStepThree_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardManageCardDetailsScreen_possibleTypes: string[] = ['CreditCardManageCardDetailsScreen']
    export const isCreditCardManageCardDetailsScreen = (obj?: { __typename?: any } | null): obj is CreditCardManageCardDetailsScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardManageCardDetailsScreen"')
      return CreditCardManageCardDetailsScreen_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardManageCardScreen_possibleTypes: string[] = ['CreditCardManageCardScreen']
    export const isCreditCardManageCardScreen = (obj?: { __typename?: any } | null): obj is CreditCardManageCardScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardManageCardScreen"')
      return CreditCardManageCardScreen_possibleTypes.includes(obj.__typename)
    }
    


    const DigitalWalletPageContent_possibleTypes: string[] = ['DigitalWalletPageContent']
    export const isDigitalWalletPageContent = (obj?: { __typename?: any } | null): obj is DigitalWalletPageContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDigitalWalletPageContent"')
      return DigitalWalletPageContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardDetail_possibleTypes: string[] = ['CreditCardDetail']
    export const isCreditCardDetail = (obj?: { __typename?: any } | null): obj is CreditCardDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardDetail"')
      return CreditCardDetail_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardManageCardAction_possibleTypes: string[] = ['CreditCardManageCardAction']
    export const isCreditCardManageCardAction = (obj?: { __typename?: any } | null): obj is CreditCardManageCardAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardManageCardAction"')
      return CreditCardManageCardAction_possibleTypes.includes(obj.__typename)
    }
    


    const ManageCardActionSection_possibleTypes: string[] = ['ManageCardActionSection']
    export const isManageCardActionSection = (obj?: { __typename?: any } | null): obj is ManageCardActionSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManageCardActionSection"')
      return ManageCardActionSection_possibleTypes.includes(obj.__typename)
    }
    


    const ManageCardDetailsSection_possibleTypes: string[] = ['ManageCardDetailsSection']
    export const isManageCardDetailsSection = (obj?: { __typename?: any } | null): obj is ManageCardDetailsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManageCardDetailsSection"')
      return ManageCardDetailsSection_possibleTypes.includes(obj.__typename)
    }
    


    const DigitalWalletPushProvisioningCredentials_possibleTypes: string[] = ['DigitalWalletPushProvisioningCredentials']
    export const isDigitalWalletPushProvisioningCredentials = (obj?: { __typename?: any } | null): obj is DigitalWalletPushProvisioningCredentials => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDigitalWalletPushProvisioningCredentials"')
      return DigitalWalletPushProvisioningCredentials_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsPortalScreen_possibleTypes: string[] = ['CreditCardRewardsPortalScreen']
    export const isCreditCardRewardsPortalScreen = (obj?: { __typename?: any } | null): obj is CreditCardRewardsPortalScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsPortalScreen"')
      return CreditCardRewardsPortalScreen_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsSummary_possibleTypes: string[] = ['CreditCardRewardsSummary']
    export const isCreditCardRewardsSummary = (obj?: { __typename?: any } | null): obj is CreditCardRewardsSummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsSummary"')
      return CreditCardRewardsSummary_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsOverview_possibleTypes: string[] = ['CreditCardRewardsOverview']
    export const isCreditCardRewardsOverview = (obj?: { __typename?: any } | null): obj is CreditCardRewardsOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsOverview"')
      return CreditCardRewardsOverview_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardClosedAccountContent_possibleTypes: string[] = ['CreditCardClosedAccountContent']
    export const isCreditCardClosedAccountContent = (obj?: { __typename?: any } | null): obj is CreditCardClosedAccountContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardClosedAccountContent"')
      return CreditCardClosedAccountContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardSuspendedAccountContent_possibleTypes: string[] = ['CreditCardSuspendedAccountContent']
    export const isCreditCardSuspendedAccountContent = (obj?: { __typename?: any } | null): obj is CreditCardSuspendedAccountContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardSuspendedAccountContent"')
      return CreditCardSuspendedAccountContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsOverviewTooltipContent_possibleTypes: string[] = ['CreditCardRewardsOverviewTooltipContent']
    export const isCreditCardRewardsOverviewTooltipContent = (obj?: { __typename?: any } | null): obj is CreditCardRewardsOverviewTooltipContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsOverviewTooltipContent"')
      return CreditCardRewardsOverviewTooltipContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsPayoutLocationOverview_possibleTypes: string[] = ['CreditCardRewardsPayoutLocationOverview']
    export const isCreditCardRewardsPayoutLocationOverview = (obj?: { __typename?: any } | null): obj is CreditCardRewardsPayoutLocationOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsPayoutLocationOverview"')
      return CreditCardRewardsPayoutLocationOverview_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardStandardRewardsProgramOverview_possibleTypes: string[] = ['CreditCardStandardRewardsProgramOverview']
    export const isCreditCardStandardRewardsProgramOverview = (obj?: { __typename?: any } | null): obj is CreditCardStandardRewardsProgramOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardStandardRewardsProgramOverview"')
      return CreditCardStandardRewardsProgramOverview_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardStandardRewardsProgramHighlights_possibleTypes: string[] = ['CreditCardStandardRewardsProgramHighlights']
    export const isCreditCardStandardRewardsProgramHighlights = (obj?: { __typename?: any } | null): obj is CreditCardStandardRewardsProgramHighlights => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardStandardRewardsProgramHighlights"')
      return CreditCardStandardRewardsProgramHighlights_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOwnersRewardsProgramOverview_possibleTypes: string[] = ['CreditCardOwnersRewardsProgramOverview']
    export const isCreditCardOwnersRewardsProgramOverview = (obj?: { __typename?: any } | null): obj is CreditCardOwnersRewardsProgramOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOwnersRewardsProgramOverview"')
      return CreditCardOwnersRewardsProgramOverview_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOwnersRewardsProgramOverviewTooltipContent_possibleTypes: string[] = ['CreditCardOwnersRewardsProgramOverviewTooltipContent']
    export const isCreditCardOwnersRewardsProgramOverviewTooltipContent = (obj?: { __typename?: any } | null): obj is CreditCardOwnersRewardsProgramOverviewTooltipContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOwnersRewardsProgramOverviewTooltipContent"')
      return CreditCardOwnersRewardsProgramOverviewTooltipContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOwnersRewardsProgramHighlights_possibleTypes: string[] = ['CreditCardOwnersRewardsProgramHighlights']
    export const isCreditCardOwnersRewardsProgramHighlights = (obj?: { __typename?: any } | null): obj is CreditCardOwnersRewardsProgramHighlights => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOwnersRewardsProgramHighlights"')
      return CreditCardOwnersRewardsProgramHighlights_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardOwnersRewardsProgramHighlightLink_possibleTypes: string[] = ['CreditCardOwnersRewardsProgramHighlightLink']
    export const isCreditCardOwnersRewardsProgramHighlightLink = (obj?: { __typename?: any } | null): obj is CreditCardOwnersRewardsProgramHighlightLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardOwnersRewardsProgramHighlightLink"')
      return CreditCardOwnersRewardsProgramHighlightLink_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsDetailsScreen_possibleTypes: string[] = ['CreditCardRewardsDetailsScreen']
    export const isCreditCardRewardsDetailsScreen = (obj?: { __typename?: any } | null): obj is CreditCardRewardsDetailsScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsDetailsScreen"')
      return CreditCardRewardsDetailsScreen_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsProgramOverview_possibleTypes: string[] = ['CreditCardRewardsProgramOverview']
    export const isCreditCardRewardsProgramOverview = (obj?: { __typename?: any } | null): obj is CreditCardRewardsProgramOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsProgramOverview"')
      return CreditCardRewardsProgramOverview_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardTransactionConnection_possibleTypes: string[] = ['CreditCardTransactionConnection']
    export const isCreditCardTransactionConnection = (obj?: { __typename?: any } | null): obj is CreditCardTransactionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardTransactionConnection"')
      return CreditCardTransactionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardTransactionEdge_possibleTypes: string[] = ['CreditCardTransactionEdge']
    export const isCreditCardTransactionEdge = (obj?: { __typename?: any } | null): obj is CreditCardTransactionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardTransactionEdge"')
      return CreditCardTransactionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardTransaction_possibleTypes: string[] = ['CreditCardTransaction']
    export const isCreditCardTransaction = (obj?: { __typename?: any } | null): obj is CreditCardTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardTransaction"')
      return CreditCardTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardWaitlistConfirmationContent_possibleTypes: string[] = ['CreditCardWaitlistConfirmationContent']
    export const isCreditCardWaitlistConfirmationContent = (obj?: { __typename?: any } | null): obj is CreditCardWaitlistConfirmationContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardWaitlistConfirmationContent"')
      return CreditCardWaitlistConfirmationContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsProgramBreakdown_possibleTypes: string[] = ['CreditCardRewardsProgramBreakdown']
    export const isCreditCardRewardsProgramBreakdown = (obj?: { __typename?: any } | null): obj is CreditCardRewardsProgramBreakdown => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsProgramBreakdown"')
      return CreditCardRewardsProgramBreakdown_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsProgramOverviewConnection_possibleTypes: string[] = ['CreditCardRewardsProgramOverviewConnection']
    export const isCreditCardRewardsProgramOverviewConnection = (obj?: { __typename?: any } | null): obj is CreditCardRewardsProgramOverviewConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsProgramOverviewConnection"')
      return CreditCardRewardsProgramOverviewConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsProgramOverviewEdge_possibleTypes: string[] = ['CreditCardRewardsProgramOverviewEdge']
    export const isCreditCardRewardsProgramOverviewEdge = (obj?: { __typename?: any } | null): obj is CreditCardRewardsProgramOverviewEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsProgramOverviewEdge"')
      return CreditCardRewardsProgramOverviewEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardWaitlistMarketingBanner_possibleTypes: string[] = ['CreditCardWaitlistMarketingBanner']
    export const isCreditCardWaitlistMarketingBanner = (obj?: { __typename?: any } | null): obj is CreditCardWaitlistMarketingBanner => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardWaitlistMarketingBanner"')
      return CreditCardWaitlistMarketingBanner_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardEarlyAccessContent_possibleTypes: string[] = ['CreditCardEarlyAccessContent']
    export const isCreditCardEarlyAccessContent = (obj?: { __typename?: any } | null): obj is CreditCardEarlyAccessContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardEarlyAccessContent"')
      return CreditCardEarlyAccessContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardSelectRewardDestinationContent_possibleTypes: string[] = ['CreditCardSelectRewardDestinationContent']
    export const isCreditCardSelectRewardDestinationContent = (obj?: { __typename?: any } | null): obj is CreditCardSelectRewardDestinationContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardSelectRewardDestinationContent"')
      return CreditCardSelectRewardDestinationContent_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardDestinationOption_possibleTypes: string[] = ['CreditCardRewardDestinationOption']
    export const isCreditCardRewardDestinationOption = (obj?: { __typename?: any } | null): obj is CreditCardRewardDestinationOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardDestinationOption"')
      return CreditCardRewardDestinationOption_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardWaitlistMarketingScreen_possibleTypes: string[] = ['CreditCardWaitlistMarketingScreen']
    export const isCreditCardWaitlistMarketingScreen = (obj?: { __typename?: any } | null): obj is CreditCardWaitlistMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardWaitlistMarketingScreen"')
      return CreditCardWaitlistMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardMarketingPerk_possibleTypes: string[] = ['CreditCardMarketingPerk']
    export const isCreditCardMarketingPerk = (obj?: { __typename?: any } | null): obj is CreditCardMarketingPerk => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardMarketingPerk"')
      return CreditCardMarketingPerk_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardApplyNowMarketingScreen_possibleTypes: string[] = ['CreditCardApplyNowMarketingScreen']
    export const isCreditCardApplyNowMarketingScreen = (obj?: { __typename?: any } | null): obj is CreditCardApplyNowMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardApplyNowMarketingScreen"')
      return CreditCardApplyNowMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmationCtaLabelDestination_possibleTypes: string[] = ['ConfirmationCtaLabelDestination']
    export const isConfirmationCtaLabelDestination = (obj?: { __typename?: any } | null): obj is ConfirmationCtaLabelDestination => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmationCtaLabelDestination"')
      return ConfirmationCtaLabelDestination_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardProductLandingPage_possibleTypes: string[] = ['CreditCardProductLandingPage']
    export const isCreditCardProductLandingPage = (obj?: { __typename?: any } | null): obj is CreditCardProductLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardProductLandingPage"')
      return CreditCardProductLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardLandingPageGraphDetails_possibleTypes: string[] = ['CreditCardLandingPageGraphDetails']
    export const isCreditCardLandingPageGraphDetails = (obj?: { __typename?: any } | null): obj is CreditCardLandingPageGraphDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardLandingPageGraphDetails"')
      return CreditCardLandingPageGraphDetails_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardLandingPageDetailsCard_possibleTypes: string[] = ['CreditCardLandingPageDetailsCard']
    export const isCreditCardLandingPageDetailsCard = (obj?: { __typename?: any } | null): obj is CreditCardLandingPageDetailsCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardLandingPageDetailsCard"')
      return CreditCardLandingPageDetailsCard_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardCommonTransactionMetadata_possibleTypes: string[] = ['CreditCardCommonTransactionMetadata']
    export const isCreditCardCommonTransactionMetadata = (obj?: { __typename?: any } | null): obj is CreditCardCommonTransactionMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardCommonTransactionMetadata"')
      return CreditCardCommonTransactionMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const Crypto_possibleTypes: string[] = ['Crypto']
    export const isCrypto = (obj?: { __typename?: any } | null): obj is Crypto => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCrypto"')
      return Crypto_possibleTypes.includes(obj.__typename)
    }
    


    const CryptoSystemPiesConnection_possibleTypes: string[] = ['CryptoSystemPiesConnection']
    export const isCryptoSystemPiesConnection = (obj?: { __typename?: any } | null): obj is CryptoSystemPiesConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCryptoSystemPiesConnection"')
      return CryptoSystemPiesConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CryptoSystemPiesConnectionEdge_possibleTypes: string[] = ['CryptoSystemPiesConnectionEdge']
    export const isCryptoSystemPiesConnectionEdge = (obj?: { __typename?: any } | null): obj is CryptoSystemPiesConnectionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCryptoSystemPiesConnectionEdge"')
      return CryptoSystemPiesConnectionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CryptoSystemPie_possibleTypes: string[] = ['CryptoSystemPie']
    export const isCryptoSystemPie = (obj?: { __typename?: any } | null): obj is CryptoSystemPie => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCryptoSystemPie"')
      return CryptoSystemPie_possibleTypes.includes(obj.__typename)
    }
    


    const CryptoScreenerConnection_possibleTypes: string[] = ['CryptoScreenerConnection']
    export const isCryptoScreenerConnection = (obj?: { __typename?: any } | null): obj is CryptoScreenerConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCryptoScreenerConnection"')
      return CryptoScreenerConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CryptoScreenerEdge_possibleTypes: string[] = ['CryptoScreenerEdge']
    export const isCryptoScreenerEdge = (obj?: { __typename?: any } | null): obj is CryptoScreenerEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCryptoScreenerEdge"')
      return CryptoScreenerEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CryptoAsset_possibleTypes: string[] = ['CryptoAsset']
    export const isCryptoAsset = (obj?: { __typename?: any } | null): obj is CryptoAsset => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCryptoAsset"')
      return CryptoAsset_possibleTypes.includes(obj.__typename)
    }
    


    const FundScreenerConnection_possibleTypes: string[] = ['FundScreenerConnection']
    export const isFundScreenerConnection = (obj?: { __typename?: any } | null): obj is FundScreenerConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundScreenerConnection"')
      return FundScreenerConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FundSubCategory_possibleTypes: string[] = ['FundSubCategory']
    export const isFundSubCategory = (obj?: { __typename?: any } | null): obj is FundSubCategory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundSubCategory"')
      return FundSubCategory_possibleTypes.includes(obj.__typename)
    }
    


    const FundScreenerEdge_possibleTypes: string[] = ['FundScreenerEdge']
    export const isFundScreenerEdge = (obj?: { __typename?: any } | null): obj is FundScreenerEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundScreenerEdge"')
      return FundScreenerEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FundingSources_possibleTypes: string[] = ['FundingSources']
    export const isFundingSources = (obj?: { __typename?: any } | null): obj is FundingSources => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundingSources"')
      return FundingSources_possibleTypes.includes(obj.__typename)
    }
    


    const FundingSourceConnection_possibleTypes: string[] = ['FundingSourceConnection']
    export const isFundingSourceConnection = (obj?: { __typename?: any } | null): obj is FundingSourceConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundingSourceConnection"')
      return FundingSourceConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FundingSourceEdge_possibleTypes: string[] = ['FundingSourceEdge']
    export const isFundingSourceEdge = (obj?: { __typename?: any } | null): obj is FundingSourceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundingSourceEdge"')
      return FundingSourceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FundingSourceAccount_possibleTypes: string[] = ['FundingSourceAccount']
    export const isFundingSourceAccount = (obj?: { __typename?: any } | null): obj is FundingSourceAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundingSourceAccount"')
      return FundingSourceAccount_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewPromotions_possibleTypes: string[] = ['OverviewPromotions']
    export const isOverviewPromotions = (obj?: { __typename?: any } | null): obj is OverviewPromotions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewPromotions"')
      return OverviewPromotions_possibleTypes.includes(obj.__typename)
    }
    


    const Dividends_possibleTypes: string[] = ['Dividends']
    export const isDividends = (obj?: { __typename?: any } | null): obj is Dividends => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDividends"')
      return Dividends_possibleTypes.includes(obj.__typename)
    }
    


    const UpcomingDividendsConnection_possibleTypes: string[] = ['UpcomingDividendsConnection']
    export const isUpcomingDividendsConnection = (obj?: { __typename?: any } | null): obj is UpcomingDividendsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpcomingDividendsConnection"')
      return UpcomingDividendsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const UpcomingDividendEdge_possibleTypes: string[] = ['UpcomingDividendEdge']
    export const isUpcomingDividendEdge = (obj?: { __typename?: any } | null): obj is UpcomingDividendEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpcomingDividendEdge"')
      return UpcomingDividendEdge_possibleTypes.includes(obj.__typename)
    }
    


    const UpcomingDividend_possibleTypes: string[] = ['UpcomingDividend']
    export const isUpcomingDividend = (obj?: { __typename?: any } | null): obj is UpcomingDividend => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpcomingDividend"')
      return UpcomingDividend_possibleTypes.includes(obj.__typename)
    }
    


    const DividendSummary_possibleTypes: string[] = ['DividendSummary']
    export const isDividendSummary = (obj?: { __typename?: any } | null): obj is DividendSummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDividendSummary"')
      return DividendSummary_possibleTypes.includes(obj.__typename)
    }
    


    const DividendTopEarner_possibleTypes: string[] = ['DividendTopEarner']
    export const isDividendTopEarner = (obj?: { __typename?: any } | null): obj is DividendTopEarner => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDividendTopEarner"')
      return DividendTopEarner_possibleTypes.includes(obj.__typename)
    }
    


    const DividendDataPoint_possibleTypes: string[] = ['DividendDataPoint']
    export const isDividendDataPoint = (obj?: { __typename?: any } | null): obj is DividendDataPoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDividendDataPoint"')
      return DividendDataPoint_possibleTypes.includes(obj.__typename)
    }
    


    const FundFundamentals_possibleTypes: string[] = ['FundFundamentals']
    export const isFundFundamentals = (obj?: { __typename?: any } | null): obj is FundFundamentals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundFundamentals"')
      return FundFundamentals_possibleTypes.includes(obj.__typename)
    }
    


    const FundAllocationInfo_possibleTypes: string[] = ['FundAllocationInfo']
    export const isFundAllocationInfo = (obj?: { __typename?: any } | null): obj is FundAllocationInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundAllocationInfo"')
      return FundAllocationInfo_possibleTypes.includes(obj.__typename)
    }
    


    const FundPerformanceInfo_possibleTypes: string[] = ['FundPerformanceInfo']
    export const isFundPerformanceInfo = (obj?: { __typename?: any } | null): obj is FundPerformanceInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundPerformanceInfo"')
      return FundPerformanceInfo_possibleTypes.includes(obj.__typename)
    }
    


    const FundHoldingInfo_possibleTypes: string[] = ['FundHoldingInfo']
    export const isFundHoldingInfo = (obj?: { __typename?: any } | null): obj is FundHoldingInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundHoldingInfo"')
      return FundHoldingInfo_possibleTypes.includes(obj.__typename)
    }
    


    const Fund_possibleTypes: string[] = ['Fund']
    export const isFund = (obj?: { __typename?: any } | null): obj is Fund => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFund"')
      return Fund_possibleTypes.includes(obj.__typename)
    }
    


    const FundFilings_possibleTypes: string[] = ['FundFilings']
    export const isFundFilings = (obj?: { __typename?: any } | null): obj is FundFilings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundFilings"')
      return FundFilings_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityFiling_possibleTypes: string[] = ['SecurityFiling']
    export const isSecurityFiling = (obj?: { __typename?: any } | null): obj is SecurityFiling => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityFiling"')
      return SecurityFiling_possibleTypes.includes(obj.__typename)
    }
    


    const Fundamentals_possibleTypes: string[] = ['Fundamentals']
    export const isFundamentals = (obj?: { __typename?: any } | null): obj is Fundamentals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundamentals"')
      return Fundamentals_possibleTypes.includes(obj.__typename)
    }
    


    const Equity_possibleTypes: string[] = ['Equity']
    export const isEquity = (obj?: { __typename?: any } | null): obj is Equity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEquity"')
      return Equity_possibleTypes.includes(obj.__typename)
    }
    


    const InvestMarketing_possibleTypes: string[] = ['InvestMarketing']
    export const isInvestMarketing = (obj?: { __typename?: any } | null): obj is InvestMarketing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestMarketing"')
      return InvestMarketing_possibleTypes.includes(obj.__typename)
    }
    


    const InvestMarketingDetails_possibleTypes: string[] = ['InvestMarketingDetails']
    export const isInvestMarketingDetails = (obj?: { __typename?: any } | null): obj is InvestMarketingDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestMarketingDetails"')
      return InvestMarketingDetails_possibleTypes.includes(obj.__typename)
    }
    


    const InvestMarketingContent_possibleTypes: string[] = ['InvestMarketingContent']
    export const isInvestMarketingContent = (obj?: { __typename?: any } | null): obj is InvestMarketingContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestMarketingContent"')
      return InvestMarketingContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestMarketingChecklist_possibleTypes: string[] = ['InvestMarketingChecklist']
    export const isInvestMarketingChecklist = (obj?: { __typename?: any } | null): obj is InvestMarketingChecklist => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestMarketingChecklist"')
      return InvestMarketingChecklist_possibleTypes.includes(obj.__typename)
    }
    


    const InvestMarketingDisclosures_possibleTypes: string[] = ['InvestMarketingDisclosures']
    export const isInvestMarketingDisclosures = (obj?: { __typename?: any } | null): obj is InvestMarketingDisclosures => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestMarketingDisclosures"')
      return InvestMarketingDisclosures_possibleTypes.includes(obj.__typename)
    }
    


    const InvestMarketingScreen_possibleTypes: string[] = ['InvestMarketingScreen']
    export const isInvestMarketingScreen = (obj?: { __typename?: any } | null): obj is InvestMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestMarketingScreen"')
      return InvestMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const InvestProductLandingPage_possibleTypes: string[] = ['InvestProductLandingPage']
    export const isInvestProductLandingPage = (obj?: { __typename?: any } | null): obj is InvestProductLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestProductLandingPage"')
      return InvestProductLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const InvestFullyPaidLendingDisclosure_possibleTypes: string[] = ['InvestFullyPaidLendingDisclosure']
    export const isInvestFullyPaidLendingDisclosure = (obj?: { __typename?: any } | null): obj is InvestFullyPaidLendingDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestFullyPaidLendingDisclosure"')
      return InvestFullyPaidLendingDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSlicePendingCashFlow_possibleTypes: string[] = ['PortfolioSlicePendingCashFlow']
    export const isPortfolioSlicePendingCashFlow = (obj?: { __typename?: any } | null): obj is PortfolioSlicePendingCashFlow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSlicePendingCashFlow"')
      return PortfolioSlicePendingCashFlow_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSliceInvestments_possibleTypes: string[] = ['PortfolioSliceInvestments']
    export const isPortfolioSliceInvestments = (obj?: { __typename?: any } | null): obj is PortfolioSliceInvestments => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSliceInvestments"')
      return PortfolioSliceInvestments_possibleTypes.includes(obj.__typename)
    }
    


    const AllocatedPositionConnection_possibleTypes: string[] = ['AllocatedPositionConnection']
    export const isAllocatedPositionConnection = (obj?: { __typename?: any } | null): obj is AllocatedPositionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAllocatedPositionConnection"')
      return AllocatedPositionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AllocatedPositionEdge_possibleTypes: string[] = ['AllocatedPositionEdge']
    export const isAllocatedPositionEdge = (obj?: { __typename?: any } | null): obj is AllocatedPositionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAllocatedPositionEdge"')
      return AllocatedPositionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AllocatedPosition_possibleTypes: string[] = ['AllocatedPosition']
    export const isAllocatedPosition = (obj?: { __typename?: any } | null): obj is AllocatedPosition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAllocatedPosition"')
      return AllocatedPosition_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSliceOrderStatus_possibleTypes: string[] = ['PortfolioSliceOrderStatus']
    export const isPortfolioSliceOrderStatus = (obj?: { __typename?: any } | null): obj is PortfolioSliceOrderStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSliceOrderStatus"')
      return PortfolioSliceOrderStatus_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSliceOrder_possibleTypes: string[] = ['PortfolioSliceOrder']
    export const isPortfolioSliceOrder = (obj?: { __typename?: any } | null): obj is PortfolioSliceOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSliceOrder"')
      return PortfolioSliceOrder_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSlicePerformance_possibleTypes: string[] = ['PortfolioSlicePerformance']
    export const isPortfolioSlicePerformance = (obj?: { __typename?: any } | null): obj is PortfolioSlicePerformance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSlicePerformance"')
      return PortfolioSlicePerformance_possibleTypes.includes(obj.__typename)
    }
    


    const PerformanceTimeSpan_possibleTypes: string[] = ['PerformanceTimeSpan']
    export const isPerformanceTimeSpan = (obj?: { __typename?: any } | null): obj is PerformanceTimeSpan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPerformanceTimeSpan"')
      return PerformanceTimeSpan_possibleTypes.includes(obj.__typename)
    }
    


    const PerformancePointValue_possibleTypes: string[] = ['PerformancePointValue']
    export const isPerformancePointValue = (obj?: { __typename?: any } | null): obj is PerformancePointValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPerformancePointValue"')
      return PerformancePointValue_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSliceRebalanceStatus_possibleTypes: string[] = ['PortfolioSliceRebalanceStatus']
    export const isPortfolioSliceRebalanceStatus = (obj?: { __typename?: any } | null): obj is PortfolioSliceRebalanceStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSliceRebalanceStatus"')
      return PortfolioSliceRebalanceStatus_possibleTypes.includes(obj.__typename)
    }
    


    const PositionConnection_possibleTypes: string[] = ['PositionConnection']
    export const isPositionConnection = (obj?: { __typename?: any } | null): obj is PositionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionConnection"')
      return PositionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PositionEdge_possibleTypes: string[] = ['PositionEdge']
    export const isPositionEdge = (obj?: { __typename?: any } | null): obj is PositionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionEdge"')
      return PositionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Position_possibleTypes: string[] = ['Position']
    export const isPosition = (obj?: { __typename?: any } | null): obj is Position => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPosition"')
      return Position_possibleTypes.includes(obj.__typename)
    }
    


    const PositionDividends_possibleTypes: string[] = ['PositionDividends']
    export const isPositionDividends = (obj?: { __typename?: any } | null): obj is PositionDividends => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionDividends"')
      return PositionDividends_possibleTypes.includes(obj.__typename)
    }
    


    const PositionSecurityReference_possibleTypes: string[] = ['PositionSecurityReference']
    export const isPositionSecurityReference = (obj?: { __typename?: any } | null): obj is PositionSecurityReference => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionSecurityReference"')
      return PositionSecurityReference_possibleTypes.includes(obj.__typename)
    }
    


    const PositionFullyPaidLending_possibleTypes: string[] = ['PositionFullyPaidLending']
    export const isPositionFullyPaidLending = (obj?: { __typename?: any } | null): obj is PositionFullyPaidLending => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionFullyPaidLending"')
      return PositionFullyPaidLending_possibleTypes.includes(obj.__typename)
    }
    


    const PositionCost_possibleTypes: string[] = ['PositionCost']
    export const isPositionCost = (obj?: { __typename?: any } | null): obj is PositionCost => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionCost"')
      return PositionCost_possibleTypes.includes(obj.__typename)
    }
    


    const PositionValue_possibleTypes: string[] = ['PositionValue']
    export const isPositionValue = (obj?: { __typename?: any } | null): obj is PositionValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionValue"')
      return PositionValue_possibleTypes.includes(obj.__typename)
    }
    


    const PositionGain_possibleTypes: string[] = ['PositionGain']
    export const isPositionGain = (obj?: { __typename?: any } | null): obj is PositionGain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionGain"')
      return PositionGain_possibleTypes.includes(obj.__typename)
    }
    


    const PositionMarginability_possibleTypes: string[] = ['PositionMarginability']
    export const isPositionMarginability = (obj?: { __typename?: any } | null): obj is PositionMarginability => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPositionMarginability"')
      return PositionMarginability_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityReference_possibleTypes: string[] = ['SecurityReference']
    export const isSecurityReference = (obj?: { __typename?: any } | null): obj is SecurityReference => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityReference"')
      return SecurityReference_possibleTypes.includes(obj.__typename)
    }
    


    const MarginHealth_possibleTypes: string[] = ['MarginHealth']
    export const isMarginHealth = (obj?: { __typename?: any } | null): obj is MarginHealth => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginHealth"')
      return MarginHealth_possibleTypes.includes(obj.__typename)
    }
    


    const MarginAvailableToBorrow_possibleTypes: string[] = ['MarginAvailableToBorrow']
    export const isMarginAvailableToBorrow = (obj?: { __typename?: any } | null): obj is MarginAvailableToBorrow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginAvailableToBorrow"')
      return MarginAvailableToBorrow_possibleTypes.includes(obj.__typename)
    }
    


    const MarginHealthThreshold_possibleTypes: string[] = ['MarginHealthThreshold']
    export const isMarginHealthThreshold = (obj?: { __typename?: any } | null): obj is MarginHealthThreshold => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginHealthThreshold"')
      return MarginHealthThreshold_possibleTypes.includes(obj.__typename)
    }
    


    const MarginProductLandingPage_possibleTypes: string[] = ['MarginProductLandingPage']
    export const isMarginProductLandingPage = (obj?: { __typename?: any } | null): obj is MarginProductLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginProductLandingPage"')
      return MarginProductLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const MarginDetail_possibleTypes: string[] = ['MarginDetail']
    export const isMarginDetail = (obj?: { __typename?: any } | null): obj is MarginDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginDetail"')
      return MarginDetail_possibleTypes.includes(obj.__typename)
    }
    


    const MarginLoanInterest_possibleTypes: string[] = ['MarginLoanInterest']
    export const isMarginLoanInterest = (obj?: { __typename?: any } | null): obj is MarginLoanInterest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginLoanInterest"')
      return MarginLoanInterest_possibleTypes.includes(obj.__typename)
    }
    


    const AvailableToBorrowDetails_possibleTypes: string[] = ['AvailableToBorrowDetails']
    export const isAvailableToBorrowDetails = (obj?: { __typename?: any } | null): obj is AvailableToBorrowDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAvailableToBorrowDetails"')
      return AvailableToBorrowDetails_possibleTypes.includes(obj.__typename)
    }
    


    const NetWorth_possibleTypes: string[] = ['NetWorth']
    export const isNetWorth = (obj?: { __typename?: any } | null): obj is NetWorth => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNetWorth"')
      return NetWorth_possibleTypes.includes(obj.__typename)
    }
    


    const ChartableSlice_possibleTypes: string[] = ['CryptoSystemPie','CryptoAsset','Fund','Equity','NetWorth','ChildPortfolioSlice','RootPortfolioSlice','SharedPie','SystemPie','UserPie']
    export const isChartableSlice = (obj?: { __typename?: any } | null): obj is ChartableSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChartableSlice"')
      return ChartableSlice_possibleTypes.includes(obj.__typename)
    }
    


    const ChildPortfolioSlice_possibleTypes: string[] = ['ChildPortfolioSlice']
    export const isChildPortfolioSlice = (obj?: { __typename?: any } | null): obj is ChildPortfolioSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChildPortfolioSlice"')
      return ChildPortfolioSlice_possibleTypes.includes(obj.__typename)
    }
    


    const DeallocatedChild_possibleTypes: string[] = ['DeallocatedChild']
    export const isDeallocatedChild = (obj?: { __typename?: any } | null): obj is DeallocatedChild => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeallocatedChild"')
      return DeallocatedChild_possibleTypes.includes(obj.__typename)
    }
    


    const Pie_possibleTypes: string[] = ['CryptoSystemPie','SharedPie','SystemPie','UserPie']
    export const isPie = (obj?: { __typename?: any } | null): obj is Pie => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPie"')
      return Pie_possibleTypes.includes(obj.__typename)
    }
    


    const RootPortfolioSlice_possibleTypes: string[] = ['RootPortfolioSlice']
    export const isRootPortfolioSlice = (obj?: { __typename?: any } | null): obj is RootPortfolioSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRootPortfolioSlice"')
      return RootPortfolioSlice_possibleTypes.includes(obj.__typename)
    }
    


    const SharedPie_possibleTypes: string[] = ['SharedPie']
    export const isSharedPie = (obj?: { __typename?: any } | null): obj is SharedPie => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSharedPie"')
      return SharedPie_possibleTypes.includes(obj.__typename)
    }
    


    const Slice_possibleTypes: string[] = ['Slice']
    export const isSlice = (obj?: { __typename?: any } | null): obj is Slice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSlice"')
      return Slice_possibleTypes.includes(obj.__typename)
    }
    


    const Sliceable_possibleTypes: string[] = ['CryptoSystemPie','CryptoAsset','Fund','Equity','SharedPie','SystemPie','UserPie']
    export const isSliceable = (obj?: { __typename?: any } | null): obj is Sliceable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSliceable"')
      return Sliceable_possibleTypes.includes(obj.__typename)
    }
    


    const SliceableConnection_possibleTypes: string[] = ['SliceableConnection']
    export const isSliceableConnection = (obj?: { __typename?: any } | null): obj is SliceableConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSliceableConnection"')
      return SliceableConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SliceableEdge_possibleTypes: string[] = ['SliceableEdge']
    export const isSliceableEdge = (obj?: { __typename?: any } | null): obj is SliceableEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSliceableEdge"')
      return SliceableEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SystemPie_possibleTypes: string[] = ['SystemPie']
    export const isSystemPie = (obj?: { __typename?: any } | null): obj is SystemPie => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemPie"')
      return SystemPie_possibleTypes.includes(obj.__typename)
    }
    


    const SystemPieScreenerConnection_possibleTypes: string[] = ['SystemPieScreenerConnection']
    export const isSystemPieScreenerConnection = (obj?: { __typename?: any } | null): obj is SystemPieScreenerConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemPieScreenerConnection"')
      return SystemPieScreenerConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SystemPieScreenerEdge_possibleTypes: string[] = ['SystemPieScreenerEdge']
    export const isSystemPieScreenerEdge = (obj?: { __typename?: any } | null): obj is SystemPieScreenerEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemPieScreenerEdge"')
      return SystemPieScreenerEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SystemPieSubCategory_possibleTypes: string[] = ['SystemPieSubCategory']
    export const isSystemPieSubCategory = (obj?: { __typename?: any } | null): obj is SystemPieSubCategory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemPieSubCategory"')
      return SystemPieSubCategory_possibleTypes.includes(obj.__typename)
    }
    


    const UserPie_possibleTypes: string[] = ['UserPie']
    export const isUserPie = (obj?: { __typename?: any } | null): obj is UserPie => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserPie"')
      return UserPie_possibleTypes.includes(obj.__typename)
    }
    


    const UserPieConnection_possibleTypes: string[] = ['UserPieConnection']
    export const isUserPieConnection = (obj?: { __typename?: any } | null): obj is UserPieConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserPieConnection"')
      return UserPieConnection_possibleTypes.includes(obj.__typename)
    }
    


    const UserPieEdge_possibleTypes: string[] = ['UserPieEdge']
    export const isUserPieEdge = (obj?: { __typename?: any } | null): obj is UserPieEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserPieEdge"')
      return UserPieEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PiePerformance_possibleTypes: string[] = ['PiePerformance']
    export const isPiePerformance = (obj?: { __typename?: any } | null): obj is PiePerformance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPiePerformance"')
      return PiePerformance_possibleTypes.includes(obj.__typename)
    }
    


    const Plus_possibleTypes: string[] = ['Plus']
    export const isPlus = (obj?: { __typename?: any } | null): obj is Plus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlus"')
      return Plus_possibleTypes.includes(obj.__typename)
    }
    


    const PlusPages_possibleTypes: string[] = ['PlusPages']
    export const isPlusPages = (obj?: { __typename?: any } | null): obj is PlusPages => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusPages"')
      return PlusPages_possibleTypes.includes(obj.__typename)
    }
    


    const PlusTrialConfirmationPage_possibleTypes: string[] = ['PlusTrialConfirmationPage']
    export const isPlusTrialConfirmationPage = (obj?: { __typename?: any } | null): obj is PlusTrialConfirmationPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusTrialConfirmationPage"')
      return PlusTrialConfirmationPage_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPage_possibleTypes: string[] = ['PlusMembershipPage']
    export const isPlusMembershipPage = (obj?: { __typename?: any } | null): obj is PlusMembershipPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPage"')
      return PlusMembershipPage_possibleTypes.includes(obj.__typename)
    }
    


    const Testimonial_possibleTypes: string[] = ['Testimonial']
    export const isTestimonial = (obj?: { __typename?: any } | null): obj is Testimonial => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTestimonial"')
      return Testimonial_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageMarketingHeader_possibleTypes: string[] = ['PlusMembershipPageMarketingHeader']
    export const isPlusMembershipPageMarketingHeader = (obj?: { __typename?: any } | null): obj is PlusMembershipPageMarketingHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageMarketingHeader"')
      return PlusMembershipPageMarketingHeader_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageHeader_possibleTypes: string[] = ['PlusMembershipPageHeader']
    export const isPlusMembershipPageHeader = (obj?: { __typename?: any } | null): obj is PlusMembershipPageHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageHeader"')
      return PlusMembershipPageHeader_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPagePaymentOptionsSection_possibleTypes: string[] = ['PlusMembershipPagePaymentOptionsSection']
    export const isPlusMembershipPagePaymentOptionsSection = (obj?: { __typename?: any } | null): obj is PlusMembershipPagePaymentOptionsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPagePaymentOptionsSection"')
      return PlusMembershipPagePaymentOptionsSection_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPagePaymentOption_possibleTypes: string[] = ['PlusMembershipPagePaymentOption']
    export const isPlusMembershipPagePaymentOption = (obj?: { __typename?: any } | null): obj is PlusMembershipPagePaymentOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPagePaymentOption"')
      return PlusMembershipPagePaymentOption_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageMembershipDetailsSection_possibleTypes: string[] = ['PlusMembershipPageMembershipDetailsSection']
    export const isPlusMembershipPageMembershipDetailsSection = (obj?: { __typename?: any } | null): obj is PlusMembershipPageMembershipDetailsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageMembershipDetailsSection"')
      return PlusMembershipPageMembershipDetailsSection_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageMembershipDetail_possibleTypes: string[] = ['PlusMembershipPageMembershipDetail']
    export const isPlusMembershipPageMembershipDetail = (obj?: { __typename?: any } | null): obj is PlusMembershipPageMembershipDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageMembershipDetail"')
      return PlusMembershipPageMembershipDetail_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageBillingHistorySection_possibleTypes: string[] = ['PlusMembershipPageBillingHistorySection']
    export const isPlusMembershipPageBillingHistorySection = (obj?: { __typename?: any } | null): obj is PlusMembershipPageBillingHistorySection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageBillingHistorySection"')
      return PlusMembershipPageBillingHistorySection_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageBenefitsSection_possibleTypes: string[] = ['PlusMembershipPageBenefitsSection']
    export const isPlusMembershipPageBenefitsSection = (obj?: { __typename?: any } | null): obj is PlusMembershipPageBenefitsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageBenefitsSection"')
      return PlusMembershipPageBenefitsSection_possibleTypes.includes(obj.__typename)
    }
    


    const PlusViewAllBenefitsScreen_possibleTypes: string[] = ['PlusViewAllBenefitsScreen']
    export const isPlusViewAllBenefitsScreen = (obj?: { __typename?: any } | null): obj is PlusViewAllBenefitsScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusViewAllBenefitsScreen"')
      return PlusViewAllBenefitsScreen_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPageBenefit_possibleTypes: string[] = ['PlusMembershipPageBenefit']
    export const isPlusMembershipPageBenefit = (obj?: { __typename?: any } | null): obj is PlusMembershipPageBenefit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPageBenefit"')
      return PlusMembershipPageBenefit_possibleTypes.includes(obj.__typename)
    }
    


    const PlusEditPaymentMethodPage_possibleTypes: string[] = ['PlusEditPaymentMethodPage']
    export const isPlusEditPaymentMethodPage = (obj?: { __typename?: any } | null): obj is PlusEditPaymentMethodPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusEditPaymentMethodPage"')
      return PlusEditPaymentMethodPage_possibleTypes.includes(obj.__typename)
    }
    


    const PlusEditPaymentMethodPageBillingCycles_possibleTypes: string[] = ['PlusEditPaymentMethodPageBillingCycles']
    export const isPlusEditPaymentMethodPageBillingCycles = (obj?: { __typename?: any } | null): obj is PlusEditPaymentMethodPageBillingCycles => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusEditPaymentMethodPageBillingCycles"')
      return PlusEditPaymentMethodPageBillingCycles_possibleTypes.includes(obj.__typename)
    }
    


    const PlusEditPaymentMethodPageBillingCycle_possibleTypes: string[] = ['PlusEditPaymentMethodPageBillingCycle']
    export const isPlusEditPaymentMethodPageBillingCycle = (obj?: { __typename?: any } | null): obj is PlusEditPaymentMethodPageBillingCycle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusEditPaymentMethodPageBillingCycle"')
      return PlusEditPaymentMethodPageBillingCycle_possibleTypes.includes(obj.__typename)
    }
    


    const PlusEditPaymentMethodPagePaymentMethods_possibleTypes: string[] = ['PlusEditPaymentMethodPagePaymentMethods']
    export const isPlusEditPaymentMethodPagePaymentMethods = (obj?: { __typename?: any } | null): obj is PlusEditPaymentMethodPagePaymentMethods => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusEditPaymentMethodPagePaymentMethods"')
      return PlusEditPaymentMethodPagePaymentMethods_possibleTypes.includes(obj.__typename)
    }
    


    const PlusEditPaymentMethodPagePaymentMethod_possibleTypes: string[] = ['PlusEditPaymentMethodPagePaymentMethod']
    export const isPlusEditPaymentMethodPagePaymentMethod = (obj?: { __typename?: any } | null): obj is PlusEditPaymentMethodPagePaymentMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusEditPaymentMethodPagePaymentMethod"')
      return PlusEditPaymentMethodPagePaymentMethod_possibleTypes.includes(obj.__typename)
    }
    


    const PlusUpsellPage_possibleTypes: string[] = ['PlusUpsellPage']
    export const isPlusUpsellPage = (obj?: { __typename?: any } | null): obj is PlusUpsellPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusUpsellPage"')
      return PlusUpsellPage_possibleTypes.includes(obj.__typename)
    }
    


    const PlusUpsellExperience_possibleTypes: string[] = ['PlusUpsellExperience']
    export const isPlusUpsellExperience = (obj?: { __typename?: any } | null): obj is PlusUpsellExperience => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusUpsellExperience"')
      return PlusUpsellExperience_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBilling_possibleTypes: string[] = ['PlusBilling']
    export const isPlusBilling = (obj?: { __typename?: any } | null): obj is PlusBilling => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBilling"')
      return PlusBilling_possibleTypes.includes(obj.__typename)
    }
    


    const PlusOnboarding_possibleTypes: string[] = ['PlusOnboarding']
    export const isPlusOnboarding = (obj?: { __typename?: any } | null): obj is PlusOnboarding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusOnboarding"')
      return PlusOnboarding_possibleTypes.includes(obj.__typename)
    }
    


    const PlusOnboardingUpsell_possibleTypes: string[] = ['PlusOnboardingUpsell']
    export const isPlusOnboardingUpsell = (obj?: { __typename?: any } | null): obj is PlusOnboardingUpsell => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusOnboardingUpsell"')
      return PlusOnboardingUpsell_possibleTypes.includes(obj.__typename)
    }
    


    const PlusUpsellHeader_possibleTypes: string[] = ['PlusUpsellHeader']
    export const isPlusUpsellHeader = (obj?: { __typename?: any } | null): obj is PlusUpsellHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusUpsellHeader"')
      return PlusUpsellHeader_possibleTypes.includes(obj.__typename)
    }
    


    const PlusUpsellTitle_possibleTypes: string[] = ['PlusUpsellTitle']
    export const isPlusUpsellTitle = (obj?: { __typename?: any } | null): obj is PlusUpsellTitle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusUpsellTitle"')
      return PlusUpsellTitle_possibleTypes.includes(obj.__typename)
    }
    


    const PlusUpsellBenefit_possibleTypes: string[] = ['PlusUpsellBenefit']
    export const isPlusUpsellBenefit = (obj?: { __typename?: any } | null): obj is PlusUpsellBenefit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusUpsellBenefit"')
      return PlusUpsellBenefit_possibleTypes.includes(obj.__typename)
    }
    


    const PlusUpsellTrialDisclaimer_possibleTypes: string[] = ['PlusUpsellTrialDisclaimer']
    export const isPlusUpsellTrialDisclaimer = (obj?: { __typename?: any } | null): obj is PlusUpsellTrialDisclaimer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusUpsellTrialDisclaimer"')
      return PlusUpsellTrialDisclaimer_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillingPaymentMethod_possibleTypes: string[] = ['PlusBillingPaymentMethod']
    export const isPlusBillingPaymentMethod = (obj?: { __typename?: any } | null): obj is PlusBillingPaymentMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillingPaymentMethod"')
      return PlusBillingPaymentMethod_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillingPaymentMethodOptions_possibleTypes: string[] = ['PlusBillingPaymentMethodOptions']
    export const isPlusBillingPaymentMethodOptions = (obj?: { __typename?: any } | null): obj is PlusBillingPaymentMethodOptions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillingPaymentMethodOptions"')
      return PlusBillingPaymentMethodOptions_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillingDisclaimer_possibleTypes: string[] = ['PlusBillingDisclaimer']
    export const isPlusBillingDisclaimer = (obj?: { __typename?: any } | null): obj is PlusBillingDisclaimer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillingDisclaimer"')
      return PlusBillingDisclaimer_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillingDisclaimerTooltip_possibleTypes: string[] = ['PlusBillingDisclaimerTooltip']
    export const isPlusBillingDisclaimerTooltip = (obj?: { __typename?: any } | null): obj is PlusBillingDisclaimerTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillingDisclaimerTooltip"')
      return PlusBillingDisclaimerTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillHistoryEntryConnection_possibleTypes: string[] = ['PlusBillHistoryEntryConnection']
    export const isPlusBillHistoryEntryConnection = (obj?: { __typename?: any } | null): obj is PlusBillHistoryEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillHistoryEntryConnection"')
      return PlusBillHistoryEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillHistoryEntryEdge_possibleTypes: string[] = ['PlusBillHistoryEntryEdge']
    export const isPlusBillHistoryEntryEdge = (obj?: { __typename?: any } | null): obj is PlusBillHistoryEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillHistoryEntryEdge"')
      return PlusBillHistoryEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBillHistoryEntry_possibleTypes: string[] = ['PlusBillHistoryEntry']
    export const isPlusBillHistoryEntry = (obj?: { __typename?: any } | null): obj is PlusBillHistoryEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBillHistoryEntry"')
      return PlusBillHistoryEntry_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipDetailsUpsell_possibleTypes: string[] = ['PlusMembershipDetailsUpsell']
    export const isPlusMembershipDetailsUpsell = (obj?: { __typename?: any } | null): obj is PlusMembershipDetailsUpsell => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipDetailsUpsell"')
      return PlusMembershipDetailsUpsell_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitsAll_possibleTypes: string[] = ['PlusBenefitsAll']
    export const isPlusBenefitsAll = (obj?: { __typename?: any } | null): obj is PlusBenefitsAll => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitsAll"')
      return PlusBenefitsAll_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitsUsed_possibleTypes: string[] = ['PlusBenefitsUsed']
    export const isPlusBenefitsUsed = (obj?: { __typename?: any } | null): obj is PlusBenefitsUsed => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitsUsed"')
      return PlusBenefitsUsed_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitsUsedForIntercept_possibleTypes: string[] = ['PlusBenefitsUsedForIntercept']
    export const isPlusBenefitsUsedForIntercept = (obj?: { __typename?: any } | null): obj is PlusBenefitsUsedForIntercept => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitsUsedForIntercept"')
      return PlusBenefitsUsedForIntercept_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefit_possibleTypes: string[] = ['PlusBenefit']
    export const isPlusBenefit = (obj?: { __typename?: any } | null): obj is PlusBenefit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefit"')
      return PlusBenefit_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitStandard_possibleTypes: string[] = ['PlusBenefitStandard']
    export const isPlusBenefitStandard = (obj?: { __typename?: any } | null): obj is PlusBenefitStandard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitStandard"')
      return PlusBenefitStandard_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitTooltip_possibleTypes: string[] = ['PlusBenefitTooltip']
    export const isPlusBenefitTooltip = (obj?: { __typename?: any } | null): obj is PlusBenefitTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitTooltip"')
      return PlusBenefitTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipRenewalPricing_possibleTypes: string[] = ['PlusMembershipRenewalPricing']
    export const isPlusMembershipRenewalPricing = (obj?: { __typename?: any } | null): obj is PlusMembershipRenewalPricing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipRenewalPricing"')
      return PlusMembershipRenewalPricing_possibleTypes.includes(obj.__typename)
    }
    


    const PlusNewMembershipPricing_possibleTypes: string[] = ['PlusNewMembershipPricing']
    export const isPlusNewMembershipPricing = (obj?: { __typename?: any } | null): obj is PlusNewMembershipPricing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusNewMembershipPricing"')
      return PlusNewMembershipPricing_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipStatus_possibleTypes: string[] = ['PlusMembershipStatus']
    export const isPlusMembershipStatus = (obj?: { __typename?: any } | null): obj is PlusMembershipStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipStatus"')
      return PlusMembershipStatus_possibleTypes.includes(obj.__typename)
    }
    


    const PlusPaymentMethodOptions_possibleTypes: string[] = ['PlusPaymentMethodOptions']
    export const isPlusPaymentMethodOptions = (obj?: { __typename?: any } | null): obj is PlusPaymentMethodOptions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusPaymentMethodOptions"')
      return PlusPaymentMethodOptions_possibleTypes.includes(obj.__typename)
    }
    


    const PlusPaymentMethod_possibleTypes: string[] = ['PlusPaymentMethod']
    export const isPlusPaymentMethod = (obj?: { __typename?: any } | null): obj is PlusPaymentMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusPaymentMethod"')
      return PlusPaymentMethod_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitForOnboarding_possibleTypes: string[] = ['PlusBenefitForOnboarding']
    export const isPlusBenefitForOnboarding = (obj?: { __typename?: any } | null): obj is PlusBenefitForOnboarding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitForOnboarding"')
      return PlusBenefitForOnboarding_possibleTypes.includes(obj.__typename)
    }
    


    const PlusBenefitCalculatorInitialState_possibleTypes: string[] = ['PlusBenefitCalculatorInitialState']
    export const isPlusBenefitCalculatorInitialState = (obj?: { __typename?: any } | null): obj is PlusBenefitCalculatorInitialState => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusBenefitCalculatorInitialState"')
      return PlusBenefitCalculatorInitialState_possibleTypes.includes(obj.__typename)
    }
    


    const PlusSpendPaymentUnavailableMessage_possibleTypes: string[] = ['PlusSpendPaymentUnavailableMessage']
    export const isPlusSpendPaymentUnavailableMessage = (obj?: { __typename?: any } | null): obj is PlusSpendPaymentUnavailableMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusSpendPaymentUnavailableMessage"')
      return PlusSpendPaymentUnavailableMessage_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPaymentSummary_possibleTypes: string[] = ['PlusMembershipPaymentSummary']
    export const isPlusMembershipPaymentSummary = (obj?: { __typename?: any } | null): obj is PlusMembershipPaymentSummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPaymentSummary"')
      return PlusMembershipPaymentSummary_possibleTypes.includes(obj.__typename)
    }
    


    const PlusMembershipPaymentSummaryItem_possibleTypes: string[] = ['PlusMembershipPaymentSummaryItem']
    export const isPlusMembershipPaymentSummaryItem = (obj?: { __typename?: any } | null): obj is PlusMembershipPaymentSummaryItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusMembershipPaymentSummaryItem"')
      return PlusMembershipPaymentSummaryItem_possibleTypes.includes(obj.__typename)
    }
    


    const BasicBenefitsAll_possibleTypes: string[] = ['BasicBenefitsAll']
    export const isBasicBenefitsAll = (obj?: { __typename?: any } | null): obj is BasicBenefitsAll => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBasicBenefitsAll"')
      return BasicBenefitsAll_possibleTypes.includes(obj.__typename)
    }
    


    const BasicBenefitStandard_possibleTypes: string[] = ['BasicBenefitStandard']
    export const isBasicBenefitStandard = (obj?: { __typename?: any } | null): obj is BasicBenefitStandard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBasicBenefitStandard"')
      return BasicBenefitStandard_possibleTypes.includes(obj.__typename)
    }
    


    const ProductAccountLandingPage_possibleTypes: string[] = ['PersonalLoanProductLandingPage','CreditCardProductLandingPage','InvestProductLandingPage','MarginProductLandingPage','EarnProductLandingPage']
    export const isProductAccountLandingPage = (obj?: { __typename?: any } | null): obj is ProductAccountLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductAccountLandingPage"')
      return ProductAccountLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const ProductAccountLandingPageHeader_possibleTypes: string[] = ['ProductAccountLandingPageHeader']
    export const isProductAccountLandingPageHeader = (obj?: { __typename?: any } | null): obj is ProductAccountLandingPageHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductAccountLandingPageHeader"')
      return ProductAccountLandingPageHeader_possibleTypes.includes(obj.__typename)
    }
    


    const Promotions_possibleTypes: string[] = ['Promotions']
    export const isPromotions = (obj?: { __typename?: any } | null): obj is Promotions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPromotions"')
      return Promotions_possibleTypes.includes(obj.__typename)
    }
    


    const PromotionCampaign_possibleTypes: string[] = ['PromotionCampaign']
    export const isPromotionCampaign = (obj?: { __typename?: any } | null): obj is PromotionCampaign => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPromotionCampaign"')
      return PromotionCampaign_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityDetails_possibleTypes: string[] = ['SecurityDetails']
    export const isSecurityDetails = (obj?: { __typename?: any } | null): obj is SecurityDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityDetails"')
      return SecurityDetails_possibleTypes.includes(obj.__typename)
    }
    


    const CurrentQuote_possibleTypes: string[] = ['CurrentQuote']
    export const isCurrentQuote = (obj?: { __typename?: any } | null): obj is CurrentQuote => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCurrentQuote"')
      return CurrentQuote_possibleTypes.includes(obj.__typename)
    }
    


    const PopularSecurities_possibleTypes: string[] = ['PopularSecurities']
    export const isPopularSecurities = (obj?: { __typename?: any } | null): obj is PopularSecurities => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPopularSecurities"')
      return PopularSecurities_possibleTypes.includes(obj.__typename)
    }
    


    const PopularSecurity_possibleTypes: string[] = ['PopularSecurity']
    export const isPopularSecurity = (obj?: { __typename?: any } | null): obj is PopularSecurity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPopularSecurity"')
      return PopularSecurity_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityDetailsProfile_possibleTypes: string[] = ['SecurityDetailsProfile']
    export const isSecurityDetailsProfile = (obj?: { __typename?: any } | null): obj is SecurityDetailsProfile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityDetailsProfile"')
      return SecurityDetailsProfile_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityTopHoldings_possibleTypes: string[] = ['SecurityTopHoldings']
    export const isSecurityTopHoldings = (obj?: { __typename?: any } | null): obj is SecurityTopHoldings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityTopHoldings"')
      return SecurityTopHoldings_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityMarketNews_possibleTypes: string[] = ['SecurityMarketNews']
    export const isSecurityMarketNews = (obj?: { __typename?: any } | null): obj is SecurityMarketNews => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityMarketNews"')
      return SecurityMarketNews_possibleTypes.includes(obj.__typename)
    }
    


    const Save_possibleTypes: string[] = ['Save']
    export const isSave = (obj?: { __typename?: any } | null): obj is Save => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSave"')
      return Save_possibleTypes.includes(obj.__typename)
    }
    


    const Savings_possibleTypes: string[] = ['Savings']
    export const isSavings = (obj?: { __typename?: any } | null): obj is Savings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavings"')
      return Savings_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsJointAccountInvitationConnection_possibleTypes: string[] = ['SavingsJointAccountInvitationConnection']
    export const isSavingsJointAccountInvitationConnection = (obj?: { __typename?: any } | null): obj is SavingsJointAccountInvitationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsJointAccountInvitationConnection"')
      return SavingsJointAccountInvitationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsJointAccountInvitationEdge_possibleTypes: string[] = ['SavingsJointAccountInvitationEdge']
    export const isSavingsJointAccountInvitationEdge = (obj?: { __typename?: any } | null): obj is SavingsJointAccountInvitationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsJointAccountInvitationEdge"')
      return SavingsJointAccountInvitationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsJointAccountInvitation_possibleTypes: string[] = ['SavingsJointAccountInvitation']
    export const isSavingsJointAccountInvitation = (obj?: { __typename?: any } | null): obj is SavingsJointAccountInvitation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsJointAccountInvitation"')
      return SavingsJointAccountInvitation_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAgreements_possibleTypes: string[] = ['SavingsAgreements']
    export const isSavingsAgreements = (obj?: { __typename?: any } | null): obj is SavingsAgreements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAgreements"')
      return SavingsAgreements_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountConnection_possibleTypes: string[] = ['SavingsAccountConnection']
    export const isSavingsAccountConnection = (obj?: { __typename?: any } | null): obj is SavingsAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountConnection"')
      return SavingsAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountEdge_possibleTypes: string[] = ['SavingsAccountEdge']
    export const isSavingsAccountEdge = (obj?: { __typename?: any } | null): obj is SavingsAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountEdge"')
      return SavingsAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccount_possibleTypes: string[] = ['SavingsAccount']
    export const isSavingsAccount = (obj?: { __typename?: any } | null): obj is SavingsAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccount"')
      return SavingsAccount_possibleTypes.includes(obj.__typename)
    }
    


    const TransactionsEmptyState_possibleTypes: string[] = ['TransactionsEmptyState']
    export const isTransactionsEmptyState = (obj?: { __typename?: any } | null): obj is TransactionsEmptyState => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransactionsEmptyState"')
      return TransactionsEmptyState_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountStatus_possibleTypes: string[] = ['SavingsAccountStatus']
    export const isSavingsAccountStatus = (obj?: { __typename?: any } | null): obj is SavingsAccountStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountStatus"')
      return SavingsAccountStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountBalances_possibleTypes: string[] = ['SavingsAccountBalances']
    export const isSavingsAccountBalances = (obj?: { __typename?: any } | null): obj is SavingsAccountBalances => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountBalances"')
      return SavingsAccountBalances_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountInterest_possibleTypes: string[] = ['SavingsAccountInterest']
    export const isSavingsAccountInterest = (obj?: { __typename?: any } | null): obj is SavingsAccountInterest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountInterest"')
      return SavingsAccountInterest_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountTransfers_possibleTypes: string[] = ['SavingsAccountTransfers']
    export const isSavingsAccountTransfers = (obj?: { __typename?: any } | null): obj is SavingsAccountTransfers => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountTransfers"')
      return SavingsAccountTransfers_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountTransferLimits_possibleTypes: string[] = ['SavingsAccountTransferLimits']
    export const isSavingsAccountTransferLimits = (obj?: { __typename?: any } | null): obj is SavingsAccountTransferLimits => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountTransferLimits"')
      return SavingsAccountTransferLimits_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountHeader_possibleTypes: string[] = ['SavingsAccountHeader']
    export const isSavingsAccountHeader = (obj?: { __typename?: any } | null): obj is SavingsAccountHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountHeader"')
      return SavingsAccountHeader_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsBalanceSection_possibleTypes: string[] = ['SavingsBalanceSection']
    export const isSavingsBalanceSection = (obj?: { __typename?: any } | null): obj is SavingsBalanceSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsBalanceSection"')
      return SavingsBalanceSection_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsInterestSection_possibleTypes: string[] = ['SavingsInterestSection']
    export const isSavingsInterestSection = (obj?: { __typename?: any } | null): obj is SavingsInterestSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsInterestSection"')
      return SavingsInterestSection_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountDetails_possibleTypes: string[] = ['SavingsAccountDetails']
    export const isSavingsAccountDetails = (obj?: { __typename?: any } | null): obj is SavingsAccountDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountDetails"')
      return SavingsAccountDetails_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountDetailSection_possibleTypes: string[] = ['SavingsAccountDetailSection']
    export const isSavingsAccountDetailSection = (obj?: { __typename?: any } | null): obj is SavingsAccountDetailSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountDetailSection"')
      return SavingsAccountDetailSection_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountDetail_possibleTypes: string[] = ['SavingsAccountDetail']
    export const isSavingsAccountDetail = (obj?: { __typename?: any } | null): obj is SavingsAccountDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountDetail"')
      return SavingsAccountDetail_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsDisclosure_possibleTypes: string[] = ['SavingsDisclosure']
    export const isSavingsDisclosure = (obj?: { __typename?: any } | null): obj is SavingsDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsDisclosure"')
      return SavingsDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsOnboarding_possibleTypes: string[] = ['SavingsOnboarding']
    export const isSavingsOnboarding = (obj?: { __typename?: any } | null): obj is SavingsOnboarding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsOnboarding"')
      return SavingsOnboarding_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsAccountTypePage_possibleTypes: string[] = ['SavingsAccountTypePage']
    export const isSavingsAccountTypePage = (obj?: { __typename?: any } | null): obj is SavingsAccountTypePage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsAccountTypePage"')
      return SavingsAccountTypePage_possibleTypes.includes(obj.__typename)
    }
    


    const JointAccountInvitationPage_possibleTypes: string[] = ['JointAccountInvitationPage']
    export const isJointAccountInvitationPage = (obj?: { __typename?: any } | null): obj is JointAccountInvitationPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isJointAccountInvitationPage"')
      return JointAccountInvitationPage_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsNameAccountPage_possibleTypes: string[] = ['SavingsNameAccountPage']
    export const isSavingsNameAccountPage = (obj?: { __typename?: any } | null): obj is SavingsNameAccountPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsNameAccountPage"')
      return SavingsNameAccountPage_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsCustomerDueDiligenceQuestions_possibleTypes: string[] = ['SavingsCustomerDueDiligenceQuestions']
    export const isSavingsCustomerDueDiligenceQuestions = (obj?: { __typename?: any } | null): obj is SavingsCustomerDueDiligenceQuestions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsCustomerDueDiligenceQuestions"')
      return SavingsCustomerDueDiligenceQuestions_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsDueDiligenceQuestion_possibleTypes: string[] = ['SavingsDueDiligenceQuestion']
    export const isSavingsDueDiligenceQuestion = (obj?: { __typename?: any } | null): obj is SavingsDueDiligenceQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsDueDiligenceQuestion"')
      return SavingsDueDiligenceQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsCustomerDueDiligenceAnswer_possibleTypes: string[] = ['SavingsCustomerDueDiligenceAnswer']
    export const isSavingsCustomerDueDiligenceAnswer = (obj?: { __typename?: any } | null): obj is SavingsCustomerDueDiligenceAnswer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsCustomerDueDiligenceAnswer"')
      return SavingsCustomerDueDiligenceAnswer_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsTransactionConnection_possibleTypes: string[] = ['SavingsTransactionConnection']
    export const isSavingsTransactionConnection = (obj?: { __typename?: any } | null): obj is SavingsTransactionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsTransactionConnection"')
      return SavingsTransactionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsTransactionEdge_possibleTypes: string[] = ['SavingsTransactionEdge']
    export const isSavingsTransactionEdge = (obj?: { __typename?: any } | null): obj is SavingsTransactionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsTransactionEdge"')
      return SavingsTransactionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SavingsTransaction_possibleTypes: string[] = ['SavingsTransaction']
    export const isSavingsTransaction = (obj?: { __typename?: any } | null): obj is SavingsTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavingsTransaction"')
      return SavingsTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const EarnProductLandingPage_possibleTypes: string[] = ['EarnProductLandingPage']
    export const isEarnProductLandingPage = (obj?: { __typename?: any } | null): obj is EarnProductLandingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEarnProductLandingPage"')
      return EarnProductLandingPage_possibleTypes.includes(obj.__typename)
    }
    


    const EarnAccountDetailsCard_possibleTypes: string[] = ['EarnAccountDetailsCard']
    export const isEarnAccountDetailsCard = (obj?: { __typename?: any } | null): obj is EarnAccountDetailsCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEarnAccountDetailsCard"')
      return EarnAccountDetailsCard_possibleTypes.includes(obj.__typename)
    }
    


    const DetailsGroup_possibleTypes: string[] = ['DetailsGroup']
    export const isDetailsGroup = (obj?: { __typename?: any } | null): obj is DetailsGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDetailsGroup"')
      return DetailsGroup_possibleTypes.includes(obj.__typename)
    }
    


    const DetailRow_possibleTypes: string[] = ['DetailRow']
    export const isDetailRow = (obj?: { __typename?: any } | null): obj is DetailRow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDetailRow"')
      return DetailRow_possibleTypes.includes(obj.__typename)
    }
    


    const Security_possibleTypes: string[] = ['CryptoAsset','Fund','Equity']
    export const isSecurity = (obj?: { __typename?: any } | null): obj is Security => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurity"')
      return Security_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityScreenerConnection_possibleTypes: string[] = ['SecurityScreenerConnection']
    export const isSecurityScreenerConnection = (obj?: { __typename?: any } | null): obj is SecurityScreenerConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityScreenerConnection"')
      return SecurityScreenerConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityScreenerEdge_possibleTypes: string[] = ['SecurityScreenerEdge']
    export const isSecurityScreenerEdge = (obj?: { __typename?: any } | null): obj is SecurityScreenerEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityScreenerEdge"')
      return SecurityScreenerEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SecuritySubCategory_possibleTypes: string[] = ['SecuritySubCategory']
    export const isSecuritySubCategory = (obj?: { __typename?: any } | null): obj is SecuritySubCategory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecuritySubCategory"')
      return SecuritySubCategory_possibleTypes.includes(obj.__typename)
    }
    


    const SliceableSearchHighlight_possibleTypes: string[] = ['SliceableSearchHighlight']
    export const isSliceableSearchHighlight = (obj?: { __typename?: any } | null): obj is SliceableSearchHighlight => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSliceableSearchHighlight"')
      return SliceableSearchHighlight_possibleTypes.includes(obj.__typename)
    }
    


    const SearchHighlightSubstring_possibleTypes: string[] = ['SearchHighlightSubstring']
    export const isSearchHighlightSubstring = (obj?: { __typename?: any } | null): obj is SearchHighlightSubstring => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchHighlightSubstring"')
      return SearchHighlightSubstring_possibleTypes.includes(obj.__typename)
    }
    


    const SpendMarketingScreen_possibleTypes: string[] = ['SpendMarketingScreen']
    export const isSpendMarketingScreen = (obj?: { __typename?: any } | null): obj is SpendMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendMarketingScreen"')
      return SpendMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const HistoricalPiePerformance_possibleTypes: string[] = ['HistoricalPiePerformance']
    export const isHistoricalPiePerformance = (obj?: { __typename?: any } | null): obj is HistoricalPiePerformance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHistoricalPiePerformance"')
      return HistoricalPiePerformance_possibleTypes.includes(obj.__typename)
    }
    


    const BacktestedPiePerformance_possibleTypes: string[] = ['BacktestedPiePerformance']
    export const isBacktestedPiePerformance = (obj?: { __typename?: any } | null): obj is BacktestedPiePerformance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBacktestedPiePerformance"')
      return BacktestedPiePerformance_possibleTypes.includes(obj.__typename)
    }
    


    const SystemPieCategoryDetails_possibleTypes: string[] = ['SystemPieCategoryDetails']
    export const isSystemPieCategoryDetails = (obj?: { __typename?: any } | null): obj is SystemPieCategoryDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemPieCategoryDetails"')
      return SystemPieCategoryDetails_possibleTypes.includes(obj.__typename)
    }
    


    const Transfers_possibleTypes: string[] = ['Transfers']
    export const isTransfers = (obj?: { __typename?: any } | null): obj is Transfers => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransfers"')
      return Transfers_possibleTypes.includes(obj.__typename)
    }
    


    const TransfersDisclaimer_possibleTypes: string[] = ['TransfersDisclaimer']
    export const isTransfersDisclaimer = (obj?: { __typename?: any } | null): obj is TransfersDisclaimer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransfersDisclaimer"')
      return TransfersDisclaimer_possibleTypes.includes(obj.__typename)
    }
    


    const TransfersDisclaimerTooltip_possibleTypes: string[] = ['TransfersDisclaimerTooltip']
    export const isTransfersDisclaimerTooltip = (obj?: { __typename?: any } | null): obj is TransfersDisclaimerTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransfersDisclaimerTooltip"')
      return TransfersDisclaimerTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoneyV2_possibleTypes: string[] = ['MoveMoneyV2']
    export const isMoveMoneyV2 = (obj?: { __typename?: any } | null): obj is MoveMoneyV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoneyV2"')
      return MoveMoneyV2_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoneyCallToAction_possibleTypes: string[] = ['MoveMoneyCallToAction']
    export const isMoveMoneyCallToAction = (obj?: { __typename?: any } | null): obj is MoveMoneyCallToAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoneyCallToAction"')
      return MoveMoneyCallToAction_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoney_possibleTypes: string[] = ['MoveMoney']
    export const isMoveMoney = (obj?: { __typename?: any } | null): obj is MoveMoney => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoney"')
      return MoveMoney_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoneyListItems_possibleTypes: string[] = ['MoveMoneyListItems']
    export const isMoveMoneyListItems = (obj?: { __typename?: any } | null): obj is MoveMoneyListItems => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoneyListItems"')
      return MoveMoneyListItems_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoneyCategory_possibleTypes: string[] = ['MoveMoneyCategory']
    export const isMoveMoneyCategory = (obj?: { __typename?: any } | null): obj is MoveMoneyCategory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoneyCategory"')
      return MoveMoneyCategory_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoneyOption_possibleTypes: string[] = ['MoveMoneyOption']
    export const isMoveMoneyOption = (obj?: { __typename?: any } | null): obj is MoveMoneyOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoneyOption"')
      return MoveMoneyOption_possibleTypes.includes(obj.__typename)
    }
    


    const MoveMoneyWireInstructions_possibleTypes: string[] = ['MoveMoneyWireInstructions']
    export const isMoveMoneyWireInstructions = (obj?: { __typename?: any } | null): obj is MoveMoneyWireInstructions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveMoneyWireInstructions"')
      return MoveMoneyWireInstructions_possibleTypes.includes(obj.__typename)
    }
    


    const WireInstructionField_possibleTypes: string[] = ['WireInstructionField']
    export const isWireInstructionField = (obj?: { __typename?: any } | null): obj is WireInstructionField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWireInstructionField"')
      return WireInstructionField_possibleTypes.includes(obj.__typename)
    }
    


    const TransferRequirements_possibleTypes: string[] = ['TransferRequirements']
    export const isTransferRequirements = (obj?: { __typename?: any } | null): obj is TransferRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferRequirements"')
      return TransferRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const TransferAmountPresetOption_possibleTypes: string[] = ['TransferAmountPresetOption']
    export const isTransferAmountPresetOption = (obj?: { __typename?: any } | null): obj is TransferAmountPresetOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferAmountPresetOption"')
      return TransferAmountPresetOption_possibleTypes.includes(obj.__typename)
    }
    


    const ScheduledTransferPresetOption_possibleTypes: string[] = ['ScheduledTransferPresetOption']
    export const isScheduledTransferPresetOption = (obj?: { __typename?: any } | null): obj is ScheduledTransferPresetOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScheduledTransferPresetOption"')
      return ScheduledTransferPresetOption_possibleTypes.includes(obj.__typename)
    }
    


    const TransferDetailsMessage_possibleTypes: string[] = ['TransferDetailsMessage']
    export const isTransferDetailsMessage = (obj?: { __typename?: any } | null): obj is TransferDetailsMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferDetailsMessage"')
      return TransferDetailsMessage_possibleTypes.includes(obj.__typename)
    }
    


    const TransferSuggestionLink_possibleTypes: string[] = ['TransferSuggestionLink']
    export const isTransferSuggestionLink = (obj?: { __typename?: any } | null): obj is TransferSuggestionLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferSuggestionLink"')
      return TransferSuggestionLink_possibleTypes.includes(obj.__typename)
    }
    


    const TransferSuggestion_possibleTypes: string[] = ['TransferSuggestion']
    export const isTransferSuggestion = (obj?: { __typename?: any } | null): obj is TransferSuggestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferSuggestion"')
      return TransferSuggestion_possibleTypes.includes(obj.__typename)
    }
    


    const TransferDetailsMessageItem_possibleTypes: string[] = ['TransferDetailsMessageItem']
    export const isTransferDetailsMessageItem = (obj?: { __typename?: any } | null): obj is TransferDetailsMessageItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferDetailsMessageItem"')
      return TransferDetailsMessageItem_possibleTypes.includes(obj.__typename)
    }
    


    const TransferDetailsMessageTooltip_possibleTypes: string[] = ['TransferDetailsMessageTooltip']
    export const isTransferDetailsMessageTooltip = (obj?: { __typename?: any } | null): obj is TransferDetailsMessageTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferDetailsMessageTooltip"')
      return TransferDetailsMessageTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const TransferDetailsMessageTooltipBody_possibleTypes: string[] = ['TransferDetailsMessageTooltipBody']
    export const isTransferDetailsMessageTooltipBody = (obj?: { __typename?: any } | null): obj is TransferDetailsMessageTooltipBody => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferDetailsMessageTooltipBody"')
      return TransferDetailsMessageTooltipBody_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceConnection_possibleTypes: string[] = ['TransferInstanceConnection']
    export const isTransferInstanceConnection = (obj?: { __typename?: any } | null): obj is TransferInstanceConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceConnection"')
      return TransferInstanceConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceEdge_possibleTypes: string[] = ['TransferInstanceEdge']
    export const isTransferInstanceEdge = (obj?: { __typename?: any } | null): obj is TransferInstanceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceEdge"')
      return TransferInstanceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceDetails_possibleTypes: string[] = ['TransferInstanceDetails']
    export const isTransferInstanceDetails = (obj?: { __typename?: any } | null): obj is TransferInstanceDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceDetails"')
      return TransferInstanceDetails_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceDetailAdditionalDetail_possibleTypes: string[] = ['TransferInstanceDetailAdditionalDetail']
    export const isTransferInstanceDetailAdditionalDetail = (obj?: { __typename?: any } | null): obj is TransferInstanceDetailAdditionalDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceDetailAdditionalDetail"')
      return TransferInstanceDetailAdditionalDetail_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceSteps_possibleTypes: string[] = ['TransferInstanceSteps']
    export const isTransferInstanceSteps = (obj?: { __typename?: any } | null): obj is TransferInstanceSteps => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceSteps"')
      return TransferInstanceSteps_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceDetailsMessage_possibleTypes: string[] = ['TransferInstanceDetailsMessage']
    export const isTransferInstanceDetailsMessage = (obj?: { __typename?: any } | null): obj is TransferInstanceDetailsMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceDetailsMessage"')
      return TransferInstanceDetailsMessage_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceTimingMessage_possibleTypes: string[] = ['TransferInstanceTimingMessage']
    export const isTransferInstanceTimingMessage = (obj?: { __typename?: any } | null): obj is TransferInstanceTimingMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceTimingMessage"')
      return TransferInstanceTimingMessage_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceDetailsCancelTransfer_possibleTypes: string[] = ['TransferInstanceDetailsCancelTransfer']
    export const isTransferInstanceDetailsCancelTransfer = (obj?: { __typename?: any } | null): obj is TransferInstanceDetailsCancelTransfer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceDetailsCancelTransfer"')
      return TransferInstanceDetailsCancelTransfer_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceDetailsDisclaimer_possibleTypes: string[] = ['TransferInstanceDetailsDisclaimer']
    export const isTransferInstanceDetailsDisclaimer = (obj?: { __typename?: any } | null): obj is TransferInstanceDetailsDisclaimer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceDetailsDisclaimer"')
      return TransferInstanceDetailsDisclaimer_possibleTypes.includes(obj.__typename)
    }
    


    const NewSmartTransferFocusOptionSet_possibleTypes: string[] = ['NewSmartTransferFocusOptionSet']
    export const isNewSmartTransferFocusOptionSet = (obj?: { __typename?: any } | null): obj is NewSmartTransferFocusOptionSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNewSmartTransferFocusOptionSet"')
      return NewSmartTransferFocusOptionSet_possibleTypes.includes(obj.__typename)
    }
    


    const NewSmartTransferFocusOption_possibleTypes: string[] = ['NewSmartTransferFocusOption']
    export const isNewSmartTransferFocusOption = (obj?: { __typename?: any } | null): obj is NewSmartTransferFocusOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNewSmartTransferFocusOption"')
      return NewSmartTransferFocusOption_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferRuleEditRequirements_possibleTypes: string[] = ['SmartTransferRuleEditRequirements']
    export const isSmartTransferRuleEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferRuleEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferRuleEditRequirements"')
      return SmartTransferRuleEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferBalanceTriggerEditRequirements_possibleTypes: string[] = ['SmartTransferBalanceTriggerEditRequirements']
    export const isSmartTransferBalanceTriggerEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferBalanceTriggerEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferBalanceTriggerEditRequirements"')
      return SmartTransferBalanceTriggerEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferTriggerTimingMessage_possibleTypes: string[] = ['SmartTransferTriggerTimingMessage']
    export const isSmartTransferTriggerTimingMessage = (obj?: { __typename?: any } | null): obj is SmartTransferTriggerTimingMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferTriggerTimingMessage"')
      return SmartTransferTriggerTimingMessage_possibleTypes.includes(obj.__typename)
    }
    


    const NewSmartTransferContraParticipantEntryOptionSet_possibleTypes: string[] = ['NewSmartTransferContraParticipantEntryOptionSet']
    export const isNewSmartTransferContraParticipantEntryOptionSet = (obj?: { __typename?: any } | null): obj is NewSmartTransferContraParticipantEntryOptionSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNewSmartTransferContraParticipantEntryOptionSet"')
      return NewSmartTransferContraParticipantEntryOptionSet_possibleTypes.includes(obj.__typename)
    }
    


    const NewSmartTransferContraParticipantEntryOption_possibleTypes: string[] = ['NewSmartTransferContraParticipantEntryOption']
    export const isNewSmartTransferContraParticipantEntryOption = (obj?: { __typename?: any } | null): obj is NewSmartTransferContraParticipantEntryOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNewSmartTransferContraParticipantEntryOption"')
      return NewSmartTransferContraParticipantEntryOption_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferContraParticipantEntryEditRequirements_possibleTypes: string[] = ['SmartTransferContraParticipantEntryEditRequirements']
    export const isSmartTransferContraParticipantEntryEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferContraParticipantEntryEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferContraParticipantEntryEditRequirements"')
      return SmartTransferContraParticipantEntryEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFulfillmentConditionOptionSet_possibleTypes: string[] = ['SmartTransferFulfillmentConditionOptionSet']
    export const isSmartTransferFulfillmentConditionOptionSet = (obj?: { __typename?: any } | null): obj is SmartTransferFulfillmentConditionOptionSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFulfillmentConditionOptionSet"')
      return SmartTransferFulfillmentConditionOptionSet_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFulfillmentConditionOption_possibleTypes: string[] = ['SmartTransferFulfillmentConditionOption']
    export const isSmartTransferFulfillmentConditionOption = (obj?: { __typename?: any } | null): obj is SmartTransferFulfillmentConditionOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFulfillmentConditionOption"')
      return SmartTransferFulfillmentConditionOption_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferIndefiniteFulfillmentConditionEditRequirements','SmartTransferCashBalanceCapFulfillmentConditionEditRequirements','SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements','SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements','SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements','SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements','SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements']
    export const isSmartTransferFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFulfillmentConditionEditRequirements"')
      return SmartTransferFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferIndefiniteFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferIndefiniteFulfillmentConditionEditRequirements']
    export const isSmartTransferIndefiniteFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferIndefiniteFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferIndefiniteFulfillmentConditionEditRequirements"')
      return SmartTransferIndefiniteFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferCashBalanceCapFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferCashBalanceCapFulfillmentConditionEditRequirements']
    export const isSmartTransferCashBalanceCapFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferCashBalanceCapFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferCashBalanceCapFulfillmentConditionEditRequirements"')
      return SmartTransferCashBalanceCapFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements']
    export const isSmartTransferFundingPerPeriodFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFundingPerPeriodFulfillmentConditionEditRequirements"')
      return SmartTransferFundingPerPeriodFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption_possibleTypes: string[] = ['SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption']
    export const isSmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption = (obj?: { __typename?: any } | null): obj is SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption"')
      return SmartTransferFundingPerPeriodFulfillmentConditionEditRequirementsPeriodOption_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements']
    export const isSmartTransferIraYearlyFundingFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferIraYearlyFundingFulfillmentConditionEditRequirements"')
      return SmartTransferIraYearlyFundingFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements']
    export const isSmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements"')
      return SmartTransferIraFundingPerPeriodFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements']
    export const isSmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements"')
      return SmartTransferCreditBorrowedCapFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements_possibleTypes: string[] = ['SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements']
    export const isSmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements = (obj?: { __typename?: any } | null): obj is SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements"')
      return SmartTransferCreditUtilizationCapFulfillmentConditionEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const TransferParticipantList_possibleTypes: string[] = ['TransferParticipantList']
    export const isTransferParticipantList = (obj?: { __typename?: any } | null): obj is TransferParticipantList => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferParticipantList"')
      return TransferParticipantList_possibleTypes.includes(obj.__typename)
    }
    


    const TransferParticipantGroups_possibleTypes: string[] = ['TransferParticipantGroups']
    export const isTransferParticipantGroups = (obj?: { __typename?: any } | null): obj is TransferParticipantGroups => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferParticipantGroups"')
      return TransferParticipantGroups_possibleTypes.includes(obj.__typename)
    }
    


    const TransferParticipantGroup_possibleTypes: string[] = ['TransferParticipantGroup']
    export const isTransferParticipantGroup = (obj?: { __typename?: any } | null): obj is TransferParticipantGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferParticipantGroup"')
      return TransferParticipantGroup_possibleTypes.includes(obj.__typename)
    }
    


    const TransferParticipantDetails_possibleTypes: string[] = ['TransferParticipantDetails']
    export const isTransferParticipantDetails = (obj?: { __typename?: any } | null): obj is TransferParticipantDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferParticipantDetails"')
      return TransferParticipantDetails_possibleTypes.includes(obj.__typename)
    }
    


    const TransferParticipantRelationship_possibleTypes: string[] = ['TransferParticipantRelationship']
    export const isTransferParticipantRelationship = (obj?: { __typename?: any } | null): obj is TransferParticipantRelationship => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferParticipantRelationship"')
      return TransferParticipantRelationship_possibleTypes.includes(obj.__typename)
    }
    


    const TransferParticipant_possibleTypes: string[] = ['Account','PersonalLoan','CreditCardAccount','FundingSourceAccount','SavingsAccount','AchRelationshipViaDeposits','AchRelationshipViaLink','BorrowAccount','SpendAccount','PhysicalCheck','SpendExternalAccount']
    export const isTransferParticipant = (obj?: { __typename?: any } | null): obj is TransferParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferParticipant"')
      return TransferParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const AcatTransferInstanceDetailsMessage_possibleTypes: string[] = ['AcatTransferInstanceDetailsMessage']
    export const isAcatTransferInstanceDetailsMessage = (obj?: { __typename?: any } | null): obj is AcatTransferInstanceDetailsMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatTransferInstanceDetailsMessage"')
      return AcatTransferInstanceDetailsMessage_possibleTypes.includes(obj.__typename)
    }
    


    const AcatTransferInstanceDetails_possibleTypes: string[] = ['AcatTransferInstanceDetails']
    export const isAcatTransferInstanceDetails = (obj?: { __typename?: any } | null): obj is AcatTransferInstanceDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatTransferInstanceDetails"')
      return AcatTransferInstanceDetails_possibleTypes.includes(obj.__typename)
    }
    


    const AcatTransferInstanceDetailsExplainer_possibleTypes: string[] = ['AcatTransferInstanceDetailsExplainer']
    export const isAcatTransferInstanceDetailsExplainer = (obj?: { __typename?: any } | null): obj is AcatTransferInstanceDetailsExplainer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatTransferInstanceDetailsExplainer"')
      return AcatTransferInstanceDetailsExplainer_possibleTypes.includes(obj.__typename)
    }
    


    const AcatTransferInstanceStep_possibleTypes: string[] = ['AcatTransferInstanceStep']
    export const isAcatTransferInstanceStep = (obj?: { __typename?: any } | null): obj is AcatTransferInstanceStep => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatTransferInstanceStep"')
      return AcatTransferInstanceStep_possibleTypes.includes(obj.__typename)
    }
    


    const AcatTransferInstanceStatus_possibleTypes: string[] = ['AcatTransferInstanceStatus']
    export const isAcatTransferInstanceStatus = (obj?: { __typename?: any } | null): obj is AcatTransferInstanceStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatTransferInstanceStatus"')
      return AcatTransferInstanceStatus_possibleTypes.includes(obj.__typename)
    }
    


    const AcatTransferInstance_possibleTypes: string[] = ['AcatTransferInstance']
    export const isAcatTransferInstance = (obj?: { __typename?: any } | null): obj is AcatTransferInstance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatTransferInstance"')
      return AcatTransferInstance_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstance_possibleTypes: string[] = ['TransferInstance']
    export const isTransferInstance = (obj?: { __typename?: any } | null): obj is TransferInstance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstance"')
      return TransferInstance_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceStatus_possibleTypes: string[] = ['TransferInstanceStatus']
    export const isTransferInstanceStatus = (obj?: { __typename?: any } | null): obj is TransferInstanceStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceStatus"')
      return TransferInstanceStatus_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceStep_possibleTypes: string[] = ['TransferInstanceStep']
    export const isTransferInstanceStep = (obj?: { __typename?: any } | null): obj is TransferInstanceStep => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceStep"')
      return TransferInstanceStep_possibleTypes.includes(obj.__typename)
    }
    


    const TransferInstanceStepStatus_possibleTypes: string[] = ['TransferInstanceStepStatus']
    export const isTransferInstanceStepStatus = (obj?: { __typename?: any } | null): obj is TransferInstanceStepStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferInstanceStepStatus"')
      return TransferInstanceStepStatus_possibleTypes.includes(obj.__typename)
    }
    


    const TransferRule_possibleTypes: string[] = ['SmartTransferRule','ScheduledTransferRule','OtherTransferRule']
    export const isTransferRule = (obj?: { __typename?: any } | null): obj is TransferRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferRule"')
      return TransferRule_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferRule_possibleTypes: string[] = ['SmartTransferRule']
    export const isSmartTransferRule = (obj?: { __typename?: any } | null): obj is SmartTransferRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferRule"')
      return SmartTransferRule_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferBalanceTrigger_possibleTypes: string[] = ['SmartTransferBalanceTrigger']
    export const isSmartTransferBalanceTrigger = (obj?: { __typename?: any } | null): obj is SmartTransferBalanceTrigger => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferBalanceTrigger"')
      return SmartTransferBalanceTrigger_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferContraParticipantEntry_possibleTypes: string[] = ['SmartTransferContraParticipantEntry']
    export const isSmartTransferContraParticipantEntry = (obj?: { __typename?: any } | null): obj is SmartTransferContraParticipantEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferContraParticipantEntry"')
      return SmartTransferContraParticipantEntry_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFulfillmentCondition_possibleTypes: string[] = ['SmartTransferIndefiniteFulfillmentCondition','SmartTransferCashBalanceCapFulfillmentCondition','SmartTransferFundingPerPeriodFulfillmentCondition','SmartTransferIraYearlyFundingFulfillmentCondition','SmartTransferIraFundingPerPeriodFulfillmentCondition','SmartTransferCreditBorrowedCapFulfillmentCondition','SmartTransferCreditUtilizationCapFulfillmentCondition']
    export const isSmartTransferFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFulfillmentCondition"')
      return SmartTransferFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferIndefiniteFulfillmentCondition_possibleTypes: string[] = ['SmartTransferIndefiniteFulfillmentCondition']
    export const isSmartTransferIndefiniteFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferIndefiniteFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferIndefiniteFulfillmentCondition"')
      return SmartTransferIndefiniteFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferCashBalanceCapFulfillmentCondition_possibleTypes: string[] = ['SmartTransferCashBalanceCapFulfillmentCondition']
    export const isSmartTransferCashBalanceCapFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferCashBalanceCapFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferCashBalanceCapFulfillmentCondition"')
      return SmartTransferCashBalanceCapFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferFundingPerPeriodFulfillmentCondition_possibleTypes: string[] = ['SmartTransferFundingPerPeriodFulfillmentCondition']
    export const isSmartTransferFundingPerPeriodFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferFundingPerPeriodFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferFundingPerPeriodFulfillmentCondition"')
      return SmartTransferFundingPerPeriodFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferIraYearlyFundingFulfillmentCondition_possibleTypes: string[] = ['SmartTransferIraYearlyFundingFulfillmentCondition']
    export const isSmartTransferIraYearlyFundingFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferIraYearlyFundingFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferIraYearlyFundingFulfillmentCondition"')
      return SmartTransferIraYearlyFundingFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferIraFundingPerPeriodFulfillmentCondition_possibleTypes: string[] = ['SmartTransferIraFundingPerPeriodFulfillmentCondition']
    export const isSmartTransferIraFundingPerPeriodFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferIraFundingPerPeriodFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferIraFundingPerPeriodFulfillmentCondition"')
      return SmartTransferIraFundingPerPeriodFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferCreditBorrowedCapFulfillmentCondition_possibleTypes: string[] = ['SmartTransferCreditBorrowedCapFulfillmentCondition']
    export const isSmartTransferCreditBorrowedCapFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferCreditBorrowedCapFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferCreditBorrowedCapFulfillmentCondition"')
      return SmartTransferCreditBorrowedCapFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const SmartTransferCreditUtilizationCapFulfillmentCondition_possibleTypes: string[] = ['SmartTransferCreditUtilizationCapFulfillmentCondition']
    export const isSmartTransferCreditUtilizationCapFulfillmentCondition = (obj?: { __typename?: any } | null): obj is SmartTransferCreditUtilizationCapFulfillmentCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartTransferCreditUtilizationCapFulfillmentCondition"')
      return SmartTransferCreditUtilizationCapFulfillmentCondition_possibleTypes.includes(obj.__typename)
    }
    


    const ScheduledTransferRule_possibleTypes: string[] = ['ScheduledTransferRule']
    export const isScheduledTransferRule = (obj?: { __typename?: any } | null): obj is ScheduledTransferRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScheduledTransferRule"')
      return ScheduledTransferRule_possibleTypes.includes(obj.__typename)
    }
    


    const ScheduledTransferRuleAdditionalDetail_possibleTypes: string[] = ['ScheduledTransferRuleAdditionalDetail']
    export const isScheduledTransferRuleAdditionalDetail = (obj?: { __typename?: any } | null): obj is ScheduledTransferRuleAdditionalDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScheduledTransferRuleAdditionalDetail"')
      return ScheduledTransferRuleAdditionalDetail_possibleTypes.includes(obj.__typename)
    }
    


    const OtherTransferRule_possibleTypes: string[] = ['OtherTransferRule']
    export const isOtherTransferRule = (obj?: { __typename?: any } | null): obj is OtherTransferRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOtherTransferRule"')
      return OtherTransferRule_possibleTypes.includes(obj.__typename)
    }
    


    const InvestInitialDepositPromotionalText_possibleTypes: string[] = ['InvestInitialDepositPromotionalText']
    export const isInvestInitialDepositPromotionalText = (obj?: { __typename?: any } | null): obj is InvestInitialDepositPromotionalText => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestInitialDepositPromotionalText"')
      return InvestInitialDepositPromotionalText_possibleTypes.includes(obj.__typename)
    }
    


    const TransferValidation_possibleTypes: string[] = ['TransferValidation']
    export const isTransferValidation = (obj?: { __typename?: any } | null): obj is TransferValidation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferValidation"')
      return TransferValidation_possibleTypes.includes(obj.__typename)
    }
    


    const TransferValidationMessage_possibleTypes: string[] = ['TransferValidationMessage']
    export const isTransferValidationMessage = (obj?: { __typename?: any } | null): obj is TransferValidationMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferValidationMessage"')
      return TransferValidationMessage_possibleTypes.includes(obj.__typename)
    }
    


    const TransferAmountLineItem_possibleTypes: string[] = ['TransferAmountLineItem']
    export const isTransferAmountLineItem = (obj?: { __typename?: any } | null): obj is TransferAmountLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferAmountLineItem"')
      return TransferAmountLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ValueSnapshot_possibleTypes: string[] = ['ValueSnapshot']
    export const isValueSnapshot = (obj?: { __typename?: any } | null): obj is ValueSnapshot => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isValueSnapshot"')
      return ValueSnapshot_possibleTypes.includes(obj.__typename)
    }
    


    const Viewer_possibleTypes: string[] = ['Viewer']
    export const isViewer = (obj?: { __typename?: any } | null): obj is Viewer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewer"')
      return Viewer_possibleTypes.includes(obj.__typename)
    }
    


    const Query_possibleTypes: string[] = ['Query']
    export const isQuery = (obj?: { __typename?: any } | null): obj is Query => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuery"')
      return Query_possibleTypes.includes(obj.__typename)
    }
    


    const RegisterUserPayload_possibleTypes: string[] = ['RegisterUserPayload']
    export const isRegisterUserPayload = (obj?: { __typename?: any } | null): obj is RegisterUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRegisterUserPayload"')
      return RegisterUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RegisterUserOutcome_possibleTypes: string[] = ['RegisterUserOutcome']
    export const isRegisterUserOutcome = (obj?: { __typename?: any } | null): obj is RegisterUserOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRegisterUserOutcome"')
      return RegisterUserOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const RegisterUserResult_possibleTypes: string[] = ['RegisterUserResult']
    export const isRegisterUserResult = (obj?: { __typename?: any } | null): obj is RegisterUserResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRegisterUserResult"')
      return RegisterUserResult_possibleTypes.includes(obj.__typename)
    }
    


    const QueueLoanDisbursementPayload_possibleTypes: string[] = ['QueueLoanDisbursementPayload']
    export const isQueueLoanDisbursementPayload = (obj?: { __typename?: any } | null): obj is QueueLoanDisbursementPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQueueLoanDisbursementPayload"')
      return QueueLoanDisbursementPayload_possibleTypes.includes(obj.__typename)
    }
    


    const QueueLoanDisbursementOutcome_possibleTypes: string[] = ['QueueLoanDisbursementOutcome']
    export const isQueueLoanDisbursementOutcome = (obj?: { __typename?: any } | null): obj is QueueLoanDisbursementOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQueueLoanDisbursementOutcome"')
      return QueueLoanDisbursementOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const OpenAccountPayload_possibleTypes: string[] = ['OpenAccountPayload']
    export const isOpenAccountPayload = (obj?: { __typename?: any } | null): obj is OpenAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenAccountPayload"')
      return OpenAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OpenAccountOutcome_possibleTypes: string[] = ['OpenAccountOutcome']
    export const isOpenAccountOutcome = (obj?: { __typename?: any } | null): obj is OpenAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenAccountOutcome"')
      return OpenAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const OpenAccountResult_possibleTypes: string[] = ['OpenAccountResult']
    export const isOpenAccountResult = (obj?: { __typename?: any } | null): obj is OpenAccountResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenAccountResult"')
      return OpenAccountResult_possibleTypes.includes(obj.__typename)
    }
    


    const OpenCustodialAccountPayload_possibleTypes: string[] = ['OpenCustodialAccountPayload']
    export const isOpenCustodialAccountPayload = (obj?: { __typename?: any } | null): obj is OpenCustodialAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenCustodialAccountPayload"')
      return OpenCustodialAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OpenCustodialAccountOutcome_possibleTypes: string[] = ['OpenCustodialAccountOutcome']
    export const isOpenCustodialAccountOutcome = (obj?: { __typename?: any } | null): obj is OpenCustodialAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpenCustodialAccountOutcome"')
      return OpenCustodialAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateProfilePayload_possibleTypes: string[] = ['UpdateProfilePayload']
    export const isUpdateProfilePayload = (obj?: { __typename?: any } | null): obj is UpdateProfilePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateProfilePayload"')
      return UpdateProfilePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateProfileOutcome_possibleTypes: string[] = ['UpdateProfileOutcome']
    export const isUpdateProfileOutcome = (obj?: { __typename?: any } | null): obj is UpdateProfileOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateProfileOutcome"')
      return UpdateProfileOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateProfileResult_possibleTypes: string[] = ['UpdateProfileResult']
    export const isUpdateProfileResult = (obj?: { __typename?: any } | null): obj is UpdateProfileResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateProfileResult"')
      return UpdateProfileResult_possibleTypes.includes(obj.__typename)
    }
    


    const CompleteDocumentUploadRequestPayload_possibleTypes: string[] = ['CompleteDocumentUploadRequestPayload']
    export const isCompleteDocumentUploadRequestPayload = (obj?: { __typename?: any } | null): obj is CompleteDocumentUploadRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompleteDocumentUploadRequestPayload"')
      return CompleteDocumentUploadRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompleteDocumentUploadPayload_possibleTypes: string[] = ['CompleteDocumentUploadPayload']
    export const isCompleteDocumentUploadPayload = (obj?: { __typename?: any } | null): obj is CompleteDocumentUploadPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompleteDocumentUploadPayload"')
      return CompleteDocumentUploadPayload_possibleTypes.includes(obj.__typename)
    }
    


    const LinkExternalAccountsPayload_possibleTypes: string[] = ['LinkExternalAccountsPayload']
    export const isLinkExternalAccountsPayload = (obj?: { __typename?: any } | null): obj is LinkExternalAccountsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkExternalAccountsPayload"')
      return LinkExternalAccountsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const LinkExternalAccountsOutcome_possibleTypes: string[] = ['LinkExternalAccountsOutcome']
    export const isLinkExternalAccountsOutcome = (obj?: { __typename?: any } | null): obj is LinkExternalAccountsOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkExternalAccountsOutcome"')
      return LinkExternalAccountsOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const LinkExternalAccountsResult_possibleTypes: string[] = ['LinkExternalAccountsResult']
    export const isLinkExternalAccountsResult = (obj?: { __typename?: any } | null): obj is LinkExternalAccountsResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkExternalAccountsResult"')
      return LinkExternalAccountsResult_possibleTypes.includes(obj.__typename)
    }
    


    const RefreshEstimatedTradingPayload_possibleTypes: string[] = ['RefreshEstimatedTradingPayload']
    export const isRefreshEstimatedTradingPayload = (obj?: { __typename?: any } | null): obj is RefreshEstimatedTradingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefreshEstimatedTradingPayload"')
      return RefreshEstimatedTradingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RefreshEstimatedTradingOutcome_possibleTypes: string[] = ['RefreshEstimatedTradingOutcome']
    export const isRefreshEstimatedTradingOutcome = (obj?: { __typename?: any } | null): obj is RefreshEstimatedTradingOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefreshEstimatedTradingOutcome"')
      return RefreshEstimatedTradingOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const RefreshEstimatedTradingResult_possibleTypes: string[] = ['RefreshEstimatedTradingResult']
    export const isRefreshEstimatedTradingResult = (obj?: { __typename?: any } | null): obj is RefreshEstimatedTradingResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefreshEstimatedTradingResult"')
      return RefreshEstimatedTradingResult_possibleTypes.includes(obj.__typename)
    }
    


    const SetSmartTransferRulePayload_possibleTypes: string[] = ['SetSmartTransferRulePayload']
    export const isSetSmartTransferRulePayload = (obj?: { __typename?: any } | null): obj is SetSmartTransferRulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetSmartTransferRulePayload"')
      return SetSmartTransferRulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetSmartTransferRuleOutcome_possibleTypes: string[] = ['SetSmartTransferRuleOutcome']
    export const isSetSmartTransferRuleOutcome = (obj?: { __typename?: any } | null): obj is SetSmartTransferRuleOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetSmartTransferRuleOutcome"')
      return SetSmartTransferRuleOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetEnabledOnTransferRulePayload_possibleTypes: string[] = ['SetEnabledOnTransferRulePayload']
    export const isSetEnabledOnTransferRulePayload = (obj?: { __typename?: any } | null): obj is SetEnabledOnTransferRulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetEnabledOnTransferRulePayload"')
      return SetEnabledOnTransferRulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetEnabledOnTransferRuleOutcome_possibleTypes: string[] = ['SetEnabledOnTransferRuleOutcome']
    export const isSetEnabledOnTransferRuleOutcome = (obj?: { __typename?: any } | null): obj is SetEnabledOnTransferRuleOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetEnabledOnTransferRuleOutcome"')
      return SetEnabledOnTransferRuleOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAccountDocumentLinkPayload_possibleTypes: string[] = ['CreateAccountDocumentLinkPayload']
    export const isCreateAccountDocumentLinkPayload = (obj?: { __typename?: any } | null): obj is CreateAccountDocumentLinkPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAccountDocumentLinkPayload"')
      return CreateAccountDocumentLinkPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateAccountDocumentLinkOutcome_possibleTypes: string[] = ['CreateAccountDocumentLinkOutcome']
    export const isCreateAccountDocumentLinkOutcome = (obj?: { __typename?: any } | null): obj is CreateAccountDocumentLinkOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateAccountDocumentLinkOutcome"')
      return CreateAccountDocumentLinkOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePlaidLinkItemAddClientTokenPayload_possibleTypes: string[] = ['GeneratePlaidLinkItemAddClientTokenPayload']
    export const isGeneratePlaidLinkItemAddClientTokenPayload = (obj?: { __typename?: any } | null): obj is GeneratePlaidLinkItemAddClientTokenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePlaidLinkItemAddClientTokenPayload"')
      return GeneratePlaidLinkItemAddClientTokenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePlaidLinkItemAddClientTokenOutcome_possibleTypes: string[] = ['GeneratePlaidLinkItemAddClientTokenOutcome']
    export const isGeneratePlaidLinkItemAddClientTokenOutcome = (obj?: { __typename?: any } | null): obj is GeneratePlaidLinkItemAddClientTokenOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePlaidLinkItemAddClientTokenOutcome"')
      return GeneratePlaidLinkItemAddClientTokenOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePaymentClientTokenPayload_possibleTypes: string[] = ['GeneratePaymentClientTokenPayload']
    export const isGeneratePaymentClientTokenPayload = (obj?: { __typename?: any } | null): obj is GeneratePaymentClientTokenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePaymentClientTokenPayload"')
      return GeneratePaymentClientTokenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePaymentClientTokenOutcome_possibleTypes: string[] = ['GeneratePaymentClientTokenOutcome']
    export const isGeneratePaymentClientTokenOutcome = (obj?: { __typename?: any } | null): obj is GeneratePaymentClientTokenOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePaymentClientTokenOutcome"')
      return GeneratePaymentClientTokenOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePresignedUrlPayload_possibleTypes: string[] = ['GeneratePresignedUrlPayload']
    export const isGeneratePresignedUrlPayload = (obj?: { __typename?: any } | null): obj is GeneratePresignedUrlPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePresignedUrlPayload"')
      return GeneratePresignedUrlPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GenerateGenericPresignedDocumentUrlPayload_possibleTypes: string[] = ['GenerateGenericPresignedDocumentUrlPayload']
    export const isGenerateGenericPresignedDocumentUrlPayload = (obj?: { __typename?: any } | null): obj is GenerateGenericPresignedDocumentUrlPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenerateGenericPresignedDocumentUrlPayload"')
      return GenerateGenericPresignedDocumentUrlPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratePresignedUrlOutcome_possibleTypes: string[] = ['GeneratePresignedUrlOutcome']
    export const isGeneratePresignedUrlOutcome = (obj?: { __typename?: any } | null): obj is GeneratePresignedUrlOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratePresignedUrlOutcome"')
      return GeneratePresignedUrlOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const GenerateGenericPresignedDocumentUrlOutcome_possibleTypes: string[] = ['GenerateGenericPresignedDocumentUrlOutcome']
    export const isGenerateGenericPresignedDocumentUrlOutcome = (obj?: { __typename?: any } | null): obj is GenerateGenericPresignedDocumentUrlOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenerateGenericPresignedDocumentUrlOutcome"')
      return GenerateGenericPresignedDocumentUrlOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetNotificationPreferencesPayload_possibleTypes: string[] = ['SetNotificationPreferencesPayload']
    export const isSetNotificationPreferencesPayload = (obj?: { __typename?: any } | null): obj is SetNotificationPreferencesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetNotificationPreferencesPayload"')
      return SetNotificationPreferencesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetNotificationPreferencesOutcome_possibleTypes: string[] = ['SetNotificationPreferencesOutcome']
    export const isSetNotificationPreferencesOutcome = (obj?: { __typename?: any } | null): obj is SetNotificationPreferencesOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetNotificationPreferencesOutcome"')
      return SetNotificationPreferencesOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ApplyPromotionCodePayload_possibleTypes: string[] = ['ApplyPromotionCodePayload']
    export const isApplyPromotionCodePayload = (obj?: { __typename?: any } | null): obj is ApplyPromotionCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApplyPromotionCodePayload"')
      return ApplyPromotionCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ApplyPromotionCodeResult_possibleTypes: string[] = ['ApplyPromotionCodeResult']
    export const isApplyPromotionCodeResult = (obj?: { __typename?: any } | null): obj is ApplyPromotionCodeResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApplyPromotionCodeResult"')
      return ApplyPromotionCodeResult_possibleTypes.includes(obj.__typename)
    }
    


    const MarkUnmanagedHoldingsForLiquidationPayload_possibleTypes: string[] = ['MarkUnmanagedHoldingsForLiquidationPayload']
    export const isMarkUnmanagedHoldingsForLiquidationPayload = (obj?: { __typename?: any } | null): obj is MarkUnmanagedHoldingsForLiquidationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarkUnmanagedHoldingsForLiquidationPayload"')
      return MarkUnmanagedHoldingsForLiquidationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UnmarkUnmanagedHoldingsForLiquidationPayload_possibleTypes: string[] = ['UnmarkUnmanagedHoldingsForLiquidationPayload']
    export const isUnmarkUnmanagedHoldingsForLiquidationPayload = (obj?: { __typename?: any } | null): obj is UnmarkUnmanagedHoldingsForLiquidationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmarkUnmanagedHoldingsForLiquidationPayload"')
      return UnmarkUnmanagedHoldingsForLiquidationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesPayload_possibleTypes: string[] = ['MoveSlicesPayload']
    export const isMoveSlicesPayload = (obj?: { __typename?: any } | null): obj is MoveSlicesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesPayload"')
      return MoveSlicesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesBatchPayload_possibleTypes: string[] = ['MoveSlicesBatchPayload']
    export const isMoveSlicesBatchPayload = (obj?: { __typename?: any } | null): obj is MoveSlicesBatchPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesBatchPayload"')
      return MoveSlicesBatchPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesBatchOutcome_possibleTypes: string[] = ['MoveSlicesBatchOutcome']
    export const isMoveSlicesBatchOutcome = (obj?: { __typename?: any } | null): obj is MoveSlicesBatchOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesBatchOutcome"')
      return MoveSlicesBatchOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitInvestAcatTransferPayload_possibleTypes: string[] = ['SubmitInvestAcatTransferPayload']
    export const isSubmitInvestAcatTransferPayload = (obj?: { __typename?: any } | null): obj is SubmitInvestAcatTransferPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitInvestAcatTransferPayload"')
      return SubmitInvestAcatTransferPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitInvestAcatTransferOutcome_possibleTypes: string[] = ['SubmitInvestAcatTransferOutcome']
    export const isSubmitInvestAcatTransferOutcome = (obj?: { __typename?: any } | null): obj is SubmitInvestAcatTransferOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitInvestAcatTransferOutcome"')
      return SubmitInvestAcatTransferOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const AutoPayApplicationSetUpPayload_possibleTypes: string[] = ['AutoPayApplicationSetUpPayload']
    export const isAutoPayApplicationSetUpPayload = (obj?: { __typename?: any } | null): obj is AutoPayApplicationSetUpPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutoPayApplicationSetUpPayload"')
      return AutoPayApplicationSetUpPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AutoPayApplicationSetUpOutcome_possibleTypes: string[] = ['AutoPayApplicationSetUpOutcome']
    export const isAutoPayApplicationSetUpOutcome = (obj?: { __typename?: any } | null): obj is AutoPayApplicationSetUpOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutoPayApplicationSetUpOutcome"')
      return AutoPayApplicationSetUpOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const MoveUnmanagedHoldingsPayload_possibleTypes: string[] = ['MoveUnmanagedHoldingsPayload']
    export const isMoveUnmanagedHoldingsPayload = (obj?: { __typename?: any } | null): obj is MoveUnmanagedHoldingsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveUnmanagedHoldingsPayload"')
      return MoveUnmanagedHoldingsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SelectPaymentsAccountPayload_possibleTypes: string[] = ['SelectPaymentsAccountPayload']
    export const isSelectPaymentsAccountPayload = (obj?: { __typename?: any } | null): obj is SelectPaymentsAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSelectPaymentsAccountPayload"')
      return SelectPaymentsAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SelectPaymentsAccountOutcome_possibleTypes: string[] = ['SelectPaymentsAccountOutcome']
    export const isSelectPaymentsAccountOutcome = (obj?: { __typename?: any } | null): obj is SelectPaymentsAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSelectPaymentsAccountOutcome"')
      return SelectPaymentsAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SelectPaymentsAccountResult_possibleTypes: string[] = ['SelectPaymentsAccountResult']
    export const isSelectPaymentsAccountResult = (obj?: { __typename?: any } | null): obj is SelectPaymentsAccountResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSelectPaymentsAccountResult"')
      return SelectPaymentsAccountResult_possibleTypes.includes(obj.__typename)
    }
    


    const ListableAccount_possibleTypes: string[] = ['Account','PersonalLoan','SavingsAccount','BorrowAccount','SpendAccount']
    export const isListableAccount = (obj?: { __typename?: any } | null): obj is ListableAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isListableAccount"')
      return ListableAccount_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConfiguration_possibleTypes: string[] = ['AccountConfiguration']
    export const isAccountConfiguration = (obj?: { __typename?: any } | null): obj is AccountConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConfiguration"')
      return AccountConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConfigurationDividendsCta_possibleTypes: string[] = ['AccountConfigurationDividendsCta']
    export const isAccountConfigurationDividendsCta = (obj?: { __typename?: any } | null): obj is AccountConfigurationDividendsCta => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConfigurationDividendsCta"')
      return AccountConfigurationDividendsCta_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConfigurationDividends_possibleTypes: string[] = ['AccountConfigurationDividends']
    export const isAccountConfigurationDividends = (obj?: { __typename?: any } | null): obj is AccountConfigurationDividends => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConfigurationDividends"')
      return AccountConfigurationDividends_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConfigurationDividendsHoldings_possibleTypes: string[] = ['AccountConfigurationDividendsHoldings']
    export const isAccountConfigurationDividendsHoldings = (obj?: { __typename?: any } | null): obj is AccountConfigurationDividendsHoldings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConfigurationDividendsHoldings"')
      return AccountConfigurationDividendsHoldings_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConfigDividendSetting_possibleTypes: string[] = ['AccountConfigDividendSetting']
    export const isAccountConfigDividendSetting = (obj?: { __typename?: any } | null): obj is AccountConfigDividendSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConfigDividendSetting"')
      return AccountConfigDividendSetting_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConfigDividendTransferAccount_possibleTypes: string[] = ['AccountConfigDividendTransferAccount']
    export const isAccountConfigDividendTransferAccount = (obj?: { __typename?: any } | null): obj is AccountConfigDividendTransferAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConfigDividendTransferAccount"')
      return AccountConfigDividendTransferAccount_possibleTypes.includes(obj.__typename)
    }
    


    const OutstandingTransferCredits_possibleTypes: string[] = ['OutstandingTransferCredits']
    export const isOutstandingTransferCredits = (obj?: { __typename?: any } | null): obj is OutstandingTransferCredits => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOutstandingTransferCredits"')
      return OutstandingTransferCredits_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlices_possibleTypes: string[] = ['MoveSlices']
    export const isMoveSlices = (obj?: { __typename?: any } | null): obj is MoveSlices => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlices"')
      return MoveSlices_possibleTypes.includes(obj.__typename)
    }
    


    const MoveDisabledTradingWindowTooltip_possibleTypes: string[] = ['MoveDisabledTradingWindowTooltip']
    export const isMoveDisabledTradingWindowTooltip = (obj?: { __typename?: any } | null): obj is MoveDisabledTradingWindowTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveDisabledTradingWindowTooltip"')
      return MoveDisabledTradingWindowTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveDisabledDestinationPieSetTooltip_possibleTypes: string[] = ['MoveDisabledDestinationPieSetTooltip']
    export const isMoveDisabledDestinationPieSetTooltip = (obj?: { __typename?: any } | null): obj is MoveDisabledDestinationPieSetTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveDisabledDestinationPieSetTooltip"')
      return MoveDisabledDestinationPieSetTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesPendingOrdersContent_possibleTypes: string[] = ['MoveSlicesPendingOrdersContent']
    export const isMoveSlicesPendingOrdersContent = (obj?: { __typename?: any } | null): obj is MoveSlicesPendingOrdersContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesPendingOrdersContent"')
      return MoveSlicesPendingOrdersContent_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesTutorialContent_possibleTypes: string[] = ['MoveSlicesTutorialContent']
    export const isMoveSlicesTutorialContent = (obj?: { __typename?: any } | null): obj is MoveSlicesTutorialContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesTutorialContent"')
      return MoveSlicesTutorialContent_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesTutorialContentItem_possibleTypes: string[] = ['MoveSlicesTutorialContentItem']
    export const isMoveSlicesTutorialContentItem = (obj?: { __typename?: any } | null): obj is MoveSlicesTutorialContentItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesTutorialContentItem"')
      return MoveSlicesTutorialContentItem_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesMoveToPieContent_possibleTypes: string[] = ['MoveSlicesMoveToPieContent']
    export const isMoveSlicesMoveToPieContent = (obj?: { __typename?: any } | null): obj is MoveSlicesMoveToPieContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesMoveToPieContent"')
      return MoveSlicesMoveToPieContent_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesAugmentedPortfolioSliceDestinations_possibleTypes: string[] = ['MoveSlicesAugmentedPortfolioSliceDestinations']
    export const isMoveSlicesAugmentedPortfolioSliceDestinations = (obj?: { __typename?: any } | null): obj is MoveSlicesAugmentedPortfolioSliceDestinations => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesAugmentedPortfolioSliceDestinations"')
      return MoveSlicesAugmentedPortfolioSliceDestinations_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesPortfolioSliceDestinationsValidity_possibleTypes: string[] = ['MoveSlicesPortfolioSliceDestinationsValidity']
    export const isMoveSlicesPortfolioSliceDestinationsValidity = (obj?: { __typename?: any } | null): obj is MoveSlicesPortfolioSliceDestinationsValidity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesPortfolioSliceDestinationsValidity"')
      return MoveSlicesPortfolioSliceDestinationsValidity_possibleTypes.includes(obj.__typename)
    }
    


    const MoveToPieContentTooltip_possibleTypes: string[] = ['MoveToPieContentTooltip']
    export const isMoveToPieContentTooltip = (obj?: { __typename?: any } | null): obj is MoveToPieContentTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveToPieContentTooltip"')
      return MoveToPieContentTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesSetDestinationPieSliceContent_possibleTypes: string[] = ['MoveSlicesSetDestinationPieSliceContent']
    export const isMoveSlicesSetDestinationPieSliceContent = (obj?: { __typename?: any } | null): obj is MoveSlicesSetDestinationPieSliceContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesSetDestinationPieSliceContent"')
      return MoveSlicesSetDestinationPieSliceContent_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesSetDestinationPieSliceContentTooltip_possibleTypes: string[] = ['MoveSlicesSetDestinationPieSliceContentTooltip']
    export const isMoveSlicesSetDestinationPieSliceContentTooltip = (obj?: { __typename?: any } | null): obj is MoveSlicesSetDestinationPieSliceContentTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesSetDestinationPieSliceContentTooltip"')
      return MoveSlicesSetDestinationPieSliceContentTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesSetSourceSliceContent_possibleTypes: string[] = ['MoveSlicesSetSourceSliceContent']
    export const isMoveSlicesSetSourceSliceContent = (obj?: { __typename?: any } | null): obj is MoveSlicesSetSourceSliceContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesSetSourceSliceContent"')
      return MoveSlicesSetSourceSliceContent_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesSetSourceSliceTooltip_possibleTypes: string[] = ['MoveSlicesSetSourceSliceTooltip']
    export const isMoveSlicesSetSourceSliceTooltip = (obj?: { __typename?: any } | null): obj is MoveSlicesSetSourceSliceTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesSetSourceSliceTooltip"')
      return MoveSlicesSetSourceSliceTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesChangesConfirmation_possibleTypes: string[] = ['MoveSlicesChangesConfirmation']
    export const isMoveSlicesChangesConfirmation = (obj?: { __typename?: any } | null): obj is MoveSlicesChangesConfirmation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesChangesConfirmation"')
      return MoveSlicesChangesConfirmation_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesSourcePieDetails_possibleTypes: string[] = ['MoveSlicesSourcePieDetails']
    export const isMoveSlicesSourcePieDetails = (obj?: { __typename?: any } | null): obj is MoveSlicesSourcePieDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesSourcePieDetails"')
      return MoveSlicesSourcePieDetails_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesChangesConfirmationSection_possibleTypes: string[] = ['MoveSlicesChangesConfirmationSection']
    export const isMoveSlicesChangesConfirmationSection = (obj?: { __typename?: any } | null): obj is MoveSlicesChangesConfirmationSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesChangesConfirmationSection"')
      return MoveSlicesChangesConfirmationSection_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesChangesConfirmationSourcePieChangesSection_possibleTypes: string[] = ['MoveSlicesChangesConfirmationSourcePieChangesSection']
    export const isMoveSlicesChangesConfirmationSourcePieChangesSection = (obj?: { __typename?: any } | null): obj is MoveSlicesChangesConfirmationSourcePieChangesSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesChangesConfirmationSourcePieChangesSection"')
      return MoveSlicesChangesConfirmationSourcePieChangesSection_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesChangesConfirmationDestinationPiesChangesSection_possibleTypes: string[] = ['MoveSlicesChangesConfirmationDestinationPiesChangesSection']
    export const isMoveSlicesChangesConfirmationDestinationPiesChangesSection = (obj?: { __typename?: any } | null): obj is MoveSlicesChangesConfirmationDestinationPiesChangesSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesChangesConfirmationDestinationPiesChangesSection"')
      return MoveSlicesChangesConfirmationDestinationPiesChangesSection_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationAdjustedSlice_possibleTypes: string[] = ['PieChangesConfirmationAdjustedSlice']
    export const isPieChangesConfirmationAdjustedSlice = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationAdjustedSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationAdjustedSlice"')
      return PieChangesConfirmationAdjustedSlice_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSlicesChangesConfirmationNextAvailableTradeWindowSection_possibleTypes: string[] = ['MoveSlicesChangesConfirmationNextAvailableTradeWindowSection']
    export const isMoveSlicesChangesConfirmationNextAvailableTradeWindowSection = (obj?: { __typename?: any } | null): obj is MoveSlicesChangesConfirmationNextAvailableTradeWindowSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSlicesChangesConfirmationNextAvailableTradeWindowSection"')
      return MoveSlicesChangesConfirmationNextAvailableTradeWindowSection_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadRequestsCenter_possibleTypes: string[] = ['DocumentUploadRequestsCenter']
    export const isDocumentUploadRequestsCenter = (obj?: { __typename?: any } | null): obj is DocumentUploadRequestsCenter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadRequestsCenter"')
      return DocumentUploadRequestsCenter_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadRequestsConnection_possibleTypes: string[] = ['DocumentUploadRequestsConnection']
    export const isDocumentUploadRequestsConnection = (obj?: { __typename?: any } | null): obj is DocumentUploadRequestsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadRequestsConnection"')
      return DocumentUploadRequestsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadRequestsEdge_possibleTypes: string[] = ['DocumentUploadRequestsEdge']
    export const isDocumentUploadRequestsEdge = (obj?: { __typename?: any } | null): obj is DocumentUploadRequestsEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadRequestsEdge"')
      return DocumentUploadRequestsEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadRequest_possibleTypes: string[] = ['DocumentUploadRequest']
    export const isDocumentUploadRequest = (obj?: { __typename?: any } | null): obj is DocumentUploadRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadRequest"')
      return DocumentUploadRequest_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentRequirements_possibleTypes: string[] = ['DocumentRequirements']
    export const isDocumentRequirements = (obj?: { __typename?: any } | null): obj is DocumentRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentRequirements"')
      return DocumentRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUpload_possibleTypes: string[] = ['DocumentUpload']
    export const isDocumentUpload = (obj?: { __typename?: any } | null): obj is DocumentUpload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUpload"')
      return DocumentUpload_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadRequirements_possibleTypes: string[] = ['DocumentUploadRequirements']
    export const isDocumentUploadRequirements = (obj?: { __typename?: any } | null): obj is DocumentUploadRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadRequirements"')
      return DocumentUploadRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadOption_possibleTypes: string[] = ['DocumentUploadOption']
    export const isDocumentUploadOption = (obj?: { __typename?: any } | null): obj is DocumentUploadOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadOption"')
      return DocumentUploadOption_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentUploadRequestOption_possibleTypes: string[] = ['DocumentUploadRequestOption']
    export const isDocumentUploadRequestOption = (obj?: { __typename?: any } | null): obj is DocumentUploadRequestOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentUploadRequestOption"')
      return DocumentUploadRequestOption_possibleTypes.includes(obj.__typename)
    }
    


    const ReceivedSecurities_possibleTypes: string[] = ['ReceivedSecurities']
    export const isReceivedSecurities = (obj?: { __typename?: any } | null): obj is ReceivedSecurities => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReceivedSecurities"')
      return ReceivedSecurities_possibleTypes.includes(obj.__typename)
    }
    


    const ReceivedSecuritiesCard_possibleTypes: string[] = ['ReceivedSecuritiesCard']
    export const isReceivedSecuritiesCard = (obj?: { __typename?: any } | null): obj is ReceivedSecuritiesCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReceivedSecuritiesCard"')
      return ReceivedSecuritiesCard_possibleTypes.includes(obj.__typename)
    }
    


    const ReceivedSecuritiesCardSection_possibleTypes: string[] = ['ReceivedSecuritiesCardSection']
    export const isReceivedSecuritiesCardSection = (obj?: { __typename?: any } | null): obj is ReceivedSecuritiesCardSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReceivedSecuritiesCardSection"')
      return ReceivedSecuritiesCardSection_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSecurities_possibleTypes: string[] = ['MoveSecurities']
    export const isMoveSecurities = (obj?: { __typename?: any } | null): obj is MoveSecurities => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSecurities"')
      return MoveSecurities_possibleTypes.includes(obj.__typename)
    }
    


    const MovedSecuritiesScreenTooltip_possibleTypes: string[] = ['MovedSecuritiesScreenTooltip']
    export const isMovedSecuritiesScreenTooltip = (obj?: { __typename?: any } | null): obj is MovedSecuritiesScreenTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMovedSecuritiesScreenTooltip"')
      return MovedSecuritiesScreenTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSecuritiesConfirmTargets_possibleTypes: string[] = ['MoveSecuritiesConfirmTargets']
    export const isMoveSecuritiesConfirmTargets = (obj?: { __typename?: any } | null): obj is MoveSecuritiesConfirmTargets => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSecuritiesConfirmTargets"')
      return MoveSecuritiesConfirmTargets_possibleTypes.includes(obj.__typename)
    }
    


    const MoveSecuritiesNewPieLocation_possibleTypes: string[] = ['MoveSecuritiesNewPieLocation']
    export const isMoveSecuritiesNewPieLocation = (obj?: { __typename?: any } | null): obj is MoveSecuritiesNewPieLocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoveSecuritiesNewPieLocation"')
      return MoveSecuritiesNewPieLocation_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsStagedForLiquidateConfirmation_possibleTypes: string[] = ['UnmanagedHoldingsStagedForLiquidateConfirmation']
    export const isUnmanagedHoldingsStagedForLiquidateConfirmation = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsStagedForLiquidateConfirmation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsStagedForLiquidateConfirmation"')
      return UnmanagedHoldingsStagedForLiquidateConfirmation_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsForLiquidationAccountDetails_possibleTypes: string[] = ['UnmanagedHoldingsForLiquidationAccountDetails']
    export const isUnmanagedHoldingsForLiquidationAccountDetails = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsForLiquidationAccountDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsForLiquidationAccountDetails"')
      return UnmanagedHoldingsForLiquidationAccountDetails_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUnmanagedHoldingForLiquidate_possibleTypes: string[] = ['StagedUnmanagedHoldingForLiquidate']
    export const isStagedUnmanagedHoldingForLiquidate = (obj?: { __typename?: any } | null): obj is StagedUnmanagedHoldingForLiquidate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUnmanagedHoldingForLiquidate"')
      return StagedUnmanagedHoldingForLiquidate_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUnmanagedHoldingForLiquidateSection_possibleTypes: string[] = ['StagedUnmanagedHoldingForLiquidateSection']
    export const isStagedUnmanagedHoldingForLiquidateSection = (obj?: { __typename?: any } | null): obj is StagedUnmanagedHoldingForLiquidateSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUnmanagedHoldingForLiquidateSection"')
      return StagedUnmanagedHoldingForLiquidateSection_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsScreen_possibleTypes: string[] = ['UnmanagedHoldingsScreen']
    export const isUnmanagedHoldingsScreen = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsScreen"')
      return UnmanagedHoldingsScreen_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsScreenUnrealizedGainTooltip_possibleTypes: string[] = ['UnmanagedHoldingsScreenUnrealizedGainTooltip']
    export const isUnmanagedHoldingsScreenUnrealizedGainTooltip = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsScreenUnrealizedGainTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsScreenUnrealizedGainTooltip"')
      return UnmanagedHoldingsScreenUnrealizedGainTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsCollection_possibleTypes: string[] = ['UnmanagedHoldingsCollection']
    export const isUnmanagedHoldingsCollection = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsCollection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsCollection"')
      return UnmanagedHoldingsCollection_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsCollectionTooltip_possibleTypes: string[] = ['UnmanagedHoldingsCollectionTooltip']
    export const isUnmanagedHoldingsCollectionTooltip = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsCollectionTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsCollectionTooltip"')
      return UnmanagedHoldingsCollectionTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsConnection_possibleTypes: string[] = ['UnmanagedHoldingsConnection']
    export const isUnmanagedHoldingsConnection = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsConnection"')
      return UnmanagedHoldingsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsEdge_possibleTypes: string[] = ['UnmanagedHoldingsEdge']
    export const isUnmanagedHoldingsEdge = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsEdge"')
      return UnmanagedHoldingsEdge_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsScreenCard_possibleTypes: string[] = ['UnmanagedHoldingsScreenCard']
    export const isUnmanagedHoldingsScreenCard = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsScreenCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsScreenCard"')
      return UnmanagedHoldingsScreenCard_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsScreenCardSection_possibleTypes: string[] = ['UnmanagedHoldingsScreenCardSection']
    export const isUnmanagedHoldingsScreenCardSection = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsScreenCardSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsScreenCardSection"')
      return UnmanagedHoldingsScreenCardSection_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingsCardSectionUnrealizedGain_possibleTypes: string[] = ['UnmanagedHoldingsCardSectionUnrealizedGain']
    export const isUnmanagedHoldingsCardSectionUnrealizedGain = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingsCardSectionUnrealizedGain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingsCardSectionUnrealizedGain"')
      return UnmanagedHoldingsCardSectionUnrealizedGain_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHolding_possibleTypes: string[] = ['UnmanagedHolding']
    export const isUnmanagedHolding = (obj?: { __typename?: any } | null): obj is UnmanagedHolding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHolding"')
      return UnmanagedHolding_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingDateValue_possibleTypes: string[] = ['UnmanagedHoldingDateValue']
    export const isUnmanagedHoldingDateValue = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingDateValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingDateValue"')
      return UnmanagedHoldingDateValue_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingLiquidationPendingDetailsScreen_possibleTypes: string[] = ['UnmanagedHoldingLiquidationPendingDetailsScreen']
    export const isUnmanagedHoldingLiquidationPendingDetailsScreen = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingLiquidationPendingDetailsScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingLiquidationPendingDetailsScreen"')
      return UnmanagedHoldingLiquidationPendingDetailsScreen_possibleTypes.includes(obj.__typename)
    }
    


    const LiquidationPendingDetails_possibleTypes: string[] = ['LiquidationPendingDetails']
    export const isLiquidationPendingDetails = (obj?: { __typename?: any } | null): obj is LiquidationPendingDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLiquidationPendingDetails"')
      return LiquidationPendingDetails_possibleTypes.includes(obj.__typename)
    }
    


    const UnmanagedHoldingGain_possibleTypes: string[] = ['UnmanagedHoldingGain']
    export const isUnmanagedHoldingGain = (obj?: { __typename?: any } | null): obj is UnmanagedHoldingGain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnmanagedHoldingGain"')
      return UnmanagedHoldingGain_possibleTypes.includes(obj.__typename)
    }
    


    const SetupChecklist_possibleTypes: string[] = ['SetupChecklist']
    export const isSetupChecklist = (obj?: { __typename?: any } | null): obj is SetupChecklist => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetupChecklist"')
      return SetupChecklist_possibleTypes.includes(obj.__typename)
    }
    


    const SetupChecklistStep_possibleTypes: string[] = ['GenericSetupChecklistStep','BuildPortfolioSetupChecklistStep']
    export const isSetupChecklistStep = (obj?: { __typename?: any } | null): obj is SetupChecklistStep => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetupChecklistStep"')
      return SetupChecklistStep_possibleTypes.includes(obj.__typename)
    }
    


    const GenericSetupChecklistStep_possibleTypes: string[] = ['GenericSetupChecklistStep']
    export const isGenericSetupChecklistStep = (obj?: { __typename?: any } | null): obj is GenericSetupChecklistStep => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenericSetupChecklistStep"')
      return GenericSetupChecklistStep_possibleTypes.includes(obj.__typename)
    }
    


    const BuildPortfolioSetupChecklistStep_possibleTypes: string[] = ['BuildPortfolioSetupChecklistStep']
    export const isBuildPortfolioSetupChecklistStep = (obj?: { __typename?: any } | null): obj is BuildPortfolioSetupChecklistStep => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBuildPortfolioSetupChecklistStep"')
      return BuildPortfolioSetupChecklistStep_possibleTypes.includes(obj.__typename)
    }
    


    const SetupChecklistDestination_possibleTypes: string[] = ['SetupChecklistDestination']
    export const isSetupChecklistDestination = (obj?: { __typename?: any } | null): obj is SetupChecklistDestination => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetupChecklistDestination"')
      return SetupChecklistDestination_possibleTypes.includes(obj.__typename)
    }
    


    const AccountConnection_possibleTypes: string[] = ['AccountConnection']
    export const isAccountConnection = (obj?: { __typename?: any } | null): obj is AccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountConnection"')
      return AccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AccountEdge_possibleTypes: string[] = ['AccountEdge']
    export const isAccountEdge = (obj?: { __typename?: any } | null): obj is AccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountEdge"')
      return AccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AchRelationship_possibleTypes: string[] = ['AchRelationshipViaDeposits','AchRelationshipViaLink']
    export const isAchRelationship = (obj?: { __typename?: any } | null): obj is AchRelationship => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAchRelationship"')
      return AchRelationship_possibleTypes.includes(obj.__typename)
    }
    


    const AchRelationshipViaDeposits_possibleTypes: string[] = ['AchRelationshipViaDeposits']
    export const isAchRelationshipViaDeposits = (obj?: { __typename?: any } | null): obj is AchRelationshipViaDeposits => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAchRelationshipViaDeposits"')
      return AchRelationshipViaDeposits_possibleTypes.includes(obj.__typename)
    }
    


    const AchRelationshipViaLink_possibleTypes: string[] = ['AchRelationshipViaLink']
    export const isAchRelationshipViaLink = (obj?: { __typename?: any } | null): obj is AchRelationshipViaLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAchRelationshipViaLink"')
      return AchRelationshipViaLink_possibleTypes.includes(obj.__typename)
    }
    


    const AchRelationshipEdge_possibleTypes: string[] = ['AchRelationshipEdge']
    export const isAchRelationshipEdge = (obj?: { __typename?: any } | null): obj is AchRelationshipEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAchRelationshipEdge"')
      return AchRelationshipEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AchTransfer_possibleTypes: string[] = ['AchTransfer']
    export const isAchTransfer = (obj?: { __typename?: any } | null): obj is AchTransfer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAchTransfer"')
      return AchTransfer_possibleTypes.includes(obj.__typename)
    }
    


    const AccountBalance_possibleTypes: string[] = ['AccountBalance']
    export const isAccountBalance = (obj?: { __typename?: any } | null): obj is AccountBalance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountBalance"')
      return AccountBalance_possibleTypes.includes(obj.__typename)
    }
    


    const CashBreakdownListItem_possibleTypes: string[] = ['CashBreakdownListItem']
    export const isCashBreakdownListItem = (obj?: { __typename?: any } | null): obj is CashBreakdownListItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCashBreakdownListItem"')
      return CashBreakdownListItem_possibleTypes.includes(obj.__typename)
    }
    


    const Cash_possibleTypes: string[] = ['Cash']
    export const isCash = (obj?: { __typename?: any } | null): obj is Cash => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCash"')
      return Cash_possibleTypes.includes(obj.__typename)
    }
    


    const Investments_possibleTypes: string[] = ['Investments']
    export const isInvestments = (obj?: { __typename?: any } | null): obj is Investments => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestments"')
      return Investments_possibleTypes.includes(obj.__typename)
    }
    


    const NoPositionsContent_possibleTypes: string[] = ['NoPositionsContent']
    export const isNoPositionsContent = (obj?: { __typename?: any } | null): obj is NoPositionsContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoPositionsContent"')
      return NoPositionsContent_possibleTypes.includes(obj.__typename)
    }
    


    const TotalInvestmentsCost_possibleTypes: string[] = ['TotalInvestmentsCost']
    export const isTotalInvestmentsCost = (obj?: { __typename?: any } | null): obj is TotalInvestmentsCost => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTotalInvestmentsCost"')
      return TotalInvestmentsCost_possibleTypes.includes(obj.__typename)
    }
    


    const TotalInvestmentsValue_possibleTypes: string[] = ['TotalInvestmentsValue']
    export const isTotalInvestmentsValue = (obj?: { __typename?: any } | null): obj is TotalInvestmentsValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTotalInvestmentsValue"')
      return TotalInvestmentsValue_possibleTypes.includes(obj.__typename)
    }
    


    const TotalInvestmentsGain_possibleTypes: string[] = ['TotalInvestmentsGain']
    export const isTotalInvestmentsGain = (obj?: { __typename?: any } | null): obj is TotalInvestmentsGain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTotalInvestmentsGain"')
      return TotalInvestmentsGain_possibleTypes.includes(obj.__typename)
    }
    


    const TotalAccountValue_possibleTypes: string[] = ['TotalAccountValue']
    export const isTotalAccountValue = (obj?: { __typename?: any } | null): obj is TotalAccountValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTotalAccountValue"')
      return TotalAccountValue_possibleTypes.includes(obj.__typename)
    }
    


    const Billing_possibleTypes: string[] = ['Billing']
    export const isBilling = (obj?: { __typename?: any } | null): obj is Billing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBilling"')
      return Billing_possibleTypes.includes(obj.__typename)
    }
    


    const SelectedPaymentsAccount_possibleTypes: string[] = ['SelectedPaymentsAccount']
    export const isSelectedPaymentsAccount = (obj?: { __typename?: any } | null): obj is SelectedPaymentsAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSelectedPaymentsAccount"')
      return SelectedPaymentsAccount_possibleTypes.includes(obj.__typename)
    }
    


    const AppliedPromotionConnection_possibleTypes: string[] = ['AppliedPromotionConnection']
    export const isAppliedPromotionConnection = (obj?: { __typename?: any } | null): obj is AppliedPromotionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppliedPromotionConnection"')
      return AppliedPromotionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppliedPromotionEdge_possibleTypes: string[] = ['AppliedPromotionEdge']
    export const isAppliedPromotionEdge = (obj?: { __typename?: any } | null): obj is AppliedPromotionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppliedPromotionEdge"')
      return AppliedPromotionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppliedPromotion_possibleTypes: string[] = ['AppliedPromotion']
    export const isAppliedPromotion = (obj?: { __typename?: any } | null): obj is AppliedPromotion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppliedPromotion"')
      return AppliedPromotion_possibleTypes.includes(obj.__typename)
    }
    


    const Borrow_possibleTypes: string[] = ['Borrow']
    export const isBorrow = (obj?: { __typename?: any } | null): obj is Borrow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrow"')
      return Borrow_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowDisclosureText_possibleTypes: string[] = ['BorrowDisclosureText']
    export const isBorrowDisclosureText = (obj?: { __typename?: any } | null): obj is BorrowDisclosureText => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowDisclosureText"')
      return BorrowDisclosureText_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowAccountConnection_possibleTypes: string[] = ['BorrowAccountConnection']
    export const isBorrowAccountConnection = (obj?: { __typename?: any } | null): obj is BorrowAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowAccountConnection"')
      return BorrowAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowAccountEdge_possibleTypes: string[] = ['BorrowAccountEdge']
    export const isBorrowAccountEdge = (obj?: { __typename?: any } | null): obj is BorrowAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowAccountEdge"')
      return BorrowAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowAccount_possibleTypes: string[] = ['BorrowAccount']
    export const isBorrowAccount = (obj?: { __typename?: any } | null): obj is BorrowAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowAccount"')
      return BorrowAccount_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowAccountRate_possibleTypes: string[] = ['BorrowAccountRate']
    export const isBorrowAccountRate = (obj?: { __typename?: any } | null): obj is BorrowAccountRate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowAccountRate"')
      return BorrowAccountRate_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowAccountCreditStatus_possibleTypes: string[] = ['BorrowAccountCreditStatus']
    export const isBorrowAccountCreditStatus = (obj?: { __typename?: any } | null): obj is BorrowAccountCreditStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowAccountCreditStatus"')
      return BorrowAccountCreditStatus_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowActivityEntryConnection_possibleTypes: string[] = ['BorrowActivityEntryConnection']
    export const isBorrowActivityEntryConnection = (obj?: { __typename?: any } | null): obj is BorrowActivityEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowActivityEntryConnection"')
      return BorrowActivityEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowActivityEntryEdge_possibleTypes: string[] = ['BorrowActivityEntryEdge']
    export const isBorrowActivityEntryEdge = (obj?: { __typename?: any } | null): obj is BorrowActivityEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowActivityEntryEdge"')
      return BorrowActivityEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowActivityEntry_possibleTypes: string[] = ['BorrowActivityEntry']
    export const isBorrowActivityEntry = (obj?: { __typename?: any } | null): obj is BorrowActivityEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowActivityEntry"')
      return BorrowActivityEntry_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentConnection_possibleTypes: string[] = ['DocumentConnection']
    export const isDocumentConnection = (obj?: { __typename?: any } | null): obj is DocumentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentConnection"')
      return DocumentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentEdge_possibleTypes: string[] = ['DocumentEdge']
    export const isDocumentEdge = (obj?: { __typename?: any } | null): obj is DocumentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentEdge"')
      return DocumentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AccountLabel_possibleTypes: string[] = ['AccountLabel']
    export const isAccountLabel = (obj?: { __typename?: any } | null): obj is AccountLabel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountLabel"')
      return AccountLabel_possibleTypes.includes(obj.__typename)
    }
    


    const Document_possibleTypes: string[] = ['InvestAccountDocument','AccountDocument','SpendAccountDocument']
    export const isDocument = (obj?: { __typename?: any } | null): obj is Document => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocument"')
      return Document_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAccountDocument_possibleTypes: string[] = ['InvestAccountDocument']
    export const isInvestAccountDocument = (obj?: { __typename?: any } | null): obj is InvestAccountDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAccountDocument"')
      return InvestAccountDocument_possibleTypes.includes(obj.__typename)
    }
    


    const AccountDocument_possibleTypes: string[] = ['AccountDocument']
    export const isAccountDocument = (obj?: { __typename?: any } | null): obj is AccountDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountDocument"')
      return AccountDocument_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAccountDocument_possibleTypes: string[] = ['SpendAccountDocument']
    export const isSpendAccountDocument = (obj?: { __typename?: any } | null): obj is SpendAccountDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAccountDocument"')
      return SpendAccountDocument_possibleTypes.includes(obj.__typename)
    }
    


    const EstimatedTrading_possibleTypes: string[] = ['EstimatedTrading']
    export const isEstimatedTrading = (obj?: { __typename?: any } | null): obj is EstimatedTrading => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEstimatedTrading"')
      return EstimatedTrading_possibleTypes.includes(obj.__typename)
    }
    


    const EstimatedTradingMessage_possibleTypes: string[] = ['EstimatedTradingMessage']
    export const isEstimatedTradingMessage = (obj?: { __typename?: any } | null): obj is EstimatedTradingMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEstimatedTradingMessage"')
      return EstimatedTradingMessage_possibleTypes.includes(obj.__typename)
    }
    


    const EstimatedTradeAmountConnection_possibleTypes: string[] = ['EstimatedTradeAmountConnection']
    export const isEstimatedTradeAmountConnection = (obj?: { __typename?: any } | null): obj is EstimatedTradeAmountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEstimatedTradeAmountConnection"')
      return EstimatedTradeAmountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const EstimatedTradeAmountEdge_possibleTypes: string[] = ['EstimatedTradeAmountEdge']
    export const isEstimatedTradeAmountEdge = (obj?: { __typename?: any } | null): obj is EstimatedTradeAmountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEstimatedTradeAmountEdge"')
      return EstimatedTradeAmountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const EstimatedTradeAmount_possibleTypes: string[] = ['EstimatedTradeAmount']
    export const isEstimatedTradeAmount = (obj?: { __typename?: any } | null): obj is EstimatedTradeAmount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEstimatedTradeAmount"')
      return EstimatedTradeAmount_possibleTypes.includes(obj.__typename)
    }
    


    const ExternalAccount_possibleTypes: string[] = ['ExternalAccount']
    export const isExternalAccount = (obj?: { __typename?: any } | null): obj is ExternalAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExternalAccount"')
      return ExternalAccount_possibleTypes.includes(obj.__typename)
    }
    


    const ExternalAccountConnection_possibleTypes: string[] = ['ExternalAccountConnection']
    export const isExternalAccountConnection = (obj?: { __typename?: any } | null): obj is ExternalAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExternalAccountConnection"')
      return ExternalAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ExternalAccountEdge_possibleTypes: string[] = ['ExternalAccountEdge']
    export const isExternalAccountEdge = (obj?: { __typename?: any } | null): obj is ExternalAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExternalAccountEdge"')
      return ExternalAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FeatureFlags_possibleTypes: string[] = ['FeatureFlags']
    export const isFeatureFlags = (obj?: { __typename?: any } | null): obj is FeatureFlags => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFeatureFlags"')
      return FeatureFlags_possibleTypes.includes(obj.__typename)
    }
    


    const IntradayQuoteTimeSeries_possibleTypes: string[] = ['IntradayQuoteTimeSeries']
    export const isIntradayQuoteTimeSeries = (obj?: { __typename?: any } | null): obj is IntradayQuoteTimeSeries => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntradayQuoteTimeSeries"')
      return IntradayQuoteTimeSeries_possibleTypes.includes(obj.__typename)
    }
    


    const IntradayQuotePointType_possibleTypes: string[] = ['IntradayQuotePointType']
    export const isIntradayQuotePointType = (obj?: { __typename?: any } | null): obj is IntradayQuotePointType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntradayQuotePointType"')
      return IntradayQuotePointType_possibleTypes.includes(obj.__typename)
    }
    


    const IntradayIntervalQuote_possibleTypes: string[] = ['IntradayIntervalQuote']
    export const isIntradayIntervalQuote = (obj?: { __typename?: any } | null): obj is IntradayIntervalQuote => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntradayIntervalQuote"')
      return IntradayIntervalQuote_possibleTypes.includes(obj.__typename)
    }
    


    const MarketTimeSpan_possibleTypes: string[] = ['MarketTimeSpan']
    export const isMarketTimeSpan = (obj?: { __typename?: any } | null): obj is MarketTimeSpan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketTimeSpan"')
      return MarketTimeSpan_possibleTypes.includes(obj.__typename)
    }
    


    const OnlineAccountRegistrationCountry_possibleTypes: string[] = ['OnlineAccountRegistrationCountry']
    export const isOnlineAccountRegistrationCountry = (obj?: { __typename?: any } | null): obj is OnlineAccountRegistrationCountry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnlineAccountRegistrationCountry"')
      return OnlineAccountRegistrationCountry_possibleTypes.includes(obj.__typename)
    }
    


    const Invest_possibleTypes: string[] = ['Invest']
    export const isInvest = (obj?: { __typename?: any } | null): obj is Invest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvest"')
      return Invest_possibleTypes.includes(obj.__typename)
    }
    


    const AcatWizardInfo_possibleTypes: string[] = ['AcatWizardInfo']
    export const isAcatWizardInfo = (obj?: { __typename?: any } | null): obj is AcatWizardInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatWizardInfo"')
      return AcatWizardInfo_possibleTypes.includes(obj.__typename)
    }
    


    const InvestDisclosures_possibleTypes: string[] = ['InvestDisclosures']
    export const isInvestDisclosures = (obj?: { __typename?: any } | null): obj is InvestDisclosures => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestDisclosures"')
      return InvestDisclosures_possibleTypes.includes(obj.__typename)
    }
    


    const InvestTradeDisclosures_possibleTypes: string[] = ['InvestTradeDisclosures']
    export const isInvestTradeDisclosures = (obj?: { __typename?: any } | null): obj is InvestTradeDisclosures => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestTradeDisclosures"')
      return InvestTradeDisclosures_possibleTypes.includes(obj.__typename)
    }
    


    const InvestTradeDisclosureItem_possibleTypes: string[] = ['InvestTradeDisclosureItem']
    export const isInvestTradeDisclosureItem = (obj?: { __typename?: any } | null): obj is InvestTradeDisclosureItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestTradeDisclosureItem"')
      return InvestTradeDisclosureItem_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAccountOpening_possibleTypes: string[] = ['InvestAccountOpening']
    export const isInvestAccountOpening = (obj?: { __typename?: any } | null): obj is InvestAccountOpening => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAccountOpening"')
      return InvestAccountOpening_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAccountOpeningQuestion_possibleTypes: string[] = ['InvestAccountOpeningQuestion']
    export const isInvestAccountOpeningQuestion = (obj?: { __typename?: any } | null): obj is InvestAccountOpeningQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAccountOpeningQuestion"')
      return InvestAccountOpeningQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivity_possibleTypes: string[] = ['InvestActivity']
    export const isInvestActivity = (obj?: { __typename?: any } | null): obj is InvestActivity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivity"')
      return InvestActivity_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityEntryConnection_possibleTypes: string[] = ['InvestActivityEntryConnection']
    export const isInvestActivityEntryConnection = (obj?: { __typename?: any } | null): obj is InvestActivityEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityEntryConnection"')
      return InvestActivityEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityEntryEdge_possibleTypes: string[] = ['InvestActivityEntryEdge']
    export const isInvestActivityEntryEdge = (obj?: { __typename?: any } | null): obj is InvestActivityEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityEntryEdge"')
      return InvestActivityEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityEntry_possibleTypes: string[] = ['InvestActivityTradeSummaryEntry','InvestActivityTradeEntry','InvestActivityCashEntry','InvestActivityPositionEntry','InvestActivityRebalanceEntry','InvestActivityOrderEntry','InvestActivityOtherEntry']
    export const isInvestActivityEntry = (obj?: { __typename?: any } | null): obj is InvestActivityEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityEntry"')
      return InvestActivityEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityTradeSummaryEntry_possibleTypes: string[] = ['InvestActivityTradeSummaryEntry']
    export const isInvestActivityTradeSummaryEntry = (obj?: { __typename?: any } | null): obj is InvestActivityTradeSummaryEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityTradeSummaryEntry"')
      return InvestActivityTradeSummaryEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityExcludedTradeConnection_possibleTypes: string[] = ['InvestActivityExcludedTradeConnection']
    export const isInvestActivityExcludedTradeConnection = (obj?: { __typename?: any } | null): obj is InvestActivityExcludedTradeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityExcludedTradeConnection"')
      return InvestActivityExcludedTradeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityExcludedTradeEdge_possibleTypes: string[] = ['InvestActivityExcludedTradeEdge']
    export const isInvestActivityExcludedTradeEdge = (obj?: { __typename?: any } | null): obj is InvestActivityExcludedTradeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityExcludedTradeEdge"')
      return InvestActivityExcludedTradeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityExcludedTrade_possibleTypes: string[] = ['InvestActivityExcludedTrade']
    export const isInvestActivityExcludedTrade = (obj?: { __typename?: any } | null): obj is InvestActivityExcludedTrade => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityExcludedTrade"')
      return InvestActivityExcludedTrade_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityTradeEntryConnection_possibleTypes: string[] = ['InvestActivityTradeEntryConnection']
    export const isInvestActivityTradeEntryConnection = (obj?: { __typename?: any } | null): obj is InvestActivityTradeEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityTradeEntryConnection"')
      return InvestActivityTradeEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityTradeEntryEdge_possibleTypes: string[] = ['InvestActivityTradeEntryEdge']
    export const isInvestActivityTradeEntryEdge = (obj?: { __typename?: any } | null): obj is InvestActivityTradeEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityTradeEntryEdge"')
      return InvestActivityTradeEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityTradeEntry_possibleTypes: string[] = ['InvestActivityTradeEntry']
    export const isInvestActivityTradeEntry = (obj?: { __typename?: any } | null): obj is InvestActivityTradeEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityTradeEntry"')
      return InvestActivityTradeEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityCashEntryTransferDetails_possibleTypes: string[] = ['InvestActivityCashEntryTransferDetails']
    export const isInvestActivityCashEntryTransferDetails = (obj?: { __typename?: any } | null): obj is InvestActivityCashEntryTransferDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityCashEntryTransferDetails"')
      return InvestActivityCashEntryTransferDetails_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityCashEntry_possibleTypes: string[] = ['InvestActivityCashEntry']
    export const isInvestActivityCashEntry = (obj?: { __typename?: any } | null): obj is InvestActivityCashEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityCashEntry"')
      return InvestActivityCashEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityPositionEntry_possibleTypes: string[] = ['InvestActivityPositionEntry']
    export const isInvestActivityPositionEntry = (obj?: { __typename?: any } | null): obj is InvestActivityPositionEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityPositionEntry"')
      return InvestActivityPositionEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityRebalanceEntry_possibleTypes: string[] = ['InvestActivityRebalanceEntry']
    export const isInvestActivityRebalanceEntry = (obj?: { __typename?: any } | null): obj is InvestActivityRebalanceEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityRebalanceEntry"')
      return InvestActivityRebalanceEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityOrderEntry_possibleTypes: string[] = ['InvestActivityOrderEntry']
    export const isInvestActivityOrderEntry = (obj?: { __typename?: any } | null): obj is InvestActivityOrderEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityOrderEntry"')
      return InvestActivityOrderEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityOtherEntry_possibleTypes: string[] = ['InvestActivityOtherEntry']
    export const isInvestActivityOtherEntry = (obj?: { __typename?: any } | null): obj is InvestActivityOtherEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityOtherEntry"')
      return InvestActivityOtherEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivitySecurityReference_possibleTypes: string[] = ['InvestActivitySecurityReference']
    export const isInvestActivitySecurityReference = (obj?: { __typename?: any } | null): obj is InvestActivitySecurityReference => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivitySecurityReference"')
      return InvestActivitySecurityReference_possibleTypes.includes(obj.__typename)
    }
    


    const Overview_possibleTypes: string[] = ['Overview']
    export const isOverview = (obj?: { __typename?: any } | null): obj is Overview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverview"')
      return Overview_possibleTypes.includes(obj.__typename)
    }
    


    const BalancesOverview_possibleTypes: string[] = ['BalancesOverview']
    export const isBalancesOverview = (obj?: { __typename?: any } | null): obj is BalancesOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBalancesOverview"')
      return BalancesOverview_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCards_possibleTypes: string[] = ['OverviewCards']
    export const isOverviewCards = (obj?: { __typename?: any } | null): obj is OverviewCards => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCards"')
      return OverviewCards_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCardInterface_possibleTypes: string[] = ['OverviewCard','OverviewInvestCard','OverviewSpendCard','OverviewBorrowCard','OverviewCreditCard']
    export const isOverviewCardInterface = (obj?: { __typename?: any } | null): obj is OverviewCardInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCardInterface"')
      return OverviewCardInterface_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCardContentInterface_possibleTypes: string[] = ['OverviewCardContent','OverviewInvestCardContent']
    export const isOverviewCardContentInterface = (obj?: { __typename?: any } | null): obj is OverviewCardContentInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCardContentInterface"')
      return OverviewCardContentInterface_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCardTitleInterface_possibleTypes: string[] = ['OverviewCardTitle']
    export const isOverviewCardTitleInterface = (obj?: { __typename?: any } | null): obj is OverviewCardTitleInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCardTitleInterface"')
      return OverviewCardTitleInterface_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCard_possibleTypes: string[] = ['OverviewCard']
    export const isOverviewCard = (obj?: { __typename?: any } | null): obj is OverviewCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCard"')
      return OverviewCard_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCardTitle_possibleTypes: string[] = ['OverviewCardTitle']
    export const isOverviewCardTitle = (obj?: { __typename?: any } | null): obj is OverviewCardTitle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCardTitle"')
      return OverviewCardTitle_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCardContent_possibleTypes: string[] = ['OverviewCardContent']
    export const isOverviewCardContent = (obj?: { __typename?: any } | null): obj is OverviewCardContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCardContent"')
      return OverviewCardContent_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCardFooter_possibleTypes: string[] = ['OverviewCardFooter']
    export const isOverviewCardFooter = (obj?: { __typename?: any } | null): obj is OverviewCardFooter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCardFooter"')
      return OverviewCardFooter_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewInvestCard_possibleTypes: string[] = ['OverviewInvestCard']
    export const isOverviewInvestCard = (obj?: { __typename?: any } | null): obj is OverviewInvestCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewInvestCard"')
      return OverviewInvestCard_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewSpendCard_possibleTypes: string[] = ['OverviewSpendCard']
    export const isOverviewSpendCard = (obj?: { __typename?: any } | null): obj is OverviewSpendCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewSpendCard"')
      return OverviewSpendCard_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewBorrowCard_possibleTypes: string[] = ['OverviewBorrowCard']
    export const isOverviewBorrowCard = (obj?: { __typename?: any } | null): obj is OverviewBorrowCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewBorrowCard"')
      return OverviewBorrowCard_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewCreditCard_possibleTypes: string[] = ['OverviewCreditCard']
    export const isOverviewCreditCard = (obj?: { __typename?: any } | null): obj is OverviewCreditCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewCreditCard"')
      return OverviewCreditCard_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewInvestCardContent_possibleTypes: string[] = ['OverviewInvestCardContent']
    export const isOverviewInvestCardContent = (obj?: { __typename?: any } | null): obj is OverviewInvestCardContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewInvestCardContent"')
      return OverviewInvestCardContent_possibleTypes.includes(obj.__typename)
    }
    


    const OverviewInvestCardContentSubtitle_possibleTypes: string[] = ['OverviewInvestCardContentSubtitle']
    export const isOverviewInvestCardContentSubtitle = (obj?: { __typename?: any } | null): obj is OverviewInvestCardContentSubtitle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOverviewInvestCardContentSubtitle"')
      return OverviewInvestCardContentSubtitle_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTotalWithStatus_possibleTypes: string[] = ['AccountTotalWithStatus']
    export const isAccountTotalWithStatus = (obj?: { __typename?: any } | null): obj is AccountTotalWithStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTotalWithStatus"')
      return AccountTotalWithStatus_possibleTypes.includes(obj.__typename)
    }
    


    const NetWorthLabel_possibleTypes: string[] = ['NetWorthLabel']
    export const isNetWorthLabel = (obj?: { __typename?: any } | null): obj is NetWorthLabel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNetWorthLabel"')
      return NetWorthLabel_possibleTypes.includes(obj.__typename)
    }
    


    const HomeTilesSectionConnection_possibleTypes: string[] = ['HomeTilesSectionConnection']
    export const isHomeTilesSectionConnection = (obj?: { __typename?: any } | null): obj is HomeTilesSectionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHomeTilesSectionConnection"')
      return HomeTilesSectionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const HomeTilesSectionEdge_possibleTypes: string[] = ['HomeTilesSectionEdge']
    export const isHomeTilesSectionEdge = (obj?: { __typename?: any } | null): obj is HomeTilesSectionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHomeTilesSectionEdge"')
      return HomeTilesSectionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const HomeTilesSection_possibleTypes: string[] = ['HomeTilesSection']
    export const isHomeTilesSection = (obj?: { __typename?: any } | null): obj is HomeTilesSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHomeTilesSection"')
      return HomeTilesSection_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTile_possibleTypes: string[] = ['AccountTile']
    export const isAccountTile = (obj?: { __typename?: any } | null): obj is AccountTile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTile"')
      return AccountTile_possibleTypes.includes(obj.__typename)
    }
    


    const SubtitleInfo_possibleTypes: string[] = ['SubtitleInfo']
    export const isSubtitleInfo = (obj?: { __typename?: any } | null): obj is SubtitleInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubtitleInfo"')
      return SubtitleInfo_possibleTypes.includes(obj.__typename)
    }
    


    const SubValueInfo_possibleTypes: string[] = ['SubValueInfo']
    export const isSubValueInfo = (obj?: { __typename?: any } | null): obj is SubValueInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubValueInfo"')
      return SubValueInfo_possibleTypes.includes(obj.__typename)
    }
    


    const PieAnalysis_possibleTypes: string[] = ['PieAnalysis']
    export const isPieAnalysis = (obj?: { __typename?: any } | null): obj is PieAnalysis => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieAnalysis"')
      return PieAnalysis_possibleTypes.includes(obj.__typename)
    }
    


    const PieBacktesting_possibleTypes: string[] = ['PieBacktesting']
    export const isPieBacktesting = (obj?: { __typename?: any } | null): obj is PieBacktesting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieBacktesting"')
      return PieBacktesting_possibleTypes.includes(obj.__typename)
    }
    


    const PieBacktestTimeSeriesPoint_possibleTypes: string[] = ['PieBacktestTimeSeriesPoint']
    export const isPieBacktestTimeSeriesPoint = (obj?: { __typename?: any } | null): obj is PieBacktestTimeSeriesPoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieBacktestTimeSeriesPoint"')
      return PieBacktestTimeSeriesPoint_possibleTypes.includes(obj.__typename)
    }
    


    const PieEditModel_possibleTypes: string[] = ['PieEditModel']
    export const isPieEditModel = (obj?: { __typename?: any } | null): obj is PieEditModel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieEditModel"')
      return PieEditModel_possibleTypes.includes(obj.__typename)
    }
    


    const PieFundamentals_possibleTypes: string[] = ['PieFundamentals']
    export const isPieFundamentals = (obj?: { __typename?: any } | null): obj is PieFundamentals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieFundamentals"')
      return PieFundamentals_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationMovedSlice_possibleTypes: string[] = ['PieChangesConfirmationMovedSlice']
    export const isPieChangesConfirmationMovedSlice = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationMovedSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationMovedSlice"')
      return PieChangesConfirmationMovedSlice_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContent_possibleTypes: string[] = ['InvestAcatWizardContent']
    export const isInvestAcatWizardContent = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContent"')
      return InvestAcatWizardContent_possibleTypes.includes(obj.__typename)
    }
    


    const RolloverCreationScreenContent_possibleTypes: string[] = ['RolloverCreationScreenContent']
    export const isRolloverCreationScreenContent = (obj?: { __typename?: any } | null): obj is RolloverCreationScreenContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRolloverCreationScreenContent"')
      return RolloverCreationScreenContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardAssetSelectionContent_possibleTypes: string[] = ['InvestAcatWizardAssetSelectionContent']
    export const isInvestAcatWizardAssetSelectionContent = (obj?: { __typename?: any } | null): obj is InvestAcatWizardAssetSelectionContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardAssetSelectionContent"')
      return InvestAcatWizardAssetSelectionContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardAssetSelectionCashSectionContent_possibleTypes: string[] = ['InvestAcatWizardAssetSelectionCashSectionContent']
    export const isInvestAcatWizardAssetSelectionCashSectionContent = (obj?: { __typename?: any } | null): obj is InvestAcatWizardAssetSelectionCashSectionContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardAssetSelectionCashSectionContent"')
      return InvestAcatWizardAssetSelectionCashSectionContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardAssetSelectionAssetsSectionContent_possibleTypes: string[] = ['InvestAcatWizardAssetSelectionAssetsSectionContent']
    export const isInvestAcatWizardAssetSelectionAssetsSectionContent = (obj?: { __typename?: any } | null): obj is InvestAcatWizardAssetSelectionAssetsSectionContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardAssetSelectionAssetsSectionContent"')
      return InvestAcatWizardAssetSelectionAssetsSectionContent_possibleTypes.includes(obj.__typename)
    }
    


    const AcatWizardAssetSelectionInput_possibleTypes: string[] = ['AcatWizardAssetSelectionInput']
    export const isAcatWizardAssetSelectionInput = (obj?: { __typename?: any } | null): obj is AcatWizardAssetSelectionInput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatWizardAssetSelectionInput"')
      return AcatWizardAssetSelectionInput_possibleTypes.includes(obj.__typename)
    }
    


    const AcatWizardAssetSelectionCTA_possibleTypes: string[] = ['AcatWizardAssetSelectionCTA']
    export const isAcatWizardAssetSelectionCTA = (obj?: { __typename?: any } | null): obj is AcatWizardAssetSelectionCTA => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcatWizardAssetSelectionCTA"')
      return AcatWizardAssetSelectionCTA_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatTransferTypeScreenContent_possibleTypes: string[] = ['InvestAcatTransferTypeScreenContent']
    export const isInvestAcatTransferTypeScreenContent = (obj?: { __typename?: any } | null): obj is InvestAcatTransferTypeScreenContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatTransferTypeScreenContent"')
      return InvestAcatTransferTypeScreenContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardTransferTypeSelection_possibleTypes: string[] = ['InvestAcatWizardTransferTypeSelection']
    export const isInvestAcatWizardTransferTypeSelection = (obj?: { __typename?: any } | null): obj is InvestAcatWizardTransferTypeSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardTransferTypeSelection"')
      return InvestAcatWizardTransferTypeSelection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatBrokerageSelectionContent_possibleTypes: string[] = ['InvestAcatBrokerageSelectionContent']
    export const isInvestAcatBrokerageSelectionContent = (obj?: { __typename?: any } | null): obj is InvestAcatBrokerageSelectionContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatBrokerageSelectionContent"')
      return InvestAcatBrokerageSelectionContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContraSearchForm_possibleTypes: string[] = ['InvestAcatWizardContraSearchForm']
    export const isInvestAcatWizardContraSearchForm = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContraSearchForm => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContraSearchForm"')
      return InvestAcatWizardContraSearchForm_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContraUnavailable_possibleTypes: string[] = ['InvestAcatWizardContraUnavailable']
    export const isInvestAcatWizardContraUnavailable = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContraUnavailable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContraUnavailable"')
      return InvestAcatWizardContraUnavailable_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContraParticipantConnection_possibleTypes: string[] = ['InvestAcatWizardContraParticipantConnection']
    export const isInvestAcatWizardContraParticipantConnection = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContraParticipantConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContraParticipantConnection"')
      return InvestAcatWizardContraParticipantConnection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContraParticipantEdge_possibleTypes: string[] = ['InvestAcatWizardContraParticipantEdge']
    export const isInvestAcatWizardContraParticipantEdge = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContraParticipantEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContraParticipantEdge"')
      return InvestAcatWizardContraParticipantEdge_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContraParticipant_possibleTypes: string[] = ['InvestAcatWizardContraParticipant']
    export const isInvestAcatWizardContraParticipant = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContraParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContraParticipant"')
      return InvestAcatWizardContraParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatBrokerageAccountDetailsContent_possibleTypes: string[] = ['InvestAcatBrokerageAccountDetailsContent']
    export const isInvestAcatBrokerageAccountDetailsContent = (obj?: { __typename?: any } | null): obj is InvestAcatBrokerageAccountDetailsContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatBrokerageAccountDetailsContent"')
      return InvestAcatBrokerageAccountDetailsContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardContraAccountNumberTextField_possibleTypes: string[] = ['InvestAcatWizardContraAccountNumberTextField']
    export const isInvestAcatWizardContraAccountNumberTextField = (obj?: { __typename?: any } | null): obj is InvestAcatWizardContraAccountNumberTextField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardContraAccountNumberTextField"')
      return InvestAcatWizardContraAccountNumberTextField_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatWizardInformationalMessageContent_possibleTypes: string[] = ['InvestAcatWizardInformationalMessageContent']
    export const isInvestAcatWizardInformationalMessageContent = (obj?: { __typename?: any } | null): obj is InvestAcatWizardInformationalMessageContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatWizardInformationalMessageContent"')
      return InvestAcatWizardInformationalMessageContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatDestinationAccountContent_possibleTypes: string[] = ['InvestAcatDestinationAccountContent']
    export const isInvestAcatDestinationAccountContent = (obj?: { __typename?: any } | null): obj is InvestAcatDestinationAccountContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatDestinationAccountContent"')
      return InvestAcatDestinationAccountContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatTransferInformationScreenContent_possibleTypes: string[] = ['InvestAcatTransferInformationScreenContent']
    export const isInvestAcatTransferInformationScreenContent = (obj?: { __typename?: any } | null): obj is InvestAcatTransferInformationScreenContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatTransferInformationScreenContent"')
      return InvestAcatTransferInformationScreenContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatTransferDetail_possibleTypes: string[] = ['InvestAcatTransferDetail']
    export const isInvestAcatTransferDetail = (obj?: { __typename?: any } | null): obj is InvestAcatTransferDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatTransferDetail"')
      return InvestAcatTransferDetail_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsContent_possibleTypes: string[] = ['InvestAcatConfirmSelectionsContent']
    export const isInvestAcatConfirmSelectionsContent = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsContent"')
      return InvestAcatConfirmSelectionsContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsContentSection_possibleTypes: string[] = ['InvestAcatConfirmSelectionsContentSection']
    export const isInvestAcatConfirmSelectionsContentSection = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsContentSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsContentSection"')
      return InvestAcatConfirmSelectionsContentSection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsCashSection_possibleTypes: string[] = ['InvestAcatConfirmSelectionsCashSection']
    export const isInvestAcatConfirmSelectionsCashSection = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsCashSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsCashSection"')
      return InvestAcatConfirmSelectionsCashSection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsAssetsSection_possibleTypes: string[] = ['InvestAcatConfirmSelectionsAssetsSection']
    export const isInvestAcatConfirmSelectionsAssetsSection = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsAssetsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsAssetsSection"')
      return InvestAcatConfirmSelectionsAssetsSection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsContentSectionEntry_possibleTypes: string[] = ['InvestAcatConfirmSelectionsContentSectionEntry']
    export const isInvestAcatConfirmSelectionsContentSectionEntry = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsContentSectionEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsContentSectionEntry"')
      return InvestAcatConfirmSelectionsContentSectionEntry_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsTransferDetailsSection_possibleTypes: string[] = ['InvestAcatConfirmSelectionsTransferDetailsSection']
    export const isInvestAcatConfirmSelectionsTransferDetailsSection = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsTransferDetailsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsTransferDetailsSection"')
      return InvestAcatConfirmSelectionsTransferDetailsSection_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmSelectionsTransferDetailsSectionDetail_possibleTypes: string[] = ['InvestAcatConfirmSelectionsTransferDetailsSectionDetail']
    export const isInvestAcatConfirmSelectionsTransferDetailsSectionDetail = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmSelectionsTransferDetailsSectionDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmSelectionsTransferDetailsSectionDetail"')
      return InvestAcatConfirmSelectionsTransferDetailsSectionDetail_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmationContent_possibleTypes: string[] = ['InvestAcatConfirmationContent']
    export const isInvestAcatConfirmationContent = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmationContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmationContent"')
      return InvestAcatConfirmationContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestAcatConfirmationInfoCard_possibleTypes: string[] = ['InvestAcatConfirmationInfoCard']
    export const isInvestAcatConfirmationInfoCard = (obj?: { __typename?: any } | null): obj is InvestAcatConfirmationInfoCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestAcatConfirmationInfoCard"')
      return InvestAcatConfirmationInfoCard_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_possibleTypes: string[] = ['Profile']
    export const isProfile = (obj?: { __typename?: any } | null): obj is Profile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile"')
      return Profile_possibleTypes.includes(obj.__typename)
    }
    


    const AccountHolder_possibleTypes: string[] = ['AccountHolder']
    export const isAccountHolder = (obj?: { __typename?: any } | null): obj is AccountHolder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountHolder"')
      return AccountHolder_possibleTypes.includes(obj.__typename)
    }
    


    const Employment_possibleTypes: string[] = ['Employment']
    export const isEmployment = (obj?: { __typename?: any } | null): obj is Employment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmployment"')
      return Employment_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeOrFinraAffiliationDisclosure_possibleTypes: string[] = ['ExchangeOrFinraAffiliationDisclosure']
    export const isExchangeOrFinraAffiliationDisclosure = (obj?: { __typename?: any } | null): obj is ExchangeOrFinraAffiliationDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeOrFinraAffiliationDisclosure"')
      return ExchangeOrFinraAffiliationDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const ControlPersonDisclosure_possibleTypes: string[] = ['ControlPersonDisclosure']
    export const isControlPersonDisclosure = (obj?: { __typename?: any } | null): obj is ControlPersonDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isControlPersonDisclosure"')
      return ControlPersonDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const PoliticalExposureDisclosure_possibleTypes: string[] = ['PoliticalExposureDisclosure']
    export const isPoliticalExposureDisclosure = (obj?: { __typename?: any } | null): obj is PoliticalExposureDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPoliticalExposureDisclosure"')
      return PoliticalExposureDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const BackupWithholding_possibleTypes: string[] = ['BackupWithholding']
    export const isBackupWithholding = (obj?: { __typename?: any } | null): obj is BackupWithholding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBackupWithholding"')
      return BackupWithholding_possibleTypes.includes(obj.__typename)
    }
    


    const SuitabilityProfile_possibleTypes: string[] = ['SuitabilityProfile']
    export const isSuitabilityProfile = (obj?: { __typename?: any } | null): obj is SuitabilityProfile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSuitabilityProfile"')
      return SuitabilityProfile_possibleTypes.includes(obj.__typename)
    }
    


    const Beneficiary_possibleTypes: string[] = ['Beneficiary']
    export const isBeneficiary = (obj?: { __typename?: any } | null): obj is Beneficiary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBeneficiary"')
      return Beneficiary_possibleTypes.includes(obj.__typename)
    }
    


    const TrustedContact_possibleTypes: string[] = ['TrustedContact']
    export const isTrustedContact = (obj?: { __typename?: any } | null): obj is TrustedContact => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTrustedContact"')
      return TrustedContact_possibleTypes.includes(obj.__typename)
    }
    


    const Referrals_possibleTypes: string[] = ['Referrals']
    export const isReferrals = (obj?: { __typename?: any } | null): obj is Referrals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReferrals"')
      return Referrals_possibleTypes.includes(obj.__typename)
    }
    


    const ReferrerStatus_possibleTypes: string[] = ['ReferrerStatus']
    export const isReferrerStatus = (obj?: { __typename?: any } | null): obj is ReferrerStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReferrerStatus"')
      return ReferrerStatus_possibleTypes.includes(obj.__typename)
    }
    


    const ReferralOffer_possibleTypes: string[] = ['ReferralOffer']
    export const isReferralOffer = (obj?: { __typename?: any } | null): obj is ReferralOffer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReferralOffer"')
      return ReferralOffer_possibleTypes.includes(obj.__typename)
    }
    


    const Research_possibleTypes: string[] = ['Research']
    export const isResearch = (obj?: { __typename?: any } | null): obj is Research => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResearch"')
      return Research_possibleTypes.includes(obj.__typename)
    }
    


    const Quote_possibleTypes: string[] = ['Quote']
    export const isQuote = (obj?: { __typename?: any } | null): obj is Quote => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuote"')
      return Quote_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityProfile_possibleTypes: string[] = ['SecurityProfile']
    export const isSecurityProfile = (obj?: { __typename?: any } | null): obj is SecurityProfile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityProfile"')
      return SecurityProfile_possibleTypes.includes(obj.__typename)
    }
    


    const PriceChange_possibleTypes: string[] = ['PriceChange']
    export const isPriceChange = (obj?: { __typename?: any } | null): obj is PriceChange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceChange"')
      return PriceChange_possibleTypes.includes(obj.__typename)
    }
    


    const SliceableShowcase_possibleTypes: string[] = ['SliceableShowcase']
    export const isSliceableShowcase = (obj?: { __typename?: any } | null): obj is SliceableShowcase => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSliceableShowcase"')
      return SliceableShowcase_possibleTypes.includes(obj.__typename)
    }
    


    const Spend_possibleTypes: string[] = ['Spend']
    export const isSpend = (obj?: { __typename?: any } | null): obj is Spend => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpend"')
      return Spend_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAgreements_possibleTypes: string[] = ['SpendAgreements']
    export const isSpendAgreements = (obj?: { __typename?: any } | null): obj is SpendAgreements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAgreements"')
      return SpendAgreements_possibleTypes.includes(obj.__typename)
    }
    


    const SpendDueDiligenceQuestions_possibleTypes: string[] = ['SpendDueDiligenceQuestions']
    export const isSpendDueDiligenceQuestions = (obj?: { __typename?: any } | null): obj is SpendDueDiligenceQuestions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendDueDiligenceQuestions"')
      return SpendDueDiligenceQuestions_possibleTypes.includes(obj.__typename)
    }
    


    const DueDiligenceQuestion_possibleTypes: string[] = ['DueDiligenceQuestion']
    export const isDueDiligenceQuestion = (obj?: { __typename?: any } | null): obj is DueDiligenceQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDueDiligenceQuestion"')
      return DueDiligenceQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const DueDiligenceQuestionChoice_possibleTypes: string[] = ['DueDiligenceQuestionChoice']
    export const isDueDiligenceQuestionChoice = (obj?: { __typename?: any } | null): obj is DueDiligenceQuestionChoice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDueDiligenceQuestionChoice"')
      return DueDiligenceQuestionChoice_possibleTypes.includes(obj.__typename)
    }
    


    const TextWithTooltip_possibleTypes: string[] = ['TextWithTooltip']
    export const isTextWithTooltip = (obj?: { __typename?: any } | null): obj is TextWithTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTextWithTooltip"')
      return TextWithTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const SpendPrimaryMarketingScreen_possibleTypes: string[] = ['SpendPrimaryMarketingScreen']
    export const isSpendPrimaryMarketingScreen = (obj?: { __typename?: any } | null): obj is SpendPrimaryMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendPrimaryMarketingScreen"')
      return SpendPrimaryMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const BalanceOverviewLabel_possibleTypes: string[] = ['BalanceOverviewLabel']
    export const isBalanceOverviewLabel = (obj?: { __typename?: any } | null): obj is BalanceOverviewLabel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBalanceOverviewLabel"')
      return BalanceOverviewLabel_possibleTypes.includes(obj.__typename)
    }
    


    const AccountCard_possibleTypes: string[] = ['AccountCard']
    export const isAccountCard = (obj?: { __typename?: any } | null): obj is AccountCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountCard"')
      return AccountCard_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingCard_possibleTypes: string[] = ['MarketingCard']
    export const isMarketingCard = (obj?: { __typename?: any } | null): obj is MarketingCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingCard"')
      return MarketingCard_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingPerk_possibleTypes: string[] = ['MarketingPerk']
    export const isMarketingPerk = (obj?: { __typename?: any } | null): obj is MarketingPerk => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingPerk"')
      return MarketingPerk_possibleTypes.includes(obj.__typename)
    }
    


    const SpendESignAgreement_possibleTypes: string[] = ['SpendESignAgreement']
    export const isSpendESignAgreement = (obj?: { __typename?: any } | null): obj is SpendESignAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendESignAgreement"')
      return SpendESignAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const SpendIdentity_possibleTypes: string[] = ['SpendIdentity']
    export const isSpendIdentity = (obj?: { __typename?: any } | null): obj is SpendIdentity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendIdentity"')
      return SpendIdentity_possibleTypes.includes(obj.__typename)
    }
    


    const SpendIdentityStatus_possibleTypes: string[] = ['SpendIdentityStatus']
    export const isSpendIdentityStatus = (obj?: { __typename?: any } | null): obj is SpendIdentityStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendIdentityStatus"')
      return SpendIdentityStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAccount_possibleTypes: string[] = ['SpendAccount']
    export const isSpendAccount = (obj?: { __typename?: any } | null): obj is SpendAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAccount"')
      return SpendAccount_possibleTypes.includes(obj.__typename)
    }
    


    const SpendPromotionalMessage_possibleTypes: string[] = ['SpendPromotionalMessage']
    export const isSpendPromotionalMessage = (obj?: { __typename?: any } | null): obj is SpendPromotionalMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendPromotionalMessage"')
      return SpendPromotionalMessage_possibleTypes.includes(obj.__typename)
    }
    


    const PhysicalCheck_possibleTypes: string[] = ['PhysicalCheck']
    export const isPhysicalCheck = (obj?: { __typename?: any } | null): obj is PhysicalCheck => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPhysicalCheck"')
      return PhysicalCheck_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAccountStatus_possibleTypes: string[] = ['SpendAccountStatus']
    export const isSpendAccountStatus = (obj?: { __typename?: any } | null): obj is SpendAccountStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAccountStatus"')
      return SpendAccountStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAccountBalance_possibleTypes: string[] = ['SpendAccountBalance']
    export const isSpendAccountBalance = (obj?: { __typename?: any } | null): obj is SpendAccountBalance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAccountBalance"')
      return SpendAccountBalance_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAccountRates_possibleTypes: string[] = ['SpendAccountRates']
    export const isSpendAccountRates = (obj?: { __typename?: any } | null): obj is SpendAccountRates => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAccountRates"')
      return SpendAccountRates_possibleTypes.includes(obj.__typename)
    }
    


    const SpendExternalAccount_possibleTypes: string[] = ['SpendExternalAccount']
    export const isSpendExternalAccount = (obj?: { __typename?: any } | null): obj is SpendExternalAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendExternalAccount"')
      return SpendExternalAccount_possibleTypes.includes(obj.__typename)
    }
    


    const SpendExternalAccountStatus_possibleTypes: string[] = ['SpendExternalAccountStatus']
    export const isSpendExternalAccountStatus = (obj?: { __typename?: any } | null): obj is SpendExternalAccountStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendExternalAccountStatus"')
      return SpendExternalAccountStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SpendAvailableDebitCards_possibleTypes: string[] = ['SpendAvailableDebitCards']
    export const isSpendAvailableDebitCards = (obj?: { __typename?: any } | null): obj is SpendAvailableDebitCards => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendAvailableDebitCards"')
      return SpendAvailableDebitCards_possibleTypes.includes(obj.__typename)
    }
    


    const SpendDebitCard_possibleTypes: string[] = ['SpendDebitCard']
    export const isSpendDebitCard = (obj?: { __typename?: any } | null): obj is SpendDebitCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendDebitCard"')
      return SpendDebitCard_possibleTypes.includes(obj.__typename)
    }
    


    const ManageSpendCard_possibleTypes: string[] = ['ManageSpendCard']
    export const isManageSpendCard = (obj?: { __typename?: any } | null): obj is ManageSpendCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManageSpendCard"')
      return ManageSpendCard_possibleTypes.includes(obj.__typename)
    }
    


    const ManageSpendCardAction_possibleTypes: string[] = ['ManageSpendCardAction']
    export const isManageSpendCardAction = (obj?: { __typename?: any } | null): obj is ManageSpendCardAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManageSpendCardAction"')
      return ManageSpendCardAction_possibleTypes.includes(obj.__typename)
    }
    


    const SpendDebitCardDesign_possibleTypes: string[] = ['SpendDebitCardDesign']
    export const isSpendDebitCardDesign = (obj?: { __typename?: any } | null): obj is SpendDebitCardDesign => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendDebitCardDesign"')
      return SpendDebitCardDesign_possibleTypes.includes(obj.__typename)
    }
    


    const SpendDebitCardCta_possibleTypes: string[] = ['SpendDebitCardCta']
    export const isSpendDebitCardCta = (obj?: { __typename?: any } | null): obj is SpendDebitCardCta => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendDebitCardCta"')
      return SpendDebitCardCta_possibleTypes.includes(obj.__typename)
    }
    


    const SpendDebitCardStatus_possibleTypes: string[] = ['SpendDebitCardStatus']
    export const isSpendDebitCardStatus = (obj?: { __typename?: any } | null): obj is SpendDebitCardStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendDebitCardStatus"')
      return SpendDebitCardStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SpendDebitCardLimits_possibleTypes: string[] = ['SpendDebitCardLimits']
    export const isSpendDebitCardLimits = (obj?: { __typename?: any } | null): obj is SpendDebitCardLimits => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendDebitCardLimits"')
      return SpendDebitCardLimits_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivity_possibleTypes: string[] = ['SpendActivity']
    export const isSpendActivity = (obj?: { __typename?: any } | null): obj is SpendActivity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivity"')
      return SpendActivity_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntryConnection_possibleTypes: string[] = ['SpendActivityEntryConnection']
    export const isSpendActivityEntryConnection = (obj?: { __typename?: any } | null): obj is SpendActivityEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntryConnection"')
      return SpendActivityEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntryEdge_possibleTypes: string[] = ['SpendActivityEntryEdge']
    export const isSpendActivityEntryEdge = (obj?: { __typename?: any } | null): obj is SpendActivityEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntryEdge"')
      return SpendActivityEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntry_possibleTypes: string[] = ['CreditCardTransaction','SavingsTransaction','SpendTransaction','SpendActivityOtherEntry']
    export const isSpendActivityEntry = (obj?: { __typename?: any } | null): obj is SpendActivityEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntry"')
      return SpendActivityEntry_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntryDetails_possibleTypes: string[] = ['SpendActivityEntryDetails']
    export const isSpendActivityEntryDetails = (obj?: { __typename?: any } | null): obj is SpendActivityEntryDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntryDetails"')
      return SpendActivityEntryDetails_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntryAdditionalDetail_possibleTypes: string[] = ['SpendActivityEntryAdditionalDetail']
    export const isSpendActivityEntryAdditionalDetail = (obj?: { __typename?: any } | null): obj is SpendActivityEntryAdditionalDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntryAdditionalDetail"')
      return SpendActivityEntryAdditionalDetail_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntryCategoryDetails_possibleTypes: string[] = ['SpendActivityEntryCategoryDetails']
    export const isSpendActivityEntryCategoryDetails = (obj?: { __typename?: any } | null): obj is SpendActivityEntryCategoryDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntryCategoryDetails"')
      return SpendActivityEntryCategoryDetails_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntrySupplementaryMessage_possibleTypes: string[] = ['SpendActivityEntrySupplementaryMessage']
    export const isSpendActivityEntrySupplementaryMessage = (obj?: { __typename?: any } | null): obj is SpendActivityEntrySupplementaryMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntrySupplementaryMessage"')
      return SpendActivityEntrySupplementaryMessage_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityEntryDisputeDetails_possibleTypes: string[] = ['SpendActivityEntryDisputeDetails']
    export const isSpendActivityEntryDisputeDetails = (obj?: { __typename?: any } | null): obj is SpendActivityEntryDisputeDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityEntryDisputeDetails"')
      return SpendActivityEntryDisputeDetails_possibleTypes.includes(obj.__typename)
    }
    


    const SpendTransaction_possibleTypes: string[] = ['SpendTransaction']
    export const isSpendTransaction = (obj?: { __typename?: any } | null): obj is SpendTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendTransaction"')
      return SpendTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const SpendTransactionType_possibleTypes: string[] = ['SpendTransactionType']
    export const isSpendTransactionType = (obj?: { __typename?: any } | null): obj is SpendTransactionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendTransactionType"')
      return SpendTransactionType_possibleTypes.includes(obj.__typename)
    }
    


    const SpendTransactionStatus_possibleTypes: string[] = ['SpendTransactionStatus']
    export const isSpendTransactionStatus = (obj?: { __typename?: any } | null): obj is SpendTransactionStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendTransactionStatus"')
      return SpendTransactionStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SpendActivityOtherEntry_possibleTypes: string[] = ['SpendActivityOtherEntry']
    export const isSpendActivityOtherEntry = (obj?: { __typename?: any } | null): obj is SpendActivityOtherEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendActivityOtherEntry"')
      return SpendActivityOtherEntry_possibleTypes.includes(obj.__typename)
    }
    


    const MigratableInvestExternalAccountConnection_possibleTypes: string[] = ['MigratableInvestExternalAccountConnection']
    export const isMigratableInvestExternalAccountConnection = (obj?: { __typename?: any } | null): obj is MigratableInvestExternalAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMigratableInvestExternalAccountConnection"')
      return MigratableInvestExternalAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MigratableInvestExternalAccountEdge_possibleTypes: string[] = ['MigratableInvestExternalAccountEdge']
    export const isMigratableInvestExternalAccountEdge = (obj?: { __typename?: any } | null): obj is MigratableInvestExternalAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMigratableInvestExternalAccountEdge"')
      return MigratableInvestExternalAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MigratableInvestExternalAccount_possibleTypes: string[] = ['MigratableInvestExternalAccount']
    export const isMigratableInvestExternalAccount = (obj?: { __typename?: any } | null): obj is MigratableInvestExternalAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMigratableInvestExternalAccount"')
      return MigratableInvestExternalAccount_possibleTypes.includes(obj.__typename)
    }
    


    const SpendMoveMoney_possibleTypes: string[] = ['SpendMoveMoney']
    export const isSpendMoveMoney = (obj?: { __typename?: any } | null): obj is SpendMoveMoney => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendMoveMoney"')
      return SpendMoveMoney_possibleTypes.includes(obj.__typename)
    }
    


    const SpendMoveMoneyCategory_possibleTypes: string[] = ['SpendMoveMoneyCategory']
    export const isSpendMoveMoneyCategory = (obj?: { __typename?: any } | null): obj is SpendMoveMoneyCategory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendMoveMoneyCategory"')
      return SpendMoveMoneyCategory_possibleTypes.includes(obj.__typename)
    }
    


    const SpendMoveMoneyOption_possibleTypes: string[] = ['SpendMoveMoneyOption']
    export const isSpendMoveMoneyOption = (obj?: { __typename?: any } | null): obj is SpendMoveMoneyOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendMoveMoneyOption"')
      return SpendMoveMoneyOption_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheck_possibleTypes: string[] = ['SendCheck']
    export const isSendCheck = (obj?: { __typename?: any } | null): obj is SendCheck => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheck"')
      return SendCheck_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckIneligibleContent_possibleTypes: string[] = ['SendCheckIneligibleContent']
    export const isSendCheckIneligibleContent = (obj?: { __typename?: any } | null): obj is SendCheckIneligibleContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckIneligibleContent"')
      return SendCheckIneligibleContent_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckPlusMarketingContent_possibleTypes: string[] = ['SendCheckPlusMarketingContent']
    export const isSendCheckPlusMarketingContent = (obj?: { __typename?: any } | null): obj is SendCheckPlusMarketingContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckPlusMarketingContent"')
      return SendCheckPlusMarketingContent_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckTransferOverviewContent_possibleTypes: string[] = ['SendCheckTransferOverviewContent']
    export const isSendCheckTransferOverviewContent = (obj?: { __typename?: any } | null): obj is SendCheckTransferOverviewContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckTransferOverviewContent"')
      return SendCheckTransferOverviewContent_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckTransferDetailOption_possibleTypes: string[] = ['SendCheckTransferDetailOption']
    export const isSendCheckTransferDetailOption = (obj?: { __typename?: any } | null): obj is SendCheckTransferDetailOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckTransferDetailOption"')
      return SendCheckTransferDetailOption_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckSelectRecipientContent_possibleTypes: string[] = ['SendCheckSelectRecipientContent']
    export const isSendCheckSelectRecipientContent = (obj?: { __typename?: any } | null): obj is SendCheckSelectRecipientContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckSelectRecipientContent"')
      return SendCheckSelectRecipientContent_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckRecipientList_possibleTypes: string[] = ['SendCheckRecipientList']
    export const isSendCheckRecipientList = (obj?: { __typename?: any } | null): obj is SendCheckRecipientList => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckRecipientList"')
      return SendCheckRecipientList_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckRecipientListItem_possibleTypes: string[] = ['SendCheckRecipientListItem']
    export const isSendCheckRecipientListItem = (obj?: { __typename?: any } | null): obj is SendCheckRecipientListItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckRecipientListItem"')
      return SendCheckRecipientListItem_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckRecipientEditRequirements_possibleTypes: string[] = ['SendCheckRecipientEditRequirements']
    export const isSendCheckRecipientEditRequirements = (obj?: { __typename?: any } | null): obj is SendCheckRecipientEditRequirements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckRecipientEditRequirements"')
      return SendCheckRecipientEditRequirements_possibleTypes.includes(obj.__typename)
    }
    


    const SelectRecipientTypeContent_possibleTypes: string[] = ['SelectRecipientTypeContent']
    export const isSelectRecipientTypeContent = (obj?: { __typename?: any } | null): obj is SelectRecipientTypeContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSelectRecipientTypeContent"')
      return SelectRecipientTypeContent_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckRecipientTypeOption_possibleTypes: string[] = ['SendCheckRecipientTypeOption']
    export const isSendCheckRecipientTypeOption = (obj?: { __typename?: any } | null): obj is SendCheckRecipientTypeOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckRecipientTypeOption"')
      return SendCheckRecipientTypeOption_possibleTypes.includes(obj.__typename)
    }
    


    const RecipientInformationContent_possibleTypes: string[] = ['RecipientInformationContent']
    export const isRecipientInformationContent = (obj?: { __typename?: any } | null): obj is RecipientInformationContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecipientInformationContent"')
      return RecipientInformationContent_possibleTypes.includes(obj.__typename)
    }
    


    const SetCheckAmountContent_possibleTypes: string[] = ['SetCheckAmountContent']
    export const isSetCheckAmountContent = (obj?: { __typename?: any } | null): obj is SetCheckAmountContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetCheckAmountContent"')
      return SetCheckAmountContent_possibleTypes.includes(obj.__typename)
    }
    


    const CheckMemoContent_possibleTypes: string[] = ['CheckMemoContent']
    export const isCheckMemoContent = (obj?: { __typename?: any } | null): obj is CheckMemoContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCheckMemoContent"')
      return CheckMemoContent_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmCheckDetailsContent_possibleTypes: string[] = ['ConfirmCheckDetailsContent']
    export const isConfirmCheckDetailsContent = (obj?: { __typename?: any } | null): obj is ConfirmCheckDetailsContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmCheckDetailsContent"')
      return ConfirmCheckDetailsContent_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckTransferTimingMessage_possibleTypes: string[] = ['SendCheckTransferTimingMessage']
    export const isSendCheckTransferTimingMessage = (obj?: { __typename?: any } | null): obj is SendCheckTransferTimingMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckTransferTimingMessage"')
      return SendCheckTransferTimingMessage_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentConfirmedContent_possibleTypes: string[] = ['PaymentConfirmedContent']
    export const isPaymentConfirmedContent = (obj?: { __typename?: any } | null): obj is PaymentConfirmedContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentConfirmedContent"')
      return PaymentConfirmedContent_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTradingStatus_possibleTypes: string[] = ['AccountTradingStatus']
    export const isAccountTradingStatus = (obj?: { __typename?: any } | null): obj is AccountTradingStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTradingStatus"')
      return AccountTradingStatus_possibleTypes.includes(obj.__typename)
    }
    


    const TradingWindowDescription_possibleTypes: string[] = ['TradingWindowDescription']
    export const isTradingWindowDescription = (obj?: { __typename?: any } | null): obj is TradingWindowDescription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTradingWindowDescription"')
      return TradingWindowDescription_possibleTypes.includes(obj.__typename)
    }
    


    const OnDemandAllocatedTrade_possibleTypes: string[] = ['OnDemandAllocatedTrade']
    export const isOnDemandAllocatedTrade = (obj?: { __typename?: any } | null): obj is OnDemandAllocatedTrade => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnDemandAllocatedTrade"')
      return OnDemandAllocatedTrade_possibleTypes.includes(obj.__typename)
    }
    


    const OnDemandAllocatedTradeNote_possibleTypes: string[] = ['OnDemandAllocatedTradeNote']
    export const isOnDemandAllocatedTradeNote = (obj?: { __typename?: any } | null): obj is OnDemandAllocatedTradeNote => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnDemandAllocatedTradeNote"')
      return OnDemandAllocatedTradeNote_possibleTypes.includes(obj.__typename)
    }
    


    const SecurityMarginTooltip_possibleTypes: string[] = ['SecurityMarginTooltip']
    export const isSecurityMarginTooltip = (obj?: { __typename?: any } | null): obj is SecurityMarginTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityMarginTooltip"')
      return SecurityMarginTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const RecurrenceSchedule_possibleTypes: string[] = ['MonthlySchedule','WeekOfMonthSchedule','BiweeklySchedule','WeeklySchedule']
    export const isRecurrenceSchedule = (obj?: { __typename?: any } | null): obj is RecurrenceSchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecurrenceSchedule"')
      return RecurrenceSchedule_possibleTypes.includes(obj.__typename)
    }
    


    const MonthlySchedule_possibleTypes: string[] = ['MonthlySchedule']
    export const isMonthlySchedule = (obj?: { __typename?: any } | null): obj is MonthlySchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMonthlySchedule"')
      return MonthlySchedule_possibleTypes.includes(obj.__typename)
    }
    


    const WeekOfMonthSchedule_possibleTypes: string[] = ['WeekOfMonthSchedule']
    export const isWeekOfMonthSchedule = (obj?: { __typename?: any } | null): obj is WeekOfMonthSchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWeekOfMonthSchedule"')
      return WeekOfMonthSchedule_possibleTypes.includes(obj.__typename)
    }
    


    const BiweeklySchedule_possibleTypes: string[] = ['BiweeklySchedule']
    export const isBiweeklySchedule = (obj?: { __typename?: any } | null): obj is BiweeklySchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBiweeklySchedule"')
      return BiweeklySchedule_possibleTypes.includes(obj.__typename)
    }
    


    const WeeklySchedule_possibleTypes: string[] = ['WeeklySchedule']
    export const isWeeklySchedule = (obj?: { __typename?: any } | null): obj is WeeklySchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWeeklySchedule"')
      return WeeklySchedule_possibleTypes.includes(obj.__typename)
    }
    


    const InvestRollovers_possibleTypes: string[] = ['InvestRollovers']
    export const isInvestRollovers = (obj?: { __typename?: any } | null): obj is InvestRollovers => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestRollovers"')
      return InvestRollovers_possibleTypes.includes(obj.__typename)
    }
    


    const RolloverTransactions_possibleTypes: string[] = ['RolloverTransactions']
    export const isRolloverTransactions = (obj?: { __typename?: any } | null): obj is RolloverTransactions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRolloverTransactions"')
      return RolloverTransactions_possibleTypes.includes(obj.__typename)
    }
    


    const InvestSharePie_possibleTypes: string[] = ['InvestSharePie']
    export const isInvestSharePie = (obj?: { __typename?: any } | null): obj is InvestSharePie => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestSharePie"')
      return InvestSharePie_possibleTypes.includes(obj.__typename)
    }
    


    const InvestSharePieModal_possibleTypes: string[] = ['InvestSharePieModal']
    export const isInvestSharePieModal = (obj?: { __typename?: any } | null): obj is InvestSharePieModal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestSharePieModal"')
      return InvestSharePieModal_possibleTypes.includes(obj.__typename)
    }
    


    const InvestRolloverCheckInstructions_possibleTypes: string[] = ['InvestRolloverCheckInstructions']
    export const isInvestRolloverCheckInstructions = (obj?: { __typename?: any } | null): obj is InvestRolloverCheckInstructions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestRolloverCheckInstructions"')
      return InvestRolloverCheckInstructions_possibleTypes.includes(obj.__typename)
    }
    


    const User_possibleTypes: string[] = ['User']
    export const isUser = (obj?: { __typename?: any } | null): obj is User => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUser"')
      return User_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingIdentityFirst_possibleTypes: string[] = ['OnboardingIdentityFirst']
    export const isOnboardingIdentityFirst = (obj?: { __typename?: any } | null): obj is OnboardingIdentityFirst => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingIdentityFirst"')
      return OnboardingIdentityFirst_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingIdentityFirstUserProfileSection_possibleTypes: string[] = ['OnboardingIdentityFirstUserProfileSection']
    export const isOnboardingIdentityFirstUserProfileSection = (obj?: { __typename?: any } | null): obj is OnboardingIdentityFirstUserProfileSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingIdentityFirstUserProfileSection"')
      return OnboardingIdentityFirstUserProfileSection_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingIdentityFirstFinancialSuitabilitySection_possibleTypes: string[] = ['OnboardingIdentityFirstFinancialSuitabilitySection']
    export const isOnboardingIdentityFirstFinancialSuitabilitySection = (obj?: { __typename?: any } | null): obj is OnboardingIdentityFirstFinancialSuitabilitySection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingIdentityFirstFinancialSuitabilitySection"')
      return OnboardingIdentityFirstFinancialSuitabilitySection_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingIdentityFirstQuestion_possibleTypes: string[] = ['OnboardingIdentityFirstQuestion']
    export const isOnboardingIdentityFirstQuestion = (obj?: { __typename?: any } | null): obj is OnboardingIdentityFirstQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingIdentityFirstQuestion"')
      return OnboardingIdentityFirstQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSupportField_possibleTypes: string[] = ['CustomerSupportField']
    export const isCustomerSupportField = (obj?: { __typename?: any } | null): obj is CustomerSupportField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSupportField"')
      return CustomerSupportField_possibleTypes.includes(obj.__typename)
    }
    


    const UserDataEntry_possibleTypes: string[] = ['UserDataEntry']
    export const isUserDataEntry = (obj?: { __typename?: any } | null): obj is UserDataEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserDataEntry"')
      return UserDataEntry_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingScreen_possibleTypes: string[] = ['BorrowMarketingScreenV2','InvestMarketingScreen','SpendMarketingScreen','EarnMarketingScreen']
    export const isMarketingScreen = (obj?: { __typename?: any } | null): obj is MarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingScreen"')
      return MarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const AppAction_possibleTypes: string[] = ['AppAction']
    export const isAppAction = (obj?: { __typename?: any } | null): obj is AppAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppAction"')
      return AppAction_possibleTypes.includes(obj.__typename)
    }
    


    const AppAnalyticsEvent_possibleTypes: string[] = ['AppAnalyticsEvent']
    export const isAppAnalyticsEvent = (obj?: { __typename?: any } | null): obj is AppAnalyticsEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppAnalyticsEvent"')
      return AppAnalyticsEvent_possibleTypes.includes(obj.__typename)
    }
    


    const AppAnalyticsParameter_possibleTypes: string[] = ['AppAnalyticsParameter']
    export const isAppAnalyticsParameter = (obj?: { __typename?: any } | null): obj is AppAnalyticsParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppAnalyticsParameter"')
      return AppAnalyticsParameter_possibleTypes.includes(obj.__typename)
    }
    


    const AppAnalyticsBooleanParameter_possibleTypes: string[] = ['AppAnalyticsBooleanParameter']
    export const isAppAnalyticsBooleanParameter = (obj?: { __typename?: any } | null): obj is AppAnalyticsBooleanParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppAnalyticsBooleanParameter"')
      return AppAnalyticsBooleanParameter_possibleTypes.includes(obj.__typename)
    }
    


    const AppAnalyticsNumberParameter_possibleTypes: string[] = ['AppAnalyticsNumberParameter']
    export const isAppAnalyticsNumberParameter = (obj?: { __typename?: any } | null): obj is AppAnalyticsNumberParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppAnalyticsNumberParameter"')
      return AppAnalyticsNumberParameter_possibleTypes.includes(obj.__typename)
    }
    


    const AppButtonUnion_possibleTypes: string[] = ['AppButton','AppLink','AppShareButton']
    export const isAppButtonUnion = (obj?: { __typename?: any } | null): obj is AppButtonUnion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppButtonUnion"')
      return AppButtonUnion_possibleTypes.includes(obj.__typename)
    }
    


    const AppButtonInterface_possibleTypes: string[] = ['AppButton','AppShareButton']
    export const isAppButtonInterface = (obj?: { __typename?: any } | null): obj is AppButtonInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppButtonInterface"')
      return AppButtonInterface_possibleTypes.includes(obj.__typename)
    }
    


    const AppButton_possibleTypes: string[] = ['AppButton']
    export const isAppButton = (obj?: { __typename?: any } | null): obj is AppButton => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppButton"')
      return AppButton_possibleTypes.includes(obj.__typename)
    }
    


    const AppShareButton_possibleTypes: string[] = ['AppShareButton']
    export const isAppShareButton = (obj?: { __typename?: any } | null): obj is AppShareButton => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppShareButton"')
      return AppShareButton_possibleTypes.includes(obj.__typename)
    }
    


    const AppCard_possibleTypes: string[] = ['AppCard']
    export const isAppCard = (obj?: { __typename?: any } | null): obj is AppCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppCard"')
      return AppCard_possibleTypes.includes(obj.__typename)
    }
    


    const AppImage_possibleTypes: string[] = ['AppImage']
    export const isAppImage = (obj?: { __typename?: any } | null): obj is AppImage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppImage"')
      return AppImage_possibleTypes.includes(obj.__typename)
    }
    


    const AppImageSourceSet_possibleTypes: string[] = ['AppImageSourceSet']
    export const isAppImageSourceSet = (obj?: { __typename?: any } | null): obj is AppImageSourceSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppImageSourceSet"')
      return AppImageSourceSet_possibleTypes.includes(obj.__typename)
    }
    


    const AppInfoPage_possibleTypes: string[] = ['AppInfoPage']
    export const isAppInfoPage = (obj?: { __typename?: any } | null): obj is AppInfoPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInfoPage"')
      return AppInfoPage_possibleTypes.includes(obj.__typename)
    }
    


    const InfoPageListItem_possibleTypes: string[] = ['InfoPageListItem']
    export const isInfoPageListItem = (obj?: { __typename?: any } | null): obj is InfoPageListItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInfoPageListItem"')
      return InfoPageListItem_possibleTypes.includes(obj.__typename)
    }
    


    const AppInformationalMessageCard_possibleTypes: string[] = ['AppInformationalMessageCard']
    export const isAppInformationalMessageCard = (obj?: { __typename?: any } | null): obj is AppInformationalMessageCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInformationalMessageCard"')
      return AppInformationalMessageCard_possibleTypes.includes(obj.__typename)
    }
    


    const AppInformationalMessageCardItem_possibleTypes: string[] = ['AppInformationalMessageCardItem']
    export const isAppInformationalMessageCardItem = (obj?: { __typename?: any } | null): obj is AppInformationalMessageCardItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInformationalMessageCardItem"')
      return AppInformationalMessageCardItem_possibleTypes.includes(obj.__typename)
    }
    


    const AppInformationalMessageCardItemTooltip_possibleTypes: string[] = ['AppInformationalMessageCardItemTooltip']
    export const isAppInformationalMessageCardItemTooltip = (obj?: { __typename?: any } | null): obj is AppInformationalMessageCardItemTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInformationalMessageCardItemTooltip"')
      return AppInformationalMessageCardItemTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const AppPillInterface_possibleTypes: string[] = ['AppPill','CreditCardRewardsAppPill']
    export const isAppPillInterface = (obj?: { __typename?: any } | null): obj is AppPillInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPillInterface"')
      return AppPillInterface_possibleTypes.includes(obj.__typename)
    }
    


    const AppPill_possibleTypes: string[] = ['AppPill']
    export const isAppPill = (obj?: { __typename?: any } | null): obj is AppPill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPill"')
      return AppPill_possibleTypes.includes(obj.__typename)
    }
    


    const AppRichTextDisclosureLink_possibleTypes: string[] = ['AppRichTextDisclosureLink']
    export const isAppRichTextDisclosureLink = (obj?: { __typename?: any } | null): obj is AppRichTextDisclosureLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRichTextDisclosureLink"')
      return AppRichTextDisclosureLink_possibleTypes.includes(obj.__typename)
    }
    


    const AppToast_possibleTypes: string[] = ['AppToast']
    export const isAppToast = (obj?: { __typename?: any } | null): obj is AppToast => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppToast"')
      return AppToast_possibleTypes.includes(obj.__typename)
    }
    


    const AppTooltipInterface_possibleTypes: string[] = ['AppTooltip']
    export const isAppTooltipInterface = (obj?: { __typename?: any } | null): obj is AppTooltipInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppTooltipInterface"')
      return AppTooltipInterface_possibleTypes.includes(obj.__typename)
    }
    


    const AppTooltip_possibleTypes: string[] = ['AppTooltip']
    export const isAppTooltip = (obj?: { __typename?: any } | null): obj is AppTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppTooltip"')
      return AppTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const ClientInfo_possibleTypes: string[] = ['ClientInfo']
    export const isClientInfo = (obj?: { __typename?: any } | null): obj is ClientInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isClientInfo"')
      return ClientInfo_possibleTypes.includes(obj.__typename)
    }
    


    const ContactUs_possibleTypes: string[] = ['ContactUs']
    export const isContactUs = (obj?: { __typename?: any } | null): obj is ContactUs => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isContactUs"')
      return ContactUs_possibleTypes.includes(obj.__typename)
    }
    


    const ContactUsCard_possibleTypes: string[] = ['ContactUsCard']
    export const isContactUsCard = (obj?: { __typename?: any } | null): obj is ContactUsCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isContactUsCard"')
      return ContactUsCard_possibleTypes.includes(obj.__typename)
    }
    


    const VideoTutorialsSection_possibleTypes: string[] = ['VideoTutorialsSection']
    export const isVideoTutorialsSection = (obj?: { __typename?: any } | null): obj is VideoTutorialsSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoTutorialsSection"')
      return VideoTutorialsSection_possibleTypes.includes(obj.__typename)
    }
    


    const VideoTutorialsSectionViewAll_possibleTypes: string[] = ['VideoTutorialsSectionViewAll']
    export const isVideoTutorialsSectionViewAll = (obj?: { __typename?: any } | null): obj is VideoTutorialsSectionViewAll => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoTutorialsSectionViewAll"')
      return VideoTutorialsSectionViewAll_possibleTypes.includes(obj.__typename)
    }
    


    const Video_possibleTypes: string[] = ['Video']
    export const isVideo = (obj?: { __typename?: any } | null): obj is Video => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideo"')
      return Video_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardConnection_possibleTypes: string[] = ['CreditCardConnection']
    export const isCreditCardConnection = (obj?: { __typename?: any } | null): obj is CreditCardConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardConnection"')
      return CreditCardConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardEdge_possibleTypes: string[] = ['CreditCardEdge']
    export const isCreditCardEdge = (obj?: { __typename?: any } | null): obj is CreditCardEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardEdge"')
      return CreditCardEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCard_possibleTypes: string[] = ['CreditCard']
    export const isCreditCard = (obj?: { __typename?: any } | null): obj is CreditCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCard"')
      return CreditCard_possibleTypes.includes(obj.__typename)
    }
    


    const CreditCardRewardsAppPill_possibleTypes: string[] = ['CreditCardRewardsAppPill']
    export const isCreditCardRewardsAppPill = (obj?: { __typename?: any } | null): obj is CreditCardRewardsAppPill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreditCardRewardsAppPill"')
      return CreditCardRewardsAppPill_possibleTypes.includes(obj.__typename)
    }
    


    const Earn_possibleTypes: string[] = ['Earn']
    export const isEarn = (obj?: { __typename?: any } | null): obj is Earn => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEarn"')
      return Earn_possibleTypes.includes(obj.__typename)
    }
    


    const EarnMarketingScreen_possibleTypes: string[] = ['EarnMarketingScreen']
    export const isEarnMarketingScreen = (obj?: { __typename?: any } | null): obj is EarnMarketingScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEarnMarketingScreen"')
      return EarnMarketingScreen_possibleTypes.includes(obj.__typename)
    }
    


    const EmailVerificationPage_possibleTypes: string[] = ['EmailVerificationPage']
    export const isEmailVerificationPage = (obj?: { __typename?: any } | null): obj is EmailVerificationPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmailVerificationPage"')
      return EmailVerificationPage_possibleTypes.includes(obj.__typename)
    }
    


    const FeedbackForm_possibleTypes: string[] = ['FeedbackForm']
    export const isFeedbackForm = (obj?: { __typename?: any } | null): obj is FeedbackForm => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFeedbackForm"')
      return FeedbackForm_possibleTypes.includes(obj.__typename)
    }
    


    const InformationBanner_possibleTypes: string[] = ['InformationBanner']
    export const isInformationBanner = (obj?: { __typename?: any } | null): obj is InformationBanner => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInformationBanner"')
      return InformationBanner_possibleTypes.includes(obj.__typename)
    }
    


    const InitialFunding_possibleTypes: string[] = ['InitialFunding']
    export const isInitialFunding = (obj?: { __typename?: any } | null): obj is InitialFunding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitialFunding"')
      return InitialFunding_possibleTypes.includes(obj.__typename)
    }
    


    const InitialFundingScreens_possibleTypes: string[] = ['InitialFundingScreens']
    export const isInitialFundingScreens = (obj?: { __typename?: any } | null): obj is InitialFundingScreens => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitialFundingScreens"')
      return InitialFundingScreens_possibleTypes.includes(obj.__typename)
    }
    


    const InitialFundingOverviewScreen_possibleTypes: string[] = ['InitialFundingOverviewScreen']
    export const isInitialFundingOverviewScreen = (obj?: { __typename?: any } | null): obj is InitialFundingOverviewScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitialFundingOverviewScreen"')
      return InitialFundingOverviewScreen_possibleTypes.includes(obj.__typename)
    }
    


    const InitialFundingOverviewScreenListItem_possibleTypes: string[] = ['InitialFundingOverviewScreenListItem']
    export const isInitialFundingOverviewScreenListItem = (obj?: { __typename?: any } | null): obj is InitialFundingOverviewScreenListItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitialFundingOverviewScreenListItem"')
      return InitialFundingOverviewScreenListItem_possibleTypes.includes(obj.__typename)
    }
    


    const IrsRegulations_possibleTypes: string[] = ['IrsRegulations']
    export const isIrsRegulations = (obj?: { __typename?: any } | null): obj is IrsRegulations => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIrsRegulations"')
      return IrsRegulations_possibleTypes.includes(obj.__typename)
    }
    


    const IraContributionYear_possibleTypes: string[] = ['IraContributionYear']
    export const isIraContributionYear = (obj?: { __typename?: any } | null): obj is IraContributionYear => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIraContributionYear"')
      return IraContributionYear_possibleTypes.includes(obj.__typename)
    }
    


    const IraExcessContributionRemovalYear_possibleTypes: string[] = ['IraExcessContributionRemovalYear']
    export const isIraExcessContributionRemovalYear = (obj?: { __typename?: any } | null): obj is IraExcessContributionRemovalYear => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIraExcessContributionRemovalYear"')
      return IraExcessContributionRemovalYear_possibleTypes.includes(obj.__typename)
    }
    


    const ListItem_possibleTypes: string[] = ['ListItem']
    export const isListItem = (obj?: { __typename?: any } | null): obj is ListItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isListItem"')
      return ListItem_possibleTypes.includes(obj.__typename)
    }
    


    const MailingAddress_possibleTypes: string[] = ['MailingAddress']
    export const isMailingAddress = (obj?: { __typename?: any } | null): obj is MailingAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMailingAddress"')
      return MailingAddress_possibleTypes.includes(obj.__typename)
    }
    


    const Markets_possibleTypes: string[] = ['Markets']
    export const isMarkets = (obj?: { __typename?: any } | null): obj is Markets => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarkets"')
      return Markets_possibleTypes.includes(obj.__typename)
    }
    


    const IndexProxy_possibleTypes: string[] = ['IndexProxy']
    export const isIndexProxy = (obj?: { __typename?: any } | null): obj is IndexProxy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexProxy"')
      return IndexProxy_possibleTypes.includes(obj.__typename)
    }
    


    const NewsConnection_possibleTypes: string[] = ['NewsConnection']
    export const isNewsConnection = (obj?: { __typename?: any } | null): obj is NewsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNewsConnection"')
      return NewsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const NewsEdge_possibleTypes: string[] = ['NewsEdge']
    export const isNewsEdge = (obj?: { __typename?: any } | null): obj is NewsEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNewsEdge"')
      return NewsEdge_possibleTypes.includes(obj.__typename)
    }
    


    const News_possibleTypes: string[] = ['News']
    export const isNews = (obj?: { __typename?: any } | null): obj is News => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNews"')
      return News_possibleTypes.includes(obj.__typename)
    }
    


    const Node_possibleTypes: string[] = ['Account','BorrowDashboard','BorrowMarketingScreen','BorrowMarketingScreenV2','PersonalLoans','PersonalLoanApplicationFlow','PersonalLoanDeclinedErrorScreen','PersonalLoanIneligibilityScreen','PersonalLoanApplicationManualReviewScreen','PersonalLoanDisbursementFlow','PersonalLoanDisbursement','PersonalLoanViewTerms','PersonalLoanApplicationDetails','PreApprovalLoanApplicationOffer','PersonalLoan','LoanTransactionEntry','BorrowPromotionalMessage','CommonTransaction','Credit','UserAcceptedCreditCardAgreements','CreditCardApplicantInformation','CreditCardApplicationDetails','CreditCardActiveOffer','CreditCardAccount','CreditCardOnboardingContent','CreditCardOnboardingStartApplicationScreen','CreditCardOnboardingApplicationStatusScreen','CreditCardManageCardDetailsScreen','CreditCardManageCardScreen','DigitalWalletPushProvisioningCredentials','CreditCardRewardsPortalScreen','CreditCardRewardsDetailsScreen','CreditCardRewardsProgramOverview','CreditCardTransaction','CreditCardWaitlistConfirmationContent','CreditCardRewardsProgramBreakdown','CreditCardWaitlistMarketingBanner','CreditCardSelectRewardDestinationContent','CreditCardRewardDestinationOption','CreditCardWaitlistMarketingScreen','CreditCardApplyNowMarketingScreen','Crypto','CryptoSystemPie','CryptoAsset','FundingSources','FundingSourceAccount','Fund','Fundamentals','Equity','InvestMarketing','InvestMarketingScreen','PortfolioSliceOrderStatus','PortfolioSliceRebalanceStatus','Position','SecurityReference','NetWorth','ChildPortfolioSlice','RootPortfolioSlice','SharedPie','SystemPie','UserPie','Plus','PlusEditPaymentMethodPagePaymentMethod','PlusBilling','PlusBillingPaymentMethod','PlusBenefitCalculatorInitialState','Save','Savings','SavingsJointAccountInvitation','SavingsAgreements','SavingsAccount','SavingsCustomerDueDiligenceQuestions','SavingsTransaction','SpendMarketingScreen','Transfers','MoveMoneyV2','MoveMoney','TransferInstanceDetails','NewSmartTransferFocusOption','SmartTransferRuleEditRequirements','NewSmartTransferContraParticipantEntryOption','SmartTransferContraParticipantEntryEditRequirements','SmartTransferFulfillmentConditionOption','AcatTransferInstance','TransferInstance','TransferInstanceStep','SmartTransferRule','SmartTransferContraParticipantEntry','ScheduledTransferRule','OtherTransferRule','Viewer','AccountConfiguration','DocumentUploadRequest','UnmanagedHoldingsCollection','UnmanagedHolding','AchRelationshipViaDeposits','AchRelationshipViaLink','AchTransfer','AccountBalance','Cash','Investments','Billing','Borrow','BorrowAccount','BorrowAccountCreditStatus','InvestAccountDocument','AccountDocument','SpendAccountDocument','EstimatedTrading','ExternalAccount','FeatureFlags','Invest','InvestActivity','InvestActivityTradeSummaryEntry','InvestActivityTradeEntry','InvestActivityCashEntry','InvestActivityPositionEntry','InvestActivityRebalanceEntry','InvestActivityOrderEntry','InvestActivityOtherEntry','Overview','BalancesOverview','OverviewCards','InvestAcatWizardContent','InvestAcatWizardAssetSelectionContent','InvestAcatTransferTypeScreenContent','InvestAcatBrokerageSelectionContent','InvestAcatWizardContraSearchForm','InvestAcatWizardContraParticipant','InvestAcatBrokerageAccountDetailsContent','InvestAcatDestinationAccountContent','InvestAcatTransferInformationScreenContent','InvestAcatConfirmSelectionsContent','InvestAcatConfirmationContent','Referrals','ReferralOffer','Research','Quote','PriceChange','Spend','SpendAgreements','SpendDueDiligenceQuestions','TextWithTooltip','SpendPrimaryMarketingScreen','SpendIdentity','SpendAccount','SpendPromotionalMessage','PhysicalCheck','SpendExternalAccount','SpendAvailableDebitCards','SpendDebitCard','ManageSpendCard','SpendDebitCardDesign','SpendDebitCardCta','SpendActivity','SpendActivityEntryDetails','SpendActivityEntryDisputeDetails','SpendTransaction','SpendActivityOtherEntry','MigratableInvestExternalAccount','SpendMoveMoney','SendCheck','SendCheckIneligibleContent','SendCheckPlusMarketingContent','SendCheckTransferOverviewContent','SendCheckSelectRecipientContent','SendCheckRecipientListItem','SendCheckRecipientEditRequirements','SelectRecipientTypeContent','RecipientInformationContent','SetCheckAmountContent','CheckMemoContent','ConfirmCheckDetailsContent','PaymentConfirmedContent','AccountTradingStatus','InvestRollovers','InvestSharePie','User','CreditCard','Earn','EarnMarketingScreen','FeedbackForm','Markets','Notifications','NotificationPreferences','RequiredDocumentsBundle','PlatformBillingEntry','Settings','Support','Unauthenticated','AgreementBundle','AgreementStatus','Announcement','Announcements','BorrowUpcomingBill','AccountFundingTotals','AccountTradingPause','ChartableSliceData','CustodialAccountBeneficiary','IraContributionLimits','IraContributionTotals','Onboarding']
    export const isNode = (obj?: { __typename?: any } | null): obj is Node => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNode"')
      return Node_possibleTypes.includes(obj.__typename)
    }
    


    const Notifications_possibleTypes: string[] = ['Notifications']
    export const isNotifications = (obj?: { __typename?: any } | null): obj is Notifications => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNotifications"')
      return Notifications_possibleTypes.includes(obj.__typename)
    }
    


    const NotificationPreferences_possibleTypes: string[] = ['NotificationPreferences']
    export const isNotificationPreferences = (obj?: { __typename?: any } | null): obj is NotificationPreferences => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNotificationPreferences"')
      return NotificationPreferences_possibleTypes.includes(obj.__typename)
    }
    


    const TransferCompletionNotificationPreferences_possibleTypes: string[] = ['TransferCompletionNotificationPreferences']
    export const isTransferCompletionNotificationPreferences = (obj?: { __typename?: any } | null): obj is TransferCompletionNotificationPreferences => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferCompletionNotificationPreferences"')
      return TransferCompletionNotificationPreferences_possibleTypes.includes(obj.__typename)
    }
    


    const InvestActivityNotificationsPreferences_possibleTypes: string[] = ['InvestActivityNotificationsPreferences']
    export const isInvestActivityNotificationsPreferences = (obj?: { __typename?: any } | null): obj is InvestActivityNotificationsPreferences => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestActivityNotificationsPreferences"')
      return InvestActivityNotificationsPreferences_possibleTypes.includes(obj.__typename)
    }
    


    const SpendTransactionNotificationPreferences_possibleTypes: string[] = ['SpendTransactionNotificationPreferences']
    export const isSpendTransactionNotificationPreferences = (obj?: { __typename?: any } | null): obj is SpendTransactionNotificationPreferences => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendTransactionNotificationPreferences"')
      return SpendTransactionNotificationPreferences_possibleTypes.includes(obj.__typename)
    }
    


    const PageInfo_possibleTypes: string[] = ['PageInfo']
    export const isPageInfo = (obj?: { __typename?: any } | null): obj is PageInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPageInfo"')
      return PageInfo_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmation_possibleTypes: string[] = ['PieChangesConfirmation']
    export const isPieChangesConfirmation = (obj?: { __typename?: any } | null): obj is PieChangesConfirmation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmation"')
      return PieChangesConfirmation_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationDetails_possibleTypes: string[] = ['PieChangesConfirmationDetails']
    export const isPieChangesConfirmationDetails = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationDetails"')
      return PieChangesConfirmationDetails_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationAddedOrUpdatedSlice_possibleTypes: string[] = ['PieChangesConfirmationAddedOrUpdatedSlice']
    export const isPieChangesConfirmationAddedOrUpdatedSlice = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationAddedOrUpdatedSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationAddedOrUpdatedSlice"')
      return PieChangesConfirmationAddedOrUpdatedSlice_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationRemoved_possibleTypes: string[] = ['PieChangesConfirmationRemoved']
    export const isPieChangesConfirmationRemoved = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationRemoved => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationRemoved"')
      return PieChangesConfirmationRemoved_possibleTypes.includes(obj.__typename)
    }
    


    const PieDetailsField_possibleTypes: string[] = ['PieDetailsField']
    export const isPieDetailsField = (obj?: { __typename?: any } | null): obj is PieDetailsField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieDetailsField"')
      return PieDetailsField_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationRemovedSlice_possibleTypes: string[] = ['PieChangesConfirmationRemovedSlice']
    export const isPieChangesConfirmationRemovedSlice = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationRemovedSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationRemovedSlice"')
      return PieChangesConfirmationRemovedSlice_possibleTypes.includes(obj.__typename)
    }
    


    const PieChangesConfirmationAddedOrUpdated_possibleTypes: string[] = ['PieChangesConfirmationAddedOrUpdated']
    export const isPieChangesConfirmationAddedOrUpdated = (obj?: { __typename?: any } | null): obj is PieChangesConfirmationAddedOrUpdated => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChangesConfirmationAddedOrUpdated"')
      return PieChangesConfirmationAddedOrUpdated_possibleTypes.includes(obj.__typename)
    }
    


    const ProductMarketingCard_possibleTypes: string[] = ['ProductMarketingCard']
    export const isProductMarketingCard = (obj?: { __typename?: any } | null): obj is ProductMarketingCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductMarketingCard"')
      return ProductMarketingCard_possibleTypes.includes(obj.__typename)
    }
    


    const RequiredDocumentsBundle_possibleTypes: string[] = ['RequiredDocumentsBundle']
    export const isRequiredDocumentsBundle = (obj?: { __typename?: any } | null): obj is RequiredDocumentsBundle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequiredDocumentsBundle"')
      return RequiredDocumentsBundle_possibleTypes.includes(obj.__typename)
    }
    


    const RequiredDocument_possibleTypes: string[] = ['RequiredDocument']
    export const isRequiredDocument = (obj?: { __typename?: any } | null): obj is RequiredDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequiredDocument"')
      return RequiredDocument_possibleTypes.includes(obj.__typename)
    }
    


    const RichTextContent_possibleTypes: string[] = ['RichTextContent']
    export const isRichTextContent = (obj?: { __typename?: any } | null): obj is RichTextContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRichTextContent"')
      return RichTextContent_possibleTypes.includes(obj.__typename)
    }
    


    const RichTextUnion_possibleTypes: string[] = ['Text','AppButton','AppLink','AppShareButton','AppTooltip','AppRichTextDisclosureLink']
    export const isRichTextUnion = (obj?: { __typename?: any } | null): obj is RichTextUnion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRichTextUnion"')
      return RichTextUnion_possibleTypes.includes(obj.__typename)
    }
    


    const DisclosuresAndAgreementsPage_possibleTypes: string[] = ['DisclosuresAndAgreementsPage']
    export const isDisclosuresAndAgreementsPage = (obj?: { __typename?: any } | null): obj is DisclosuresAndAgreementsPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisclosuresAndAgreementsPage"')
      return DisclosuresAndAgreementsPage_possibleTypes.includes(obj.__typename)
    }
    


    const FullyPaidLendingPage_possibleTypes: string[] = ['FullyPaidLendingPage']
    export const isFullyPaidLendingPage = (obj?: { __typename?: any } | null): obj is FullyPaidLendingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullyPaidLendingPage"')
      return FullyPaidLendingPage_possibleTypes.includes(obj.__typename)
    }
    


    const AccountStockLoanHoldingGroup_possibleTypes: string[] = ['AccountStockLoanHoldingGroup']
    export const isAccountStockLoanHoldingGroup = (obj?: { __typename?: any } | null): obj is AccountStockLoanHoldingGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountStockLoanHoldingGroup"')
      return AccountStockLoanHoldingGroup_possibleTypes.includes(obj.__typename)
    }
    


    const FullyPaidLendingIncomeEarnedSection_possibleTypes: string[] = ['FullyPaidLendingIncomeEarnedSection']
    export const isFullyPaidLendingIncomeEarnedSection = (obj?: { __typename?: any } | null): obj is FullyPaidLendingIncomeEarnedSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullyPaidLendingIncomeEarnedSection"')
      return FullyPaidLendingIncomeEarnedSection_possibleTypes.includes(obj.__typename)
    }
    


    const StockLoan_possibleTypes: string[] = ['StockLoan']
    export const isStockLoan = (obj?: { __typename?: any } | null): obj is StockLoan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStockLoan"')
      return StockLoan_possibleTypes.includes(obj.__typename)
    }
    


    const FullyPaidLendingOptInSection_possibleTypes: string[] = ['FullyPaidLendingOptInSection']
    export const isFullyPaidLendingOptInSection = (obj?: { __typename?: any } | null): obj is FullyPaidLendingOptInSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullyPaidLendingOptInSection"')
      return FullyPaidLendingOptInSection_possibleTypes.includes(obj.__typename)
    }
    


    const FullyPaidLendingOptInSectionConfirmContent_possibleTypes: string[] = ['FullyPaidLendingOptInSectionConfirmContent']
    export const isFullyPaidLendingOptInSectionConfirmContent = (obj?: { __typename?: any } | null): obj is FullyPaidLendingOptInSectionConfirmContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullyPaidLendingOptInSectionConfirmContent"')
      return FullyPaidLendingOptInSectionConfirmContent_possibleTypes.includes(obj.__typename)
    }
    


    const InvestSettingsPage_possibleTypes: string[] = ['InvestSettingsPage']
    export const isInvestSettingsPage = (obj?: { __typename?: any } | null): obj is InvestSettingsPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestSettingsPage"')
      return InvestSettingsPage_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingPage_possibleTypes: string[] = ['PlatformBillingPage']
    export const isPlatformBillingPage = (obj?: { __typename?: any } | null): obj is PlatformBillingPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingPage"')
      return PlatformBillingPage_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingPageHeader_possibleTypes: string[] = ['PlatformBillingPageHeader']
    export const isPlatformBillingPageHeader = (obj?: { __typename?: any } | null): obj is PlatformBillingPageHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingPageHeader"')
      return PlatformBillingPageHeader_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingMethodSection_possibleTypes: string[] = ['PlatformBillingMethodSection']
    export const isPlatformBillingMethodSection = (obj?: { __typename?: any } | null): obj is PlatformBillingMethodSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingMethodSection"')
      return PlatformBillingMethodSection_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingHistorySection_possibleTypes: string[] = ['PlatformBillingHistorySection']
    export const isPlatformBillingHistorySection = (obj?: { __typename?: any } | null): obj is PlatformBillingHistorySection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingHistorySection"')
      return PlatformBillingHistorySection_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingHistoryEntryConnection_possibleTypes: string[] = ['PlatformBillingHistoryEntryConnection']
    export const isPlatformBillingHistoryEntryConnection = (obj?: { __typename?: any } | null): obj is PlatformBillingHistoryEntryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingHistoryEntryConnection"')
      return PlatformBillingHistoryEntryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingHistoryEntryEdge_possibleTypes: string[] = ['PlatformBillingHistoryEntryEdge']
    export const isPlatformBillingHistoryEntryEdge = (obj?: { __typename?: any } | null): obj is PlatformBillingHistoryEntryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingHistoryEntryEdge"')
      return PlatformBillingHistoryEntryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PlatformBillingEntry_possibleTypes: string[] = ['PlatformBillingEntry']
    export const isPlatformBillingEntry = (obj?: { __typename?: any } | null): obj is PlatformBillingEntry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlatformBillingEntry"')
      return PlatformBillingEntry_possibleTypes.includes(obj.__typename)
    }
    


    const Settings_possibleTypes: string[] = ['Settings']
    export const isSettings = (obj?: { __typename?: any } | null): obj is Settings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSettings"')
      return Settings_possibleTypes.includes(obj.__typename)
    }
    


    const SharePieLandingPageScreen_possibleTypes: string[] = ['SharePieLandingPageScreen']
    export const isSharePieLandingPageScreen = (obj?: { __typename?: any } | null): obj is SharePieLandingPageScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSharePieLandingPageScreen"')
      return SharePieLandingPageScreen_possibleTypes.includes(obj.__typename)
    }
    


    const SharePieLandingPageHeader_possibleTypes: string[] = ['SharePieLandingPageHeader']
    export const isSharePieLandingPageHeader = (obj?: { __typename?: any } | null): obj is SharePieLandingPageHeader => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSharePieLandingPageHeader"')
      return SharePieLandingPageHeader_possibleTypes.includes(obj.__typename)
    }
    


    const SharePieLogInBanner_possibleTypes: string[] = ['SharePieLogInBanner']
    export const isSharePieLogInBanner = (obj?: { __typename?: any } | null): obj is SharePieLogInBanner => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSharePieLogInBanner"')
      return SharePieLogInBanner_possibleTypes.includes(obj.__typename)
    }
    


    const SharePieMarketingDetails_possibleTypes: string[] = ['SharePieMarketingDetails']
    export const isSharePieMarketingDetails = (obj?: { __typename?: any } | null): obj is SharePieMarketingDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSharePieMarketingDetails"')
      return SharePieMarketingDetails_possibleTypes.includes(obj.__typename)
    }
    


    const SharePieMarketingContent_possibleTypes: string[] = ['SharePieMarketingContent']
    export const isSharePieMarketingContent = (obj?: { __typename?: any } | null): obj is SharePieMarketingContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSharePieMarketingContent"')
      return SharePieMarketingContent_possibleTypes.includes(obj.__typename)
    }
    


    const Support_possibleTypes: string[] = ['Support']
    export const isSupport = (obj?: { __typename?: any } | null): obj is Support => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSupport"')
      return Support_possibleTypes.includes(obj.__typename)
    }
    


    const SystemInfo_possibleTypes: string[] = ['SystemInfo']
    export const isSystemInfo = (obj?: { __typename?: any } | null): obj is SystemInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemInfo"')
      return SystemInfo_possibleTypes.includes(obj.__typename)
    }
    


    const TabularDataItem_possibleTypes: string[] = ['TabularDataItem']
    export const isTabularDataItem = (obj?: { __typename?: any } | null): obj is TabularDataItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTabularDataItem"')
      return TabularDataItem_possibleTypes.includes(obj.__typename)
    }
    


    const TabularDataSection_possibleTypes: string[] = ['TabularDataSection']
    export const isTabularDataSection = (obj?: { __typename?: any } | null): obj is TabularDataSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTabularDataSection"')
      return TabularDataSection_possibleTypes.includes(obj.__typename)
    }
    


    const Text_possibleTypes: string[] = ['Text']
    export const isText = (obj?: { __typename?: any } | null): obj is Text => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isText"')
      return Text_possibleTypes.includes(obj.__typename)
    }
    


    const Unauthenticated_possibleTypes: string[] = ['Unauthenticated']
    export const isUnauthenticated = (obj?: { __typename?: any } | null): obj is Unauthenticated => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnauthenticated"')
      return Unauthenticated_possibleTypes.includes(obj.__typename)
    }
    


    const PromotionSignUpPage_possibleTypes: string[] = ['PromotionSignUpPage']
    export const isPromotionSignUpPage = (obj?: { __typename?: any } | null): obj is PromotionSignUpPage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPromotionSignUpPage"')
      return PromotionSignUpPage_possibleTypes.includes(obj.__typename)
    }
    


    const ValuePropCard_possibleTypes: string[] = ['ValuePropCard']
    export const isValuePropCard = (obj?: { __typename?: any } | null): obj is ValuePropCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isValuePropCard"')
      return ValuePropCard_possibleTypes.includes(obj.__typename)
    }
    


    const PrimaryValue_possibleTypes: string[] = ['PrimaryValue']
    export const isPrimaryValue = (obj?: { __typename?: any } | null): obj is PrimaryValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrimaryValue"')
      return PrimaryValue_possibleTypes.includes(obj.__typename)
    }
    


    const ValueRow_possibleTypes: string[] = ['ValueRow']
    export const isValueRow = (obj?: { __typename?: any } | null): obj is ValueRow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isValueRow"')
      return ValueRow_possibleTypes.includes(obj.__typename)
    }
    


    const AgreementBundle_possibleTypes: string[] = ['AgreementBundle']
    export const isAgreementBundle = (obj?: { __typename?: any } | null): obj is AgreementBundle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgreementBundle"')
      return AgreementBundle_possibleTypes.includes(obj.__typename)
    }
    


    const AgreementDocument_possibleTypes: string[] = ['AgreementDocument']
    export const isAgreementDocument = (obj?: { __typename?: any } | null): obj is AgreementDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgreementDocument"')
      return AgreementDocument_possibleTypes.includes(obj.__typename)
    }
    


    const AgreementStatus_possibleTypes: string[] = ['AgreementStatus']
    export const isAgreementStatus = (obj?: { __typename?: any } | null): obj is AgreementStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgreementStatus"')
      return AgreementStatus_possibleTypes.includes(obj.__typename)
    }
    


    const Announcement_possibleTypes: string[] = ['Announcement']
    export const isAnnouncement = (obj?: { __typename?: any } | null): obj is Announcement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncement"')
      return Announcement_possibleTypes.includes(obj.__typename)
    }
    


    const AnnouncementExternalLink_possibleTypes: string[] = ['AnnouncementExternalLink']
    export const isAnnouncementExternalLink = (obj?: { __typename?: any } | null): obj is AnnouncementExternalLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncementExternalLink"')
      return AnnouncementExternalLink_possibleTypes.includes(obj.__typename)
    }
    


    const AnnouncementInternalLink_possibleTypes: string[] = ['AnnouncementInternalLink']
    export const isAnnouncementInternalLink = (obj?: { __typename?: any } | null): obj is AnnouncementInternalLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncementInternalLink"')
      return AnnouncementInternalLink_possibleTypes.includes(obj.__typename)
    }
    


    const AnnouncementLink_possibleTypes: string[] = ['AnnouncementExternalLink','AnnouncementInternalLink','AnnouncementSupportLink']
    export const isAnnouncementLink = (obj?: { __typename?: any } | null): obj is AnnouncementLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncementLink"')
      return AnnouncementLink_possibleTypes.includes(obj.__typename)
    }
    


    const AnnouncementSupportLink_possibleTypes: string[] = ['AnnouncementSupportLink']
    export const isAnnouncementSupportLink = (obj?: { __typename?: any } | null): obj is AnnouncementSupportLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncementSupportLink"')
      return AnnouncementSupportLink_possibleTypes.includes(obj.__typename)
    }
    


    const Announcements_possibleTypes: string[] = ['Announcements']
    export const isAnnouncements = (obj?: { __typename?: any } | null): obj is Announcements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncements"')
      return Announcements_possibleTypes.includes(obj.__typename)
    }
    


    const AnnouncementConnection_possibleTypes: string[] = ['AnnouncementConnection']
    export const isAnnouncementConnection = (obj?: { __typename?: any } | null): obj is AnnouncementConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncementConnection"')
      return AnnouncementConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AnnouncementEdge_possibleTypes: string[] = ['AnnouncementEdge']
    export const isAnnouncementEdge = (obj?: { __typename?: any } | null): obj is AnnouncementEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncementEdge"')
      return AnnouncementEdge_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowBillConnection_possibleTypes: string[] = ['BorrowBillConnection']
    export const isBorrowBillConnection = (obj?: { __typename?: any } | null): obj is BorrowBillConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowBillConnection"')
      return BorrowBillConnection_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowBillEdge_possibleTypes: string[] = ['BorrowBillEdge']
    export const isBorrowBillEdge = (obj?: { __typename?: any } | null): obj is BorrowBillEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowBillEdge"')
      return BorrowBillEdge_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowBill_possibleTypes: string[] = ['BorrowBill']
    export const isBorrowBill = (obj?: { __typename?: any } | null): obj is BorrowBill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowBill"')
      return BorrowBill_possibleTypes.includes(obj.__typename)
    }
    


    const BorrowUpcomingBill_possibleTypes: string[] = ['BorrowUpcomingBill']
    export const isBorrowUpcomingBill = (obj?: { __typename?: any } | null): obj is BorrowUpcomingBill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBorrowUpcomingBill"')
      return BorrowUpcomingBill_possibleTypes.includes(obj.__typename)
    }
    


    const AccountFundingTotals_possibleTypes: string[] = ['AccountFundingTotals']
    export const isAccountFundingTotals = (obj?: { __typename?: any } | null): obj is AccountFundingTotals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountFundingTotals"')
      return AccountFundingTotals_possibleTypes.includes(obj.__typename)
    }
    


    const FundingTotalForYear_possibleTypes: string[] = ['FundingTotalForYear']
    export const isFundingTotalForYear = (obj?: { __typename?: any } | null): obj is FundingTotalForYear => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFundingTotalForYear"')
      return FundingTotalForYear_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTradingPause_possibleTypes: string[] = ['AccountTradingPause']
    export const isAccountTradingPause = (obj?: { __typename?: any } | null): obj is AccountTradingPause => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTradingPause"')
      return AccountTradingPause_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTradingPauseMessage_possibleTypes: string[] = ['AccountTradingPauseMessage']
    export const isAccountTradingPauseMessage = (obj?: { __typename?: any } | null): obj is AccountTradingPauseMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTradingPauseMessage"')
      return AccountTradingPauseMessage_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTradingPauseLink_possibleTypes: string[] = ['AccountTradingPauseLink']
    export const isAccountTradingPauseLink = (obj?: { __typename?: any } | null): obj is AccountTradingPauseLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTradingPauseLink"')
      return AccountTradingPauseLink_possibleTypes.includes(obj.__typename)
    }
    


    const ChartableSliceData_possibleTypes: string[] = ['ChartableSliceData']
    export const isChartableSliceData = (obj?: { __typename?: any } | null): obj is ChartableSliceData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChartableSliceData"')
      return ChartableSliceData_possibleTypes.includes(obj.__typename)
    }
    


    const ChartableSliceDatum_possibleTypes: string[] = ['ChartableSliceDatum']
    export const isChartableSliceDatum = (obj?: { __typename?: any } | null): obj is ChartableSliceDatum => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChartableSliceDatum"')
      return ChartableSliceDatum_possibleTypes.includes(obj.__typename)
    }
    


    const CustodialAccountBeneficiary_possibleTypes: string[] = ['CustodialAccountBeneficiary']
    export const isCustodialAccountBeneficiary = (obj?: { __typename?: any } | null): obj is CustodialAccountBeneficiary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustodialAccountBeneficiary"')
      return CustodialAccountBeneficiary_possibleTypes.includes(obj.__typename)
    }
    


    const HistoricalDividend_possibleTypes: string[] = ['HistoricalDividend']
    export const isHistoricalDividend = (obj?: { __typename?: any } | null): obj is HistoricalDividend => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHistoricalDividend"')
      return HistoricalDividend_possibleTypes.includes(obj.__typename)
    }
    


    const HistoricalQuote_possibleTypes: string[] = ['HistoricalQuote']
    export const isHistoricalQuote = (obj?: { __typename?: any } | null): obj is HistoricalQuote => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHistoricalQuote"')
      return HistoricalQuote_possibleTypes.includes(obj.__typename)
    }
    


    const HistoricalSplit_possibleTypes: string[] = ['HistoricalSplit']
    export const isHistoricalSplit = (obj?: { __typename?: any } | null): obj is HistoricalSplit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHistoricalSplit"')
      return HistoricalSplit_possibleTypes.includes(obj.__typename)
    }
    


    const IraContributionLimits_possibleTypes: string[] = ['IraContributionLimits']
    export const isIraContributionLimits = (obj?: { __typename?: any } | null): obj is IraContributionLimits => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIraContributionLimits"')
      return IraContributionLimits_possibleTypes.includes(obj.__typename)
    }
    


    const IraContributionTotals_possibleTypes: string[] = ['IraContributionTotals']
    export const isIraContributionTotals = (obj?: { __typename?: any } | null): obj is IraContributionTotals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIraContributionTotals"')
      return IraContributionTotals_possibleTypes.includes(obj.__typename)
    }
    


    const IraContributionTotalForYear_possibleTypes: string[] = ['IraContributionTotalForYear']
    export const isIraContributionTotalForYear = (obj?: { __typename?: any } | null): obj is IraContributionTotalForYear => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIraContributionTotalForYear"')
      return IraContributionTotalForYear_possibleTypes.includes(obj.__typename)
    }
    


    const IraWithholding_possibleTypes: string[] = ['IraWithholding']
    export const isIraWithholding = (obj?: { __typename?: any } | null): obj is IraWithholding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIraWithholding"')
      return IraWithholding_possibleTypes.includes(obj.__typename)
    }
    


    const SetPortfolioOptions_possibleTypes: string[] = ['SetPortfolioOptions']
    export const isSetPortfolioOptions = (obj?: { __typename?: any } | null): obj is SetPortfolioOptions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPortfolioOptions"')
      return SetPortfolioOptions_possibleTypes.includes(obj.__typename)
    }
    


    const StarterPieSliceOption_possibleTypes: string[] = ['StarterPieSliceOption']
    export const isStarterPieSliceOption = (obj?: { __typename?: any } | null): obj is StarterPieSliceOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStarterPieSliceOption"')
      return StarterPieSliceOption_possibleTypes.includes(obj.__typename)
    }
    


    const TradeCashFlow_possibleTypes: string[] = ['TradeCashFlow']
    export const isTradeCashFlow = (obj?: { __typename?: any } | null): obj is TradeCashFlow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTradeCashFlow"')
      return TradeCashFlow_possibleTypes.includes(obj.__typename)
    }
    


    const BreakdownDetail_possibleTypes: string[] = ['BreakdownDetail']
    export const isBreakdownDetail = (obj?: { __typename?: any } | null): obj is BreakdownDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBreakdownDetail"')
      return BreakdownDetail_possibleTypes.includes(obj.__typename)
    }
    


    const ManualOrderBreakdown_possibleTypes: string[] = ['ManualOrderBreakdown']
    export const isManualOrderBreakdown = (obj?: { __typename?: any } | null): obj is ManualOrderBreakdown => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManualOrderBreakdown"')
      return ManualOrderBreakdown_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSlice_possibleTypes: string[] = ['ChildPortfolioSlice','RootPortfolioSlice']
    export const isPortfolioSlice = (obj?: { __typename?: any } | null): obj is PortfolioSlice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSlice"')
      return PortfolioSlice_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSliceBuyingPower_possibleTypes: string[] = ['PortfolioSliceBuyingPower']
    export const isPortfolioSliceBuyingPower = (obj?: { __typename?: any } | null): obj is PortfolioSliceBuyingPower => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSliceBuyingPower"')
      return PortfolioSliceBuyingPower_possibleTypes.includes(obj.__typename)
    }
    


    const MarginBuyingPowerOverview_possibleTypes: string[] = ['MarginBuyingPowerOverview']
    export const isMarginBuyingPowerOverview = (obj?: { __typename?: any } | null): obj is MarginBuyingPowerOverview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginBuyingPowerOverview"')
      return MarginBuyingPowerOverview_possibleTypes.includes(obj.__typename)
    }
    


    const MarginBuyingPowerOverviewBreakdown_possibleTypes: string[] = ['MarginBuyingPowerOverviewBreakdown']
    export const isMarginBuyingPowerOverviewBreakdown = (obj?: { __typename?: any } | null): obj is MarginBuyingPowerOverviewBreakdown => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarginBuyingPowerOverviewBreakdown"')
      return MarginBuyingPowerOverviewBreakdown_possibleTypes.includes(obj.__typename)
    }
    


    const PortfolioSliceValue_possibleTypes: string[] = ['PortfolioSliceValue']
    export const isPortfolioSliceValue = (obj?: { __typename?: any } | null): obj is PortfolioSliceValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPortfolioSliceValue"')
      return PortfolioSliceValue_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTaxLot_possibleTypes: string[] = ['AccountTaxLot']
    export const isAccountTaxLot = (obj?: { __typename?: any } | null): obj is AccountTaxLot => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTaxLot"')
      return AccountTaxLot_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTaxLotsConnection_possibleTypes: string[] = ['AccountTaxLotsConnection']
    export const isAccountTaxLotsConnection = (obj?: { __typename?: any } | null): obj is AccountTaxLotsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTaxLotsConnection"')
      return AccountTaxLotsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTaxLotsEdge_possibleTypes: string[] = ['AccountTaxLotsEdge']
    export const isAccountTaxLotsEdge = (obj?: { __typename?: any } | null): obj is AccountTaxLotsEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTaxLotsEdge"')
      return AccountTaxLotsEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppDisclosureLink_possibleTypes: string[] = ['AppDisclosureLink']
    export const isAppDisclosureLink = (obj?: { __typename?: any } | null): obj is AppDisclosureLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppDisclosureLink"')
      return AppDisclosureLink_possibleTypes.includes(obj.__typename)
    }
    


    const AppLink_possibleTypes: string[] = ['AppLink']
    export const isAppLink = (obj?: { __typename?: any } | null): obj is AppLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppLink"')
      return AppLink_possibleTypes.includes(obj.__typename)
    }
    


    const AppLinkInterface_possibleTypes: string[] = ['AppLink','AppNavigationItem']
    export const isAppLinkInterface = (obj?: { __typename?: any } | null): obj is AppLinkInterface => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppLinkInterface"')
      return AppLinkInterface_possibleTypes.includes(obj.__typename)
    }
    


    const AppNavigationItem_possibleTypes: string[] = ['AppNavigationItem']
    export const isAppNavigationItem = (obj?: { __typename?: any } | null): obj is AppNavigationItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppNavigationItem"')
      return AppNavigationItem_possibleTypes.includes(obj.__typename)
    }
    


    const Linkable_possibleTypes: string[] = ['TransferSuggestionLink','GenericSetupChecklistStep','BuildPortfolioSetupChecklistStep','SpendMoveMoneyOption','AppLink','AppNavigationItem']
    export const isLinkable = (obj?: { __typename?: any } | null): obj is Linkable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkable"')
      return Linkable_possibleTypes.includes(obj.__typename)
    }
    


    const ArchivePiePayload_possibleTypes: string[] = ['ArchivePiePayload']
    export const isArchivePiePayload = (obj?: { __typename?: any } | null): obj is ArchivePiePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isArchivePiePayload"')
      return ArchivePiePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ArchivePieResult_possibleTypes: string[] = ['ArchivePieResult']
    export const isArchivePieResult = (obj?: { __typename?: any } | null): obj is ArchivePieResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isArchivePieResult"')
      return ArchivePieResult_possibleTypes.includes(obj.__typename)
    }
    


    const CreatePieShareUrlPayload_possibleTypes: string[] = ['CreatePieShareUrlPayload']
    export const isCreatePieShareUrlPayload = (obj?: { __typename?: any } | null): obj is CreatePieShareUrlPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreatePieShareUrlPayload"')
      return CreatePieShareUrlPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreatePieShareUrlResult_possibleTypes: string[] = ['CreatePieShareUrlResult']
    export const isCreatePieShareUrlResult = (obj?: { __typename?: any } | null): obj is CreatePieShareUrlResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreatePieShareUrlResult"')
      return CreatePieShareUrlResult_possibleTypes.includes(obj.__typename)
    }
    


    const SetMaxCashThresholdPayload_possibleTypes: string[] = ['SetMaxCashThresholdPayload']
    export const isSetMaxCashThresholdPayload = (obj?: { __typename?: any } | null): obj is SetMaxCashThresholdPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetMaxCashThresholdPayload"')
      return SetMaxCashThresholdPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetMaxCashThresholdResult_possibleTypes: string[] = ['SetMaxCashThresholdResult']
    export const isSetMaxCashThresholdResult = (obj?: { __typename?: any } | null): obj is SetMaxCashThresholdResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetMaxCashThresholdResult"')
      return SetMaxCashThresholdResult_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptPersonalLoanPayload_possibleTypes: string[] = ['AcceptPersonalLoanPayload']
    export const isAcceptPersonalLoanPayload = (obj?: { __typename?: any } | null): obj is AcceptPersonalLoanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptPersonalLoanPayload"')
      return AcceptPersonalLoanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptPersonalLoanOutcome_possibleTypes: string[] = ['AcceptPersonalLoanOutcome']
    export const isAcceptPersonalLoanOutcome = (obj?: { __typename?: any } | null): obj is AcceptPersonalLoanOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptPersonalLoanOutcome"')
      return AcceptPersonalLoanOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptPersonalLoanOfferPayload_possibleTypes: string[] = ['AcceptPersonalLoanOfferPayload']
    export const isAcceptPersonalLoanOfferPayload = (obj?: { __typename?: any } | null): obj is AcceptPersonalLoanOfferPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptPersonalLoanOfferPayload"')
      return AcceptPersonalLoanOfferPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptPersonalLoanOfferOutcome_possibleTypes: string[] = ['AcceptPersonalLoanOfferOutcome']
    export const isAcceptPersonalLoanOfferOutcome = (obj?: { __typename?: any } | null): obj is AcceptPersonalLoanOfferOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptPersonalLoanOfferOutcome"')
      return AcceptPersonalLoanOfferOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ActivatePlusTrialPayload_possibleTypes: string[] = ['ActivatePlusTrialPayload']
    export const isActivatePlusTrialPayload = (obj?: { __typename?: any } | null): obj is ActivatePlusTrialPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isActivatePlusTrialPayload"')
      return ActivatePlusTrialPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ActivatePlusTrialOutcome_possibleTypes: string[] = ['ActivatePlusTrialOutcome']
    export const isActivatePlusTrialOutcome = (obj?: { __typename?: any } | null): obj is ActivatePlusTrialOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isActivatePlusTrialOutcome"')
      return ActivatePlusTrialOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ArchiveTransferRulePayload_possibleTypes: string[] = ['ArchiveTransferRulePayload']
    export const isArchiveTransferRulePayload = (obj?: { __typename?: any } | null): obj is ArchiveTransferRulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isArchiveTransferRulePayload"')
      return ArchiveTransferRulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AuthenticatePayload_possibleTypes: string[] = ['AuthenticatePayload']
    export const isAuthenticatePayload = (obj?: { __typename?: any } | null): obj is AuthenticatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthenticatePayload"')
      return AuthenticatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AuthenticateOutcome_possibleTypes: string[] = ['AuthenticateOutcome']
    export const isAuthenticateOutcome = (obj?: { __typename?: any } | null): obj is AuthenticateOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthenticateOutcome"')
      return AuthenticateOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const AuthenticateResult_possibleTypes: string[] = ['AuthenticateResult']
    export const isAuthenticateResult = (obj?: { __typename?: any } | null): obj is AuthenticateResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthenticateResult"')
      return AuthenticateResult_possibleTypes.includes(obj.__typename)
    }
    


    const CancelTransferInstancePayload_possibleTypes: string[] = ['CancelTransferInstancePayload']
    export const isCancelTransferInstancePayload = (obj?: { __typename?: any } | null): obj is CancelTransferInstancePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCancelTransferInstancePayload"')
      return CancelTransferInstancePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CancelTransferInstanceOutcome_possibleTypes: string[] = ['CancelTransferInstanceOutcome']
    export const isCancelTransferInstanceOutcome = (obj?: { __typename?: any } | null): obj is CancelTransferInstanceOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCancelTransferInstanceOutcome"')
      return CancelTransferInstanceOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ChangePasswordPayload_possibleTypes: string[] = ['ChangePasswordPayload']
    export const isChangePasswordPayload = (obj?: { __typename?: any } | null): obj is ChangePasswordPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChangePasswordPayload"')
      return ChangePasswordPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ChangePasswordResult_possibleTypes: string[] = ['ChangePasswordResult']
    export const isChangePasswordResult = (obj?: { __typename?: any } | null): obj is ChangePasswordResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChangePasswordResult"')
      return ChangePasswordResult_possibleTypes.includes(obj.__typename)
    }
    


    const CompletePhoneVerificationPayload_possibleTypes: string[] = ['CompletePhoneVerificationPayload']
    export const isCompletePhoneVerificationPayload = (obj?: { __typename?: any } | null): obj is CompletePhoneVerificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompletePhoneVerificationPayload"')
      return CompletePhoneVerificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompletePhoneVerificationOutcome_possibleTypes: string[] = ['CompletePhoneVerificationOutcome']
    export const isCompletePhoneVerificationOutcome = (obj?: { __typename?: any } | null): obj is CompletePhoneVerificationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompletePhoneVerificationOutcome"')
      return CompletePhoneVerificationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateProfilePayload_possibleTypes: string[] = ['CreateProfilePayload']
    export const isCreateProfilePayload = (obj?: { __typename?: any } | null): obj is CreateProfilePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateProfilePayload"')
      return CreateProfilePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateProfileOutcome_possibleTypes: string[] = ['CreateProfileOutcome']
    export const isCreateProfileOutcome = (obj?: { __typename?: any } | null): obj is CreateProfileOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateProfileOutcome"')
      return CreateProfileOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateSpendAccountDocumentLinkPayload_possibleTypes: string[] = ['CreateSpendAccountDocumentLinkPayload']
    export const isCreateSpendAccountDocumentLinkPayload = (obj?: { __typename?: any } | null): obj is CreateSpendAccountDocumentLinkPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateSpendAccountDocumentLinkPayload"')
      return CreateSpendAccountDocumentLinkPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateSpendAccountDocumentLinkOutcome_possibleTypes: string[] = ['CreateSpendAccountDocumentLinkOutcome']
    export const isCreateSpendAccountDocumentLinkOutcome = (obj?: { __typename?: any } | null): obj is CreateSpendAccountDocumentLinkOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateSpendAccountDocumentLinkOutcome"')
      return CreateSpendAccountDocumentLinkOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateSpendIdentityPayload_possibleTypes: string[] = ['InitiateSpendIdentityPayload']
    export const isInitiateSpendIdentityPayload = (obj?: { __typename?: any } | null): obj is InitiateSpendIdentityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateSpendIdentityPayload"')
      return InitiateSpendIdentityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateSpendIdentityOutcome_possibleTypes: string[] = ['InitiateSpendIdentityOutcome']
    export const isInitiateSpendIdentityOutcome = (obj?: { __typename?: any } | null): obj is InitiateSpendIdentityOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateSpendIdentityOutcome"')
      return InitiateSpendIdentityOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SpendIdentityVerificationChallenge_possibleTypes: string[] = ['SpendIdentityVerificationChallenge']
    export const isSpendIdentityVerificationChallenge = (obj?: { __typename?: any } | null): obj is SpendIdentityVerificationChallenge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendIdentityVerificationChallenge"')
      return SpendIdentityVerificationChallenge_possibleTypes.includes(obj.__typename)
    }
    


    const SpendIdentityVerificationQuestion_possibleTypes: string[] = ['SpendIdentityVerificationQuestion']
    export const isSpendIdentityVerificationQuestion = (obj?: { __typename?: any } | null): obj is SpendIdentityVerificationQuestion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpendIdentityVerificationQuestion"')
      return SpendIdentityVerificationQuestion_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateSpendIdentityPayload_possibleTypes: string[] = ['UpdateSpendIdentityPayload']
    export const isUpdateSpendIdentityPayload = (obj?: { __typename?: any } | null): obj is UpdateSpendIdentityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateSpendIdentityPayload"')
      return UpdateSpendIdentityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateSpendIdentityOutcome_possibleTypes: string[] = ['UpdateSpendIdentityOutcome']
    export const isUpdateSpendIdentityOutcome = (obj?: { __typename?: any } | null): obj is UpdateSpendIdentityOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateSpendIdentityOutcome"')
      return UpdateSpendIdentityOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const VerifySpendIdentityPayload_possibleTypes: string[] = ['VerifySpendIdentityPayload']
    export const isVerifySpendIdentityPayload = (obj?: { __typename?: any } | null): obj is VerifySpendIdentityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifySpendIdentityPayload"')
      return VerifySpendIdentityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const VerifySpendIdentityOutcome_possibleTypes: string[] = ['VerifySpendIdentityOutcome']
    export const isVerifySpendIdentityOutcome = (obj?: { __typename?: any } | null): obj is VerifySpendIdentityOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifySpendIdentityOutcome"')
      return VerifySpendIdentityOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CompleteSpendEnrollmentPayload_possibleTypes: string[] = ['CompleteSpendEnrollmentPayload']
    export const isCompleteSpendEnrollmentPayload = (obj?: { __typename?: any } | null): obj is CompleteSpendEnrollmentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompleteSpendEnrollmentPayload"')
      return CompleteSpendEnrollmentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompleteSpendEnrollmentOutcome_possibleTypes: string[] = ['CompleteSpendEnrollmentOutcome']
    export const isCompleteSpendEnrollmentOutcome = (obj?: { __typename?: any } | null): obj is CompleteSpendEnrollmentOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompleteSpendEnrollmentOutcome"')
      return CompleteSpendEnrollmentOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const CreateSpendExternalAccountViaLinkPayload_possibleTypes: string[] = ['CreateSpendExternalAccountViaLinkPayload']
    export const isCreateSpendExternalAccountViaLinkPayload = (obj?: { __typename?: any } | null): obj is CreateSpendExternalAccountViaLinkPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateSpendExternalAccountViaLinkPayload"')
      return CreateSpendExternalAccountViaLinkPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateSpendExternalAccountViaLinkOutcome_possibleTypes: string[] = ['CreateSpendExternalAccountViaLinkOutcome']
    export const isCreateSpendExternalAccountViaLinkOutcome = (obj?: { __typename?: any } | null): obj is CreateSpendExternalAccountViaLinkOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateSpendExternalAccountViaLinkOutcome"')
      return CreateSpendExternalAccountViaLinkOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateSpendExternalAccountPayload_possibleTypes: string[] = ['InitiateSpendExternalAccountPayload']
    export const isInitiateSpendExternalAccountPayload = (obj?: { __typename?: any } | null): obj is InitiateSpendExternalAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateSpendExternalAccountPayload"')
      return InitiateSpendExternalAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateSpendExternalAccountOutcome_possibleTypes: string[] = ['InitiateSpendExternalAccountOutcome']
    export const isInitiateSpendExternalAccountOutcome = (obj?: { __typename?: any } | null): obj is InitiateSpendExternalAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateSpendExternalAccountOutcome"')
      return InitiateSpendExternalAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const VerifySpendExternalAccountPayload_possibleTypes: string[] = ['VerifySpendExternalAccountPayload']
    export const isVerifySpendExternalAccountPayload = (obj?: { __typename?: any } | null): obj is VerifySpendExternalAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifySpendExternalAccountPayload"')
      return VerifySpendExternalAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const VerifySpendExternalAccountOutcome_possibleTypes: string[] = ['VerifySpendExternalAccountOutcome']
    export const isVerifySpendExternalAccountOutcome = (obj?: { __typename?: any } | null): obj is VerifySpendExternalAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifySpendExternalAccountOutcome"')
      return VerifySpendExternalAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ArchiveSpendExternalAccountPayload_possibleTypes: string[] = ['ArchiveSpendExternalAccountPayload']
    export const isArchiveSpendExternalAccountPayload = (obj?: { __typename?: any } | null): obj is ArchiveSpendExternalAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isArchiveSpendExternalAccountPayload"')
      return ArchiveSpendExternalAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ArchiveSpendExternalAccountOutcome_possibleTypes: string[] = ['ArchiveSpendExternalAccountOutcome']
    export const isArchiveSpendExternalAccountOutcome = (obj?: { __typename?: any } | null): obj is ArchiveSpendExternalAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isArchiveSpendExternalAccountOutcome"')
      return ArchiveSpendExternalAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckPayload_possibleTypes: string[] = ['SendCheckPayload']
    export const isSendCheckPayload = (obj?: { __typename?: any } | null): obj is SendCheckPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckPayload"')
      return SendCheckPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SendCheckOutcome_possibleTypes: string[] = ['SendCheckOutcome']
    export const isSendCheckOutcome = (obj?: { __typename?: any } | null): obj is SendCheckOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendCheckOutcome"')
      return SendCheckOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const DisableTwoFactorAuthPayload_possibleTypes: string[] = ['DisableTwoFactorAuthPayload']
    export const isDisableTwoFactorAuthPayload = (obj?: { __typename?: any } | null): obj is DisableTwoFactorAuthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisableTwoFactorAuthPayload"')
      return DisableTwoFactorAuthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DisableTwoFactorAuthOutcome_possibleTypes: string[] = ['DisableTwoFactorAuthOutcome']
    export const isDisableTwoFactorAuthOutcome = (obj?: { __typename?: any } | null): obj is DisableTwoFactorAuthOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisableTwoFactorAuthOutcome"')
      return DisableTwoFactorAuthOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const DisableTwoFactorAuthResult_possibleTypes: string[] = ['DisableTwoFactorAuthResult']
    export const isDisableTwoFactorAuthResult = (obj?: { __typename?: any } | null): obj is DisableTwoFactorAuthResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisableTwoFactorAuthResult"')
      return DisableTwoFactorAuthResult_possibleTypes.includes(obj.__typename)
    }
    


    const DismissAnnouncementsPayload_possibleTypes: string[] = ['DismissAnnouncementsPayload']
    export const isDismissAnnouncementsPayload = (obj?: { __typename?: any } | null): obj is DismissAnnouncementsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDismissAnnouncementsPayload"')
      return DismissAnnouncementsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DismissAnnouncementsOutcome_possibleTypes: string[] = ['DismissAnnouncementsOutcome']
    export const isDismissAnnouncementsOutcome = (obj?: { __typename?: any } | null): obj is DismissAnnouncementsOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDismissAnnouncementsOutcome"')
      return DismissAnnouncementsOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const EnableTwoFactorAuthPayload_possibleTypes: string[] = ['EnableTwoFactorAuthPayload']
    export const isEnableTwoFactorAuthPayload = (obj?: { __typename?: any } | null): obj is EnableTwoFactorAuthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEnableTwoFactorAuthPayload"')
      return EnableTwoFactorAuthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const EnableTwoFactorAuthOutcome_possibleTypes: string[] = ['EnableTwoFactorAuthOutcome']
    export const isEnableTwoFactorAuthOutcome = (obj?: { __typename?: any } | null): obj is EnableTwoFactorAuthOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEnableTwoFactorAuthOutcome"')
      return EnableTwoFactorAuthOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const EnableTwoFactorAuthResult_possibleTypes: string[] = ['EnableTwoFactorAuthResult']
    export const isEnableTwoFactorAuthResult = (obj?: { __typename?: any } | null): obj is EnableTwoFactorAuthResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEnableTwoFactorAuthResult"')
      return EnableTwoFactorAuthResult_possibleTypes.includes(obj.__typename)
    }
    


    const GenerateAtomicTokenPayload_possibleTypes: string[] = ['GenerateAtomicTokenPayload']
    export const isGenerateAtomicTokenPayload = (obj?: { __typename?: any } | null): obj is GenerateAtomicTokenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenerateAtomicTokenPayload"')
      return GenerateAtomicTokenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GenerateAtomicTokenOutcome_possibleTypes: string[] = ['GenerateAtomicTokenOutcome']
    export const isGenerateAtomicTokenOutcome = (obj?: { __typename?: any } | null): obj is GenerateAtomicTokenOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenerateAtomicTokenOutcome"')
      return GenerateAtomicTokenOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const GenerateIdempotencyKeyPayload_possibleTypes: string[] = ['GenerateIdempotencyKeyPayload']
    export const isGenerateIdempotencyKeyPayload = (obj?: { __typename?: any } | null): obj is GenerateIdempotencyKeyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenerateIdempotencyKeyPayload"')
      return GenerateIdempotencyKeyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const GenerateIdempotencyKeyOutcome_possibleTypes: string[] = ['GenerateIdempotencyKeyOutcome']
    export const isGenerateIdempotencyKeyOutcome = (obj?: { __typename?: any } | null): obj is GenerateIdempotencyKeyOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenerateIdempotencyKeyOutcome"')
      return GenerateIdempotencyKeyOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const InitializeTwoFactorAuthPayload_possibleTypes: string[] = ['InitializeTwoFactorAuthPayload']
    export const isInitializeTwoFactorAuthPayload = (obj?: { __typename?: any } | null): obj is InitializeTwoFactorAuthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitializeTwoFactorAuthPayload"')
      return InitializeTwoFactorAuthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InitializeTwoFactorAuthOutcome_possibleTypes: string[] = ['InitializeTwoFactorAuthOutcome']
    export const isInitializeTwoFactorAuthOutcome = (obj?: { __typename?: any } | null): obj is InitializeTwoFactorAuthOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitializeTwoFactorAuthOutcome"')
      return InitializeTwoFactorAuthOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const InitializeTwoFactorAuthResult_possibleTypes: string[] = ['InitializeTwoFactorAuthResult']
    export const isInitializeTwoFactorAuthResult = (obj?: { __typename?: any } | null): obj is InitializeTwoFactorAuthResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitializeTwoFactorAuthResult"')
      return InitializeTwoFactorAuthResult_possibleTypes.includes(obj.__typename)
    }
    


    const InitializeTwoFactorVerificationPayload_possibleTypes: string[] = ['InitializeTwoFactorVerificationPayload']
    export const isInitializeTwoFactorVerificationPayload = (obj?: { __typename?: any } | null): obj is InitializeTwoFactorVerificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitializeTwoFactorVerificationPayload"')
      return InitializeTwoFactorVerificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InitiatePhoneVerificationPayload_possibleTypes: string[] = ['InitiatePhoneVerificationPayload']
    export const isInitiatePhoneVerificationPayload = (obj?: { __typename?: any } | null): obj is InitiatePhoneVerificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiatePhoneVerificationPayload"')
      return InitiatePhoneVerificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InitiatePhoneVerificationOutcome_possibleTypes: string[] = ['InitiatePhoneVerificationOutcome']
    export const isInitiatePhoneVerificationOutcome = (obj?: { __typename?: any } | null): obj is InitiatePhoneVerificationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiatePhoneVerificationOutcome"')
      return InitiatePhoneVerificationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateResetPasswordPayload_possibleTypes: string[] = ['InitiateResetPasswordPayload']
    export const isInitiateResetPasswordPayload = (obj?: { __typename?: any } | null): obj is InitiateResetPasswordPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateResetPasswordPayload"')
      return InitiateResetPasswordPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateResetPasswordResult_possibleTypes: string[] = ['InitiateResetPasswordResult']
    export const isInitiateResetPasswordResult = (obj?: { __typename?: any } | null): obj is InitiateResetPasswordResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateResetPasswordResult"')
      return InitiateResetPasswordResult_possibleTypes.includes(obj.__typename)
    }
    


    const JoinCryptoWaitlistPayload_possibleTypes: string[] = ['JoinCryptoWaitlistPayload']
    export const isJoinCryptoWaitlistPayload = (obj?: { __typename?: any } | null): obj is JoinCryptoWaitlistPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isJoinCryptoWaitlistPayload"')
      return JoinCryptoWaitlistPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetPlusAutoRenewalPreferencePayload_possibleTypes: string[] = ['SetPlusAutoRenewalPreferencePayload']
    export const isSetPlusAutoRenewalPreferencePayload = (obj?: { __typename?: any } | null): obj is SetPlusAutoRenewalPreferencePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPlusAutoRenewalPreferencePayload"')
      return SetPlusAutoRenewalPreferencePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetPlusAutoRenewalPreferenceOutcome_possibleTypes: string[] = ['SetPlusAutoRenewalPreferenceOutcome']
    export const isSetPlusAutoRenewalPreferenceOutcome = (obj?: { __typename?: any } | null): obj is SetPlusAutoRenewalPreferenceOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPlusAutoRenewalPreferenceOutcome"')
      return SetPlusAutoRenewalPreferenceOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmPlusMembershipPayload_possibleTypes: string[] = ['ConfirmPlusMembershipPayload']
    export const isConfirmPlusMembershipPayload = (obj?: { __typename?: any } | null): obj is ConfirmPlusMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmPlusMembershipPayload"')
      return ConfirmPlusMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ConfirmPlusMembershipOutcome_possibleTypes: string[] = ['ConfirmPlusMembershipOutcome']
    export const isConfirmPlusMembershipOutcome = (obj?: { __typename?: any } | null): obj is ConfirmPlusMembershipOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfirmPlusMembershipOutcome"')
      return ConfirmPlusMembershipOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitPlusMembershipPaymentPayload_possibleTypes: string[] = ['SubmitPlusMembershipPaymentPayload']
    export const isSubmitPlusMembershipPaymentPayload = (obj?: { __typename?: any } | null): obj is SubmitPlusMembershipPaymentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitPlusMembershipPaymentPayload"')
      return SubmitPlusMembershipPaymentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitPlusMembershipPaymentOutcome_possibleTypes: string[] = ['SubmitPlusMembershipPaymentOutcome']
    export const isSubmitPlusMembershipPaymentOutcome = (obj?: { __typename?: any } | null): obj is SubmitPlusMembershipPaymentOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitPlusMembershipPaymentOutcome"')
      return SubmitPlusMembershipPaymentOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitOneTimePlusPaymentPayload_possibleTypes: string[] = ['SubmitOneTimePlusPaymentPayload']
    export const isSubmitOneTimePlusPaymentPayload = (obj?: { __typename?: any } | null): obj is SubmitOneTimePlusPaymentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitOneTimePlusPaymentPayload"')
      return SubmitOneTimePlusPaymentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitOneTimePlusPaymentOutcome_possibleTypes: string[] = ['SubmitOneTimePlusPaymentOutcome']
    export const isSubmitOneTimePlusPaymentOutcome = (obj?: { __typename?: any } | null): obj is SubmitOneTimePlusPaymentOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitOneTimePlusPaymentOutcome"')
      return SubmitOneTimePlusPaymentOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetActivePlusMembershipPaymentMethodPayload_possibleTypes: string[] = ['SetActivePlusMembershipPaymentMethodPayload']
    export const isSetActivePlusMembershipPaymentMethodPayload = (obj?: { __typename?: any } | null): obj is SetActivePlusMembershipPaymentMethodPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetActivePlusMembershipPaymentMethodPayload"')
      return SetActivePlusMembershipPaymentMethodPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetActivePlusMembershipPaymentMethodOutcome_possibleTypes: string[] = ['SetActivePlusMembershipPaymentMethodOutcome']
    export const isSetActivePlusMembershipPaymentMethodOutcome = (obj?: { __typename?: any } | null): obj is SetActivePlusMembershipPaymentMethodOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetActivePlusMembershipPaymentMethodOutcome"')
      return SetActivePlusMembershipPaymentMethodOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptPromotionCampaignPayload_possibleTypes: string[] = ['AcceptPromotionCampaignPayload']
    export const isAcceptPromotionCampaignPayload = (obj?: { __typename?: any } | null): obj is AcceptPromotionCampaignPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptPromotionCampaignPayload"')
      return AcceptPromotionCampaignPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AcceptPromotionCampaignOutcome_possibleTypes: string[] = ['AcceptPromotionCampaignOutcome']
    export const isAcceptPromotionCampaignOutcome = (obj?: { __typename?: any } | null): obj is AcceptPromotionCampaignOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptPromotionCampaignOutcome"')
      return AcceptPromotionCampaignOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ReauthenticatePayload_possibleTypes: string[] = ['ReauthenticatePayload']
    export const isReauthenticatePayload = (obj?: { __typename?: any } | null): obj is ReauthenticatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReauthenticatePayload"')
      return ReauthenticatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReauthenticateOutcome_possibleTypes: string[] = ['ReauthenticateOutcome']
    export const isReauthenticateOutcome = (obj?: { __typename?: any } | null): obj is ReauthenticateOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReauthenticateOutcome"')
      return ReauthenticateOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ReauthenticateResult_possibleTypes: string[] = ['ReauthenticateResult']
    export const isReauthenticateResult = (obj?: { __typename?: any } | null): obj is ReauthenticateResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReauthenticateResult"')
      return ReauthenticateResult_possibleTypes.includes(obj.__typename)
    }
    


    const RebalancePortfolioSlicePayload_possibleTypes: string[] = ['RebalancePortfolioSlicePayload']
    export const isRebalancePortfolioSlicePayload = (obj?: { __typename?: any } | null): obj is RebalancePortfolioSlicePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRebalancePortfolioSlicePayload"')
      return RebalancePortfolioSlicePayload_possibleTypes.includes(obj.__typename)
    }
    


    const RebalancePortfolioSliceOutcome_possibleTypes: string[] = ['RebalancePortfolioSliceOutcome']
    export const isRebalancePortfolioSliceOutcome = (obj?: { __typename?: any } | null): obj is RebalancePortfolioSliceOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRebalancePortfolioSliceOutcome"')
      return RebalancePortfolioSliceOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const RebalancePortfolioSliceResult_possibleTypes: string[] = ['RebalancePortfolioSliceResult']
    export const isRebalancePortfolioSliceResult = (obj?: { __typename?: any } | null): obj is RebalancePortfolioSliceResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRebalancePortfolioSliceResult"')
      return RebalancePortfolioSliceResult_possibleTypes.includes(obj.__typename)
    }
    


    const RenameAccountPayload_possibleTypes: string[] = ['RenameAccountPayload']
    export const isRenameAccountPayload = (obj?: { __typename?: any } | null): obj is RenameAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRenameAccountPayload"')
      return RenameAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RenameAccountOutcome_possibleTypes: string[] = ['RenameAccountOutcome']
    export const isRenameAccountOutcome = (obj?: { __typename?: any } | null): obj is RenameAccountOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRenameAccountOutcome"')
      return RenameAccountOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ReportMobileDeviceInfoPayload_possibleTypes: string[] = ['ReportMobileDeviceInfoPayload']
    export const isReportMobileDeviceInfoPayload = (obj?: { __typename?: any } | null): obj is ReportMobileDeviceInfoPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReportMobileDeviceInfoPayload"')
      return ReportMobileDeviceInfoPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReportMobileDeviceInfoResult_possibleTypes: string[] = ['ReportMobileDeviceInfoResult']
    export const isReportMobileDeviceInfoResult = (obj?: { __typename?: any } | null): obj is ReportMobileDeviceInfoResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReportMobileDeviceInfoResult"')
      return ReportMobileDeviceInfoResult_possibleTypes.includes(obj.__typename)
    }
    


    const RequestAccountDeactivationPayload_possibleTypes: string[] = ['RequestAccountDeactivationPayload']
    export const isRequestAccountDeactivationPayload = (obj?: { __typename?: any } | null): obj is RequestAccountDeactivationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestAccountDeactivationPayload"')
      return RequestAccountDeactivationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RequestOfflineOpenAccountPayload_possibleTypes: string[] = ['RequestOfflineOpenAccountPayload']
    export const isRequestOfflineOpenAccountPayload = (obj?: { __typename?: any } | null): obj is RequestOfflineOpenAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestOfflineOpenAccountPayload"')
      return RequestOfflineOpenAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RequestOfflineOpenAccountResult_possibleTypes: string[] = ['RequestOfflineOpenAccountResult']
    export const isRequestOfflineOpenAccountResult = (obj?: { __typename?: any } | null): obj is RequestOfflineOpenAccountResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestOfflineOpenAccountResult"')
      return RequestOfflineOpenAccountResult_possibleTypes.includes(obj.__typename)
    }
    


    const RequestReferralsParticipationPayload_possibleTypes: string[] = ['RequestReferralsParticipationPayload']
    export const isRequestReferralsParticipationPayload = (obj?: { __typename?: any } | null): obj is RequestReferralsParticipationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestReferralsParticipationPayload"')
      return RequestReferralsParticipationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RequestReferralsParticipationOutcome_possibleTypes: string[] = ['RequestReferralsParticipationOutcome']
    export const isRequestReferralsParticipationOutcome = (obj?: { __typename?: any } | null): obj is RequestReferralsParticipationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestReferralsParticipationOutcome"')
      return RequestReferralsParticipationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const RequestReferralsParticipationResult_possibleTypes: string[] = ['RequestReferralsParticipationResult']
    export const isRequestReferralsParticipationResult = (obj?: { __typename?: any } | null): obj is RequestReferralsParticipationResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestReferralsParticipationResult"')
      return RequestReferralsParticipationResult_possibleTypes.includes(obj.__typename)
    }
    


    const ResendEmailVerificationPayload_possibleTypes: string[] = ['ResendEmailVerificationPayload']
    export const isResendEmailVerificationPayload = (obj?: { __typename?: any } | null): obj is ResendEmailVerificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResendEmailVerificationPayload"')
      return ResendEmailVerificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ResendEmailVerificationOutcome_possibleTypes: string[] = ['ResendEmailVerificationOutcome']
    export const isResendEmailVerificationOutcome = (obj?: { __typename?: any } | null): obj is ResendEmailVerificationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResendEmailVerificationOutcome"')
      return ResendEmailVerificationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ResendEmailVerificationResult_possibleTypes: string[] = ['ResendEmailVerificationResult']
    export const isResendEmailVerificationResult = (obj?: { __typename?: any } | null): obj is ResendEmailVerificationResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResendEmailVerificationResult"')
      return ResendEmailVerificationResult_possibleTypes.includes(obj.__typename)
    }
    


    const ResetPasswordPayload_possibleTypes: string[] = ['ResetPasswordPayload']
    export const isResetPasswordPayload = (obj?: { __typename?: any } | null): obj is ResetPasswordPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResetPasswordPayload"')
      return ResetPasswordPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ResetPasswordOutcome_possibleTypes: string[] = ['ResetPasswordOutcome']
    export const isResetPasswordOutcome = (obj?: { __typename?: any } | null): obj is ResetPasswordOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResetPasswordOutcome"')
      return ResetPasswordOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const ResetPasswordResult_possibleTypes: string[] = ['ResetPasswordResult']
    export const isResetPasswordResult = (obj?: { __typename?: any } | null): obj is ResetPasswordResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResetPasswordResult"')
      return ResetPasswordResult_possibleTypes.includes(obj.__typename)
    }
    


    const ResubmitLoanAfterCreditFreezePayload_possibleTypes: string[] = ['ResubmitLoanAfterCreditFreezePayload']
    export const isResubmitLoanAfterCreditFreezePayload = (obj?: { __typename?: any } | null): obj is ResubmitLoanAfterCreditFreezePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResubmitLoanAfterCreditFreezePayload"')
      return ResubmitLoanAfterCreditFreezePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ResubmitLoanAfterCreditFreezeOutcome_possibleTypes: string[] = ['ResubmitLoanAfterCreditFreezeOutcome']
    export const isResubmitLoanAfterCreditFreezeOutcome = (obj?: { __typename?: any } | null): obj is ResubmitLoanAfterCreditFreezeOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResubmitLoanAfterCreditFreezeOutcome"')
      return ResubmitLoanAfterCreditFreezeOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const RevokeRefreshPayload_possibleTypes: string[] = ['RevokeRefreshPayload']
    export const isRevokeRefreshPayload = (obj?: { __typename?: any } | null): obj is RevokeRefreshPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRevokeRefreshPayload"')
      return RevokeRefreshPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RevokeRefreshResult_possibleTypes: string[] = ['RevokeRefreshResult']
    export const isRevokeRefreshResult = (obj?: { __typename?: any } | null): obj is RevokeRefreshResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRevokeRefreshResult"')
      return RevokeRefreshResult_possibleTypes.includes(obj.__typename)
    }
    


    const SendTestPushNotificationPayload_possibleTypes: string[] = ['SendTestPushNotificationPayload']
    export const isSendTestPushNotificationPayload = (obj?: { __typename?: any } | null): obj is SendTestPushNotificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendTestPushNotificationPayload"')
      return SendTestPushNotificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetFullyPaidLendingStatusPayload_possibleTypes: string[] = ['SetFullyPaidLendingStatusPayload']
    export const isSetFullyPaidLendingStatusPayload = (obj?: { __typename?: any } | null): obj is SetFullyPaidLendingStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetFullyPaidLendingStatusPayload"')
      return SetFullyPaidLendingStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetFullyPaidLendingStatusOutcome_possibleTypes: string[] = ['SetFullyPaidLendingStatusOutcome']
    export const isSetFullyPaidLendingStatusOutcome = (obj?: { __typename?: any } | null): obj is SetFullyPaidLendingStatusOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetFullyPaidLendingStatusOutcome"')
      return SetFullyPaidLendingStatusOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetIntroductionSourcePayload_possibleTypes: string[] = ['SetIntroductionSourcePayload']
    export const isSetIntroductionSourcePayload = (obj?: { __typename?: any } | null): obj is SetIntroductionSourcePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetIntroductionSourcePayload"')
      return SetIntroductionSourcePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetPortfolioSliceOrderPayload_possibleTypes: string[] = ['SetPortfolioSliceOrderPayload']
    export const isSetPortfolioSliceOrderPayload = (obj?: { __typename?: any } | null): obj is SetPortfolioSliceOrderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPortfolioSliceOrderPayload"')
      return SetPortfolioSliceOrderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetPortfolioSliceOrderOutcome_possibleTypes: string[] = ['SetPortfolioSliceOrderOutcome']
    export const isSetPortfolioSliceOrderOutcome = (obj?: { __typename?: any } | null): obj is SetPortfolioSliceOrderOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPortfolioSliceOrderOutcome"')
      return SetPortfolioSliceOrderOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetPortfolioSliceOrderResult_possibleTypes: string[] = ['SetPortfolioSliceOrderResult']
    export const isSetPortfolioSliceOrderResult = (obj?: { __typename?: any } | null): obj is SetPortfolioSliceOrderResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPortfolioSliceOrderResult"')
      return SetPortfolioSliceOrderResult_possibleTypes.includes(obj.__typename)
    }
    


    const SetPreferredPlatformPaymentMethodPayload_possibleTypes: string[] = ['SetPreferredPlatformPaymentMethodPayload']
    export const isSetPreferredPlatformPaymentMethodPayload = (obj?: { __typename?: any } | null): obj is SetPreferredPlatformPaymentMethodPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPreferredPlatformPaymentMethodPayload"')
      return SetPreferredPlatformPaymentMethodPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetPreferredPlatformPaymentMethodOutcome_possibleTypes: string[] = ['SetPreferredPlatformPaymentMethodOutcome']
    export const isSetPreferredPlatformPaymentMethodOutcome = (obj?: { __typename?: any } | null): obj is SetPreferredPlatformPaymentMethodOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPreferredPlatformPaymentMethodOutcome"')
      return SetPreferredPlatformPaymentMethodOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetPreferredTradeWindowPayload_possibleTypes: string[] = ['SetPreferredTradeWindowPayload']
    export const isSetPreferredTradeWindowPayload = (obj?: { __typename?: any } | null): obj is SetPreferredTradeWindowPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPreferredTradeWindowPayload"')
      return SetPreferredTradeWindowPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetPreferredTradeWindowOutcome_possibleTypes: string[] = ['SetPreferredTradeWindowOutcome']
    export const isSetPreferredTradeWindowOutcome = (obj?: { __typename?: any } | null): obj is SetPreferredTradeWindowOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetPreferredTradeWindowOutcome"')
      return SetPreferredTradeWindowOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SetRootPiePayload_possibleTypes: string[] = ['SetRootPiePayload']
    export const isSetRootPiePayload = (obj?: { __typename?: any } | null): obj is SetRootPiePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetRootPiePayload"')
      return SetRootPiePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SetRootPieResult_possibleTypes: string[] = ['SetRootPieResult']
    export const isSetRootPieResult = (obj?: { __typename?: any } | null): obj is SetRootPieResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetRootPieResult"')
      return SetRootPieResult_possibleTypes.includes(obj.__typename)
    }
    


    const SetUserFinancialGoalPayload_possibleTypes: string[] = ['SetUserFinancialGoalPayload']
    export const isSetUserFinancialGoalPayload = (obj?: { __typename?: any } | null): obj is SetUserFinancialGoalPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetUserFinancialGoalPayload"')
      return SetUserFinancialGoalPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SignAgreementBundlePayload_possibleTypes: string[] = ['SignAgreementBundlePayload']
    export const isSignAgreementBundlePayload = (obj?: { __typename?: any } | null): obj is SignAgreementBundlePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSignAgreementBundlePayload"')
      return SignAgreementBundlePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SignAgreementBundleOutcome_possibleTypes: string[] = ['SignAgreementBundleOutcome']
    export const isSignAgreementBundleOutcome = (obj?: { __typename?: any } | null): obj is SignAgreementBundleOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSignAgreementBundleOutcome"')
      return SignAgreementBundleOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SignAgreementBundleResult_possibleTypes: string[] = ['SignAgreementBundleResult']
    export const isSignAgreementBundleResult = (obj?: { __typename?: any } | null): obj is SignAgreementBundleResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSignAgreementBundleResult"')
      return SignAgreementBundleResult_possibleTypes.includes(obj.__typename)
    }
    


    const StartCryptoOnDemandTradeWindowOutcome_possibleTypes: string[] = ['StartCryptoOnDemandTradeWindowOutcome']
    export const isStartCryptoOnDemandTradeWindowOutcome = (obj?: { __typename?: any } | null): obj is StartCryptoOnDemandTradeWindowOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStartCryptoOnDemandTradeWindowOutcome"')
      return StartCryptoOnDemandTradeWindowOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const StartCryptoOnDemandTradeWindowPayload_possibleTypes: string[] = ['StartCryptoOnDemandTradeWindowPayload']
    export const isStartCryptoOnDemandTradeWindowPayload = (obj?: { __typename?: any } | null): obj is StartCryptoOnDemandTradeWindowPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStartCryptoOnDemandTradeWindowPayload"')
      return StartCryptoOnDemandTradeWindowPayload_possibleTypes.includes(obj.__typename)
    }
    


    const StartCustomerSupportConverstionPayload_possibleTypes: string[] = ['StartCustomerSupportConverstionPayload']
    export const isStartCustomerSupportConverstionPayload = (obj?: { __typename?: any } | null): obj is StartCustomerSupportConverstionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStartCustomerSupportConverstionPayload"')
      return StartCustomerSupportConverstionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const StartCustomerSupportConversationOutcome_possibleTypes: string[] = ['StartCustomerSupportConversationOutcome']
    export const isStartCustomerSupportConversationOutcome = (obj?: { __typename?: any } | null): obj is StartCustomerSupportConversationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStartCustomerSupportConversationOutcome"')
      return StartCustomerSupportConversationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitPersonalLoanApplicationPayload_possibleTypes: string[] = ['SubmitPersonalLoanApplicationPayload']
    export const isSubmitPersonalLoanApplicationPayload = (obj?: { __typename?: any } | null): obj is SubmitPersonalLoanApplicationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitPersonalLoanApplicationPayload"')
      return SubmitPersonalLoanApplicationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitPersonalLoanApplicationOutcome_possibleTypes: string[] = ['SubmitPersonalLoanApplicationOutcome']
    export const isSubmitPersonalLoanApplicationOutcome = (obj?: { __typename?: any } | null): obj is SubmitPersonalLoanApplicationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitPersonalLoanApplicationOutcome"')
      return SubmitPersonalLoanApplicationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const SubmitUserFeedbackPayload_possibleTypes: string[] = ['SubmitUserFeedbackPayload']
    export const isSubmitUserFeedbackPayload = (obj?: { __typename?: any } | null): obj is SubmitUserFeedbackPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitUserFeedbackPayload"')
      return SubmitUserFeedbackPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateCustodialAccountBeneficiaryLegalAddressPayload_possibleTypes: string[] = ['UpdateCustodialAccountBeneficiaryLegalAddressPayload']
    export const isUpdateCustodialAccountBeneficiaryLegalAddressPayload = (obj?: { __typename?: any } | null): obj is UpdateCustodialAccountBeneficiaryLegalAddressPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCustodialAccountBeneficiaryLegalAddressPayload"')
      return UpdateCustodialAccountBeneficiaryLegalAddressPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateCustodialAccountBeneficiaryLegalAddressOutcome_possibleTypes: string[] = ['UpdateCustodialAccountBeneficiaryLegalAddressOutcome']
    export const isUpdateCustodialAccountBeneficiaryLegalAddressOutcome = (obj?: { __typename?: any } | null): obj is UpdateCustodialAccountBeneficiaryLegalAddressOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCustodialAccountBeneficiaryLegalAddressOutcome"')
      return UpdateCustodialAccountBeneficiaryLegalAddressOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateEmailPayload_possibleTypes: string[] = ['UpdateEmailPayload']
    export const isUpdateEmailPayload = (obj?: { __typename?: any } | null): obj is UpdateEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEmailPayload"')
      return UpdateEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateFullyPaidLendingStatusPayload_possibleTypes: string[] = ['UpdateFullyPaidLendingStatusPayload']
    export const isUpdateFullyPaidLendingStatusPayload = (obj?: { __typename?: any } | null): obj is UpdateFullyPaidLendingStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateFullyPaidLendingStatusPayload"')
      return UpdateFullyPaidLendingStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateUserDataPayload_possibleTypes: string[] = ['UpdateUserDataPayload']
    export const isUpdateUserDataPayload = (obj?: { __typename?: any } | null): obj is UpdateUserDataPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateUserDataPayload"')
      return UpdateUserDataPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateUserDataOutcome_possibleTypes: string[] = ['UpdateUserDataOutcome']
    export const isUpdateUserDataOutcome = (obj?: { __typename?: any } | null): obj is UpdateUserDataOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateUserDataOutcome"')
      return UpdateUserDataOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateUserDataResult_possibleTypes: string[] = ['UpdateUserDataResult']
    export const isUpdateUserDataResult = (obj?: { __typename?: any } | null): obj is UpdateUserDataResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateUserDataResult"')
      return UpdateUserDataResult_possibleTypes.includes(obj.__typename)
    }
    


    const VerifyEmailPayload_possibleTypes: string[] = ['VerifyEmailPayload']
    export const isVerifyEmailPayload = (obj?: { __typename?: any } | null): obj is VerifyEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifyEmailPayload"')
      return VerifyEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const VerifyEmailOutcome_possibleTypes: string[] = ['VerifyEmailOutcome']
    export const isVerifyEmailOutcome = (obj?: { __typename?: any } | null): obj is VerifyEmailOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifyEmailOutcome"')
      return VerifyEmailOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const VerifyEmailResult_possibleTypes: string[] = ['VerifyEmailResult']
    export const isVerifyEmailResult = (obj?: { __typename?: any } | null): obj is VerifyEmailResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifyEmailResult"')
      return VerifyEmailResult_possibleTypes.includes(obj.__typename)
    }
    


    const WithdrawPersonalLoanPayload_possibleTypes: string[] = ['WithdrawPersonalLoanPayload']
    export const isWithdrawPersonalLoanPayload = (obj?: { __typename?: any } | null): obj is WithdrawPersonalLoanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWithdrawPersonalLoanPayload"')
      return WithdrawPersonalLoanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const WithdrawPersonalLoanOutcome_possibleTypes: string[] = ['WithdrawPersonalLoanOutcome']
    export const isWithdrawPersonalLoanOutcome = (obj?: { __typename?: any } | null): obj is WithdrawPersonalLoanOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWithdrawPersonalLoanOutcome"')
      return WithdrawPersonalLoanOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const WithdrawPersonalLoanApplicationPayload_possibleTypes: string[] = ['WithdrawPersonalLoanApplicationPayload']
    export const isWithdrawPersonalLoanApplicationPayload = (obj?: { __typename?: any } | null): obj is WithdrawPersonalLoanApplicationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWithdrawPersonalLoanApplicationPayload"')
      return WithdrawPersonalLoanApplicationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const WithdrawPersonalLoanApplicationOutcome_possibleTypes: string[] = ['WithdrawPersonalLoanApplicationOutcome']
    export const isWithdrawPersonalLoanApplicationOutcome = (obj?: { __typename?: any } | null): obj is WithdrawPersonalLoanApplicationOutcome => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWithdrawPersonalLoanApplicationOutcome"')
      return WithdrawPersonalLoanApplicationOutcome_possibleTypes.includes(obj.__typename)
    }
    


    const Onboarding_possibleTypes: string[] = ['Onboarding']
    export const isOnboarding = (obj?: { __typename?: any } | null): obj is Onboarding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboarding"')
      return Onboarding_possibleTypes.includes(obj.__typename)
    }
    


    const ProductSelection_possibleTypes: string[] = ['ProductSelection']
    export const isProductSelection = (obj?: { __typename?: any } | null): obj is ProductSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductSelection"')
      return ProductSelection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductList_possibleTypes: string[] = ['ProductList']
    export const isProductList = (obj?: { __typename?: any } | null): obj is ProductList => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductList"')
      return ProductList_possibleTypes.includes(obj.__typename)
    }
    


    const ProductListDisclosure_possibleTypes: string[] = ['ProductListDisclosure']
    export const isProductListDisclosure = (obj?: { __typename?: any } | null): obj is ProductListDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductListDisclosure"')
      return ProductListDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingProgressInterstitial_possibleTypes: string[] = ['OnboardingProgressInterstitial']
    export const isOnboardingProgressInterstitial = (obj?: { __typename?: any } | null): obj is OnboardingProgressInterstitial => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingProgressInterstitial"')
      return OnboardingProgressInterstitial_possibleTypes.includes(obj.__typename)
    }
    


    const InterstitialBanner_possibleTypes: string[] = ['InterstitialBanner']
    export const isInterstitialBanner = (obj?: { __typename?: any } | null): obj is InterstitialBanner => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInterstitialBanner"')
      return InterstitialBanner_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingProgressInterstitialPromoText_possibleTypes: string[] = ['OnboardingProgressInterstitialPromoText']
    export const isOnboardingProgressInterstitialPromoText = (obj?: { __typename?: any } | null): obj is OnboardingProgressInterstitialPromoText => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingProgressInterstitialPromoText"')
      return OnboardingProgressInterstitialPromoText_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingProgressInterstitialTooltip_possibleTypes: string[] = ['OnboardingProgressInterstitialTooltip']
    export const isOnboardingProgressInterstitialTooltip = (obj?: { __typename?: any } | null): obj is OnboardingProgressInterstitialTooltip => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingProgressInterstitialTooltip"')
      return OnboardingProgressInterstitialTooltip_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingDueDiligence_possibleTypes: string[] = ['OnboardingDueDiligence']
    export const isOnboardingDueDiligence = (obj?: { __typename?: any } | null): obj is OnboardingDueDiligence => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingDueDiligence"')
      return OnboardingDueDiligence_possibleTypes.includes(obj.__typename)
    }
    


    const OccupationDropdownOption_possibleTypes: string[] = ['OccupationDropdownOption']
    export const isOccupationDropdownOption = (obj?: { __typename?: any } | null): obj is OccupationDropdownOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOccupationDropdownOption"')
      return OccupationDropdownOption_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingProduct_possibleTypes: string[] = ['OnboardingProduct']
    export const isOnboardingProduct = (obj?: { __typename?: any } | null): obj is OnboardingProduct => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingProduct"')
      return OnboardingProduct_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDisclosure_possibleTypes: string[] = ['ProductDisclosure']
    export const isProductDisclosure = (obj?: { __typename?: any } | null): obj is ProductDisclosure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDisclosure"')
      return ProductDisclosure_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingInvest_possibleTypes: string[] = ['OnboardingInvest']
    export const isOnboardingInvest = (obj?: { __typename?: any } | null): obj is OnboardingInvest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingInvest"')
      return OnboardingInvest_possibleTypes.includes(obj.__typename)
    }
    


    const InvestProductSelectionScreen_possibleTypes: string[] = ['InvestProductSelectionScreen']
    export const isInvestProductSelectionScreen = (obj?: { __typename?: any } | null): obj is InvestProductSelectionScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvestProductSelectionScreen"')
      return InvestProductSelectionScreen_possibleTypes.includes(obj.__typename)
    }
    


    const IRAOnboarding_possibleTypes: string[] = ['IRAOnboarding']
    export const isIRAOnboarding = (obj?: { __typename?: any } | null): obj is IRAOnboarding => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIRAOnboarding"')
      return IRAOnboarding_possibleTypes.includes(obj.__typename)
    }
    


    const IRAFundingSelectionScreen_possibleTypes: string[] = ['IRAFundingSelectionScreen']
    export const isIRAFundingSelectionScreen = (obj?: { __typename?: any } | null): obj is IRAFundingSelectionScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIRAFundingSelectionScreen"')
      return IRAFundingSelectionScreen_possibleTypes.includes(obj.__typename)
    }
    


    const IRARolloverTypeSelectionScreen_possibleTypes: string[] = ['IRARolloverTypeSelectionScreen']
    export const isIRARolloverTypeSelectionScreen = (obj?: { __typename?: any } | null): obj is IRARolloverTypeSelectionScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIRARolloverTypeSelectionScreen"')
      return IRARolloverTypeSelectionScreen_possibleTypes.includes(obj.__typename)
    }
    


    const HelpSection_possibleTypes: string[] = ['HelpSection']
    export const isHelpSection = (obj?: { __typename?: any } | null): obj is HelpSection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHelpSection"')
      return HelpSection_possibleTypes.includes(obj.__typename)
    }
    


    const AccountTypeSelectionScreen_possibleTypes: string[] = ['AccountTypeSelectionScreen']
    export const isAccountTypeSelectionScreen = (obj?: { __typename?: any } | null): obj is AccountTypeSelectionScreen => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccountTypeSelectionScreen"')
      return AccountTypeSelectionScreen_possibleTypes.includes(obj.__typename)
    }
    


    const PlusPromotionalMessage_possibleTypes: string[] = ['PlusPromotionalMessage']
    export const isPlusPromotionalMessage = (obj?: { __typename?: any } | null): obj is PlusPromotionalMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlusPromotionalMessage"')
      return PlusPromotionalMessage_possibleTypes.includes(obj.__typename)
    }
    

export const enumSetAccountConfigurationDividendSettingError = {
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumCancelAchRelationshipInputErrorEnum = {
   ACH_RELATIONSHIP_NOT_ACTIVE: 'ACH_RELATIONSHIP_NOT_ACTIVE' as const,
   ACH_RELATIONSHIP_NOT_FOUND: 'ACH_RELATIONSHIP_NOT_FOUND' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   HAS_PENDING_TRANSFERS: 'HAS_PENDING_TRANSFERS' as const,
   INVALID_ACH_RELATIONSHIP_ID: 'INVALID_ACH_RELATIONSHIP_ID' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   INVALID_EXTERNAL_ACCOUNT_ID: 'INVALID_EXTERNAL_ACCOUNT_ID' as const
}

export const enumConfirmAchRelationshipViaDepositsInputErrorEnum = {
   ACH_RELATIONSHIP_NOT_FOUND: 'ACH_RELATIONSHIP_NOT_FOUND' as const,
   ACH_RELATIONSHIP_NOT_PENDING: 'ACH_RELATIONSHIP_NOT_PENDING' as const,
   ACH_RELATIONSHIP_NOT_READY: 'ACH_RELATIONSHIP_NOT_READY' as const,
   DEPOSITS_EXPIRED: 'DEPOSITS_EXPIRED' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INCORRECT_DEPOSIT_AMOUNTS: 'INCORRECT_DEPOSIT_AMOUNTS' as const,
   INELIGIBLE_ACH_RELATIONSHIP: 'INELIGIBLE_ACH_RELATIONSHIP' as const,
   INVALID_ACH_RELATIONSHIP_ID: 'INVALID_ACH_RELATIONSHIP_ID' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   INVESTMENT_ACCOUNT_NOT_OPEN: 'INVESTMENT_ACCOUNT_NOT_OPEN' as const
}

export const enumViaDepositsBankAcctTypeEnum = {
   CHECKING: 'CHECKING' as const,
   SAVINGS: 'SAVINGS' as const
}

export const enumCreateAchRelationshipViaDepositsInputErrorEnum = {
   ACCOUNT_DISALLOWS_EXTERNAL_FUNDING: 'ACCOUNT_DISALLOWS_EXTERNAL_FUNDING' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   NO_ADDITIONAL_ACH_RELATIONSHIPS: 'NO_ADDITIONAL_ACH_RELATIONSHIPS' as const,
   UNALLOWED_BANK: 'UNALLOWED_BANK' as const,
   UNKNOWN_ROUTING_NUMBER: 'UNKNOWN_ROUTING_NUMBER' as const
}

export const enumCreateAchRelationshipViaLinkInputErrorEnum = {
   ACCOUNT_DISALLOWS_EXTERNAL_FUNDING: 'ACCOUNT_DISALLOWS_EXTERNAL_FUNDING' as const,
   EXTERNAL_ACCOUNT_NOT_FOUND: 'EXTERNAL_ACCOUNT_NOT_FOUND' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INVALID_EXTERNAL_ACCOUNT_ID: 'INVALID_EXTERNAL_ACCOUNT_ID' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   NO_ADDITIONAL_ACH_RELATIONSHIPS: 'NO_ADDITIONAL_ACH_RELATIONSHIPS' as const,
   UNALLOWED_BANK: 'UNALLOWED_BANK' as const
}

export const enumCreditCardCustomerEmploymentInfoHousingTypeEnum = {
   RENT: 'RENT' as const,
   OWN: 'OWN' as const,
   OTHER: 'OTHER' as const
}

export const enumSubmitCreditCardApplicationErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   REJECTED_APPLICATION_HOLD_PERIOD_NOT_COMPLETE: 'REJECTED_APPLICATION_HOLD_PERIOD_NOT_COMPLETE' as const,
   CREDIT_CARD_NOT_ENABLED_FOR_USER: 'CREDIT_CARD_NOT_ENABLED_FOR_USER' as const
}

export const enumAcceptCreditCardOfferErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   CREDIT_CARD_NOT_ENABLED_FOR_USER: 'CREDIT_CARD_NOT_ENABLED_FOR_USER' as const,
   NO_APPLICATIONS_FOR_USER: 'NO_APPLICATIONS_FOR_USER' as const,
   NO_ACTIVE_CREDIT_CARD_APPLICATION_FOR_USER: 'NO_ACTIVE_CREDIT_CARD_APPLICATION_FOR_USER' as const,
   NO_ACTIVE_CREDIT_CARD_OFFER_FOR_USER: 'NO_ACTIVE_CREDIT_CARD_OFFER_FOR_USER' as const,
   GENERAL_ACCEPT_OFFER_ERROR: 'GENERAL_ACCEPT_OFFER_ERROR' as const
}

export const enumContinueCreditCardApplicationAfterUserCreditIsUnfrozenErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   CREDIT_CARD_NOT_ENABLED_FOR_USER: 'CREDIT_CARD_NOT_ENABLED_FOR_USER' as const,
   NO_CREDIT_CARD_APPLICATIONS_FOR_USER: 'NO_CREDIT_CARD_APPLICATIONS_FOR_USER' as const,
   APPLICATION_NOT_IN_UNFREEZE_CREDIT_BUREAU_STATUS: 'APPLICATION_NOT_IN_UNFREEZE_CREDIT_BUREAU_STATUS' as const,
   GENERAL_UNFREEZE_CREDIT_ERROR: 'GENERAL_UNFREEZE_CREDIT_ERROR' as const
}

export const enumActivateCreditCardErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   CREDIT_CARD_NOT_ENABLED_FOR_USER: 'CREDIT_CARD_NOT_ENABLED_FOR_USER' as const,
   NO_CREDIT_CARD_ACCOUNT_FOR_USER: 'NO_CREDIT_CARD_ACCOUNT_FOR_USER' as const,
   NO_CREDIT_CARD_ISSUED_FOR_ACCOUNT: 'NO_CREDIT_CARD_ISSUED_FOR_ACCOUNT' as const,
   LAST_FOUR_MISMATCH: 'LAST_FOUR_MISMATCH' as const,
   CARD_ALREADY_ACTIVATED: 'CARD_ALREADY_ACTIVATED' as const,
   GENERAL_ACTIVATE_CREDIT_CARD_BY_LAST_FOUR_ERROR: 'GENERAL_ACTIVATE_CREDIT_CARD_BY_LAST_FOUR_ERROR' as const
}

export const enumSetLockOnCreditCardErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   CREDIT_CARD_NOT_ENABLED_FOR_USER: 'CREDIT_CARD_NOT_ENABLED_FOR_USER' as const,
   GENERAL_LOCK_CREDIT_CARD_ERROR: 'GENERAL_LOCK_CREDIT_CARD_ERROR' as const
}

export const enumSetCreditCardWaitlistStatusEnum = {
   ENROLL: 'ENROLL' as const,
   UNENROLL: 'UNENROLL' as const
}

export const enumSetCreditCardWaitlistStatusErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   GENERAL_SET_CREDIT_CARD_WAITLIST_STATUS_ERROR: 'GENERAL_SET_CREDIT_CARD_WAITLIST_STATUS_ERROR' as const
}

export const enumUpdateCreditCardRewardPayoutDestinationErrorEnum = {
   CREDIT_CARD_NOT_ENABLED_FOR_USER: 'CREDIT_CARD_NOT_ENABLED_FOR_USER' as const,
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   GENERAL_UPDATE_CREDIT_CARD_REWARD_PAYOUT_DESTINATION_ERROR: 'GENERAL_UPDATE_CREDIT_CARD_REWARD_PAYOUT_DESTINATION_ERROR' as const
}

export const enumRequestMobilePushProvisioningCertificatesErrorEnum = {
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   INVALID_INPUT: 'INVALID_INPUT' as const,
   GENERAL_PUSH_PROVISIONING_ERROR: 'GENERAL_PUSH_PROVISIONING_ERROR' as const
}

export const enumLinkFundingSourcesErrorEnum = {
   BLOCKED_LINK_TOKEN: 'BLOCKED_LINK_TOKEN' as const
}

export const enumCompletePlaidIncomeVerificationErrorEnum = {
   NO_USER_TOKEN: 'NO_USER_TOKEN' as const
}

export const enumCreateAchRelationshipViaFundingSourceErrorEnum = {
   INVALID_ACCOUNT_ID: 'INVALID_ACCOUNT_ID' as const,
   INVALID_FUNDING_SOURCE_ID: 'INVALID_FUNDING_SOURCE_ID' as const,
   ACCOUNT_NOT_FOUND: 'ACCOUNT_NOT_FOUND' as const,
   NO_ADDITIONAL_ACH_RELATIONSHIPS: 'NO_ADDITIONAL_ACH_RELATIONSHIPS' as const,
   UNALLOWED_BANK: 'UNALLOWED_BANK' as const
}

export const enumConfirmManualPlaidMicroDepositsErrorEnum = {
   CONFIRMATION_FAILED: 'CONFIRMATION_FAILED' as const
}

export const enumLinkAndCreateAchRelationshipInputErrorEnum = {
   ACCOUNT_DISALLOWS_EXTERNAL_FUNDING: 'ACCOUNT_DISALLOWS_EXTERNAL_FUNDING' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   LINK_FORBIDDEN: 'LINK_FORBIDDEN' as const,
   NO_ADDITIONAL_ACH_RELATIONSHIPS: 'NO_ADDITIONAL_ACH_RELATIONSHIPS' as const,
   TRANSIENT_LINK_FAILURE: 'TRANSIENT_LINK_FAILURE' as const,
   UNALLOWED_BANK: 'UNALLOWED_BANK' as const,
   UNKNOWN_LINK_FAILURE: 'UNKNOWN_LINK_FAILURE' as const
}

export const enumReissueDepositsForAchRelationshipInputErrorEnum = {
   ACH_RELATIONSHIP_NOT_FOUND: 'ACH_RELATIONSHIP_NOT_FOUND' as const,
   ACH_RELATIONSHIP_NOT_PENDING: 'ACH_RELATIONSHIP_NOT_PENDING' as const,
   ACH_RELATIONSHIP_NOT_READY: 'ACH_RELATIONSHIP_NOT_READY' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INELIGIBLE_ACH_RELATIONSHIP: 'INELIGIBLE_ACH_RELATIONSHIP' as const,
   INVALID_ACH_RELATIONSHIP_ID: 'INVALID_ACH_RELATIONSHIP_ID' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   INVESTMENT_ACCOUNT_NOT_OPEN: 'INVESTMENT_ACCOUNT_NOT_OPEN' as const,
   MAX_DEPOSIT_REISSUES_EXCEEDED: 'MAX_DEPOSIT_REISSUES_EXCEEDED' as const,
   UNEXPIRED_EXISTING_DEPOSITS: 'UNEXPIRED_EXISTING_DEPOSITS' as const
}

export const enumOpenHighYieldSavingsAccountErrorEnum = {
   BLOCKED_BY_PENDING_TRANSFER: 'BLOCKED_BY_PENDING_TRANSFER' as const,
   USER_NOT_ELIGIBLE: 'USER_NOT_ELIGIBLE' as const,
   UNVERIFIED_EMAIL: 'UNVERIFIED_EMAIL' as const,
   USER_REJECTED: 'USER_REJECTED' as const,
   TOO_MANY_INVITES: 'TOO_MANY_INVITES' as const
}

export const enumSetDirectDepositDestinationErrorEnum = {
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumCreateFundingSourceRelationshipErrorEnum = {
   INVALID_TRANSFER_PARTICIPANT: 'INVALID_TRANSFER_PARTICIPANT' as const,
   INVALID_FUNDING_SOURCE: 'INVALID_FUNDING_SOURCE' as const,
   ACCOUNT_SWITCH_LIMIT_EXCEEDED: 'ACCOUNT_SWITCH_LIMIT_EXCEEDED' as const,
   BLOCKED_BY_PENDING_TRANSFER: 'BLOCKED_BY_PENDING_TRANSFER' as const,
   BLOCKED_ROUTING_NUMBER: 'BLOCKED_ROUTING_NUMBER' as const,
   UNABLE_TO_CHANGE_LINKED_BANK: 'UNABLE_TO_CHANGE_LINKED_BANK' as const
}

export const enumCreateTransferInstanceErrorEnum = {
   PARTICIPANTS_INVALID: 'PARTICIPANTS_INVALID' as const,
   PARTICIPANTS_FROZEN: 'PARTICIPANTS_FROZEN' as const,
   PARTICIPANTS_DAILY_LIMIT_EXCEEDED: 'PARTICIPANTS_DAILY_LIMIT_EXCEEDED' as const,
   AMOUNT_EXCEEDS_IRA_CONTRIBUTION_LIMIT: 'AMOUNT_EXCEEDS_IRA_CONTRIBUTION_LIMIT' as const,
   AMOUNT_LESS_THAN_TRANSFER_MINIMUM: 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' as const,
   AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM: 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' as const,
   AMOUNT_GREATER_THAN_AVAILABLE_BALANCE: 'AMOUNT_GREATER_THAN_AVAILABLE_BALANCE' as const,
   AMOUNT_LESS_THAN_INVEST_INITIAL_DEPOSIT: 'AMOUNT_LESS_THAN_INVEST_INITIAL_DEPOSIT' as const,
   AMOUNT_REQUIRES_MARGIN_PAY_BACK: 'AMOUNT_REQUIRES_MARGIN_PAY_BACK' as const,
   AMOUNT_REQUIRES_INVEST_LIQUIDATION: 'AMOUNT_REQUIRES_INVEST_LIQUIDATION' as const,
   IRA_CONTRIBUTION_YEAR_REQUIRED: 'IRA_CONTRIBUTION_YEAR_REQUIRED' as const,
   IRA_CONTRIBUTION_DISALLOWED_BY_AGE: 'IRA_CONTRIBUTION_DISALLOWED_BY_AGE' as const,
   IRA_DISTRIBUTION_REASON_REQUIRED: 'IRA_DISTRIBUTION_REASON_REQUIRED' as const,
   IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE: 'IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE' as const,
   INVALID_IRA_DISTRIBUTION_REASON: 'INVALID_IRA_DISTRIBUTION_REASON' as const,
   INSUFFICIENT_MARGIN_BALANCE: 'INSUFFICIENT_MARGIN_BALANCE' as const,
   TOO_MANY_TRANSFERS: 'TOO_MANY_TRANSFERS' as const,
   DUPLICATE_AUTOMATED_TRANSFER: 'DUPLICATE_AUTOMATED_TRANSFER' as const
}

export const enumCreateIraTransferErrorEnum = {
   PARTICIPANTS_INVALID: 'PARTICIPANTS_INVALID' as const,
   PARTICIPANTS_FROZEN: 'PARTICIPANTS_FROZEN' as const,
   PARTICIPANTS_DAILY_LIMIT_EXCEEDED: 'PARTICIPANTS_DAILY_LIMIT_EXCEEDED' as const,
   AMOUNT_EXCEEDS_IRA_CONTRIBUTION_LIMIT: 'AMOUNT_EXCEEDS_IRA_CONTRIBUTION_LIMIT' as const,
   AMOUNT_LESS_THAN_TRANSFER_MINIMUM: 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' as const,
   AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM: 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' as const,
   AMOUNT_GREATER_THAN_AVAILABLE_BALANCE: 'AMOUNT_GREATER_THAN_AVAILABLE_BALANCE' as const,
   AMOUNT_LESS_THAN_INVEST_INITIAL_DEPOSIT: 'AMOUNT_LESS_THAN_INVEST_INITIAL_DEPOSIT' as const,
   AMOUNT_REQUIRES_MARGIN_PAY_BACK: 'AMOUNT_REQUIRES_MARGIN_PAY_BACK' as const,
   AMOUNT_REQUIRES_INVEST_LIQUIDATION: 'AMOUNT_REQUIRES_INVEST_LIQUIDATION' as const,
   IRA_CONTRIBUTION_YEAR_REQUIRED: 'IRA_CONTRIBUTION_YEAR_REQUIRED' as const,
   IRA_CONTRIBUTION_DISALLOWED_BY_AGE: 'IRA_CONTRIBUTION_DISALLOWED_BY_AGE' as const,
   IRA_DISTRIBUTION_REASON_REQUIRED: 'IRA_DISTRIBUTION_REASON_REQUIRED' as const,
   IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE: 'IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE' as const,
   INVALID_IRA_DISTRIBUTION_REASON: 'INVALID_IRA_DISTRIBUTION_REASON' as const,
   INSUFFICIENT_MARGIN_BALANCE: 'INSUFFICIENT_MARGIN_BALANCE' as const,
   TOO_MANY_TRANSFERS: 'TOO_MANY_TRANSFERS' as const,
   DUPLICATE_AUTOMATED_TRANSFER: 'DUPLICATE_AUTOMATED_TRANSFER' as const,
   IRA_WITHHOLDING_PERCENTAGE_CANNOT_EXCEED_100: 'IRA_WITHHOLDING_PERCENTAGE_CANNOT_EXCEED_100' as const,
   IRA_WITHHOLDING_MANDATORY_REQUIREMENTS_UNMET: 'IRA_WITHHOLDING_MANDATORY_REQUIREMENTS_UNMET' as const,
   IRA_WITHHOLDING_MANDATORY_OPT_OUT_REQUIREMENTS_UNMET: 'IRA_WITHHOLDING_MANDATORY_OPT_OUT_REQUIREMENTS_UNMET' as const,
   IRA_WITHHOLDING_VOLUNTARY_REQUIREMENTS_UNMET: 'IRA_WITHHOLDING_VOLUNTARY_REQUIREMENTS_UNMET' as const,
   IRA_WITHHOLDING_MATCH_FEDERAL_REQUIREMENT_UNMET: 'IRA_WITHHOLDING_MATCH_FEDERAL_REQUIREMENT_UNMET' as const,
   IRA_WITHHOLDING_MATCH_STATE_REQUIREMENT_UNMET: 'IRA_WITHHOLDING_MATCH_STATE_REQUIREMENT_UNMET' as const,
   IRA_WITHHOLDING_NOT_ALLOWED_REQUIREMENTS_UNMET: 'IRA_WITHHOLDING_NOT_ALLOWED_REQUIREMENTS_UNMET' as const,
   IRA_WITHHOLDING_VALIDATION_ERROR: 'IRA_WITHHOLDING_VALIDATION_ERROR' as const,
   IRA_WITHHOLDING_REQUIREMENT_NOT_FOUND: 'IRA_WITHHOLDING_REQUIREMENT_NOT_FOUND' as const,
   IRA_ACCOUNT_NOT_FOUND: 'IRA_ACCOUNT_NOT_FOUND' as const,
   NOT_ENOUGH_FUNDS_TO_RECHARACTERIZE: 'NOT_ENOUGH_FUNDS_TO_RECHARACTERIZE' as const
}

export const enumSetScheduledTransferRuleErrorEnum = {
   PARTICIPANTS_INVALID: 'PARTICIPANTS_INVALID' as const,
   AMOUNT_LESS_THAN_TRANSFER_MINIMUM: 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' as const,
   AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM: 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' as const,
   AMOUNT_REQUIRES_INVEST_INITIAL_DEPOSIT: 'AMOUNT_REQUIRES_INVEST_INITIAL_DEPOSIT' as const,
   IRA_CONTRIBUTION_YEAR_REQUIRED: 'IRA_CONTRIBUTION_YEAR_REQUIRED' as const,
   IRA_CONTRIBUTION_DISALLOWED_BY_AGE: 'IRA_CONTRIBUTION_DISALLOWED_BY_AGE' as const,
   IRA_DISTRIBUTION_REASON_REQUIRED: 'IRA_DISTRIBUTION_REASON_REQUIRED' as const,
   IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE: 'IRA_DISTRIBUTION_REASON_MUST_BE_PREMATURE' as const,
   INVALID_IRA_DISTRIBUTION_REASON: 'INVALID_IRA_DISTRIBUTION_REASON' as const,
   CONFLICTS_WITH_EXISTING_RULE: 'CONFLICTS_WITH_EXISTING_RULE' as const,
   TOO_MANY_SCHEDULED_TRANSFER_RULES: 'TOO_MANY_SCHEDULED_TRANSFER_RULES' as const
}

export const enumPieLabelEnum = {
   SHARED_PIE: 'SHARED_PIE' as const
}

export const enumUpdatePieTreeInputErrorEnum = {
   EXCEEDS_MAX_EDIT_OPS: 'EXCEEDS_MAX_EDIT_OPS' as const,
   EXCEEDS_MAX_USER_PIES: 'EXCEEDS_MAX_USER_PIES' as const,
   EXCEEDS_PIE_TREE_MAX_SLICES: 'EXCEEDS_PIE_TREE_MAX_SLICES' as const,
   INVALID_PERCENTAGE: 'INVALID_PERCENTAGE' as const,
   INVALID_PIE_DESCRIPTION: 'INVALID_PIE_DESCRIPTION' as const,
   INVALID_PIE_ID: 'INVALID_PIE_ID' as const,
   INVALID_PIE_NAME: 'INVALID_PIE_NAME' as const,
   INVALID_PIE_TREE: 'INVALID_PIE_TREE' as const,
   INVALID_SLICEABLE_ID: 'INVALID_SLICEABLE_ID' as const,
   INVALID_SLICE_COUNT: 'INVALID_SLICE_COUNT' as const,
   INVALID_TOTAL_PERCENTAGE: 'INVALID_TOTAL_PERCENTAGE' as const,
   NO_DUPLICATE_SLICES: 'NO_DUPLICATE_SLICES' as const,
   NO_SLICE_SELF_REFERENCE: 'NO_SLICE_SELF_REFERENCE' as const,
   PIE_NOT_EDITABLE: 'PIE_NOT_EDITABLE' as const,
   PIE_NOT_FOUND: 'PIE_NOT_FOUND' as const,
   SLICEABLE_NOT_ACTIVE: 'SLICEABLE_NOT_ACTIVE' as const,
   SLICEABLE_NOT_FOUND: 'SLICEABLE_NOT_FOUND' as const
}

export const enumLotTypeEnum = {
   OPEN: 'OPEN' as const,
   CLOSED: 'CLOSED' as const
}

export const enumAccountStatusEnum = {
   CLOSED: 'CLOSED' as const,
   NEW: 'NEW' as const,
   OPENED: 'OPENED' as const,
   REJECTED: 'REJECTED' as const
}

export const enumAccountOriginatorEnum = {
   APEX: 'APEX' as const,
   M1: 'M1' as const
}

export const enumLoanIncomeSourcesEnum = {
   EMPLOYED_FULL_TIME: 'EMPLOYED_FULL_TIME' as const,
   EMPLOYED_PART_TIME: 'EMPLOYED_PART_TIME' as const,
   SELF_EMPLOYED: 'SELF_EMPLOYED' as const,
   RETIRED: 'RETIRED' as const,
   UNEMPLOYED: 'UNEMPLOYED' as const
}

export const enumLoanApplicationStatusEnum = {
   QUEUED: 'QUEUED' as const,
   SUBMITTED: 'SUBMITTED' as const,
   OFFERS_PROVIDED: 'OFFERS_PROVIDED' as const,
   OFFER_SELECTION_QUEUED: 'OFFER_SELECTION_QUEUED' as const,
   OFFER_ACCEPTED: 'OFFER_ACCEPTED' as const,
   APPROVED: 'APPROVED' as const,
   EXPIRED: 'EXPIRED' as const,
   REJECTED: 'REJECTED' as const,
   REJECTED_CREDIT_FROZEN: 'REJECTED_CREDIT_FROZEN' as const,
   ERROR_SUBMITTING_APPLICATION: 'ERROR_SUBMITTING_APPLICATION' as const,
   ERROR_ACCEPTING_OFFER: 'ERROR_ACCEPTING_OFFER' as const,
   INCOME_VERIFICATION_REQUIRED: 'INCOME_VERIFICATION_REQUIRED' as const,
   WITHDRAWN: 'WITHDRAWN' as const,
   MANUAL_REVIEW_REQUIRED: 'MANUAL_REVIEW_REQUIRED' as const
}

export const enumLoanPurposeEnum = {
   DEBT_CONSOLIDATION: 'DEBT_CONSOLIDATION' as const,
   HOME_IMPROVEMENT: 'HOME_IMPROVEMENT' as const,
   MEDICAL_EXPENSES: 'MEDICAL_EXPENSES' as const,
   MOVING_OR_RELOCATING: 'MOVING_OR_RELOCATING' as const,
   VACATION: 'VACATION' as const,
   SPECIAL_OCCASION: 'SPECIAL_OCCASION' as const,
   MAJOR_PURCHASE: 'MAJOR_PURCHASE' as const
}

export const enumPersonalLoanStatusEnum = {
   ACTIVE: 'ACTIVE' as const,
   CLOSED: 'CLOSED' as const,
   FROZEN: 'FROZEN' as const,
   EXPIRED: 'EXPIRED' as const,
   CREATED: 'CREATED' as const,
   CREATION_PENDING: 'CREATION_PENDING' as const,
   LOAN_ACCEPTANCE_QUEUED: 'LOAN_ACCEPTANCE_QUEUED' as const,
   LOAN_ACCEPTED: 'LOAN_ACCEPTED' as const,
   DISBURSEMENT_READY: 'DISBURSEMENT_READY' as const,
   DISBURSEMENT_QUEUED: 'DISBURSEMENT_QUEUED' as const,
   WITHDRAWN: 'WITHDRAWN' as const
}

export const enumPersonalLoanPaymentTypeEnum = {
   LOAN_DISBURSEMENT: 'LOAN_DISBURSEMENT' as const,
   USER_PAYMENT: 'USER_PAYMENT' as const,
   CHECK_PAYMENT: 'CHECK_PAYMENT' as const,
   AUTO_PAYMENT: 'AUTO_PAYMENT' as const
}

export const enumPersonalLoanDirectQuestionEnum = {
   NAME_EMAIL_PASSWORD: 'NAME_EMAIL_PASSWORD' as const,
   LOAN_USE_AMOUNT_AND_DURATION: 'LOAN_USE_AMOUNT_AND_DURATION' as const,
   HOME_ADDRESS: 'HOME_ADDRESS' as const,
   PHONE_NUMBER: 'PHONE_NUMBER' as const,
   PHONE_NUMBER_VERIFICATION: 'PHONE_NUMBER_VERIFICATION' as const,
   DATE_OF_BIRTH_CITIZENSHIP: 'DATE_OF_BIRTH_CITIZENSHIP' as const,
   ANNUAL_INCOME_MONTHLY_RENT_MORTGAGE: 'ANNUAL_INCOME_MONTHLY_RENT_MORTGAGE' as const,
   SOCIAL_SECURITY_NUMBER: 'SOCIAL_SECURITY_NUMBER' as const,
   PRE_APPROVED_OFFERS: 'PRE_APPROVED_OFFERS' as const,
   EMPLOYMENT_STATUS_AND_INFO: 'EMPLOYMENT_STATUS_AND_INFO' as const,
   AVAILABLE_CASH: 'AVAILABLE_CASH' as const,
   FINANCIAL_DISCLOSURES: 'FINANCIAL_DISCLOSURES' as const,
   HARD_PULL_CONSENT: 'HARD_PULL_CONSENT' as const,
   BANK_CONNECTION: 'BANK_CONNECTION' as const,
   BANK_DEPOSIT: 'BANK_DEPOSIT' as const,
   AUTOPAY: 'AUTOPAY' as const,
   ACCEPT_LOAN_OFFER: 'ACCEPT_LOAN_OFFER' as const,
   RECEIPT: 'RECEIPT' as const
}

export const enumPersonalLoanQuestionEnum = {
   LOAN_DISCLOSURES: 'LOAN_DISCLOSURES' as const,
   LOAN_USE: 'LOAN_USE' as const,
   LOAN_AMOUNT_AND_DURATION: 'LOAN_AMOUNT_AND_DURATION' as const,
   ANNUAL_INCOME: 'ANNUAL_INCOME' as const,
   MONTHLY_RENT_MORTGAGE: 'MONTHLY_RENT_MORTGAGE' as const,
   LOAN_REVIEW: 'LOAN_REVIEW' as const,
   PRE_APPROVED_OFFERS: 'PRE_APPROVED_OFFERS' as const,
   EMPLOYMENT_STATUS: 'EMPLOYMENT_STATUS' as const,
   EMPLOYMENT_INFO: 'EMPLOYMENT_INFO' as const,
   FINANCIAL_DISCLOSURES: 'FINANCIAL_DISCLOSURES' as const,
   HARD_PULL_CONSENT: 'HARD_PULL_CONSENT' as const,
   BANK_CONNECTION: 'BANK_CONNECTION' as const,
   BANK_DEPOSIT: 'BANK_DEPOSIT' as const,
   AUTOPAY: 'AUTOPAY' as const,
   ACCEPT_LOAN_OFFER: 'ACCEPT_LOAN_OFFER' as const,
   RECEIPT: 'RECEIPT' as const
}

export const enumCommonTransactionHeaderAlignEnum = {
   LEFT: 'LEFT' as const,
   CENTER: 'CENTER' as const,
   RIGHT: 'RIGHT' as const
}

export const enumCommonTransactionStatusEnum = {
   CREATED: 'CREATED' as const,
   PENDING: 'PENDING' as const,
   CANCELED: 'CANCELED' as const,
   FAILED: 'FAILED' as const,
   COMPLETE: 'COMPLETE' as const
}

export const enumCreditCardApplicationStatusEnum = {
   SUBMITTED: 'SUBMITTED' as const,
   APPROVED: 'APPROVED' as const,
   ACCEPTED_PENDING_FINAL_APPROVAL: 'ACCEPTED_PENDING_FINAL_APPROVAL' as const,
   ACCEPTED: 'ACCEPTED' as const,
   REJECTED: 'REJECTED' as const,
   EXPIRED: 'EXPIRED' as const,
   ERROR_SUBMITTING_APPLICATION: 'ERROR_SUBMITTING_APPLICATION' as const,
   ERROR_ACCEPTING_OFFER: 'ERROR_ACCEPTING_OFFER' as const,
   IN_REVIEW: 'IN_REVIEW' as const,
   UPLOAD_DOCUMENTS_REQUESTED: 'UPLOAD_DOCUMENTS_REQUESTED' as const,
   UNFREEZE_BUREAU_REQUESTED: 'UNFREEZE_BUREAU_REQUESTED' as const
}

export const enumCreditCardAccountStatusEnum = {
   ACTIVE: 'ACTIVE' as const,
   SUSPENDED: 'SUSPENDED' as const,
   CLOSED: 'CLOSED' as const
}

export const enumCreditCardManageCardActionDestinationEnum = {
   ACTIVATE_CARD: 'ACTIVATE_CARD' as const,
   STATEMENTS: 'STATEMENTS' as const,
   TOGGLE_LOCK_CARD: 'TOGGLE_LOCK_CARD' as const,
   CONTACT_SUPPORT: 'CONTACT_SUPPORT' as const,
   ADD_DIGITAL_WALLET: 'ADD_DIGITAL_WALLET' as const
}

export const enumCreditCardOwnersRewardsProgramHighlightLinkEnum = {
   OWNED_STOCKS: 'OWNED_STOCKS' as const,
   UNOWNED_STOCKS: 'UNOWNED_STOCKS' as const
}

export const enumCreditCardWaitlistConfirmationContentPhase = {
   DEEPLINK_ONLY_PHASE: 'DEEPLINK_ONLY_PHASE' as const,
   ON_SPEND_TAB_PHASE: 'ON_SPEND_TAB_PHASE' as const
}

export const enumConfirmationCtaDestinationEnum = {
   CREDIT_CARD_APPLICATION: 'CREDIT_CARD_APPLICATION' as const,
   PLUS_ENROLLMENT: 'PLUS_ENROLLMENT' as const,
   OPEN_INVEST_ACCOUNT: 'OPEN_INVEST_ACCOUNT' as const
}

export const enumCryptoSortTypeEnum = {
   NAME: 'NAME' as const,
   PRICE: 'PRICE' as const,
   MARKET_CAP: 'MARKET_CAP' as const,
   VOLUME: 'VOLUME' as const,
   SUPPLY: 'SUPPLY' as const,
   PRICE_CHANGE_1Y: 'PRICE_CHANGE_1Y' as const,
   PRICE_CHANGE_2Y: 'PRICE_CHANGE_2Y' as const,
   PRICE_CHANGE_5Y: 'PRICE_CHANGE_5Y' as const
}

export const enumCryptoAssetRestrictionEnum = {
   NY_REGION: 'NY_REGION' as const,
   PLUS: 'PLUS' as const
}

export const enumCryptoPerformanceSummaryTimePeriodEnum = {
   ONE_YEAR: 'ONE_YEAR' as const,
   TWO_YEARS: 'TWO_YEARS' as const,
   FIVE_YEARS: 'FIVE_YEARS' as const
}

export const enumFundLimitTypeEnum = {
   FUND_DIVIDEND_YIELD: 'FUND_DIVIDEND_YIELD' as const,
   FUND_NET_EXPENSE_RATIO: 'FUND_NET_EXPENSE_RATIO' as const,
   FUND_PERFORMANCE_1Y: 'FUND_PERFORMANCE_1Y' as const,
   FUND_PERFORMANCE_3Y: 'FUND_PERFORMANCE_3Y' as const,
   FUND_PERFORMANCE_5Y: 'FUND_PERFORMANCE_5Y' as const,
   FUND_PERFORMANCE_10Y: 'FUND_PERFORMANCE_10Y' as const,
   FUND_PERFORMANCE_SI: 'FUND_PERFORMANCE_SI' as const,
   FUND_TOTAL_ASSETS: 'FUND_TOTAL_ASSETS' as const
}

export const enumFundSortTypeEnum = {
   FUND_CATEGORY: 'FUND_CATEGORY' as const,
   FUND_DIVIDEND_YIELD: 'FUND_DIVIDEND_YIELD' as const,
   FUND_NET_EXPENSE_RATIO: 'FUND_NET_EXPENSE_RATIO' as const,
   FUND_PERFORMANCE_1Y: 'FUND_PERFORMANCE_1Y' as const,
   FUND_PERFORMANCE_3Y: 'FUND_PERFORMANCE_3Y' as const,
   FUND_PERFORMANCE_5Y: 'FUND_PERFORMANCE_5Y' as const,
   FUND_PERFORMANCE_10Y: 'FUND_PERFORMANCE_10Y' as const,
   FUND_PERFORMANCE_SI: 'FUND_PERFORMANCE_SI' as const,
   FUND_TOTAL_ASSETS: 'FUND_TOTAL_ASSETS' as const,
   NAME: 'NAME' as const,
   PRICE_CHANGE_1M: 'PRICE_CHANGE_1M' as const,
   PRICE_CHANGE_1W: 'PRICE_CHANGE_1W' as const,
   PRICE_CHANGE_1Y: 'PRICE_CHANGE_1Y' as const,
   PRICE_CHANGE_2Y: 'PRICE_CHANGE_2Y' as const,
   PRICE_CHANGE_3M: 'PRICE_CHANGE_3M' as const,
   PRICE_CHANGE_3Y: 'PRICE_CHANGE_3Y' as const,
   PRICE_CHANGE_5Y: 'PRICE_CHANGE_5Y' as const,
   PRICE_CHANGE_6M: 'PRICE_CHANGE_6M' as const,
   PRICE_CHANGE_ANNUALIZED_1Y: 'PRICE_CHANGE_ANNUALIZED_1Y' as const,
   PRICE_CHANGE_ANNUALIZED_2Y: 'PRICE_CHANGE_ANNUALIZED_2Y' as const,
   PRICE_CHANGE_ANNUALIZED_3Y: 'PRICE_CHANGE_ANNUALIZED_3Y' as const,
   PRICE_CHANGE_ANNUALIZED_5Y: 'PRICE_CHANGE_ANNUALIZED_5Y' as const,
   PRICE_CHANGE_YTD: 'PRICE_CHANGE_YTD' as const,
   SYMBOL: 'SYMBOL' as const
}

export const enumFundingSourceVerificationTypeEnum = {
   PLAID_SAME_DAY_MICRODEPOSIT: 'PLAID_SAME_DAY_MICRODEPOSIT' as const,
   PLAID_AUTOMATIC_MICRODEPOSIT: 'PLAID_AUTOMATIC_MICRODEPOSIT' as const,
   PLAID_INSTANT: 'PLAID_INSTANT' as const,
   ADMIN: 'ADMIN' as const,
   APEX_MICRODEPOSIT: 'APEX_MICRODEPOSIT' as const,
   LSB_MICRODEPOSIT: 'LSB_MICRODEPOSIT' as const
}

export const enumFundingSourceStatusEnum = {
   PENDING: 'PENDING' as const,
   ACTIVE: 'ACTIVE' as const,
   LOCKED: 'LOCKED' as const,
   ARCHIVED: 'ARCHIVED' as const,
   EXPIRING: 'EXPIRING' as const,
   REAUTHENTICATION_REQUIRED: 'REAUTHENTICATION_REQUIRED' as const
}

export const enumDividendTrackerDataPeriod = {
   LAST_YEAR: 'LAST_YEAR' as const,
   LAST_12_MONTHS: 'LAST_12_MONTHS' as const,
   THIS_YEAR: 'THIS_YEAR' as const,
   NEXT_12_MONTHS: 'NEXT_12_MONTHS' as const
}

export const enumDividendGroupedByEnum = {
   YEAR: 'YEAR' as const,
   MONTH: 'MONTH' as const
}

export const enumDividendFrequencyEnum = {
   BIMONTHLY: 'BIMONTHLY' as const,
   MONTHLY: 'MONTHLY' as const,
   QUARTERLY: 'QUARTERLY' as const,
   SEMI_ANNUAL: 'SEMI_ANNUAL' as const,
   ANNUAL: 'ANNUAL' as const,
   TRIMESTERLY: 'TRIMESTERLY' as const,
   WEEKLY: 'WEEKLY' as const,
   IRREGULAR: 'IRREGULAR' as const,
   NEVER_ISSUED: 'NEVER_ISSUED' as const,
   OTHER: 'OTHER' as const
}

export const enumPeRatioLevelEnum = {
   HIGH: 'HIGH' as const,
   MEDIUM_HIGH: 'MEDIUM_HIGH' as const,
   MEDIUM: 'MEDIUM' as const,
   MEDIUM_LOW: 'MEDIUM_LOW' as const,
   LOW: 'LOW' as const
}

export const enumNetExpenseRatioLevelEnum = {
   HIGH: 'HIGH' as const,
   LOW: 'LOW' as const,
   MEDIUM: 'MEDIUM' as const,
   MEDIUM_HIGH: 'MEDIUM_HIGH' as const,
   MEDIUM_LOW: 'MEDIUM_LOW' as const
}

export const enumHistoricalQuotePeriodEnum = {
   FIVE_YEARS: 'FIVE_YEARS' as const,
   ONE_MONTH: 'ONE_MONTH' as const,
   ONE_WEEK: 'ONE_WEEK' as const,
   ONE_YEAR: 'ONE_YEAR' as const,
   SIX_MONTHS: 'SIX_MONTHS' as const,
   THREE_MONTHS: 'THREE_MONTHS' as const,
   THREE_YEARS: 'THREE_YEARS' as const,
   TWO_YEARS: 'TWO_YEARS' as const,
   YEAR_TO_DATE: 'YEAR_TO_DATE' as const,
   ALL: 'ALL' as const
}

export const enumIntradayQuotePeriodEnum = {
   LATEST_DAY: 'LATEST_DAY' as const,
   LATEST_WEEK: 'LATEST_WEEK' as const,
   ONE_WEEK: 'ONE_WEEK' as const,
   TODAY: 'TODAY' as const
}

export const enumIntradayQuoteIntervalEnum = {
   FIVE_MINUTE: 'FIVE_MINUTE' as const,
   ONE_HOUR: 'ONE_HOUR' as const,
   ONE_MINUTE: 'ONE_MINUTE' as const,
   TEN_MINUTE: 'TEN_MINUTE' as const,
   THIRTY_MINUTE: 'THIRTY_MINUTE' as const,
   TWO_MINUTE: 'TWO_MINUTE' as const
}

export const enumPortfolioSliceOrderLockReasonEnum = {
   UNLOCKED: 'UNLOCKED' as const,
   LOCKED_BY_REBALANCE: 'LOCKED_BY_REBALANCE' as const,
   LOCKED_BY_TRADING: 'LOCKED_BY_TRADING' as const,
   LOCKED_BY_LIQUIDATION: 'LOCKED_BY_LIQUIDATION' as const
}

export const enumPortfolioSliceRebalanceLockReasonEnum = {
   UNLOCKED: 'UNLOCKED' as const,
   LOCKED_BY_ALLOCATION: 'LOCKED_BY_ALLOCATION' as const,
   LOCKED_BY_ORDER: 'LOCKED_BY_ORDER' as const,
   LOCKED_BY_TRADING: 'LOCKED_BY_TRADING' as const,
   LOCKED_BY_LIQUIDATION: 'LOCKED_BY_LIQUIDATION' as const
}

export const enumPositionSortTypeEnum = {
   SYMBOL: 'SYMBOL' as const,
   VALUE: 'VALUE' as const,
   COST: 'COST' as const,
   UNREALIZED_GAIN_PERCENT: 'UNREALIZED_GAIN_PERCENT' as const,
   MAINTENANCE_EQUITY_REQUIREMENT_PERCENT: 'MAINTENANCE_EQUITY_REQUIREMENT_PERCENT' as const,
   QUANTITY: 'QUANTITY' as const,
   AVERAGE_SHARE_PRICE: 'AVERAGE_SHARE_PRICE' as const
}

export const enumUserActionOnPositionEnum = {
   MOVE: 'MOVE' as const,
   LIQUIDATE: 'LIQUIDATE' as const,
   CONTACT: 'CONTACT' as const
}

export const enumNetCashFlowFilterEnum = {
   ALL: 'ALL' as const,
   CORPORATE_ACTION: 'CORPORATE_ACTION' as const,
   CRYPTO_TRADE: 'CRYPTO_TRADE' as const,
   DIVIDEND: 'DIVIDEND' as const,
   SLICE_MOVEMENT: 'SLICE_MOVEMENT' as const,
   TRADE: 'TRADE' as const,
   TRANSFER: 'TRANSFER' as const
}

export const enumPieEditModelModeEnum = {
   CLONE_ALL: 'CLONE_ALL' as const,
   CLONE_OWN: 'CLONE_OWN' as const,
   NO_CLONE: 'NO_CLONE' as const,
   NO_CLONE_FULL_DEPTH: 'NO_CLONE_FULL_DEPTH' as const
}

export const enumPieHistoricalPeriodEnum = {
   FIVE_YEARS: 'FIVE_YEARS' as const,
   ONE_MONTH: 'ONE_MONTH' as const,
   ONE_YEAR: 'ONE_YEAR' as const,
   THREE_YEARS: 'THREE_YEARS' as const,
   YEAR_TO_DATE: 'YEAR_TO_DATE' as const
}

export const enumPortfolioSlicePerformancePeriodEnum = {
   MAX: 'MAX' as const,
   ONE_DAY: 'ONE_DAY' as const,
   ONE_WEEK: 'ONE_WEEK' as const,
   ONE_MONTH: 'ONE_MONTH' as const,
   ONE_QUARTER: 'ONE_QUARTER' as const,
   ONE_YEAR: 'ONE_YEAR' as const,
   YTD: 'YTD' as const
}

export const enumSliceableStatusEnum = {
   ACTIVE: 'ACTIVE' as const,
   INACTIVE: 'INACTIVE' as const,
   DELISTED: 'DELISTED' as const
}

export const enumSliceableTypeEnum = {
   CRYPTO: 'CRYPTO' as const,
   CRYPTO_SYSTEM_PIE: 'CRYPTO_SYSTEM_PIE' as const,
   EQUITY_SECURITY: 'EQUITY_SECURITY' as const,
   FUND_SECURITY: 'FUND_SECURITY' as const,
   SYSTEM_PIE: 'SYSTEM_PIE' as const,
   USER_PIE: 'USER_PIE' as const,
   SHARED_PIE: 'SHARED_PIE' as const
}

export const enumPieCategoryEnumType = {
   FIXED_INCOME: 'FIXED_INCOME' as const,
   HEDGE_FUND_REPLICATION: 'HEDGE_FUND_REPLICATION' as const,
   INDEX: 'INDEX' as const,
   INDUSTRIES: 'INDUSTRIES' as const,
   SIMPLE: 'SIMPLE' as const,
   TARGET_DATE: 'TARGET_DATE' as const,
   TOTAL_PORTFOLIOS: 'TOTAL_PORTFOLIOS' as const,
   UNCATEGORIZED: 'UNCATEGORIZED' as const
}

export const enumSystemPieStatusEnum = {
   ACTIVE: 'ACTIVE' as const,
   INACTIVE: 'INACTIVE' as const
}

export const enumSystemPieLimitTypeEnum = {
   PERFORMANCE_1M: 'PERFORMANCE_1M' as const,
   PERFORMANCE_1Y: 'PERFORMANCE_1Y' as const,
   PERFORMANCE_3Y: 'PERFORMANCE_3Y' as const,
   PERFORMANCE_5Y: 'PERFORMANCE_5Y' as const,
   PERFORMANCE_YTD: 'PERFORMANCE_YTD' as const,
   RISK_GRADE: 'RISK_GRADE' as const,
   VOLATILITY: 'VOLATILITY' as const
}

export const enumSystemPieSortTypeEnum = {
   CATEGORY: 'CATEGORY' as const,
   NAME: 'NAME' as const,
   PERFORMANCE_1M: 'PERFORMANCE_1M' as const,
   PERFORMANCE_1Y: 'PERFORMANCE_1Y' as const,
   PERFORMANCE_3Y: 'PERFORMANCE_3Y' as const,
   PERFORMANCE_5Y: 'PERFORMANCE_5Y' as const,
   PERFORMANCE_YTD: 'PERFORMANCE_YTD' as const,
   RISK_GRADE: 'RISK_GRADE' as const,
   VOLATILITY: 'VOLATILITY' as const
}

export const enumTimeLengthUnitEnum = {
   DAYS: 'DAYS' as const,
   MONTHS: 'MONTHS' as const,
   WEEKS: 'WEEKS' as const,
   YEARS: 'YEARS' as const
}

export const enumValueHistoryPeriodEnum = {
   MAX: 'MAX' as const,
   ONE_DAY: 'ONE_DAY' as const,
   ONE_MONTH: 'ONE_MONTH' as const,
   ONE_QUARTER: 'ONE_QUARTER' as const,
   ONE_WEEK: 'ONE_WEEK' as const,
   ONE_YEAR: 'ONE_YEAR' as const,
   YTD: 'YTD' as const
}

export const enumPieRiskLevelEnum = {
   HIGH: 'HIGH' as const,
   LOW: 'LOW' as const,
   MEDIUM: 'MEDIUM' as const,
   MEDIUM_HIGH: 'MEDIUM_HIGH' as const,
   MEDIUM_LOW: 'MEDIUM_LOW' as const
}

export const enumPlusBillingCycleSubscriptionType = {
   ANNUAL: 'ANNUAL' as const,
   MONTHLY: 'MONTHLY' as const
}

export const enumPlusPaymentMethodType = {
   SPEND: 'SPEND' as const,
   CARD: 'CARD' as const,
   INVEST: 'INVEST' as const,
   SAVE: 'SAVE' as const
}

export const enumPlusUpsellExperienceTypeEnum = {
   STANDARD: 'STANDARD' as const,
   PLUS: 'PLUS' as const
}

export const enumSavingsTransactionModeEnum = {
   ONLY_PENDING: 'ONLY_PENDING' as const,
   ONLY_FINAL: 'ONLY_FINAL' as const,
   ALL: 'ALL' as const
}

export const enumSaveAccountTypeEnum = {
   SAVE: 'SAVE' as const,
   CASH: 'CASH' as const
}

export const enumSavingsAccountStatusEnum = {
   PENDING: 'PENDING' as const,
   ACTIVE: 'ACTIVE' as const
}

export const enumSavingsCustomerDueDiligenceQuestionType = {
   SINGLE_SELECT: 'SINGLE_SELECT' as const
}

export const enumTimeIntervalEnum = {
   DAY: 'DAY' as const,
   MONTH: 'MONTH' as const,
   QUARTER: 'QUARTER' as const,
   WEEK: 'WEEK' as const,
   YEAR: 'YEAR' as const
}

export const enumSecurityStatusEnum = {
   ACTIVE: 'ACTIVE' as const,
   DELISTED: 'DELISTED' as const,
   INACTIVE: 'INACTIVE' as const
}

export const enumSecurityTypeEnum = {
   EQUITY: 'EQUITY' as const,
   FUND: 'FUND' as const
}

export const enumSecuritySortTypeEnum = {
   CATEGORY: 'CATEGORY' as const,
   DIVIDEND_YIELD: 'DIVIDEND_YIELD' as const,
   MARKET_CAP: 'MARKET_CAP' as const,
   NAME: 'NAME' as const,
   PE_RATIO: 'PE_RATIO' as const,
   PRICE_CHANGE_1M: 'PRICE_CHANGE_1M' as const,
   PRICE_CHANGE_1W: 'PRICE_CHANGE_1W' as const,
   PRICE_CHANGE_1Y: 'PRICE_CHANGE_1Y' as const,
   PRICE_CHANGE_2Y: 'PRICE_CHANGE_2Y' as const,
   PRICE_CHANGE_3M: 'PRICE_CHANGE_3M' as const,
   PRICE_CHANGE_3Y: 'PRICE_CHANGE_3Y' as const,
   PRICE_CHANGE_5Y: 'PRICE_CHANGE_5Y' as const,
   PRICE_CHANGE_6M: 'PRICE_CHANGE_6M' as const,
   PRICE_CHANGE_ANNUALIZED_1Y: 'PRICE_CHANGE_ANNUALIZED_1Y' as const,
   PRICE_CHANGE_ANNUALIZED_2Y: 'PRICE_CHANGE_ANNUALIZED_2Y' as const,
   PRICE_CHANGE_ANNUALIZED_3Y: 'PRICE_CHANGE_ANNUALIZED_3Y' as const,
   PRICE_CHANGE_ANNUALIZED_5Y: 'PRICE_CHANGE_ANNUALIZED_5Y' as const,
   PRICE_CHANGE_YTD: 'PRICE_CHANGE_YTD' as const,
   SYMBOL: 'SYMBOL' as const
}

export const enumSecurityLimitTypeEnum = {
   DIVIDEND_YIELD: 'DIVIDEND_YIELD' as const,
   MARKET_CAP: 'MARKET_CAP' as const,
   PE_RATIO: 'PE_RATIO' as const
}

export const enumSliceableMatchTypeEnum = {
   NAME: 'NAME' as const,
   SYMBOL: 'SYMBOL' as const
}

export const enumSortDirectionEnum = {
   ASC: 'ASC' as const,
   DESC: 'DESC' as const
}

export const enumTransferScenarioTypeEnum = {
   INVEST_INITIAL_DEPOSIT: 'INVEST_INITIAL_DEPOSIT' as const,
   SAVINGS_INITIAL_DEPOSIT: 'SAVINGS_INITIAL_DEPOSIT' as const,
   SCHEDULED_TRANSFER_FOR_REBALANCE: 'SCHEDULED_TRANSFER_FOR_REBALANCE' as const,
   MOVE_MONEY_TRANSFER: 'MOVE_MONEY_TRANSFER' as const,
   PAYMENT: 'PAYMENT' as const,
   IRA_CONVERSION: 'IRA_CONVERSION' as const,
   IRA_RECHARACTERIZATION: 'IRA_RECHARACTERIZATION' as const
}

export const enumMoveMoneyType = {
   SAVE: 'SAVE' as const,
   SPEND: 'SPEND' as const,
   TRANSFERS: 'TRANSFERS' as const,
   DIRECT_DEPOSIT: 'DIRECT_DEPOSIT' as const
}

export const enumScheduledTransferIndicatorEnum = {
   MINIMUM_PAYMENT: 'MINIMUM_PAYMENT' as const,
   STATEMENT_BALANCE: 'STATEMENT_BALANCE' as const,
   MONTHLY_PAYMENT: 'MONTHLY_PAYMENT' as const,
   FIXED_AMOUNT: 'FIXED_AMOUNT' as const
}

export const enumSmartTransferTriggerTimingMessageTypeEnum = {
   INFO: 'INFO' as const,
   ALERT: 'ALERT' as const
}

export const enumSmartTransferFulfillmentConditionTypeEnum = {
   INDEFINITE: 'INDEFINITE' as const,
   CASH_BALANCE_CAP: 'CASH_BALANCE_CAP' as const,
   FUNDING_PER_PERIOD: 'FUNDING_PER_PERIOD' as const,
   IRA_YEARLY_FUNDING: 'IRA_YEARLY_FUNDING' as const,
   IRA_WEEKLY_FUNDING_PER_PERIOD: 'IRA_WEEKLY_FUNDING_PER_PERIOD' as const,
   IRA_MONTHLY_FUNDING_PER_PERIOD: 'IRA_MONTHLY_FUNDING_PER_PERIOD' as const,
   IRA_QUARTERLY_FUNDING_PER_PERIOD: 'IRA_QUARTERLY_FUNDING_PER_PERIOD' as const,
   CREDIT_BORROWED_CAP: 'CREDIT_BORROWED_CAP' as const,
   CREDIT_UTILIZATION_CAP: 'CREDIT_UTILIZATION_CAP' as const
}

export const enumTransferTypeEnum = {
   TRANSFER_INSTANCE: 'TRANSFER_INSTANCE' as const,
   SCHEDULED_TRANSFER_RULE: 'SCHEDULED_TRANSFER_RULE' as const
}

export const enumTransferParticipantSideEnum = {
   FROM: 'FROM' as const,
   TO: 'TO' as const
}

export const enumTransferParticipantTypeEnum = {
   INVEST: 'INVEST' as const,
   SPEND: 'SPEND' as const,
   BORROW: 'BORROW' as const,
   LOAN: 'LOAN' as const,
   EXTERNAL: 'EXTERNAL' as const,
   PHYSICAL_CHECK: 'PHYSICAL_CHECK' as const,
   CREDIT_CARD: 'CREDIT_CARD' as const,
   REWARDS: 'REWARDS' as const,
   CRYPTO: 'CRYPTO' as const,
   CRYPTO_EXTERNAL: 'CRYPTO_EXTERNAL' as const,
   SAVE: 'SAVE' as const,
   FUNDING_SOURCE: 'FUNDING_SOURCE' as const
}

export const enumAcatTransferInstanceTypeEnum = {
   INCOMPLETE: 'INCOMPLETE' as const,
   COMPLETED: 'COMPLETED' as const,
   ALL: 'ALL' as const
}

export const enumAcatTransferInstanceStatusCodeEnum = {
   INITIATE_REQUEST: 'INITIATE_REQUEST' as const,
   REQUEST: 'REQUEST' as const,
   MATURING: 'MATURING' as const,
   NEW: 'NEW' as const,
   SUBMITTED: 'SUBMITTED' as const,
   REQUEST_ADJUST: 'REQUEST_ADJUST' as const,
   REQUEST_PAST: 'REQUEST_PAST' as const,
   REQUEST_REJECT: 'REQUEST_REJECT' as const,
   INTERNAL_REVIEW: 'INTERNAL_REVIEW' as const,
   INTERNAL_REJECT_ADJUST: 'INTERNAL_REJECT_ADJUST' as const,
   INTERNAL_REJECT: 'INTERNAL_REJECT' as const,
   INTERNAL_ACCEPT: 'INTERNAL_ACCEPT' as const,
   INTERNAL_AWAITING_NSCC_SUBMISSION: 'INTERNAL_AWAITING_NSCC_SUBMISSION' as const,
   REVIEW: 'REVIEW' as const,
   REVIEW_ADJUST_DELIVERER: 'REVIEW_ADJUST_DELIVERER' as const,
   REVIEW_ERROR: 'REVIEW_ERROR' as const,
   REVIEW_ACCELERATE: 'REVIEW_ACCELERATE' as const,
   REVIEW_AS_JUST_RECEIVER_ACCELERATE: 'REVIEW_AS_JUST_RECEIVER_ACCELERATE' as const,
   SETTLE_PREP: 'SETTLE_PREP' as const,
   SETTLE_CLOSE: 'SETTLE_CLOSE' as const,
   MEMO_PURGE_PARTIAL_TRANSFER_REQUEST_RECEIVER: 'MEMO_PURGE_PARTIAL_TRANSFER_REQUEST_RECEIVER' as const,
   REJECT: 'REJECT' as const,
   SYSTEM_PURGE: 'SYSTEM_PURGE' as const,
   ERROR: 'ERROR' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   UNKNOWN: 'UNKNOWN' as const,
   CLOSE_PURGE: 'CLOSE_PURGE' as const,
   TRANSFER_COMPLETE: 'TRANSFER_COMPLETE' as const
}

export const enumTransferInstanceStatusCodeEnum = {
   INITIATED: 'INITIATED' as const,
   STARTED: 'STARTED' as const,
   COMPLETED: 'COMPLETED' as const,
   PENDING_CANCELLATION: 'PENDING_CANCELLATION' as const,
   CANCELED: 'CANCELED' as const,
   CANCELED_PARTIALLY_COMPLETED: 'CANCELED_PARTIALLY_COMPLETED' as const,
   FAILED: 'FAILED' as const,
   FAILED_PARTIALLY_COMPLETED: 'FAILED_PARTIALLY_COMPLETED' as const
}

export const enumIraContributionYearEnum = {
   CURRENT_YEAR: 'CURRENT_YEAR' as const,
   PRIOR_YEAR: 'PRIOR_YEAR' as const
}

export const enumIraDistributionReasonEnum = {
   PREMATURE: 'PREMATURE' as const,
   NORMAL: 'NORMAL' as const,
   DISABILITY: 'DISABILITY' as const,
   DEATH: 'DEATH' as const,
   ROLLOVER_TO_QUALIFIED_PLAN: 'ROLLOVER_TO_QUALIFIED_PLAN' as const,
   NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS: 'NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS' as const,
   EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE: 'EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE' as const,
   EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE: 'EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE' as const,
   CONVERSION: 'CONVERSION' as const,
   RECHARACTERIZATION: 'RECHARACTERIZATION' as const
}

export const enumTransferInstanceStepArrowEnum = {
   COMPLETED: 'COMPLETED' as const,
   PENDING: 'PENDING' as const,
   FAILED: 'FAILED' as const
}

export const enumTransferInstanceStepStatusCodeEnum = {
   INITIATED: 'INITIATED' as const,
   STARTED: 'STARTED' as const,
   SUBMITTED: 'SUBMITTED' as const,
   CANCELED: 'CANCELED' as const,
   COMPLETED: 'COMPLETED' as const,
   FAILED: 'FAILED' as const,
   RETURNED: 'RETURNED' as const
}

export const enumSmartTransferBalanceTriggerTypeEnum = {
   OVER_BALANCE: 'OVER_BALANCE' as const,
   UNDER_BALANCE: 'UNDER_BALANCE' as const
}

export const enumSmartTransferFundingTimePeriodEnum = {
   WEEK: 'WEEK' as const,
   MONTH: 'MONTH' as const,
   QUARTER: 'QUARTER' as const,
   YEAR: 'YEAR' as const
}

export const enumIraStateWithholdingTypeEnum = {
   PERCENTAGE: 'PERCENTAGE' as const,
   PERCENTAGE_OF_FEDERAL: 'PERCENTAGE_OF_FEDERAL' as const,
   FIXED: 'FIXED' as const
}

export const enumTransferValidationMessageTypeEnum = {
   LIQUIDATION: 'LIQUIDATION' as const,
   PENDING_SELLS: 'PENDING_SELLS' as const,
   IRA_CONTRIBUTION_YEAR: 'IRA_CONTRIBUTION_YEAR' as const,
   SCHEDULE_FREQUENCY: 'SCHEDULE_FREQUENCY' as const,
   SCHEDULE_START: 'SCHEDULE_START' as const,
   AMOUNT_GREATER_THAN_CASH_AVAILABLE: 'AMOUNT_GREATER_THAN_CASH_AVAILABLE' as const
}

export const enumRegisterUserErrorEnum = {
   INVALID_USERNAME: 'INVALID_USERNAME' as const,
   INVALID_PASSWORD: 'INVALID_PASSWORD' as const,
   USERNAME_ALREADY_EXISTS: 'USERNAME_ALREADY_EXISTS' as const
}

export const enumRegisterUserInputErrorEnum = {
   INVALID_USERNAME: 'INVALID_USERNAME' as const,
   INVALID_PASSWORD: 'INVALID_PASSWORD' as const,
   USERNAME_ALREADY_EXISTS: 'USERNAME_ALREADY_EXISTS' as const
}

export const enumQueueLoanDisbursementErrorEnum = {
   GENERIC_QUEUE_LOAN_DISBURSEMENT_ERROR: 'GENERIC_QUEUE_LOAN_DISBURSEMENT_ERROR' as const
}

export const enumOnlineAccountRegistrationEnum = {
   INDIVIDUAL: 'INDIVIDUAL' as const,
   CRYPTO: 'CRYPTO' as const,
   JOINT: 'JOINT' as const,
   TRADITIONAL_IRA: 'TRADITIONAL_IRA' as const,
   ROTH_IRA: 'ROTH_IRA' as const,
   SEP_IRA: 'SEP_IRA' as const,
   CUSTODIAL: 'CUSTODIAL' as const
}

export const enumIntroductionSourceEnum = {
   APP_STORE: 'APP_STORE' as const,
   DIRECT_SNAIL_MAIL: 'DIRECT_SNAIL_MAIL' as const,
   FRIEND_OR_FAMILY: 'FRIEND_OR_FAMILY' as const,
   MUSIC_VIDEO: 'MUSIC_VIDEO' as const,
   NEWSLETTER: 'NEWSLETTER' as const,
   SEARCH_ENGINE: 'SEARCH_ENGINE' as const,
   SOCIAL_MEDIA: 'SOCIAL_MEDIA' as const,
   TV_STREAMING: 'TV_STREAMING' as const,
   WEBSITE: 'WEBSITE' as const,
   OTHER: 'OTHER' as const,
   DECLINED_TO_ANSWER: 'DECLINED_TO_ANSWER' as const
}

export const enumIntroductionSourceEnumV2 = {
   APP_STORE: 'APP_STORE' as const,
   DIRECT_SNAIL_MAIL: 'DIRECT_SNAIL_MAIL' as const,
   FRIEND_OR_FAMILY: 'FRIEND_OR_FAMILY' as const,
   NEWSLETTER: 'NEWSLETTER' as const,
   PODCAST_RADIO: 'PODCAST_RADIO' as const,
   SEARCH_ENGINE: 'SEARCH_ENGINE' as const,
   SOCIAL_MEDIA: 'SOCIAL_MEDIA' as const,
   TV_STREAMING: 'TV_STREAMING' as const,
   WEBSITE: 'WEBSITE' as const,
   OTHER: 'OTHER' as const,
   DECLINED_TO_ANSWER: 'DECLINED_TO_ANSWER' as const
}

export const enumOpenAccountErrorEnum = {
   DUPLICATE_SEP_IRA_ACCOUNT: 'DUPLICATE_SEP_IRA_ACCOUNT' as const,
   DUPLICATE_ROTH_IRA_ACCOUNT: 'DUPLICATE_ROTH_IRA_ACCOUNT' as const,
   DUPLICATE_TRADITIONAL_IRA_ACCOUNT: 'DUPLICATE_TRADITIONAL_IRA_ACCOUNT' as const,
   DUPLICATE_IRA_ACCOUNT: 'DUPLICATE_IRA_ACCOUNT' as const,
   DUPLICATE_INDIVIDUAL_ACCOUNT: 'DUPLICATE_INDIVIDUAL_ACCOUNT' as const,
   DUPLICATE_JOINT_ACCOUNT: 'DUPLICATE_JOINT_ACCOUNT' as const,
   SSNS_MUST_NOT_MATCH: 'SSNS_MUST_NOT_MATCH' as const,
   PRIMARY_HOLDER_NAME_TOO_LONG: 'PRIMARY_HOLDER_NAME_TOO_LONG' as const,
   SECONDARY_HOLDER_NAME_TOO_LONG: 'SECONDARY_HOLDER_NAME_TOO_LONG' as const,
   INVALID_PRIMARY_HOLDER_DOB: 'INVALID_PRIMARY_HOLDER_DOB' as const,
   INVALID_SECONDARY_HOLDER_DOB: 'INVALID_SECONDARY_HOLDER_DOB' as const,
   NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW: 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW' as const,
   NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED: 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED' as const,
   EXCEEDS_NEW_ACCOUNT_RATE_LIMIT: 'EXCEEDS_NEW_ACCOUNT_RATE_LIMIT' as const,
   EXCEEDS_MAX_ACCOUNTS: 'EXCEEDS_MAX_ACCOUNTS' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   INVALID_HOME_ADDRESS: 'INVALID_HOME_ADDRESS' as const,
   PHONE_MUST_MATCH_VERIFICATION: 'PHONE_MUST_MATCH_VERIFICATION' as const,
   MISSING_TRUSTED_CONTACT_INFO: 'MISSING_TRUSTED_CONTACT_INFO' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INVALID_COUNTRY_CODE: 'INVALID_COUNTRY_CODE' as const,
   FAILED_TO_UPDATE_FPL_STATUS: 'FAILED_TO_UPDATE_FPL_STATUS' as const
}

export const enumOpenAccountInputErrorEnum = {
   PRIMARY_SSN_REQUIRED: 'PRIMARY_SSN_REQUIRED' as const,
   SECONDARY_SSN_REQUIRED: 'SECONDARY_SSN_REQUIRED' as const,
   BENEFICIARY_SSNS_REQUIRED: 'BENEFICIARY_SSNS_REQUIRED' as const,
   SSNS_MUST_NOT_MATCH: 'SSNS_MUST_NOT_MATCH' as const,
   DUPLICATE_IRA_ACCOUNT: 'DUPLICATE_IRA_ACCOUNT' as const,
   DUPLICATE_INDIVIDUAL_ACCOUNT: 'DUPLICATE_INDIVIDUAL_ACCOUNT' as const,
   DUPLICATE_JOINT_ACCOUNT: 'DUPLICATE_JOINT_ACCOUNT' as const,
   PRIMARY_HOLDER_REQUIRED: 'PRIMARY_HOLDER_REQUIRED' as const,
   SECONDARY_HOLDER_REQUIRED: 'SECONDARY_HOLDER_REQUIRED' as const,
   SUITABILITY_PROFILE_REQUIRED: 'SUITABILITY_PROFILE_REQUIRED' as const,
   PRIMARY_HOLDER_NAME_TOO_LONG: 'PRIMARY_HOLDER_NAME_TOO_LONG' as const,
   SECONDARY_HOLDER_NAME_TOO_LONG: 'SECONDARY_HOLDER_NAME_TOO_LONG' as const,
   INVALID_COUNTRY_CODE: 'INVALID_COUNTRY_CODE' as const,
   INVALID_PRIMARY_HOLDER_DOB: 'INVALID_PRIMARY_HOLDER_DOB' as const,
   INVALID_SECONDARY_HOLDER_DOB: 'INVALID_SECONDARY_HOLDER_DOB' as const,
   INVALID_PRIMARY_SSN: 'INVALID_PRIMARY_SSN' as const,
   INVALID_SECONDARY_SSN: 'INVALID_SECONDARY_SSN' as const,
   INVALID_BENEFICIARY_SSNS: 'INVALID_BENEFICIARY_SSNS' as const,
   NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW: 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW' as const,
   NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED: 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED' as const,
   EXCEEDS_NEW_ACCOUNT_RATE_LIMIT: 'EXCEEDS_NEW_ACCOUNT_RATE_LIMIT' as const,
   EXCEEDS_MAX_ACCOUNTS: 'EXCEEDS_MAX_ACCOUNTS' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   INVALID_HOME_ADDRESS: 'INVALID_HOME_ADDRESS' as const,
   INVALID_PIE_ID: 'INVALID_PIE_ID' as const,
   PIE_NOT_FOUND: 'PIE_NOT_FOUND' as const,
   INELIGIBLE_FOR_ROOT_PIE: 'INELIGIBLE_FOR_ROOT_PIE' as const,
   ESIGNATURE_REQUIRED: 'ESIGNATURE_REQUIRED' as const,
   INVALID_SIGNATURE: 'INVALID_SIGNATURE' as const,
   PHONE_VERIFICATION_REQUIRED: 'PHONE_VERIFICATION_REQUIRED' as const,
   PHONE_MUST_MATCH_VERIFICATION: 'PHONE_MUST_MATCH_VERIFICATION' as const,
   PHONE_ALREADY_USED: 'PHONE_ALREADY_USED' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const
}

export const enumOpenCustodialAccountErrorEnum = {
   USER_DOES_NOT_HAVE_INDIVIDUAL_ACCOUNT: 'USER_DOES_NOT_HAVE_INDIVIDUAL_ACCOUNT' as const,
   CUSTODIAL_BENEFICIARY_ALREADY_ASSOCIATED_TO_CUSTODIAL_ACCOUNT: 'CUSTODIAL_BENEFICIARY_ALREADY_ASSOCIATED_TO_CUSTODIAL_ACCOUNT' as const,
   COULD_NOT_FETCH_PRIMARY_PROFILE: 'COULD_NOT_FETCH_PRIMARY_PROFILE' as const,
   CUSTODIAL_BENEFICIARY_NAME_TOO_LONG: 'CUSTODIAL_BENEFICIARY_NAME_TOO_LONG' as const,
   INVALID_CUSTODIAL_BENEFICIARY_DOB: 'INVALID_CUSTODIAL_BENEFICIARY_DOB' as const,
   NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW: 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_NEW' as const,
   NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED: 'NO_ADDITIONAL_ACCOUNTS_WHILE_SOME_REJECTED' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   INVALID_LEGAL_RESIDENCE: 'INVALID_LEGAL_RESIDENCE' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const
}

export const enumUpdateProfileErrorEnum = {
   NO_UPDATE_UNTIL_ACCEPTED: 'NO_UPDATE_UNTIL_ACCEPTED' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   INVALID_HOME_ADDRESS: 'INVALID_HOME_ADDRESS' as const,
   BENEFICIARY_SSNS_MUST_BE_UNIQUE: 'BENEFICIARY_SSNS_MUST_BE_UNIQUE' as const,
   INVALID_PRIMARY_BENEFICIARY_SHARE: 'INVALID_PRIMARY_BENEFICIARY_SHARE' as const,
   INVALID_CONTINGENT_BENEFICIARY_SHARE: 'INVALID_CONTINGENT_BENEFICIARY_SHARE' as const,
   TEMPORARY_NEW_ACCOUNT_FREEZE: 'TEMPORARY_NEW_ACCOUNT_FREEZE' as const,
   MISSING_TRUSTED_CONTACT_INFO: 'MISSING_TRUSTED_CONTACT_INFO' as const
}

export const enumUpdateProfileInputErrorEnum = {
   NO_PROFILE: 'NO_PROFILE' as const,
   MUST_PROVIDE_SECONDARY_ACCOUNT_HOLDER: 'MUST_PROVIDE_SECONDARY_ACCOUNT_HOLDER' as const,
   NO_UPDATE_UNTIL_ACCEPTED: 'NO_UPDATE_UNTIL_ACCEPTED' as const,
   PRIMARY_HOLDER_NAME_TOO_LONG: 'PRIMARY_HOLDER_NAME_TOO_LONG' as const,
   SECONDARY_HOLDER_NAME_TOO_LONG: 'SECONDARY_HOLDER_NAME_TOO_LONG' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   INVALID_HOME_ADDRESS: 'INVALID_HOME_ADDRESS' as const,
   BENEFICIARIES_NOT_ALLOWED: 'BENEFICIARIES_NOT_ALLOWED' as const,
   BENEFICIARY_SSNS_MUST_BE_UNIQUE: 'BENEFICIARY_SSNS_MUST_BE_UNIQUE' as const,
   INVALID_PRIMARY_BENEFICIARY_SHARE: 'INVALID_PRIMARY_BENEFICIARY_SHARE' as const,
   INVALID_CONTINGENT_BENEFICIARY_SHARE: 'INVALID_CONTINGENT_BENEFICIARY_SHARE' as const,
   TEMPORARY_NEW_ACCOUNT_FREEZE: 'TEMPORARY_NEW_ACCOUNT_FREEZE' as const,
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const
}

export const enumCompleteDocumentUploadErrorEnum = {
   ERROR_VERIFYING_DOCUMENT_UPLOAD_STATUS: 'ERROR_VERIFYING_DOCUMENT_UPLOAD_STATUS' as const
}

export const enumLinkExternalAccountsErrorEnum = {
   LINK_FORBIDDEN: 'LINK_FORBIDDEN' as const
}

export const enumLinkExternalAccountsInputErrorEnum = {
   LINK_FORBIDDEN: 'LINK_FORBIDDEN' as const
}

export const enumRefreshEstimatedTradingErrorEnum = {
   ESTIMATED_TRADING_NOT_AVAILABLE: 'ESTIMATED_TRADING_NOT_AVAILABLE' as const
}

export const enumSetSmartTransferRuleErrorEnum = {
   NOT_ELIGIBLE: 'NOT_ELIGIBLE' as const,
   PARTICIPANTS_INVALID: 'PARTICIPANTS_INVALID' as const,
   CONFLICTS_WITH_EXISTING_RULE: 'CONFLICTS_WITH_EXISTING_RULE' as const,
   BALANCE_TRIGGER_THRESHOLD_INVALID: 'BALANCE_TRIGGER_THRESHOLD_INVALID' as const
}

export const enumSetEnabledOnTransferRuleErrorEnum = {
   ENABLE_STATE_CHANGE_DISALLOWED: 'ENABLE_STATE_CHANGE_DISALLOWED' as const
}

export const enumCreateAccountDocumentLinkErrorEnum = {
   DOCUMENT_NOT_AVAILBLE: 'DOCUMENT_NOT_AVAILBLE' as const
}

export const enumDocumentAssociatedService = {
   CREDIT_CARD: 'CREDIT_CARD' as const,
   INVEST: 'INVEST' as const,
   SPEND: 'SPEND' as const,
   PERSONAL_LOAN: 'PERSONAL_LOAN' as const,
   LENDING: 'LENDING' as const,
   CRYPTO: 'CRYPTO' as const,
   SAVE: 'SAVE' as const,
   CASH: 'CASH' as const,
   TRANSFER: 'TRANSFER' as const,
   PROMOTION: 'PROMOTION' as const,
   IDENTITY: 'IDENTITY' as const,
   OTHER: 'OTHER' as const
}

export const enumDocumentBusinessPurpose = {
   ACCOUNT_VERIFICATION: 'ACCOUNT_VERIFICATION' as const,
   APPEALING_SOCURE_BLOCKLIST: 'APPEALING_SOCURE_BLOCKLIST' as const,
   BENEFICIARY: 'BENEFICIARY' as const,
   BROKERAGE_MANUAL_REVIEW: 'BROKERAGE_MANUAL_REVIEW' as const,
   CLIENT_LETTER: 'CLIENT_LETTER' as const,
   CREDIT_CARD_MANUAL_REVIEW: 'CREDIT_CARD_MANUAL_REVIEW' as const,
   DECEASED_ACCOUNT_CLOSURE: 'DECEASED_ACCOUNT_CLOSURE' as const,
   INFORMATION_CHANGE: 'INFORMATION_CHANGE' as const,
   LETTER_OF_INDEMNIFICATION: 'LETTER_OF_INDEMNIFICATION' as const,
   MANUAL_BANK_CHANGE: 'MANUAL_BANK_CHANGE' as const,
   PAPER_ACCOUNT: 'PAPER_ACCOUNT' as const,
   SPEND_MANUAL_REVIEW: 'SPEND_MANUAL_REVIEW' as const,
   TRANSFER_REVIEW: 'TRANSFER_REVIEW' as const,
   WIRE_TRANSFER_FORM: 'WIRE_TRANSFER_FORM' as const,
   TRANSFER_REQUEST_FORM: 'TRANSFER_REQUEST_FORM' as const,
   CEASE_DESIST: 'CEASE_DESIST' as const,
   LOAN_AGREEMENT: 'LOAN_AGREEMENT' as const,
   RISK_BASED_PRICING_DISCLOSURE: 'RISK_BASED_PRICING_DISCLOSURE' as const,
   ONBOARDING_IDENTITY_VERIFICATION: 'ONBOARDING_IDENTITY_VERIFICATION' as const,
   CLEARING_DOCUMENTS: 'CLEARING_DOCUMENTS' as const,
   SAVE_DOCUMENTS: 'SAVE_DOCUMENTS' as const,
   CASH_DOCUMENTS: 'CASH_DOCUMENTS' as const,
   SPEND_DOCUMENTS: 'SPEND_DOCUMENTS' as const,
   PROMOTION_DOCUMENTS: 'PROMOTION_DOCUMENTS' as const,
   CREDIT_SCORE_DISCLOSURE: 'CREDIT_SCORE_DISCLOSURE' as const,
   PROSPECTUS_DELIVERY: 'PROSPECTUS_DELIVERY' as const,
   OTHER: 'OTHER' as const,
   UNKNOWN: 'UNKNOWN' as const,
   CRYPTO_TAX_DOCUMENTS: 'CRYPTO_TAX_DOCUMENTS' as const,
   INVEST_TAX_DOCUMENTS: 'INVEST_TAX_DOCUMENTS' as const,
   CITIZENSHIP_VERIFICATION: 'CITIZENSHIP_VERIFICATION' as const,
   MANUAL_REVIEW_RE_REQUEST: 'MANUAL_REVIEW_RE_REQUEST' as const,
   PERSONAL_LOAN_MANUAL_REVIEW: 'PERSONAL_LOAN_MANUAL_REVIEW' as const,
   DIVORCE_DISTRIBUTION: 'DIVORCE_DISTRIBUTION' as const,
   TRANSFER_REQUEST: 'TRANSFER_REQUEST' as const
}

export const enumDocumentUploadRequestStatus = {
   Uninitialized: 'Uninitialized' as const,
   Requested: 'Requested' as const,
   Complete: 'Complete' as const,
   Closed: 'Closed' as const
}

export const enumGeneratePresignedUrlError = {
   ERROR_GENERATING_PRESIGNED_URL: 'ERROR_GENERATING_PRESIGNED_URL' as const
}

export const enumSetNotificationPreferencesErrorEnum = {
   PREFERENCES_NOT_AVAILABLE: 'PREFERENCES_NOT_AVAILABLE' as const
}

export const enumApplyPromotionCodeInputErrorEnum = {
   UNKNOWN_PROMO_CODE: 'UNKNOWN_PROMO_CODE' as const,
   PROMO_ALREADY_APPLIED: 'PROMO_ALREADY_APPLIED' as const,
   PROMO_INELIGIBLE: 'PROMO_INELIGIBLE' as const
}

export const enumUnmarkUnmanagedHoldingsForLiquidationErrorEnum = {
   GENERAL_ERROR: 'GENERAL_ERROR' as const
}

export const enumAutoPayApplicationSetUpErrorEnum = {
   GENERAL_SETUP_AUTOPAY_ERROR: 'GENERAL_SETUP_AUTOPAY_ERROR' as const
}

export const enumSelectPaymentsAccountErrorEnum = {
   INELIGIBLE_FOR_PAYMENTS_ACCOUNT: 'INELIGIBLE_FOR_PAYMENTS_ACCOUNT' as const
}

export const enumSelectPaymentsAccountInputErrorEnum = {
   INVALID_ACCOUNT_ID: 'INVALID_ACCOUNT_ID' as const,
   INELIGIBLE_FOR_PAYMENTS_ACCOUNT: 'INELIGIBLE_FOR_PAYMENTS_ACCOUNT' as const
}

export const enumAccountCategoryEnum = {
   INVEST: 'INVEST' as const,
   SPEND: 'SPEND' as const,
   BORROW: 'BORROW' as const,
   PHYSICAL_CHECK: 'PHYSICAL_CHECK' as const,
   LOAN: 'LOAN' as const,
   SAVE: 'SAVE' as const
}

export const enumPreferredTradeWindowEnum = {
   DEFAULT: 'DEFAULT' as const,
   MORNING: 'MORNING' as const,
   AFTERNOON: 'AFTERNOON' as const
}

export const enumPartialTransferCreditStatusEnum = {
   PARTIALLY_APPLIED: 'PARTIALLY_APPLIED' as const
}

export const enumAccountConfigDividendSettingType = {
   KEEP_AS_CASH: 'KEEP_AS_CASH' as const,
   REINVEST_ALL_DIVIDENDS: 'REINVEST_ALL_DIVIDENDS' as const,
   TRANSFER_TO_ACCOUNT: 'TRANSFER_TO_ACCOUNT' as const,
   CUSTOM_BY_SYMBOL: 'CUSTOM_BY_SYMBOL' as const
}

export const enumMoveSlicesAdjustedSliceTypeEnum = {
   SECURITY: 'SECURITY' as const,
   CRYPTO: 'CRYPTO' as const,
   USER_PIE: 'USER_PIE' as const,
   SYSTEM_PIE: 'SYSTEM_PIE' as const
}

export const enumDocumentUploadRequestAssociatedService = {
   CreditCard: 'CreditCard' as const,
   Invest: 'Invest' as const,
   Spend: 'Spend' as const,
   Save: 'Save' as const,
   Other: 'Other' as const
}

export const enumDocumentUploadKindEnum = {
   DRIVERS_LICENSE: 'DRIVERS_LICENSE' as const,
   STATE_ID_CARD: 'STATE_ID_CARD' as const,
   PASSPORT: 'PASSPORT' as const,
   INTERNAL_STATEMENT: 'INTERNAL_STATEMENT' as const,
   IRS_FORM_1099_INT: 'IRS_FORM_1099_INT' as const
}

export const enumUnmanagedHoldingsCollectionTypeEnum = {
   UPDATE: 'UPDATE' as const,
   MOVE: 'MOVE' as const,
   LIQUIDATE: 'LIQUIDATE' as const,
   CONTACT_OPS: 'CONTACT_OPS' as const,
   DO_NOTHING: 'DO_NOTHING' as const
}

export const enumAccountRegistrationEnum = {
   INDIVIDUAL: 'INDIVIDUAL' as const,
   CRYPTO: 'CRYPTO' as const,
   JOINT: 'JOINT' as const,
   CUSTODIAL: 'CUSTODIAL' as const,
   PARTNERSHIP: 'PARTNERSHIP' as const,
   LLC: 'LLC' as const,
   CORPORATION: 'CORPORATION' as const,
   TRUST: 'TRUST' as const,
   TRADITIONAL_IRA: 'TRADITIONAL_IRA' as const,
   ROTH_IRA: 'ROTH_IRA' as const,
   SEP_IRA: 'SEP_IRA' as const,
   OTHER: 'OTHER' as const
}

export const enumAchRelationshipStatusEnum = {
   PENDING: 'PENDING' as const,
   CANCELED: 'CANCELED' as const,
   APPROVED: 'APPROVED' as const,
   REJECTED: 'REJECTED' as const
}

export const enumAchRelationshipRejectionReasonEnum = {
   UNKNOWN_ROUTING_NUMBER: 'UNKNOWN_ROUTING_NUMBER' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumAchTransferDirectionEnum = {
   INCOMING: 'INCOMING' as const,
   OUTGOING: 'OUTGOING' as const
}

export const enumAchTransferStatusEnum = {
   PENDING: 'PENDING' as const,
   FUNDS_POSTED: 'FUNDS_POSTED' as const,
   CANCELED: 'CANCELED' as const,
   REJECTED: 'REJECTED' as const,
   RETURNED: 'RETURNED' as const
}

export const enumAchTransferRejectionReasonEnum = {
   UNKNOWN: 'UNKNOWN' as const
}

export const enumCashBreakdownListItemType = {
   BUYING_POWER: 'BUYING_POWER' as const,
   CRYPTO_BUYING_POWER: 'CRYPTO_BUYING_POWER' as const,
   CASH_AVAILABLE: 'CASH_AVAILABLE' as const,
   CRYPTO_CASH_AVAILABLE: 'CRYPTO_CASH_AVAILABLE' as const,
   PENDING_TRANSFERS: 'PENDING_TRANSFERS' as const,
   TOTAL_BUYS: 'TOTAL_BUYS' as const,
   TOTAL_SELLS: 'TOTAL_SELLS' as const,
   NEXT_TRADE_WINDOW: 'NEXT_TRADE_WINDOW' as const,
   SLICE_NAME: 'SLICE_NAME' as const
}

export const enumBorrowDisclosureTextEnum = {
   MARGIN: 'MARGIN' as const,
   PERSONAL: 'PERSONAL' as const
}

export const enumBorrowAccountCreditStatusCodeEnum = {
   MAINTENANCE_CALL: 'MAINTENANCE_CALL' as const,
   DANGER: 'DANGER' as const,
   WARNING: 'WARNING' as const,
   CAUTION: 'CAUTION' as const,
   GOOD: 'GOOD' as const,
   GREAT: 'GREAT' as const
}

export const enumDocumentTypeEnum = {
   INVESTMENTS_RELATED: 'INVESTMENTS_RELATED' as const,
   STATEMENT: 'STATEMENT' as const,
   TAX_FORM: 'TAX_FORM' as const,
   TRADE_CONFIRMATION: 'TRADE_CONFIRMATION' as const,
   ACCOUNT_DOCUMENT: 'ACCOUNT_DOCUMENT' as const
}

export const enumEstimatedTradeAmountSortTypeEnum = {
   SYMBOL: 'SYMBOL' as const,
   AMOUNT: 'AMOUNT' as const
}

export const enumExternalAccountStatusEnum = {
   ACTIVE: 'ACTIVE' as const,
   INACTIVE: 'INACTIVE' as const
}

export const enumExternalAccountTypeEnum = {
   CHECKING: 'CHECKING' as const,
   SAVINGS: 'SAVINGS' as const
}

export const enumInvestDisclosuresType = {
   CRYPTO: 'CRYPTO' as const,
   SECURITIES: 'SECURITIES' as const
}

export const enumInvestAccountOpeningQuestionType = {
   INVESTMENT_EXPERIENCE: 'INVESTMENT_EXPERIENCE' as const,
   RISK_TOLERANCE: 'RISK_TOLERANCE' as const,
   INVESTMENT_DURATION: 'INVESTMENT_DURATION' as const,
   LIQUIDITY_IMPORTANCE: 'LIQUIDITY_IMPORTANCE' as const,
   TRUSTED_CONTACT: 'TRUSTED_CONTACT' as const,
   HOW_DID_YOU_HEAR_ABOUT_M1: 'HOW_DID_YOU_HEAR_ABOUT_M1' as const
}

export const enumInvestActivityEntrySortTypeEnum = {
   DATE: 'DATE' as const
}

export const enumPieBacktestPeriodEnum = {
   ONE_DAY: 'ONE_DAY' as const,
   ONE_WEEK: 'ONE_WEEK' as const,
   ONE_MONTH: 'ONE_MONTH' as const,
   ONE_QUARTER: 'ONE_QUARTER' as const,
   YEAR_TO_DATE: 'YEAR_TO_DATE' as const,
   ONE_YEAR: 'ONE_YEAR' as const,
   THREE_YEARS: 'THREE_YEARS' as const,
   FIVE_YEARS: 'FIVE_YEARS' as const
}

export const enumInvestAcatWizardTransferTypeSelectionNavigationEnum = {
   FULL_ACAT_TRANSFER: 'FULL_ACAT_TRANSFER' as const,
   PARTIAL_ACAT_TRANSFER: 'PARTIAL_ACAT_TRANSFER' as const,
   ROLLOVER: 'ROLLOVER' as const
}

export const enumProfileUpdateStatusEnum = {
   UNACCEPTED: 'UNACCEPTED' as const,
   ACCEPTED: 'ACCEPTED' as const,
   PENDING: 'PENDING' as const,
   REJECTED: 'REJECTED' as const
}

export const enumIdentityProfileStatus = {
   Created: 'Created' as const,
   Queued: 'Queued' as const,
   Submitted: 'Submitted' as const,
   Approved: 'Approved' as const,
   Rejected: 'Rejected' as const,
   InReview: 'InReview' as const,
   UserActionRequired: 'UserActionRequired' as const,
   Unverified: 'Unverified' as const
}

export const enumNameSuffixEnum = {
   JR: 'JR' as const,
   SR: 'SR' as const,
   I: 'I' as const,
   II: 'II' as const,
   III: 'III' as const,
   IV: 'IV' as const,
   V: 'V' as const,
   VI: 'VI' as const,
   VII: 'VII' as const,
   VIII: 'VIII' as const,
   IX: 'IX' as const
}

export const enumCitizenshipCountryEnum = {
   USA: 'USA' as const,
   AFG: 'AFG' as const,
   ALA: 'ALA' as const,
   ALB: 'ALB' as const,
   DZA: 'DZA' as const,
   ASM: 'ASM' as const,
   AND: 'AND' as const,
   AGO: 'AGO' as const,
   AIA: 'AIA' as const,
   ATA: 'ATA' as const,
   ATG: 'ATG' as const,
   ARG: 'ARG' as const,
   ARM: 'ARM' as const,
   ABW: 'ABW' as const,
   AUS: 'AUS' as const,
   AUT: 'AUT' as const,
   AZE: 'AZE' as const,
   BHS: 'BHS' as const,
   BHR: 'BHR' as const,
   BGD: 'BGD' as const,
   BRB: 'BRB' as const,
   BLR: 'BLR' as const,
   BEL: 'BEL' as const,
   BLZ: 'BLZ' as const,
   BEN: 'BEN' as const,
   BMU: 'BMU' as const,
   BTN: 'BTN' as const,
   BOL: 'BOL' as const,
   BES: 'BES' as const,
   BIH: 'BIH' as const,
   BWA: 'BWA' as const,
   BVT: 'BVT' as const,
   BRA: 'BRA' as const,
   IOT: 'IOT' as const,
   BRN: 'BRN' as const,
   BGR: 'BGR' as const,
   BFA: 'BFA' as const,
   BDI: 'BDI' as const,
   CPV: 'CPV' as const,
   KHM: 'KHM' as const,
   CMR: 'CMR' as const,
   CAN: 'CAN' as const,
   CYM: 'CYM' as const,
   CAF: 'CAF' as const,
   TCD: 'TCD' as const,
   CHL: 'CHL' as const,
   CHN: 'CHN' as const,
   CXR: 'CXR' as const,
   CCK: 'CCK' as const,
   COL: 'COL' as const,
   COM: 'COM' as const,
   COD: 'COD' as const,
   COG: 'COG' as const,
   COK: 'COK' as const,
   CRI: 'CRI' as const,
   CIV: 'CIV' as const,
   HRV: 'HRV' as const,
   CUB: 'CUB' as const,
   CUW: 'CUW' as const,
   CYP: 'CYP' as const,
   CZE: 'CZE' as const,
   DNK: 'DNK' as const,
   DJI: 'DJI' as const,
   DMA: 'DMA' as const,
   DOM: 'DOM' as const,
   ECU: 'ECU' as const,
   EGY: 'EGY' as const,
   SLV: 'SLV' as const,
   GNQ: 'GNQ' as const,
   ERI: 'ERI' as const,
   EST: 'EST' as const,
   ETH: 'ETH' as const,
   FLK: 'FLK' as const,
   FRO: 'FRO' as const,
   FJI: 'FJI' as const,
   FIN: 'FIN' as const,
   FRA: 'FRA' as const,
   GUF: 'GUF' as const,
   PYF: 'PYF' as const,
   ATF: 'ATF' as const,
   GAB: 'GAB' as const,
   GMB: 'GMB' as const,
   GEO: 'GEO' as const,
   DEU: 'DEU' as const,
   GHA: 'GHA' as const,
   GIB: 'GIB' as const,
   GRC: 'GRC' as const,
   GRL: 'GRL' as const,
   GRD: 'GRD' as const,
   GLP: 'GLP' as const,
   GUM: 'GUM' as const,
   GTM: 'GTM' as const,
   GGY: 'GGY' as const,
   GIN: 'GIN' as const,
   GNB: 'GNB' as const,
   GUY: 'GUY' as const,
   HTI: 'HTI' as const,
   HMD: 'HMD' as const,
   VAT: 'VAT' as const,
   HND: 'HND' as const,
   HKG: 'HKG' as const,
   HUN: 'HUN' as const,
   ISL: 'ISL' as const,
   IND: 'IND' as const,
   IDN: 'IDN' as const,
   IRN: 'IRN' as const,
   IRQ: 'IRQ' as const,
   IRL: 'IRL' as const,
   IMN: 'IMN' as const,
   ISR: 'ISR' as const,
   ITA: 'ITA' as const,
   JAM: 'JAM' as const,
   JPN: 'JPN' as const,
   JEY: 'JEY' as const,
   JOR: 'JOR' as const,
   KAZ: 'KAZ' as const,
   KEN: 'KEN' as const,
   KIR: 'KIR' as const,
   PRK: 'PRK' as const,
   KOR: 'KOR' as const,
   KWT: 'KWT' as const,
   KGZ: 'KGZ' as const,
   LAO: 'LAO' as const,
   LVA: 'LVA' as const,
   LBN: 'LBN' as const,
   LSO: 'LSO' as const,
   LBR: 'LBR' as const,
   LBY: 'LBY' as const,
   LIE: 'LIE' as const,
   LTU: 'LTU' as const,
   LUX: 'LUX' as const,
   MAC: 'MAC' as const,
   MKD: 'MKD' as const,
   MDG: 'MDG' as const,
   MWI: 'MWI' as const,
   MYS: 'MYS' as const,
   MDV: 'MDV' as const,
   MLI: 'MLI' as const,
   MLT: 'MLT' as const,
   MHL: 'MHL' as const,
   MTQ: 'MTQ' as const,
   MRT: 'MRT' as const,
   MUS: 'MUS' as const,
   MYT: 'MYT' as const,
   MEX: 'MEX' as const,
   FSM: 'FSM' as const,
   MDA: 'MDA' as const,
   MCO: 'MCO' as const,
   MNG: 'MNG' as const,
   MNE: 'MNE' as const,
   MSR: 'MSR' as const,
   MAR: 'MAR' as const,
   MOZ: 'MOZ' as const,
   MMR: 'MMR' as const,
   NAM: 'NAM' as const,
   NRU: 'NRU' as const,
   NPL: 'NPL' as const,
   NLD: 'NLD' as const,
   NCL: 'NCL' as const,
   NZL: 'NZL' as const,
   NIC: 'NIC' as const,
   NER: 'NER' as const,
   NGA: 'NGA' as const,
   NIU: 'NIU' as const,
   NFK: 'NFK' as const,
   MNP: 'MNP' as const,
   NOR: 'NOR' as const,
   OMN: 'OMN' as const,
   PAK: 'PAK' as const,
   PLW: 'PLW' as const,
   PSE: 'PSE' as const,
   PAN: 'PAN' as const,
   PNG: 'PNG' as const,
   PRY: 'PRY' as const,
   PER: 'PER' as const,
   PHL: 'PHL' as const,
   PCN: 'PCN' as const,
   POL: 'POL' as const,
   PRT: 'PRT' as const,
   PRI: 'PRI' as const,
   QAT: 'QAT' as const,
   REU: 'REU' as const,
   ROU: 'ROU' as const,
   RUS: 'RUS' as const,
   RWA: 'RWA' as const,
   BLM: 'BLM' as const,
   SHN: 'SHN' as const,
   KNA: 'KNA' as const,
   LCA: 'LCA' as const,
   MAF: 'MAF' as const,
   SPM: 'SPM' as const,
   VCT: 'VCT' as const,
   WSM: 'WSM' as const,
   SMR: 'SMR' as const,
   STP: 'STP' as const,
   SAU: 'SAU' as const,
   SEN: 'SEN' as const,
   SRB: 'SRB' as const,
   SYC: 'SYC' as const,
   SLE: 'SLE' as const,
   SGP: 'SGP' as const,
   SXM: 'SXM' as const,
   SVK: 'SVK' as const,
   SVN: 'SVN' as const,
   SLB: 'SLB' as const,
   SOM: 'SOM' as const,
   ZAF: 'ZAF' as const,
   SGS: 'SGS' as const,
   SSD: 'SSD' as const,
   ESP: 'ESP' as const,
   LKA: 'LKA' as const,
   SDN: 'SDN' as const,
   SUR: 'SUR' as const,
   SJM: 'SJM' as const,
   SWZ: 'SWZ' as const,
   SWE: 'SWE' as const,
   CHE: 'CHE' as const,
   SYR: 'SYR' as const,
   TWN: 'TWN' as const,
   TJK: 'TJK' as const,
   TZA: 'TZA' as const,
   THA: 'THA' as const,
   TLS: 'TLS' as const,
   TGO: 'TGO' as const,
   TKL: 'TKL' as const,
   TON: 'TON' as const,
   TTO: 'TTO' as const,
   TUN: 'TUN' as const,
   TUR: 'TUR' as const,
   TKM: 'TKM' as const,
   TCA: 'TCA' as const,
   TUV: 'TUV' as const,
   UGA: 'UGA' as const,
   UKR: 'UKR' as const,
   ARE: 'ARE' as const,
   GBR: 'GBR' as const,
   UMI: 'UMI' as const,
   URY: 'URY' as const,
   UZB: 'UZB' as const,
   VUT: 'VUT' as const,
   VEN: 'VEN' as const,
   VNM: 'VNM' as const,
   VGB: 'VGB' as const,
   VIR: 'VIR' as const,
   WLF: 'WLF' as const,
   ESH: 'ESH' as const,
   YEM: 'YEM' as const,
   ZMB: 'ZMB' as const,
   ZWE: 'ZWE' as const
}

export const enumMailingAddressSubdivisionForCustodialBeneficiariesEnum = {
   AL: 'AL' as const,
   AK: 'AK' as const,
   AZ: 'AZ' as const,
   AR: 'AR' as const,
   CA: 'CA' as const,
   CO: 'CO' as const,
   CT: 'CT' as const,
   DE: 'DE' as const,
   FL: 'FL' as const,
   GA: 'GA' as const,
   HI: 'HI' as const,
   ID: 'ID' as const,
   IL: 'IL' as const,
   IN: 'IN' as const,
   IA: 'IA' as const,
   KS: 'KS' as const,
   KY: 'KY' as const,
   LA: 'LA' as const,
   ME: 'ME' as const,
   MD: 'MD' as const,
   MA: 'MA' as const,
   MI: 'MI' as const,
   MN: 'MN' as const,
   MS: 'MS' as const,
   MO: 'MO' as const,
   MT: 'MT' as const,
   NE: 'NE' as const,
   NV: 'NV' as const,
   NH: 'NH' as const,
   NJ: 'NJ' as const,
   NM: 'NM' as const,
   NY: 'NY' as const,
   NC: 'NC' as const,
   ND: 'ND' as const,
   OH: 'OH' as const,
   OK: 'OK' as const,
   OR: 'OR' as const,
   PA: 'PA' as const,
   RI: 'RI' as const,
   SC: 'SC' as const,
   SD: 'SD' as const,
   TN: 'TN' as const,
   TX: 'TX' as const,
   UT: 'UT' as const,
   VT: 'VT' as const,
   VA: 'VA' as const,
   WA: 'WA' as const,
   WV: 'WV' as const,
   WI: 'WI' as const,
   WY: 'WY' as const,
   DC: 'DC' as const,
   AS: 'AS' as const,
   MP: 'MP' as const,
   PR: 'PR' as const,
   UM: 'UM' as const,
   FM: 'FM' as const,
   MH: 'MH' as const,
   PW: 'PW' as const
}

export const enumEmploymentStatusEnum = {
   EMPLOYED: 'EMPLOYED' as const,
   SELF_EMPLOYED: 'SELF_EMPLOYED' as const,
   RETIRED: 'RETIRED' as const,
   STUDENT: 'STUDENT' as const,
   UNEMPLOYED: 'UNEMPLOYED' as const
}

export const enumAnnualIncomeEnum = {
   UP_TO_25000: 'UP_TO_25000' as const,
   UP_TO_50000: 'UP_TO_50000' as const,
   UP_TO_100000: 'UP_TO_100000' as const,
   UP_TO_200000: 'UP_TO_200000' as const,
   UP_TO_300000: 'UP_TO_300000' as const,
   UP_TO_500000: 'UP_TO_500000' as const,
   UP_TO_1200000: 'UP_TO_1200000' as const,
   UP_TO_INFINITY: 'UP_TO_INFINITY' as const
}

export const enumTotalNetWorthEnum = {
   UP_TO_50000: 'UP_TO_50000' as const,
   UP_TO_100000: 'UP_TO_100000' as const,
   UP_TO_200000: 'UP_TO_200000' as const,
   UP_TO_500000: 'UP_TO_500000' as const,
   UP_TO_1000000: 'UP_TO_1000000' as const,
   UP_TO_5000000: 'UP_TO_5000000' as const,
   UP_TO_INFINITY: 'UP_TO_INFINITY' as const
}

export const enumLiquidNetWorthEnum = {
   UP_TO_50000: 'UP_TO_50000' as const,
   UP_TO_100000: 'UP_TO_100000' as const,
   UP_TO_200000: 'UP_TO_200000' as const,
   UP_TO_500000: 'UP_TO_500000' as const,
   UP_TO_1000000: 'UP_TO_1000000' as const,
   UP_TO_5000000: 'UP_TO_5000000' as const,
   UP_TO_INFINITY: 'UP_TO_INFINITY' as const
}

export const enumInvestmentExperienceEnum = {
   NONE: 'NONE' as const,
   LIMITED: 'LIMITED' as const,
   GOOD: 'GOOD' as const,
   EXTENSIVE: 'EXTENSIVE' as const
}

export const enumRiskToleranceEnum = {
   LOW: 'LOW' as const,
   MEDIUM: 'MEDIUM' as const,
   HIGH: 'HIGH' as const
}

export const enumTimeHorizonEnum = {
   SHORT: 'SHORT' as const,
   AVERAGE: 'AVERAGE' as const,
   LONGEST: 'LONGEST' as const
}

export const enumLiquidityNeedsEnum = {
   VERY_IMPORTANT: 'VERY_IMPORTANT' as const,
   SOMEWHAT_IMPORTANT: 'SOMEWHAT_IMPORTANT' as const,
   NOT_IMPORTANT: 'NOT_IMPORTANT' as const
}

export const enumIssueTypeEnum = {
   AMERICAN_DEPOSITORY_RECEIPT: 'AMERICAN_DEPOSITORY_RECEIPT' as const,
   REAL_ESTATE_INVESTMENT_TRUST: 'REAL_ESTATE_INVESTMENT_TRUST' as const,
   CLOSED_END_FUND: 'CLOSED_END_FUND' as const,
   SECONDARY_ISSUE: 'SECONDARY_ISSUE' as const,
   LIMITED_PARTNERSHIP: 'LIMITED_PARTNERSHIP' as const,
   COMMON_STOCK: 'COMMON_STOCK' as const,
   EXCHANGE_TRADED_FUND: 'EXCHANGE_TRADED_FUND' as const,
   OTHER: 'OTHER' as const
}

export const enumDividendTypeEnum = {
   DIVIDEND_INCOME: 'DIVIDEND_INCOME' as const,
   INTEREST_INCOME: 'INTEREST_INCOME' as const,
   STOCK_DIVIDEND: 'STOCK_DIVIDEND' as const,
   OTHER: 'OTHER' as const
}

export const enumSpendDueDiligenceAnswerTypeEnum = {
   SINGLE_SELECT_DROPDOWN: 'SINGLE_SELECT_DROPDOWN' as const,
   SINGLE_SELECT_RADIAL: 'SINGLE_SELECT_RADIAL' as const,
   MULTI_SELECT: 'MULTI_SELECT' as const,
   TEXT: 'TEXT' as const
}

export const enumSpendPrimaryMarketingIndicatorEnum = {
   CREDIT: 'CREDIT' as const,
   CHECKING: 'CHECKING' as const,
   SAVINGS: 'SAVINGS' as const
}

export const enumSpendIdentityStatusCodeEnum = {
   INITIATED: 'INITIATED' as const,
   MANUAL_REVIEW: 'MANUAL_REVIEW' as const,
   VERIFIED: 'VERIFIED' as const,
   DENIED: 'DENIED' as const,
   EXPIRED: 'EXPIRED' as const,
   ARCHIVED: 'ARCHIVED' as const,
   DECEASED: 'DECEASED' as const
}

export const enumSpendAccountStatusCodeEnum = {
   PENDING_OPEN: 'PENDING_OPEN' as const,
   OPEN: 'OPEN' as const,
   PENDING_CLOSED: 'PENDING_CLOSED' as const,
   CLOSED: 'CLOSED' as const
}

export const enumSpendExternalAccountStatusCodeEnum = {
   UNVERIFIED: 'UNVERIFIED' as const,
   VERIFY_LOCKED: 'VERIFY_LOCKED' as const,
   VERIFIED: 'VERIFIED' as const,
   DENIED: 'DENIED' as const,
   EXPIRED: 'EXPIRED' as const,
   ARCHIVED: 'ARCHIVED' as const
}

export const enumSpendExternalAccountTypeEnum = {
   CHECKING: 'CHECKING' as const,
   SAVINGS: 'SAVINGS' as const,
   PREPAID: 'PREPAID' as const
}

export const enumSpendDebitCardContrastHintEnum = {
   STANDARD: 'STANDARD' as const,
   INVERSE: 'INVERSE' as const
}

export const enumSpendDebitCardStatusCodeEnum = {
   INITIATED: 'INITIATED' as const,
   PENDING: 'PENDING' as const,
   PENDING_VERIFICATION: 'PENDING_VERIFICATION' as const,
   VERIFIED: 'VERIFIED' as const,
   DENIED: 'DENIED' as const,
   EXPIRED: 'EXPIRED' as const,
   ARCHIVED: 'ARCHIVED' as const,
   REISSUED: 'REISSUED' as const,
   REISSUED_PENDING_VERIFICATION: 'REISSUED_PENDING_VERIFICATION' as const,
   HOTLISTED: 'HOTLISTED' as const
}

export const enumSpendDebitCardLockStatusCodeEnum = {
   UNLOCKED: 'UNLOCKED' as const,
   CUSTOMER_LOCKED: 'CUSTOMER_LOCKED' as const,
   SYSTEM_LOCKED: 'SYSTEM_LOCKED' as const
}

export const enumSpendDebitCardLockReasonCodeEnum = {
   UNKNOWN: 'UNKNOWN' as const,
   STOLEN: 'STOLEN' as const,
   LOST: 'LOST' as const,
   SUSPECTED_FRAUD: 'SUSPECTED_FRAUD' as const,
   PHYSICAL_DAMAGE: 'PHYSICAL_DAMAGE' as const,
   ADMINISTRATIVE: 'ADMINISTRATIVE' as const,
   TEMPORARY: 'TEMPORARY' as const,
   PIN_RETRIES_EXCEEDED: 'PIN_RETRIES_EXCEEDED' as const
}

export const enumSpendDebitCardDesignTypeEnum = {
   BASIC_V1: 'BASIC_V1' as const,
   PLUS_V1: 'PLUS_V1' as const
}

export const enumSpendActivityModeEnum = {
   ONLY_PENDING: 'ONLY_PENDING' as const,
   ONLY_FINAL: 'ONLY_FINAL' as const,
   ALL: 'ALL' as const
}

export const enumSpendTransactionCategoryTypeEnum = {
   SYSTEM_TRANSFERS: 'SYSTEM_TRANSFERS' as const,
   OUTSIDE_TRANSFERS: 'OUTSIDE_TRANSFERS' as const,
   INTEREST_PAYMENTS: 'INTEREST_PAYMENTS' as const,
   ATM: 'ATM' as const,
   CASH: 'CASH' as const,
   CHECK: 'CHECK' as const,
   EDUCATION: 'EDUCATION' as const,
   ENTERTAINMENT: 'ENTERTAINMENT' as const,
   FINANCES: 'FINANCES' as const,
   FOOD: 'FOOD' as const,
   FUEL: 'FUEL' as const,
   GAMBLING: 'GAMBLING' as const,
   GOVERNMENT_SERVICES: 'GOVERNMENT_SERVICES' as const,
   GROCERIES: 'GROCERIES' as const,
   HEALTH: 'HEALTH' as const,
   HOUSING_SERVICES: 'HOUSING_SERVICES' as const,
   MEMBERSHIPS: 'MEMBERSHIPS' as const,
   MISCELLANEOUS: 'MISCELLANEOUS' as const,
   OFFICE: 'OFFICE' as const,
   PROFESSIONAL_SERVICES: 'PROFESSIONAL_SERVICES' as const,
   RECREATIONAL: 'RECREATIONAL' as const,
   RETAIL: 'RETAIL' as const,
   TRAVEL: 'TRAVEL' as const,
   TRANSPORATION: 'TRANSPORATION' as const,
   UTILITIES: 'UTILITIES' as const,
   PAYMENT: 'PAYMENT' as const,
   FEE: 'FEE' as const
}

export const enumSpendTransactionStatusCodeEnum = {
   INITIATED: 'INITIATED' as const,
   PENDING: 'PENDING' as const,
   SETTLED: 'SETTLED' as const,
   VOIDED: 'VOIDED' as const,
   REVERSED: 'REVERSED' as const
}

export const enumSpendMoveMoneyOptionDestinationEnum = {
   DEPOSIT: 'DEPOSIT' as const,
   WITHDRAW: 'WITHDRAW' as const,
   SEND_CHECK: 'SEND_CHECK' as const,
   DIRECT_DEPOSIT: 'DIRECT_DEPOSIT' as const,
   CREDIT_CARD: 'CREDIT_CARD' as const
}

export const enumSendCheckRecipientTypeEnum = {
   INDIVIDUAL: 'INDIVIDUAL' as const,
   BUSINESS: 'BUSINESS' as const
}

export const enumTradingWindowTypeEnum = {
   MORNING: 'MORNING' as const,
   AFTERNOON: 'AFTERNOON' as const,
   ADMIN: 'ADMIN' as const,
   LEGACY: 'LEGACY' as const,
   ON_DEMAND: 'ON_DEMAND' as const
}

export const enumOnDemandAllocatedTradeStatusEnum = {
   PENDING: 'PENDING' as const,
   OPEN: 'OPEN' as const,
   FILLED: 'FILLED' as const,
   CANCELLED: 'CANCELLED' as const,
   REJECTED: 'REJECTED' as const
}

export const enumOnDemandAllocatedTradeSideEnum = {
   BUY: 'BUY' as const,
   SELL: 'SELL' as const
}

export const enumCreditCardPaymentValueEnum = {
   STATEMENT_BALANCE: 'STATEMENT_BALANCE' as const,
   MINIMUM_PAYMENT: 'MINIMUM_PAYMENT' as const,
   FIXED_AMOUNT: 'FIXED_AMOUNT' as const
}

export const enumAutoPayPaymentValueEnum = {
   STATEMENT_BALANCE: 'STATEMENT_BALANCE' as const,
   MINIMUM_PAYMENT: 'MINIMUM_PAYMENT' as const,
   MONTHLY_PAYMENT: 'MONTHLY_PAYMENT' as const,
   FIXED_AMOUNT: 'FIXED_AMOUNT' as const,
   CURRENT_BALANCE: 'CURRENT_BALANCE' as const
}

export const enumMonthlyScheduleDateEnum = {
   DAY_1: 'DAY_1' as const,
   DAY_2: 'DAY_2' as const,
   DAY_3: 'DAY_3' as const,
   DAY_4: 'DAY_4' as const,
   DAY_5: 'DAY_5' as const,
   DAY_6: 'DAY_6' as const,
   DAY_7: 'DAY_7' as const,
   DAY_8: 'DAY_8' as const,
   DAY_9: 'DAY_9' as const,
   DAY_10: 'DAY_10' as const,
   DAY_11: 'DAY_11' as const,
   DAY_12: 'DAY_12' as const,
   DAY_13: 'DAY_13' as const,
   DAY_14: 'DAY_14' as const,
   DAY_15: 'DAY_15' as const,
   DAY_16: 'DAY_16' as const,
   DAY_17: 'DAY_17' as const,
   DAY_18: 'DAY_18' as const,
   DAY_19: 'DAY_19' as const,
   DAY_20: 'DAY_20' as const,
   DAY_21: 'DAY_21' as const,
   DAY_22: 'DAY_22' as const,
   DAY_23: 'DAY_23' as const,
   DAY_24: 'DAY_24' as const,
   DAY_25: 'DAY_25' as const,
   DAY_26: 'DAY_26' as const,
   DAY_27: 'DAY_27' as const,
   DAY_28: 'DAY_28' as const,
   LAST: 'LAST' as const
}

export const enumWeekOfMonthScheduleWeekEnum = {
   WEEK_1: 'WEEK_1' as const,
   WEEK_2: 'WEEK_2' as const,
   WEEK_3: 'WEEK_3' as const,
   WEEK_4: 'WEEK_4' as const,
   WEEK_5: 'WEEK_5' as const
}

export const enumWeeklyScheduleDayEnum = {
   SUNDAY: 'SUNDAY' as const,
   MONDAY: 'MONDAY' as const,
   TUESDAY: 'TUESDAY' as const,
   WEDNESDAY: 'WEDNESDAY' as const,
   THURSDAY: 'THURSDAY' as const,
   FRIDAY: 'FRIDAY' as const,
   SATURDAY: 'SATURDAY' as const
}

export const enumModularConfirmationScreenFlowKind = {
   DIRECT_TO_INVEST: 'DIRECT_TO_INVEST' as const
}

export const enumOnboardingIdentityFirstQuestionType = {
   NAME: 'NAME' as const,
   ADDRESS: 'ADDRESS' as const,
   NAME_AND_ADDRESS: 'NAME_AND_ADDRESS' as const,
   DATE_OF_BIRTH: 'DATE_OF_BIRTH' as const,
   CITIZENSHIP: 'CITIZENSHIP' as const,
   DATE_OF_BIRTH_AND_CITIZENSHIP: 'DATE_OF_BIRTH_AND_CITIZENSHIP' as const,
   SOCIAL_SECURITY_NUMBER: 'SOCIAL_SECURITY_NUMBER' as const,
   POLITICALLY_EXPOSED_PERSON: 'POLITICALLY_EXPOSED_PERSON' as const,
   EMPLOYMENT_STATUS: 'EMPLOYMENT_STATUS' as const,
   WHERE_DO_YOU_WORK: 'WHERE_DO_YOU_WORK' as const,
   EMPLOYMENT_STATUS_AND_WHERE_DO_YOU_WORK: 'EMPLOYMENT_STATUS_AND_WHERE_DO_YOU_WORK' as const,
   ANNUAL_INCOME: 'ANNUAL_INCOME' as const,
   NET_WORTH: 'NET_WORTH' as const,
   LIQUID_NET_WORTH: 'LIQUID_NET_WORTH' as const
}

export const enumOnboardingIdentityFirstSectionType = {
   USER_PROFILE: 'USER_PROFILE' as const,
   FINANCIAL_SUITABILITY: 'FINANCIAL_SUITABILITY' as const
}

export const enumStatementTypeFilterEnumType = {
   CREDIT_CARD_STATEMENT: 'CREDIT_CARD_STATEMENT' as const,
   CRYPTO_TAX_FORM: 'CRYPTO_TAX_FORM' as const,
   INVEST_STATEMENT: 'INVEST_STATEMENT' as const,
   INVEST_TAX_FORM: 'INVEST_TAX_FORM' as const,
   INVEST_TRADE_CONFIRMATION: 'INVEST_TRADE_CONFIRMATION' as const,
   LENDING_DOCUMENT: 'LENDING_DOCUMENT' as const,
   SPEND_STATEMENT: 'SPEND_STATEMENT' as const,
   SPEND_TAX_FORM: 'SPEND_TAX_FORM' as const
}

export const enumDocumentTypeFilterEnumType = {
   ACCOUNT_DOCUMENT: 'ACCOUNT_DOCUMENT' as const,
   INVESTMENTS_RELATED: 'INVESTMENTS_RELATED' as const,
   STATEMENT: 'STATEMENT' as const,
   TAX_FORM: 'TAX_FORM' as const,
   TRADE_CONFIRMATION: 'TRADE_CONFIRMATION' as const
}

export const enumDocumentSortTypeEnum = {
   ACCOUNT: 'ACCOUNT' as const,
   DATE: 'DATE' as const,
   TYPE: 'TYPE' as const
}

export const enumBrokerAccountRegistrationEnum = {
   BENEFICIARY_IRA: 'BENEFICIARY_IRA' as const,
   CORPORATION: 'CORPORATION' as const,
   CRYPTO: 'CRYPTO' as const,
   CUSTODIAL: 'CUSTODIAL' as const,
   CUSTODIAL_UGMA: 'CUSTODIAL_UGMA' as const,
   CUSTODIAL_UTMA: 'CUSTODIAL_UTMA' as const,
   INDIVIDUAL: 'INDIVIDUAL' as const,
   JOINT: 'JOINT' as const,
   LLC: 'LLC' as const,
   PARTNERSHIP: 'PARTNERSHIP' as const,
   ROTH_IRA: 'ROTH_IRA' as const,
   SEP_IRA: 'SEP_IRA' as const,
   SIMPLE_IRA: 'SIMPLE_IRA' as const,
   TRADITIONAL_IRA: 'TRADITIONAL_IRA' as const,
   TRUST: 'TRUST' as const
}

export const enumAppActionEnum = {
   ENABLE_PLUS_AUTO_RENEW: 'ENABLE_PLUS_AUTO_RENEW' as const,
   RESEND_EMAIL_VERIFICATION: 'RESEND_EMAIL_VERIFICATION' as const,
   CREATE_TRANSFER_INSTANCE: 'CREATE_TRANSFER_INSTANCE' as const,
   CREATE_IRA_TRANSFER: 'CREATE_IRA_TRANSFER' as const,
   SET_SCHEDULED_TRANSFER_RULE: 'SET_SCHEDULED_TRANSFER_RULE' as const,
   MARGIN_CALL: 'MARGIN_CALL' as const,
   MARGIN_VIEW_DETAILS: 'MARGIN_VIEW_DETAILS' as const,
   MARGIN_LEARN_MORE: 'MARGIN_LEARN_MORE' as const,
   VIEW_BILL: 'VIEW_BILL' as const,
   FINISHED_REGISTER_USER_FLOW: 'FINISHED_REGISTER_USER_FLOW' as const,
   BEGIN_EARN_ONBOARDING_DIRECT_DEPOSIT: 'BEGIN_EARN_ONBOARDING_DIRECT_DEPOSIT' as const
}

export const enumAppShareButtonTypeEnum = {
   COPY: 'COPY' as const,
   SHARE: 'SHARE' as const
}

export const enumAppImageType = {
   ILLUSTRATION: 'ILLUSTRATION' as const,
   POLYCHROMATIC_ICON: 'POLYCHROMATIC_ICON' as const,
   MONOCHROMATIC_ICON: 'MONOCHROMATIC_ICON' as const,
   LEGACY: 'LEGACY' as const
}

export const enumAppPillIcon = {
   DIAMOND: 'DIAMOND' as const
}

export const enumAppPillKind = {
   CAUTION: 'CAUTION' as const,
   DANGER: 'DANGER' as const,
   DANGER_INVERSE: 'DANGER_INVERSE' as const,
   IMPORTANT: 'IMPORTANT' as const,
   IMPORTANT_INVERSE: 'IMPORTANT_INVERSE' as const,
   NEUTRAL: 'NEUTRAL' as const,
   PLUS: 'PLUS' as const,
   SUCCESS: 'SUCCESS' as const,
   WHATS_NEW: 'WHATS_NEW' as const,
   WHATS_NEW_INVERSE: 'WHATS_NEW_INVERSE' as const
}

export const enumAppToastKind = {
   ALERT: 'ALERT' as const,
   WARNING: 'WARNING' as const,
   SUCCESS: 'SUCCESS' as const,
   INFORMATIONAL: 'INFORMATIONAL' as const
}

export const enumClientUpgradeStatusEnum = {
   NONE: 'NONE' as const,
   RECOMMENDED: 'RECOMMENDED' as const,
   REQUIRED: 'REQUIRED' as const
}

export const enumContactUsCardIdentifier = {
   INSTANT_CHAT: 'INSTANT_CHAT' as const,
   HELP_CENTER: 'HELP_CENTER' as const,
   EMAIL_US: 'EMAIL_US' as const,
   CALL_US: 'CALL_US' as const
}

export const enumCreditCardNetworkEnum = {
   VISA: 'VISA' as const
}

export const enumCreditCardTypeEnum = {
   PHYSICAL: 'PHYSICAL' as const,
   VIRTUAL: 'VIRTUAL' as const
}

export const enumCreditCardStatusEnum = {
   PENDING: 'PENDING' as const,
   VERIFIED: 'VERIFIED' as const,
   LOCKED: 'LOCKED' as const,
   ARCHIVED: 'ARCHIVED' as const,
   ACTIVATION_THRESHOLD_EXCEEDED: 'ACTIVATION_THRESHOLD_EXCEEDED' as const
}

export const enumCreditCardRewardsAppPillKind = {
   BRONZE: 'BRONZE' as const,
   PLATINUM: 'PLATINUM' as const,
   GOLD: 'GOLD' as const,
   OBSIDIAN: 'OBSIDIAN' as const,
   NEUTRAL: 'NEUTRAL' as const
}

export const enumInformationBannerKind = {
   INFO: 'INFO' as const,
   CAUTION: 'CAUTION' as const,
   DANGER: 'DANGER' as const,
   SUCCESS: 'SUCCESS' as const
}

export const enumBankConnectionVariant = {
   CONTROL: 'CONTROL' as const,
   REORDER: 'REORDER' as const,
   REDUCTIVE: 'REDUCTIVE' as const,
   ADDITIVE: 'ADDITIVE' as const
}

export const enumListItemSize = {
   SMALL: 'SMALL' as const,
   MEDIUM: 'MEDIUM' as const,
   LARGE: 'LARGE' as const
}

export const enumMailingAddressSubdivisionEnum = {
   AL: 'AL' as const,
   AK: 'AK' as const,
   AZ: 'AZ' as const,
   AR: 'AR' as const,
   CA: 'CA' as const,
   CO: 'CO' as const,
   CT: 'CT' as const,
   DE: 'DE' as const,
   FL: 'FL' as const,
   GA: 'GA' as const,
   HI: 'HI' as const,
   ID: 'ID' as const,
   IL: 'IL' as const,
   IN: 'IN' as const,
   IA: 'IA' as const,
   KS: 'KS' as const,
   KY: 'KY' as const,
   LA: 'LA' as const,
   ME: 'ME' as const,
   MD: 'MD' as const,
   MA: 'MA' as const,
   MI: 'MI' as const,
   MN: 'MN' as const,
   MS: 'MS' as const,
   MO: 'MO' as const,
   MT: 'MT' as const,
   NE: 'NE' as const,
   NV: 'NV' as const,
   NH: 'NH' as const,
   NJ: 'NJ' as const,
   NM: 'NM' as const,
   NY: 'NY' as const,
   NC: 'NC' as const,
   ND: 'ND' as const,
   OH: 'OH' as const,
   OK: 'OK' as const,
   OR: 'OR' as const,
   PA: 'PA' as const,
   RI: 'RI' as const,
   SC: 'SC' as const,
   SD: 'SD' as const,
   TN: 'TN' as const,
   TX: 'TX' as const,
   UT: 'UT' as const,
   VT: 'VT' as const,
   VA: 'VA' as const,
   WA: 'WA' as const,
   WV: 'WV' as const,
   WI: 'WI' as const,
   WY: 'WY' as const,
   DC: 'DC' as const,
   AS: 'AS' as const,
   GU: 'GU' as const,
   MP: 'MP' as const,
   PR: 'PR' as const,
   VI: 'VI' as const,
   UM: 'UM' as const,
   FM: 'FM' as const,
   MH: 'MH' as const,
   PW: 'PW' as const,
   AA: 'AA' as const,
   AE: 'AE' as const,
   AP: 'AP' as const
}

export const enumMailingAddressCountryEnum = {
   USA: 'USA' as const
}

export const enumNewsTypeEnum = {
   ARTICLE: 'ARTICLE' as const,
   VIDEO: 'VIDEO' as const
}

export const enumSystemStatusEnum = {
   NORMAL: 'NORMAL' as const,
   DEGRADED: 'DEGRADED' as const,
   DISRUPTED: 'DISRUPTED' as const,
   MAINTENANCE: 'MAINTENANCE' as const
}

export const enumSystemFunctionalityEnum = {
   OPEN_ACCOUNT: 'OPEN_ACCOUNT' as const
}

export const enumAnnouncementIconEnum = {
   GENERAL: 'GENERAL' as const,
   PLUS: 'PLUS' as const,
   TRANSFERS: 'TRANSFERS' as const,
   INVEST: 'INVEST' as const,
   BORROW: 'BORROW' as const,
   SPEND: 'SPEND' as const,
   GIFT: 'GIFT' as const,
   TADA: 'TADA' as const,
   BANK: 'BANK' as const,
   UPLOAD_DOCUMENTS: 'UPLOAD_DOCUMENTS' as const,
   CONFIRM_DOCUMENTS: 'CONFIRM_DOCUMENTS' as const,
   EMAIL: 'EMAIL' as const,
   M1_ELEVATED: 'M1_ELEVATED' as const,
   SCHEDULE_CALL: 'SCHEDULE_CALL' as const,
   RIBBON_PROMO_ELEVATED: 'RIBBON_PROMO_ELEVATED' as const,
   GIFT_PROMO_ELEVATED: 'GIFT_PROMO_ELEVATED' as const
}

export const enumAnnouncementDisplayPreferenceEnum = {
   BANNER: 'BANNER' as const,
   MODAL: 'MODAL' as const,
   NUDGE: 'NUDGE' as const
}

export const enumAnnouncementAppearanceEnum = {
   PROMO_NEUTRAL: 'PROMO_NEUTRAL' as const,
   PROMO_COOL: 'PROMO_COOL' as const,
   PROMO_WARM: 'PROMO_WARM' as const
}

export const enumAnnouncementTagEnum = {
   ALERT: 'ALERT' as const,
   NEW: 'NEW' as const,
   PLUS: 'PLUS' as const
}

export const enumDataTypeEnum = {
   DIVIDEND: 'DIVIDEND' as const,
   NET_CASH_FLOW: 'NET_CASH_FLOW' as const
}

export const enumSeriesTypeEnum = {
   FLAG_EVENTS: 'FLAG_EVENTS' as const
}

export const enumArchivePieInputErrorEnum = {
   CANNOT_ARCHIVE_ROOT_PIE: 'CANNOT_ARCHIVE_ROOT_PIE' as const,
   HAS_UNARCHIVED_ANCESTORS: 'HAS_UNARCHIVED_ANCESTORS' as const,
   INVALID_PIE_ID: 'INVALID_PIE_ID' as const,
   PIE_NOT_EDITABLE: 'PIE_NOT_EDITABLE' as const,
   PIE_NOT_FOUND: 'PIE_NOT_FOUND' as const
}

export const enumCreatePieShareUrlInputErrorEnum = {
   INELIGIBLE_FOR_SHARING: 'INELIGIBLE_FOR_SHARING' as const,
   REMOVE_BEFORE_SHARING: 'REMOVE_BEFORE_SHARING' as const
}

export const enumSetMaxCashThresholdInputErrorEnum = {
   INVALID_ACCOUNT_ID: 'INVALID_ACCOUNT_ID' as const,
   PENDING_SELL_ORDERS: 'PENDING_SELL_ORDERS' as const,
   THRESHOLD_CANNOT_BE_NEGATIVE: 'THRESHOLD_CANNOT_BE_NEGATIVE' as const
}

export const enumAcceptPersonalLoanErrorEnum = {
   GENERIC_ACCEPT_LOAN_ERROR: 'GENERIC_ACCEPT_LOAN_ERROR' as const,
   EMAIL_UNVERIFIED: 'EMAIL_UNVERIFIED' as const
}

export const enumAcceptPersonalLoanOfferErrorEnum = {
   GENERIC_ACCEPT_OFFER_ERROR: 'GENERIC_ACCEPT_OFFER_ERROR' as const,
   COULD_NOT_FIND_LOAN_APPLICATION: 'COULD_NOT_FIND_LOAN_APPLICATION' as const,
   COULD_NOT_FIND_LOAN_ID: 'COULD_NOT_FIND_LOAN_ID' as const,
   REJECTED: 'REJECTED' as const,
   REJECTED_CREDIT_FROZEN: 'REJECTED_CREDIT_FROZEN' as const,
   EMAIL_UNVERIFIED: 'EMAIL_UNVERIFIED' as const
}

export const enumActivatePlusTrialErrorEnum = {
   ALREADY_PLUS_MEMBER: 'ALREADY_PLUS_MEMBER' as const,
   INELIGIBLE_FOR_TRIAL: 'INELIGIBLE_FOR_TRIAL' as const
}

export const enumArchiveTransferRuleErrorEnum = {
   NOT_ARCHIVABLE: 'NOT_ARCHIVABLE' as const
}

export const enumAuthenticateErrorEnum = {
   INCORRECT_CREDENTIALS: 'INCORRECT_CREDENTIALS' as const,
   USER_ACCOUNT_LOCKED: 'USER_ACCOUNT_LOCKED' as const,
   CODE_REQUIRED: 'CODE_REQUIRED' as const,
   EMAIL_AMFA_REQUIRED: 'EMAIL_AMFA_REQUIRED' as const,
   AMFA_TOKEN_EXPIRED: 'AMFA_TOKEN_EXPIRED' as const,
   INCORRECT_AMFA_CODE: 'INCORRECT_AMFA_CODE' as const,
   INCORRECT_CODE: 'INCORRECT_CODE' as const,
   AGREEMENT_REQUIRED: 'AGREEMENT_REQUIRED' as const,
   CLIENT_VERSION_NOT_SUPPORTED: 'CLIENT_VERSION_NOT_SUPPORTED' as const
}

export const enumAuthenticateInputErrorEnum = {
   INCORRECT_CREDENTIALS: 'INCORRECT_CREDENTIALS' as const,
   USER_ACCOUNT_LOCKED: 'USER_ACCOUNT_LOCKED' as const,
   CODE_REQUIRED: 'CODE_REQUIRED' as const,
   INCORRECT_CODE: 'INCORRECT_CODE' as const,
   AGREEMENT_REQUIRED: 'AGREEMENT_REQUIRED' as const,
   EMAIL_AMFA_REQUIRED: 'EMAIL_AMFA_REQUIRED' as const,
   INCORRECT_AMFA_CODE: 'INCORRECT_AMFA_CODE' as const,
   AMFA_TOKEN_EXPIRED: 'AMFA_TOKEN_EXPIRED' as const
}

export const enumCancelTransferInstanceErrorEnum = {
   NOT_CANCELABLE: 'NOT_CANCELABLE' as const
}

export const enumChangePasswordErrorEnum = {
   INCORRECT_OLD_PASSWORD: 'INCORRECT_OLD_PASSWORD' as const,
   INVALID_NEW_PASSWORD: 'INVALID_NEW_PASSWORD' as const
}

export const enumChangePasswordInputErrorEnum = {
   INCORRECT_OLD_PASSWORD: 'INCORRECT_OLD_PASSWORD' as const,
   INVALID_NEW_PASSWORD: 'INVALID_NEW_PASSWORD' as const
}

export const enumCompletePhoneVerificationErrorEnum = {
   NO_PENDING_VERIFICATION: 'NO_PENDING_VERIFICATION' as const,
   INCORRECT_CODE: 'INCORRECT_CODE' as const,
   PHONE_ALREADY_USED: 'PHONE_ALREADY_USED' as const,
   TOO_MANY_ATTEMPTS: 'TOO_MANY_ATTEMPTS' as const
}

export const enumCreateProfileError = {
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INVALID_HOLDER_DOB: 'INVALID_HOLDER_DOB' as const,
   DUPLICATE_PROFILE: 'DUPLICATE_PROFILE' as const,
   HOLDER_NAME_TOO_LONG: 'HOLDER_NAME_TOO_LONG' as const,
   INVALID_COUNTRY_CODE: 'INVALID_COUNTRY_CODE' as const,
   INVALID_HOME_ADDRESS: 'INVALID_HOME_ADDRESS' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   PHONE_MUST_MATCH_VERIFICATION: 'PHONE_MUST_MATCH_VERIFICATION' as const
}

export const enumCreateSpendAccountDocumentLinkErrorEnum = {
   DOCUMENT_NOT_AVAILBLE: 'DOCUMENT_NOT_AVAILBLE' as const
}

export const enumInitiateSpendIdentityErrorEnum = {
   INVALID_AGREEMENT_SIGNATURE: 'INVALID_AGREEMENT_SIGNATURE' as const,
   NOT_ELIGIBLE: 'NOT_ELIGIBLE' as const,
   PROFILE_NOT_CREATED: 'PROFILE_NOT_CREATED' as const,
   PROFILE_NOT_READY: 'PROFILE_NOT_READY' as const,
   CANNOT_REINITIATE_IDENTITY: 'CANNOT_REINITIATE_IDENTITY' as const,
   TAX_ID_ALREADY_IN_USE: 'TAX_ID_ALREADY_IN_USE' as const,
   TAX_ID_HAS_TOO_MANY_FAILURES: 'TAX_ID_HAS_TOO_MANY_FAILURES' as const,
   DISALLOWED_HOME_ADDRESS: 'DISALLOWED_HOME_ADDRESS' as const
}

export const enumUpdateSpendIdentityErrorEnum = {
   UNABLE_TO_UPDATE_SPEND_CUSTOMER: 'UNABLE_TO_UPDATE_SPEND_CUSTOMER' as const,
   INVALID_AGREEMENT_SIGNATURE: 'INVALID_AGREEMENT_SIGNATURE' as const
}

export const enumVerifySpendIdentityErrorEnum = {
   IDENTITY_NOT_INITIATED: 'IDENTITY_NOT_INITIATED' as const,
   IDENTITY_VERIFICATION_NOT_READY: 'IDENTITY_VERIFICATION_NOT_READY' as const
}

export const enumCompleteSpendEnrollmentErrorEnum = {
   IDENTITY_NOT_VERIFIED: 'IDENTITY_NOT_VERIFIED' as const,
   BLOCKED_BY_PENDING_TRANSFER: 'BLOCKED_BY_PENDING_TRANSFER' as const,
   ENROLLMENT_ALREADY_COMPLETE: 'ENROLLMENT_ALREADY_COMPLETE' as const
}

export const enumCreateSpendExternalAccountViaLinkErrorEnum = {
   ENROLLMENT_NOT_COMPLETE: 'ENROLLMENT_NOT_COMPLETE' as const,
   TOO_MANY_EXTERNAL_ACCOUNTS: 'TOO_MANY_EXTERNAL_ACCOUNTS' as const,
   DISALLOWED_EXTERNAL_ACCOUNT: 'DISALLOWED_EXTERNAL_ACCOUNT' as const
}

export const enumSpendExternalAccountTypeInputEnum = {
   CHECKING: 'CHECKING' as const,
   SAVINGS: 'SAVINGS' as const
}

export const enumInitiateSpendExternalAccountErrorEnum = {
   ENROLLMENT_NOT_COMPLETE: 'ENROLLMENT_NOT_COMPLETE' as const,
   NICKNAME_ALREADY_IN_USE: 'NICKNAME_ALREADY_IN_USE' as const,
   TOO_MANY_EXTERNAL_ACCOUNTS: 'TOO_MANY_EXTERNAL_ACCOUNTS' as const,
   INVALID_ROUTING_NUMBER: 'INVALID_ROUTING_NUMBER' as const,
   INVALID_ACCOUNT_NUMBER: 'INVALID_ACCOUNT_NUMBER' as const
}

export const enumVerifySpendExternalAccountErrorEnum = {
   EXTERNAL_ACCOUNT_IS_LOCKED: 'EXTERNAL_ACCOUNT_IS_LOCKED' as const,
   EXTERNAL_ACCOUNT_IS_DENIED: 'EXTERNAL_ACCOUNT_IS_DENIED' as const,
   EXTERNAL_ACCOUNT_IS_EXPIRED: 'EXTERNAL_ACCOUNT_IS_EXPIRED' as const,
   TOO_MANY_VERIFICATION_FAILURES: 'TOO_MANY_VERIFICATION_FAILURES' as const,
   DEPOSITS_INCORRECT: 'DEPOSITS_INCORRECT' as const
}

export const enumArchiveSpendExternalAccountErrorEnum = {
   CUSTOMER_NOT_FOUND: 'CUSTOMER_NOT_FOUND' as const,
   INVALID_EXTERNAL_ACCOUNT_ID: 'INVALID_EXTERNAL_ACCOUNT_ID' as const,
   UNABLE_TO_DEACTIVATE_EXTERNAL_ACCOUNT: 'UNABLE_TO_DEACTIVATE_EXTERNAL_ACCOUNT' as const,
   UNABLE_TO_DEACTIVATE_EXTERNAL_ACCOUNT_PENDING_ACTION: 'UNABLE_TO_DEACTIVATE_EXTERNAL_ACCOUNT_PENDING_ACTION' as const,
   UNABLE_TO_ARCHIVE_EXTERNAL_ACCOUNT_OUTSTANDING_TRANSACTIONS: 'UNABLE_TO_ARCHIVE_EXTERNAL_ACCOUNT_OUTSTANDING_TRANSACTIONS' as const,
   INVALID_USER_EXTERNAL_ACCOUNT_STATE: 'INVALID_USER_EXTERNAL_ACCOUNT_STATE' as const
}

export const enumSendCheckErrorEnum = {
   PARTICIPANTS_FROZEN: 'PARTICIPANTS_FROZEN' as const,
   PARTICIPANTS_DAILY_LIMIT_EXCEEDED: 'PARTICIPANTS_DAILY_LIMIT_EXCEEDED' as const,
   AMOUNT_LESS_THAN_TRANSFER_MINIMUM: 'AMOUNT_LESS_THAN_TRANSFER_MINIMUM' as const,
   AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM: 'AMOUNT_GREATER_THAN_TRANSFER_MAXIMUM' as const,
   AMOUNT_GREATER_THAN_AVAILABLE_BALANCE: 'AMOUNT_GREATER_THAN_AVAILABLE_BALANCE' as const,
   PHYSICAL_CHECK_MEMO_TOO_LONG: 'PHYSICAL_CHECK_MEMO_TOO_LONG' as const,
   PHYSICAL_CHECK_ADDRESS_TOO_LONG: 'PHYSICAL_CHECK_ADDRESS_TOO_LONG' as const,
   PHYSICAL_CHECK_ADDRESS_COUNTRY_INVALID: 'PHYSICAL_CHECK_ADDRESS_COUNTRY_INVALID' as const,
   PHYSICAL_CHECK_RECIPIENT_NAME_TOO_LONG: 'PHYSICAL_CHECK_RECIPIENT_NAME_TOO_LONG' as const,
   SEND_CHECK_GENERIC_ERROR: 'SEND_CHECK_GENERIC_ERROR' as const,
   CONFLICTS_WITH_EXISTING_RULE: 'CONFLICTS_WITH_EXISTING_RULE' as const
}

export const enumDisableTwoFactorAuthInputErrorEnum = {
   TWO_FACTOR_AUTH_ALREADY_DISABLED: 'TWO_FACTOR_AUTH_ALREADY_DISABLED' as const
}

export const enumAnnouncementContextEnum = {
   ALL: 'ALL' as const,
   LIST: 'LIST' as const,
   TRANSFERS: 'TRANSFERS' as const,
   MOVE_MONEY: 'MOVE_MONEY' as const,
   INVEST: 'INVEST' as const,
   BORROW: 'BORROW' as const,
   SPEND: 'SPEND' as const,
   REFERRALS: 'REFERRALS' as const,
   PLUS: 'PLUS' as const,
   DOCUMENTS: 'DOCUMENTS' as const,
   HOME: 'HOME' as const,
   HOME_MODAL: 'HOME_MODAL' as const,
   PERSONAL_LOANS: 'PERSONAL_LOANS' as const,
   SAVE: 'SAVE' as const,
   INVEST_MARKETING: 'INVEST_MARKETING' as const,
   SAVE_MARKETING: 'SAVE_MARKETING' as const,
   BORROW_MARKETING: 'BORROW_MARKETING' as const,
   HOME_PROMO: 'HOME_PROMO' as const,
   INVEST_PLP_PROMO: 'INVEST_PLP_PROMO' as const,
   EARN_PLP_PROMO: 'EARN_PLP_PROMO' as const,
   MARGIN_PLP_PROMO: 'MARGIN_PLP_PROMO' as const
}

export const enumEnableTwoFactorAuthErrorEnum = {
   INCORRECT_CODE: 'INCORRECT_CODE' as const
}

export const enumEnableTwoFactorAuthInputErrorEnum = {
   TWO_FACTOR_AUTH_ALREADY_ENABLED: 'TWO_FACTOR_AUTH_ALREADY_ENABLED' as const,
   INCORRECT_CODE: 'INCORRECT_CODE' as const
}

export const enumGenerateAtomicTokenErrorEnum = {
   GENERIC_ATOMIC_ERROR: 'GENERIC_ATOMIC_ERROR' as const
}

export const enumIdempotencyKeyError = {
   ERROR_GENERATING_IDEMPOTENCY_KEY: 'ERROR_GENERATING_IDEMPOTENCY_KEY' as const
}

export const enumInitializeTwoFactorAuthErrorEnum = {
   TWO_FACTOR_AUTH_ALREADY_ENABLED: 'TWO_FACTOR_AUTH_ALREADY_ENABLED' as const,
   MFA_TOKEN_REQUIRED: 'MFA_TOKEN_REQUIRED' as const
}

export const enumInitializeTwoFactorAuthInputErrorEnum = {
   TWO_FACTOR_AUTH_ALREADY_ENABLED: 'TWO_FACTOR_AUTH_ALREADY_ENABLED' as const
}

export const enumInitializeTwoFactorVerificationErrorEnum = {
   NO_VERIFIED_NUMBERS: 'NO_VERIFIED_NUMBERS' as const,
   INVALID_PHONE: 'INVALID_PHONE' as const,
   DISALLOWED_PHONE: 'DISALLOWED_PHONE' as const,
   PHONE_ALREADY_USED: 'PHONE_ALREADY_USED' as const,
   PHONE_DOES_NOT_SUPPORT_SMS: 'PHONE_DOES_NOT_SUPPORT_SMS' as const,
   TOO_MANY_ATTEMPTS: 'TOO_MANY_ATTEMPTS' as const
}

export const enumPhoneVerificationChannelEnum = {
   SMS: 'SMS' as const,
   CALL: 'CALL' as const
}

export const enumInitiatePhoneVerificationErrorEnum = {
   INVALID_PHONE: 'INVALID_PHONE' as const,
   DISALLOWED_PHONE: 'DISALLOWED_PHONE' as const,
   PHONE_ALREADY_USED: 'PHONE_ALREADY_USED' as const,
   PHONE_DOES_NOT_SUPPORT_SMS: 'PHONE_DOES_NOT_SUPPORT_SMS' as const,
   TOO_MANY_ATTEMPTS: 'TOO_MANY_ATTEMPTS' as const
}

export const enumInitiateResetPasswordErrorEnum = {
   INVALID_EMAIL_ADDRESS: 'INVALID_EMAIL_ADDRESS' as const
}

export const enumInitiateResetPasswordInputErrorEnum = {
   INVALID_EMAIL_ADDRESS: 'INVALID_EMAIL_ADDRESS' as const
}

export const enumJoinCryptoWaitlistError = {
   ALREADY_ON_WAITLIST: 'ALREADY_ON_WAITLIST' as const,
   NOT_ELIGIBLE: 'NOT_ELIGIBLE' as const,
   GENERAL_JOIN_CRYPTO_WAITLIST_ERROR: 'GENERAL_JOIN_CRYPTO_WAITLIST_ERROR' as const
}

export const enumSetPlusAutoRenewalPreferenceErrorEnum = {
   NO_ACTIVE_PLUS_MEMBERSHIP: 'NO_ACTIVE_PLUS_MEMBERSHIP' as const
}

export const enumConfirmPlusMembershipErrorEnum = {
   TRANSACTION_DECLINED: 'TRANSACTION_DECLINED' as const,
   GENERIC_PLUS_CONFIRMATION_ERROR: 'GENERIC_PLUS_CONFIRMATION_ERROR' as const
}

export const enumSubmitPlusMembershipPaymentErrorEnum = {
   PAYMENT_ALREADY_SUBMITTED: 'PAYMENT_ALREADY_SUBMITTED' as const,
   TRANSACTION_DECLINED: 'TRANSACTION_DECLINED' as const,
   SPEND_TRANSACTION_DECLINED: 'SPEND_TRANSACTION_DECLINED' as const,
   INSUFFICIENT_FUNDS_FOR_PAYMENT: 'INSUFFICIENT_FUNDS_FOR_PAYMENT' as const
}

export const enumSubmitOneTimePlusPaymentErrorEnum = {
   INVALID_PAYMENT_METHOD: 'INVALID_PAYMENT_METHOD' as const,
   SUBSCRIPTION_NOT_RENEWAL_ELIGIBLE: 'SUBSCRIPTION_NOT_RENEWAL_ELIGIBLE' as const,
   UNABLE_TO_UPDATE_PAYMENT_PREFERENCE: 'UNABLE_TO_UPDATE_PAYMENT_PREFERENCE' as const,
   NO_ACTIVE_PLUS_MEMBERSHIP: 'NO_ACTIVE_PLUS_MEMBERSHIP' as const,
   SUBSCRIPTION_ID_NOT_FOUND: 'SUBSCRIPTION_ID_NOT_FOUND' as const,
   FAILED_INVEST_TRANSACTION: 'FAILED_INVEST_TRANSACTION' as const,
   SPEND_INSUFFICIENT_FUNDS: 'SPEND_INSUFFICIENT_FUNDS' as const,
   FAILED_SPEND_TRANSACTION: 'FAILED_SPEND_TRANSACTION' as const
}

export const enumSetActivePlusMembershipPaymentMethodErrorEnum = {
   DISALLOWED_PAYMENT_METHOD: 'DISALLOWED_PAYMENT_METHOD' as const
}

export const enumAcceptPromotionCampaignError = {
   GENERAL_ACCEPT_PROMOTION_CAMPAIGN_ERROR: 'GENERAL_ACCEPT_PROMOTION_CAMPAIGN_ERROR' as const
}

export const enumReauthenticateErrorEnum = {
   INVALID_REFRESH_TOKEN: 'INVALID_REFRESH_TOKEN' as const,
   USER_ACCOUNT_LOCKED: 'USER_ACCOUNT_LOCKED' as const
}

export const enumReauthenticateInputErrorEnum = {
   INVALID_REFRESH_TOKEN: 'INVALID_REFRESH_TOKEN' as const,
   USER_ACCOUNT_LOCKED: 'USER_ACCOUNT_LOCKED' as const
}

export const enumRebalancePortfolioSliceErrorEnum = {
   LOCKED_BY_ALLOCATION: 'LOCKED_BY_ALLOCATION' as const,
   LOCKED_BY_ORDER: 'LOCKED_BY_ORDER' as const,
   LOCKED_BY_TRADING: 'LOCKED_BY_TRADING' as const,
   LOCKED_BY_LIQUIDATION: 'LOCKED_BY_LIQUIDATION' as const
}

export const enumRebalancePortfolioSliceInputErrorEnum = {
   LOCKED_BY_ALLOCATION: 'LOCKED_BY_ALLOCATION' as const,
   LOCKED_BY_ORDER: 'LOCKED_BY_ORDER' as const,
   LOCKED_BY_TRADING: 'LOCKED_BY_TRADING' as const,
   LOCKED_BY_LIQUIDATION: 'LOCKED_BY_LIQUIDATION' as const
}

export const enumRenameAccountErrorEnum = {
   DUPLICATE_NAME: 'DUPLICATE_NAME' as const,
   INVALID_ACCOUNT_CLOSING: 'INVALID_ACCOUNT_CLOSING' as const,
   INVALID_ACCOUNT_TYPE: 'INVALID_ACCOUNT_TYPE' as const,
   INVEST_RENAME_ERROR: 'INVEST_RENAME_ERROR' as const,
   SAVINGS_ACCOUNT_NOT_FOUND: 'SAVINGS_ACCOUNT_NOT_FOUND' as const
}

export const enumMobileDeviceTypeEnum = {
   IOS: 'IOS' as const,
   ANDROID: 'ANDROID' as const
}

export const enumReportMobileDeviceInfoInputErrorEnum = {
   INVALID_MODEL: 'INVALID_MODEL' as const
}

export const enumOfflineAccountRegistrationEnum = {
   CORPORATION: 'CORPORATION' as const,
   LLC: 'LLC' as const,
   PARTNERSHIP: 'PARTNERSHIP' as const,
   TRUST: 'TRUST' as const
}

export const enumRequestReferralsParticipationErrorEnum = {
   INELIGIBLE_FOR_PARTICIPATION: 'INELIGIBLE_FOR_PARTICIPATION' as const,
   MUST_SELECT_PAYMENTS_ACCOUNT: 'MUST_SELECT_PAYMENTS_ACCOUNT' as const
}

export const enumRequestReferralsParticipationInputErrorEnum = {
   INELIGIBLE_FOR_PARTICIPATION: 'INELIGIBLE_FOR_PARTICIPATION' as const,
   MUST_SELECT_PAYMENTS_ACCOUNT: 'MUST_SELECT_PAYMENTS_ACCOUNT' as const
}

export const enumResendEmailVerificationErrorEnum = {
   EMAIL_ALREADY_VERIFIED: 'EMAIL_ALREADY_VERIFIED' as const
}

export const enumResendEmailVerificationInputErrorEnum = {
   EMAIL_ALREADY_VERIFIED: 'EMAIL_ALREADY_VERIFIED' as const
}

export const enumResetPasswordErrorEnum = {
   UNKNOWN_RESET_PASSWORD_TOKEN: 'UNKNOWN_RESET_PASSWORD_TOKEN' as const,
   EXPIRED_RESET_PASSWORD_TOKEN: 'EXPIRED_RESET_PASSWORD_TOKEN' as const,
   USER_ACCOUNT_LOCKED: 'USER_ACCOUNT_LOCKED' as const,
   INVALID_NEW_PASSWORD: 'INVALID_NEW_PASSWORD' as const,
   SSN_CHALLENGE_REQUIRED: 'SSN_CHALLENGE_REQUIRED' as const,
   ACCOUNT_CHALLENGE_FAILED: 'ACCOUNT_CHALLENGE_FAILED' as const,
   NO_RESET_WITH_2FA: 'NO_RESET_WITH_2FA' as const,
   RESET_ATTEMPT_REJECTED: 'RESET_ATTEMPT_REJECTED' as const
}

export const enumResetPasswordInputErrorEnum = {
   UNKNOWN_RESET_PASSWORD_TOKEN: 'UNKNOWN_RESET_PASSWORD_TOKEN' as const,
   EXPIRED_RESET_PASSWORD_TOKEN: 'EXPIRED_RESET_PASSWORD_TOKEN' as const,
   USER_ACCOUNT_LOCKED: 'USER_ACCOUNT_LOCKED' as const,
   INVALID_NEW_PASSWORD: 'INVALID_NEW_PASSWORD' as const,
   SSN_CHALLENGE_REQUIRED: 'SSN_CHALLENGE_REQUIRED' as const,
   ACCOUNT_CHALLENGE_FAILED: 'ACCOUNT_CHALLENGE_FAILED' as const,
   NO_RESET_WITH_2FA: 'NO_RESET_WITH_2FA' as const,
   RESET_ATTEMPT_REJECTED: 'RESET_ATTEMPT_REJECTED' as const
}

export const enumResubmitLoanAfterCreditFreezeOutcomeErrorEnum = {
   GENERIC_RESUBMIT_AFTER_CREDIT_FREEZE_ERROR: 'GENERIC_RESUBMIT_AFTER_CREDIT_FREEZE_ERROR' as const
}

export const enumSetFullyPaidLendingStatusErrorEnum = {
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumManualPortfolioSliceOrderTypeEnum = {
   BUY: 'BUY' as const,
   SELL: 'SELL' as const
}

export const enumSetPortfolioSliceOrderErrorEnum = {
   LOCKED_BY_REBALANCE: 'LOCKED_BY_REBALANCE' as const,
   LOCKED_BY_TRADING: 'LOCKED_BY_TRADING' as const,
   LOCKED_BY_LIQUIDATION: 'LOCKED_BY_LIQUIDATION' as const,
   LESS_THAN_MINIMUM_BUY: 'LESS_THAN_MINIMUM_BUY' as const,
   GREATER_THAN_MAXIMUM_SELL: 'GREATER_THAN_MAXIMUM_SELL' as const,
   CANNOT_SET_ORDER_FOR_INACTIVE_SLICEABLE: 'CANNOT_SET_ORDER_FOR_INACTIVE_SLICEABLE' as const,
   CANNOT_SET_BUY_ORDER_FOR_DELISTED_SLICEABLE: 'CANNOT_SET_BUY_ORDER_FOR_DELISTED_SLICEABLE' as const
}

export const enumSetPortfolioSliceOrderInputErrorEnum = {
   LOCKED_BY_REBALANCE: 'LOCKED_BY_REBALANCE' as const,
   LOCKED_BY_TRADING: 'LOCKED_BY_TRADING' as const,
   LOCKED_BY_LIQUIDATION: 'LOCKED_BY_LIQUIDATION' as const,
   LESS_THAN_MINIMUM_BUY: 'LESS_THAN_MINIMUM_BUY' as const,
   GREATER_THAN_MAXIMUM_SELL: 'GREATER_THAN_MAXIMUM_SELL' as const,
   CANNOT_SET_ORDER_FOR_INACTIVE_SLICEABLE: 'CANNOT_SET_ORDER_FOR_INACTIVE_SLICEABLE' as const,
   CANNOT_SET_BUY_ORDER_FOR_DELISTED_SLICEABLE: 'CANNOT_SET_BUY_ORDER_FOR_DELISTED_SLICEABLE' as const
}

export const enumSetPreferredPlatformPaymentMethodErrorEnum = {
   PREFERRED_ACCOUNT_UPDATE_FAILED: 'PREFERRED_ACCOUNT_UPDATE_FAILED' as const
}

export const enumSetPreferredTradeWindowErrorEnum = {
   NOT_ELIGIBLE: 'NOT_ELIGIBLE' as const,
   ERROR_UPDATING_TRADE_WINDOW_PREFERENCE: 'ERROR_UPDATING_TRADE_WINDOW_PREFERENCE' as const
}

export const enumSetRootPieInputErrorEnum = {
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const,
   INELIGIBLE_FOR_ROOT_PIE: 'INELIGIBLE_FOR_ROOT_PIE' as const,
   INVALID_INVESTMENT_ACCOUNT_ID: 'INVALID_INVESTMENT_ACCOUNT_ID' as const,
   INVALID_PIE_ID: 'INVALID_PIE_ID' as const,
   INVESTMENT_ACCOUNT_NOT_FOUND: 'INVESTMENT_ACCOUNT_NOT_FOUND' as const,
   PIE_NOT_FOUND: 'PIE_NOT_FOUND' as const,
   ROOT_PIE_NOT_EDITABLE: 'ROOT_PIE_NOT_EDITABLE' as const
}

export const enumSetUserFinancialGoalErrorEnum = {
   GENERAL_SET_GOAL_ERROR: 'GENERAL_SET_GOAL_ERROR' as const
}

export const enumSignAgreementBundleErrorEnum = {
   INVALID_SIGNATURE: 'INVALID_SIGNATURE' as const
}

export const enumSignAgreementBundleInputErrorEnum = {
   INVALID_SIGNATURE: 'INVALID_SIGNATURE' as const
}

export const enumStartCryptoOnDemandTradeWindowError = {
   NO_TRADES_CALCULATED: 'NO_TRADES_CALCULATED' as const,
   INVALID_TRADES_CALCULATED: 'INVALID_TRADES_CALCULATED' as const,
   ACCOUNT_STATUS_NOT_TRADEABLE: 'ACCOUNT_STATUS_NOT_TRADEABLE' as const,
   ACCOUNT_PAUSED: 'ACCOUNT_PAUSED' as const,
   NO_MORE_TRADE_WINDOWS_LEFT: 'NO_MORE_TRADE_WINDOWS_LEFT' as const,
   ACTIVE_VENDOR_MAINTENANCE_WINDOW: 'ACTIVE_VENDOR_MAINTENANCE_WINDOW' as const,
   ACTIVE_TRADE_WINDOW: 'ACTIVE_TRADE_WINDOW' as const,
   GENERAL_START_CRYPTO_ON_DEMAND_TRADE_WINDOW_ERROR: 'GENERAL_START_CRYPTO_ON_DEMAND_TRADE_WINDOW_ERROR' as const
}

export const enumStartCustomerSupportConversationErrorEnum = {
   GENERAL_REJECTION: 'GENERAL_REJECTION' as const
}

export const enumSubmitPersonalLoanApplicationErrorEnum = {
   GENERIC_PERSONAL_LOAN_ERROR: 'GENERIC_PERSONAL_LOAN_ERROR' as const
}

export const enumUserFeedbackTopicEnum = {
   PERSONAL_LOANS: 'PERSONAL_LOANS' as const,
   MARGIN_LOANS: 'MARGIN_LOANS' as const,
   INVESTMENT_ACCOUNTS: 'INVESTMENT_ACCOUNTS' as const,
   SAVINGS: 'SAVINGS' as const,
   CREDIT_CARD: 'CREDIT_CARD' as const,
   PLUS_MEMBERSHIP: 'PLUS_MEMBERSHIP' as const,
   M1_GENERAL_FEEDBACK: 'M1_GENERAL_FEEDBACK' as const
}

export const enumUpdateCustodialAccountBeneficiaryLegalAddressErrorEnum = {
   NO_UPDATE_UNTIL_ACCEPTED: 'NO_UPDATE_UNTIL_ACCEPTED' as const,
   HOME_ADDRESS_CANNOT_BE_PO_BOX: 'HOME_ADDRESS_CANNOT_BE_PO_BOX' as const,
   INVALID_HOME_ADDRESS: 'INVALID_HOME_ADDRESS' as const,
   TEMPORARY_NEW_ACCOUNT_FREEZE: 'TEMPORARY_NEW_ACCOUNT_FREEZE' as const
}

export const enumUpdateEmailErrorEnum = {
   INCORRECT_CODE: 'INCORRECT_CODE' as const,
   INVALID_USERNAME: 'INVALID_USERNAME' as const,
   USERNAME_ALREADY_EXISTS: 'USERNAME_ALREADY_EXISTS' as const,
   INCORRECT_MFA_CODE: 'INCORRECT_MFA_CODE' as const,
   INVALID_INPUT: 'INVALID_INPUT' as const,
   UNKNOWN_ERROR: 'UNKNOWN_ERROR' as const,
   INVALID_PHONE: 'INVALID_PHONE' as const,
   NO_PENDING_2FA: 'NO_PENDING_2FA' as const,
   MULTIPLE_PENDING_2FA: 'MULTIPLE_PENDING_2FA' as const
}

export const enumUpdateFullyPaidLendingStatusErrorEnum = {
   ERROR_UPDATING_FULLY_PAID_LENDING_STATUS: 'ERROR_UPDATING_FULLY_PAID_LENDING_STATUS' as const
}

export const enumVerifyEmailErrorEnum = {
   INVALID_EMAIL_VERIFICATION_TOKEN: 'INVALID_EMAIL_VERIFICATION_TOKEN' as const
}

export const enumVerifyEmailInputErrorEnum = {
   INVALID_EMAIL_VERIFICATION_TOKEN: 'INVALID_EMAIL_VERIFICATION_TOKEN' as const
}

export const enumWithdrawPersonalLoanErrorEnum = {
   GENERIC_PERSONAL_LOAN_ERROR: 'GENERIC_PERSONAL_LOAN_ERROR' as const,
   GENERIC_WITHDRAW_PERSONAL_LOAN_ERROR: 'GENERIC_WITHDRAW_PERSONAL_LOAN_ERROR' as const
}

export const enumWithdrawPersonalLoanApplicationErrorEnum = {
   GENERIC_PERSONAL_LOAN_ERROR: 'GENERIC_PERSONAL_LOAN_ERROR' as const
}

export const enumProductListIdentifier = {
   BORROW_PERSONAL_LOANS: 'BORROW_PERSONAL_LOANS' as const,
   INVEST_INDIVIDUAL: 'INVEST_INDIVIDUAL' as const,
   INVEST_RETIREMENT: 'INVEST_RETIREMENT' as const,
   SPEND_SAVINGS: 'SPEND_SAVINGS' as const
}

export const enumOnboardingProductSelectionDestination = {
   BEGIN_INVEST_ONBOARDING: 'BEGIN_INVEST_ONBOARDING' as const,
   BEGIN_IRA_ONBOARDING: 'BEGIN_IRA_ONBOARDING' as const,
   BEGIN_PERSONAL_LOANS_ONBOARDING: 'BEGIN_PERSONAL_LOANS_ONBOARDING' as const,
   BEGIN_SAVINGS_ONBOARDING: 'BEGIN_SAVINGS_ONBOARDING' as const
}

export const enumProductIdentifier = {
   BORROW_PERSONAL_LOANS: 'BORROW_PERSONAL_LOANS' as const,
   INVEST_INDIVIDUAL: 'INVEST_INDIVIDUAL' as const,
   INVEST_RETIREMENT: 'INVEST_RETIREMENT' as const,
   SPEND_SAVINGS: 'SPEND_SAVINGS' as const
}
